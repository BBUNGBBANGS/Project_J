ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"stm32h7xx_hal_fdcan.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.rodata.DLCtoBytes,"a"
  19              		.align	2
  22              	DLCtoBytes:
  23 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\014\020\024\030"
  23      04050607 
  23      080C1014 
  23      18
  24 000d 203040   		.ascii	" 0@"
  25              		.section	.rodata
  26              		.align	2
  27              	.LC0:
  28 0000 00000000 		.word	0
  29 0004 00000000 		.word	0
  30 0008 00000000 		.word	0
  31 000c 00000000 		.word	0
  32 0010 00000000 		.word	0
  33 0014 01000000 		.word	1
  34 0018 02000000 		.word	2
  35 001c 03000000 		.word	3
  36 0020 04000000 		.word	4
  37 0024 00000000 		.word	0
  38 0028 05000000 		.word	5
  39 002c 00000000 		.word	0
  40 0030 00000000 		.word	0
  41 0034 00000000 		.word	0
  42 0038 06000000 		.word	6
  43 003c 00000000 		.word	0
  44 0040 00000000 		.word	0
  45 0044 00000000 		.word	0
  46 0048 07000000 		.word	7
  47              		.section	.text.HAL_FDCAN_Init,"ax",%progbits
  48              		.align	1
  49              		.global	HAL_FDCAN_Init
  50              		.syntax unified
  51              		.thumb
  52              		.thumb_func
  54              	HAL_FDCAN_Init:
  55              	.LFB333:
  56              		.file 1 "Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c"
   1:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 2


   2:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ******************************************************************************
   3:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @file    stm32h7xx_hal_fdcan.c
   4:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @author  MCD Application Team
   5:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief   FDCAN HAL module driver.
   6:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *          functionalities of the Flexible DataRate Controller Area Network
   8:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *          (FDCAN) peripheral:
   9:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           + Initialization and de-initialization functions
  10:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           + IO operation functions
  11:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           + Peripheral Configuration and Control functions
  12:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           + Peripheral State and Error functions
  13:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *
  14:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ******************************************************************************
  15:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @attention
  16:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *
  17:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * Copyright (c) 2017 STMicroelectronics.
  18:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * All rights reserved.
  19:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *
  20:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * This software is licensed under terms that can be found in the LICENSE file
  21:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * in the root directory of this software component.
  22:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  23:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *
  24:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ******************************************************************************
  25:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   @verbatim
  26:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ==============================================================================
  27:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                         ##### How to use this driver #####
  28:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ==============================================================================
  29:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     [..]
  30:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (#) Initialize the FDCAN peripheral using HAL_FDCAN_Init function.
  31:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
  32:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (#) If needed , configure the reception filters and optional features using
  33:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           the following configuration functions:
  34:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_ConfigClockCalibration
  35:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_ConfigFilter
  36:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_ConfigGlobalFilter
  37:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_ConfigExtendedIdMask
  38:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_ConfigRxFifoOverwrite
  39:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_ConfigFifoWatermark
  40:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_ConfigRamWatchdog
  41:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_ConfigTimestampCounter
  42:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_EnableTimestampCounter
  43:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_DisableTimestampCounter
  44:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_ConfigTimeoutCounter
  45:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_EnableTimeoutCounter
  46:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_DisableTimeoutCounter
  47:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_ConfigTxDelayCompensation
  48:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_EnableTxDelayCompensation
  49:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_DisableTxDelayCompensation
  50:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_EnableISOMode
  51:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_DisableISOMode
  52:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_EnableEdgeFiltering
  53:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_DisableEdgeFiltering
  54:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_TT_ConfigOperation
  55:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_TT_ConfigReferenceMessage
  56:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_TT_ConfigTrigger
  57:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
  58:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (#) Start the FDCAN module using HAL_FDCAN_Start function. At this level
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 3


  59:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           the node is active on the bus: it can send and receive messages.
  60:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
  61:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (#) The following Tx control functions can only be called when the FDCAN
  62:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           module is started:
  63:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_AddMessageToTxFifoQ
  64:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_EnableTxBufferRequest
  65:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             (++) HAL_FDCAN_AbortTxRequest
  66:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
  67:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (#) After having submitted a Tx request in Tx Fifo or Queue, it is possible to
  68:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           get Tx buffer location used to place the Tx request thanks to
  69:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           HAL_FDCAN_GetLatestTxFifoQRequestBuffer API.
  70:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           It is then possible to abort later on the corresponding Tx Request using
  71:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           HAL_FDCAN_AbortTxRequest API.
  72:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
  73:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (#) When a message is received into the FDCAN message RAM, it can be
  74:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           retrieved using the HAL_FDCAN_GetRxMessage function.
  75:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
  76:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (#) Calling the HAL_FDCAN_Stop function stops the FDCAN module by entering
  77:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           it to initialization mode and re-enabling access to configuration
  78:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           registers through the configuration functions listed here above.
  79:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
  80:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (#) All other control functions can be called any time after initialization
  81:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           phase, no matter if the FDCAN module is started or stopped.
  82:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
  83:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       *** Polling mode operation ***
  84:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       ==============================
  85:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
  86:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     [..]
  87:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         (#) Reception and transmission states can be monitored via the following
  88:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             functions:
  89:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****               (++) HAL_FDCAN_IsRxBufferMessageAvailable
  90:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****               (++) HAL_FDCAN_IsTxBufferMessagePending
  91:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****               (++) HAL_FDCAN_GetRxFifoFillLevel
  92:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****               (++) HAL_FDCAN_GetTxFifoFreeLevel
  93:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
  94:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       *** Interrupt mode operation ***
  95:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       ================================
  96:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       [..]
  97:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         (#) There are two interrupt lines: line 0 and 1.
  98:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             By default, all interrupts are assigned to line 0. Interrupt lines
  99:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             can be configured using HAL_FDCAN_ConfigInterruptLines function.
 100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         (#) Notifications are activated using HAL_FDCAN_ActivateNotification
 102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             function. Then, the process can be controlled through one of the
 103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             available user callbacks: HAL_FDCAN_xxxCallback.
 104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *** Callback registration ***
 106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   =============================================
 107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   The compilation define USE_HAL_FDCAN_REGISTER_CALLBACKS when set to 1
 109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   allows the user to configure dynamically the driver callbacks.
 110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   Use Function HAL_FDCAN_RegisterCallback() or HAL_FDCAN_RegisterXXXCallback()
 111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   to register an interrupt callback.
 112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   Function HAL_FDCAN_RegisterCallback() allows to register following callbacks:
 114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     (+) TxFifoEmptyCallback          : Tx Fifo Empty Callback.
 115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     (+) RxBufferNewMessageCallback   : Rx Buffer New Message Callback.
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 4


 116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     (+) HighPriorityMessageCallback  : High Priority Message Callback.
 117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     (+) TimestampWraparoundCallback  : Timestamp Wraparound Callback.
 118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     (+) TimeoutOccurredCallback      : Timeout Occurred Callback.
 119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     (+) ErrorCallback                : Error Callback.
 120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     (+) MspInitCallback              : FDCAN MspInit.
 121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     (+) MspDeInitCallback            : FDCAN MspDeInit.
 122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   This function takes as parameters the HAL peripheral handle, the Callback ID
 123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   and a pointer to the user callback function.
 124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   For specific callbacks ClockCalibrationCallback, TxEventFifoCallback, RxFifo0Callback, RxFifo1Cal
 126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   TxBufferCompleteCallback, TxBufferAbortCallback, ErrorStatusCallback, TT_ScheduleSyncCallback, TT
 127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   TT_StopWatchCallback and TT_GlobalTimeCallback, use dedicated register callbacks :
 128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   respectively HAL_FDCAN_RegisterClockCalibrationCallback(), HAL_FDCAN_RegisterTxEventFifoCallback(
 129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_RegisterRxFifo0Callback(), HAL_FDCAN_RegisterRxFifo1Callback(),
 130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_RegisterTxBufferCompleCallback(), HAL_FDCAN_RegisterTxBufferAbortCallback(),
 131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_RegisterErrorStatusCallback(), HAL_FDCAN_TT_RegisterScheduleSyncCallback(),
 132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_TT_RegisterTimeMarkCallback(), HAL_FDCAN_TT_RegisterStopWatchCallback() and
 133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_TT_RegisterGlobalTimeCallback().
 134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   Use function HAL_FDCAN_UnRegisterCallback() to reset a callback to the default
 136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   weak function.
 137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_UnRegisterCallback takes as parameters the HAL peripheral handle,
 138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   and the Callback ID.
 139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   This function allows to reset following callbacks:
 140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     (+) TxFifoEmptyCallback          : Tx Fifo Empty Callback.
 141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     (+) RxBufferNewMessageCallback   : Rx Buffer New Message Callback.
 142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     (+) HighPriorityMessageCallback  : High Priority Message Callback.
 143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     (+) TimestampWraparoundCallback  : Timestamp Wraparound Callback.
 144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     (+) TimeoutOccurredCallback      : Timeout Occurred Callback.
 145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     (+) ErrorCallback                : Error Callback.
 146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     (+) MspInitCallback              : FDCAN MspInit.
 147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     (+) MspDeInitCallback            : FDCAN MspDeInit.
 148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   For specific callbacks ClockCalibrationCallback, TxEventFifoCallback, RxFifo0Callback,
 150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   RxFifo1Callback, TxBufferCompleteCallback, TxBufferAbortCallback, TT_ScheduleSyncCallback,
 151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   TT_TimeMarkCallback, TT_StopWatchCallback and TT_GlobalTimeCallback, use dedicated
 152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   register callbacks : respectively HAL_FDCAN_UnRegisterClockCalibrationCallback(),
 153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_UnRegisterTxEventFifoCallback(), HAL_FDCAN_UnRegisterRxFifo0Callback(),
 154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_UnRegisterRxFifo1Callback(), HAL_FDCAN_UnRegisterTxBufferCompleCallback(),
 155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_UnRegisterTxBufferAbortCallback(), HAL_FDCAN_UnRegisterErrorStatusCallback(),
 156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_TT_UnRegisterScheduleSyncCallback(), HAL_FDCAN_TT_UnRegisterTimeMarkCallback(),
 157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_TT_UnRegisterStopWatchCallback() and HAL_FDCAN_TT_UnRegisterGlobalTimeCallback().
 158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   By default, after the HAL_FDCAN_Init() and when the state is HAL_FDCAN_STATE_RESET,
 160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   all callbacks are set to the corresponding weak functions:
 161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   examples HAL_FDCAN_ErrorCallback().
 162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   Exception done for MspInit and MspDeInit functions that are
 163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   reset to the legacy weak function in the HAL_FDCAN_Init()/ HAL_FDCAN_DeInit() only when
 164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   these callbacks are null (not registered beforehand).
 165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if not, MspInit or MspDeInit are not null, the HAL_FDCAN_Init()/ HAL_FDCAN_DeInit()
 166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   keep and use the user MspInit/MspDeInit callbacks (registered beforehand)
 167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   Callbacks can be registered/unregistered in HAL_FDCAN_STATE_READY state only.
 169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   Exception done MspInit/MspDeInit that can be registered/unregistered
 170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   in HAL_FDCAN_STATE_READY or HAL_FDCAN_STATE_RESET state,
 171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   In that case first register the MspInit/MspDeInit user callbacks
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 5


 173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   using HAL_FDCAN_RegisterCallback() before calling HAL_FDCAN_DeInit()
 174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   or HAL_FDCAN_Init() function.
 175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   When The compilation define USE_HAL_FDCAN_REGISTER_CALLBACKS is set to 0 or
 177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   not defined, the callback registration feature is not available and all callbacks
 178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   are set to the corresponding weak functions.
 179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   @endverbatim
 181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ******************************************************************************
 182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
 183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /* Includes ------------------------------------------------------------------*/
 185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #include "stm32h7xx_hal.h"
 186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #if defined(FDCAN1)
 188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /** @addtogroup STM32H7xx_HAL_Driver
 190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @{
 191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
 192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /** @defgroup FDCAN FDCAN
 194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief FDCAN HAL module driver
 195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @{
 196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
 197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #ifdef HAL_FDCAN_MODULE_ENABLED
 199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /* Private typedef -----------------------------------------------------------*/
 201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /* Private define ------------------------------------------------------------*/
 202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /** @addtogroup FDCAN_Private_Constants
 203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @{
 204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
 205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_TIMEOUT_VALUE 10U
 206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_TIMEOUT_COUNT 50U
 207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_TX_EVENT_FIFO_MASK (FDCAN_IR_TEFL | FDCAN_IR_TEFF | FDCAN_IR_TEFW | FDCAN_IR_TEFN)
 209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_RX_FIFO0_MASK (FDCAN_IR_RF0L | FDCAN_IR_RF0F | FDCAN_IR_RF0W | FDCAN_IR_RF0N)
 210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_RX_FIFO1_MASK (FDCAN_IR_RF1L | FDCAN_IR_RF1F | FDCAN_IR_RF1W | FDCAN_IR_RF1N)
 211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_ERROR_MASK (FDCAN_IR_ELO | FDCAN_IR_WDI | FDCAN_IR_PEA | FDCAN_IR_PED | FDCAN_IR_ARA)
 212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_ERROR_STATUS_MASK (FDCAN_IR_EP | FDCAN_IR_EW | FDCAN_IR_BO)
 213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_TT_SCHEDULE_SYNC_MASK (FDCAN_TTIR_SBC | FDCAN_TTIR_SMC | FDCAN_TTIR_CSM | FDCAN_TTIR_
 214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_TT_TIME_MARK_MASK (FDCAN_TTIR_RTMI | FDCAN_TTIR_TTMI)
 215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_TT_GLOBAL_TIME_MASK (FDCAN_TTIR_GTW | FDCAN_TTIR_GTD)
 216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_TT_DISTURBING_ERROR_MASK (FDCAN_TTIR_GTE | FDCAN_TTIR_TXU | FDCAN_TTIR_TXO | \
 217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                                         FDCAN_TTIR_SE1 | FDCAN_TTIR_SE2 | FDCAN_TTIR_ELC)
 218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_TT_FATAL_ERROR_MASK (FDCAN_TTIR_IWT | FDCAN_TTIR_WT | FDCAN_TTIR_AW | FDCAN_TTIR_CER)
 219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_ELEMENT_MASK_STDID ((uint32_t)0x1FFC0000U) /* Standard Identifier         */
 221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_ELEMENT_MASK_EXTID ((uint32_t)0x1FFFFFFFU) /* Extended Identifier         */
 222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_ELEMENT_MASK_RTR   ((uint32_t)0x20000000U) /* Remote Transmission Request */
 223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_ELEMENT_MASK_XTD   ((uint32_t)0x40000000U) /* Extended Identifier         */
 224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_ELEMENT_MASK_ESI   ((uint32_t)0x80000000U) /* Error State Indicator       */
 225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_ELEMENT_MASK_TS    ((uint32_t)0x0000FFFFU) /* Timestamp                   */
 226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_ELEMENT_MASK_DLC   ((uint32_t)0x000F0000U) /* Data Length Code            */
 227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_ELEMENT_MASK_BRS   ((uint32_t)0x00100000U) /* Bit Rate Switch             */
 228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_ELEMENT_MASK_FDF   ((uint32_t)0x00200000U) /* FD Format                   */
 229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_ELEMENT_MASK_EFC   ((uint32_t)0x00800000U) /* Event FIFO Control          */
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 6


 230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_ELEMENT_MASK_MM    ((uint32_t)0xFF000000U) /* Message Marker              */
 231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_ELEMENT_MASK_FIDX  ((uint32_t)0x7F000000U) /* Filter Index                */
 232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_ELEMENT_MASK_ANMF  ((uint32_t)0x80000000U) /* Accepted Non-matching Frame */
 233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_ELEMENT_MASK_ET    ((uint32_t)0x00C00000U) /* Event type                  */
 234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_MESSAGE_RAM_SIZE 0x2800U
 236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #define FDCAN_MESSAGE_RAM_END_ADDRESS (SRAMCAN_BASE + FDCAN_MESSAGE_RAM_SIZE - 0x4U) /* The Message
 237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
 239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @}
 240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
 241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /* Private macro -------------------------------------------------------------*/
 243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /* Private variables ---------------------------------------------------------*/
 244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** static const uint8_t DLCtoBytes[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 12, 16, 20, 24, 32, 48, 64};
 245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /* Private function prototypes -----------------------------------------------*/
 247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /** @addtogroup FDCAN_Private_Functions_Prototypes
 248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @{
 249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
 250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** static HAL_StatusTypeDef FDCAN_CalcultateRamBlockAddresses(FDCAN_HandleTypeDef *hfdcan);
 251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** static void FDCAN_CopyMessageToRAM(FDCAN_HandleTypeDef *hfdcan, FDCAN_TxHeaderTypeDef *pTxHeader, u
 252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
 253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @}
 254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
 255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /* Exported functions --------------------------------------------------------*/
 257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /** @defgroup FDCAN_Exported_Functions FDCAN Exported Functions
 258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @{
 259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
 260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /** @defgroup FDCAN_Exported_Functions_Group1 Initialization and de-initialization functions
 262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****  *  @brief    Initialization and Configuration functions
 263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****  *
 264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** @verbatim
 265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ==============================================================================
 266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****               ##### Initialization and de-initialization functions #####
 267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ==============================================================================
 268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     [..]  This section provides functions allowing to:
 269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) Initialize and configure the FDCAN.
 270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) De-initialize the FDCAN.
 271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) Enter FDCAN peripheral in power down mode.
 272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) Exit power down mode.
 273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) Register callbacks.
 274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) Unregister callbacks.
 275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** @endverbatim
 277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @{
 278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
 279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
 281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Initializes the FDCAN peripheral according to the specified
 282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         parameters in the FDCAN_InitTypeDef structure.
 283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
 284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
 285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
 286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 7


 287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_Init(FDCAN_HandleTypeDef *hfdcan)
 288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
  57              		.loc 1 288 1
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 96
  60              		@ frame_needed = 1, uses_anonymous_args = 0
  61 0000 80B5     		push	{r7, lr}
  62              	.LCFI0:
  63              		.cfi_def_cfa_offset 8
  64              		.cfi_offset 7, -8
  65              		.cfi_offset 14, -4
  66 0002 98B0     		sub	sp, sp, #96
  67              	.LCFI1:
  68              		.cfi_def_cfa_offset 104
  69 0004 00AF     		add	r7, sp, #0
  70              	.LCFI2:
  71              		.cfi_def_cfa_register 7
  72 0006 7860     		str	r0, [r7, #4]
 289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t tickstart;
 290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status;
 291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   const uint32_t CvtEltSize[] = {0, 0, 0, 0, 0, 1, 2, 3, 4, 0, 5, 0, 0, 0, 6, 0, 0, 0, 7};
  73              		.loc 1 291 18
  74 0008 994A     		ldr	r2, .L28
  75 000a 07F10C03 		add	r3, r7, #12
  76 000e 1146     		mov	r1, r2
  77 0010 4C22     		movs	r2, #76
  78 0012 1846     		mov	r0, r3
  79 0014 FFF7FEFF 		bl	memcpy
 292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check FDCAN handle */
 294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan == NULL)
  80              		.loc 1 294 6
  81 0018 7B68     		ldr	r3, [r7, #4]
  82 001a 002B     		cmp	r3, #0
  83 001c 01D1     		bne	.L2
 295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
  84              		.loc 1 296 12
  85 001e 0123     		movs	r3, #1
  86 0020 39E2     		b	.L27
  87              	.L2:
 297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check FDCAN instance */
 300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->Instance == FDCAN1)
  88              		.loc 1 300 13
  89 0022 7B68     		ldr	r3, [r7, #4]
  90 0024 1B68     		ldr	r3, [r3]
  91              		.loc 1 300 6
  92 0026 934A     		ldr	r2, .L28+4
  93 0028 9342     		cmp	r3, r2
  94 002a 06D1     		bne	.L4
 301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ttcan = (TTCAN_TypeDef *)((uint32_t)hfdcan->Instance + 0x100U);
  95              		.loc 1 302 55
  96 002c 7B68     		ldr	r3, [r7, #4]
  97 002e 1B68     		ldr	r3, [r3]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 8


  98              		.loc 1 302 66
  99 0030 03F58073 		add	r3, r3, #256
 100              		.loc 1 302 21
 101 0034 1A46     		mov	r2, r3
 102              		.loc 1 302 19
 103 0036 7B68     		ldr	r3, [r7, #4]
 104 0038 5A60     		str	r2, [r3, #4]
 105              	.L4:
 303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
 306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_ALL_INSTANCE(hfdcan->Instance));
 307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_FRAME_FORMAT(hfdcan->Init.FrameFormat));
 308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_MODE(hfdcan->Init.Mode));
 309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FUNCTIONAL_STATE(hfdcan->Init.AutoRetransmission));
 310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FUNCTIONAL_STATE(hfdcan->Init.TransmitPause));
 311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FUNCTIONAL_STATE(hfdcan->Init.ProtocolException));
 312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_NOMINAL_PRESCALER(hfdcan->Init.NominalPrescaler));
 313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_NOMINAL_SJW(hfdcan->Init.NominalSyncJumpWidth));
 314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_NOMINAL_TSEG1(hfdcan->Init.NominalTimeSeg1));
 315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_NOMINAL_TSEG2(hfdcan->Init.NominalTimeSeg2));
 316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->Init.FrameFormat == FDCAN_FRAME_FD_BRS)
 317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_DATA_PRESCALER(hfdcan->Init.DataPrescaler));
 319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_DATA_SJW(hfdcan->Init.DataSyncJumpWidth));
 320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_DATA_TSEG1(hfdcan->Init.DataTimeSeg1));
 321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_DATA_TSEG2(hfdcan->Init.DataTimeSeg2));
 322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_MAX_VALUE(hfdcan->Init.StdFiltersNbr, 128U));
 324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_MAX_VALUE(hfdcan->Init.ExtFiltersNbr, 64U));
 325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_MAX_VALUE(hfdcan->Init.RxFifo0ElmtsNbr, 64U));
 326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->Init.RxFifo0ElmtsNbr > 0U)
 327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_DATA_SIZE(hfdcan->Init.RxFifo0ElmtSize));
 329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_MAX_VALUE(hfdcan->Init.RxFifo1ElmtsNbr, 64U));
 331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->Init.RxFifo1ElmtsNbr > 0U)
 332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_DATA_SIZE(hfdcan->Init.RxFifo1ElmtSize));
 334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_MAX_VALUE(hfdcan->Init.RxBuffersNbr, 64U));
 336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->Init.RxBuffersNbr > 0U)
 337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_DATA_SIZE(hfdcan->Init.RxBufferSize));
 339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_MAX_VALUE(hfdcan->Init.TxEventsNbr, 32U));
 341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_MAX_VALUE((hfdcan->Init.TxBuffersNbr + hfdcan->Init.TxFifoQueueElmtsNbr), 3
 342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->Init.TxFifoQueueElmtsNbr > 0U)
 343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_TX_FIFO_QUEUE_MODE(hfdcan->Init.TxFifoQueueMode));
 345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((hfdcan->Init.TxBuffersNbr + hfdcan->Init.TxFifoQueueElmtsNbr) > 0U)
 347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_DATA_SIZE(hfdcan->Init.TxElmtSize));
 349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #if USE_HAL_FDCAN_REGISTER_CALLBACKS == 1
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 9


 352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_RESET)
 106              		.loc 1 352 13
 107 003a 7B68     		ldr	r3, [r7, #4]
 108 003c 93F89830 		ldrb	r3, [r3, #152]
 109 0040 DBB2     		uxtb	r3, r3
 110              		.loc 1 352 6
 111 0042 002B     		cmp	r3, #0
 112 0044 55D1     		bne	.L5
 353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Allocate lock resource and initialize it */
 355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->Lock = HAL_UNLOCKED;
 113              		.loc 1 355 18
 114 0046 7B68     		ldr	r3, [r7, #4]
 115 0048 0022     		movs	r2, #0
 116 004a 83F89920 		strb	r2, [r3, #153]
 356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Reset callbacks to legacy functions */
 358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ClockCalibrationCallback    = HAL_FDCAN_ClockCalibrationCallback;    /* Legacy weak Clo
 117              		.loc 1 358 41
 118 004e 7B68     		ldr	r3, [r7, #4]
 119 0050 894A     		ldr	r2, .L28+8
 120 0052 C3F8A020 		str	r2, [r3, #160]
 359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TxEventFifoCallback         = HAL_FDCAN_TxEventFifoCallback;         /* Legacy weak TxE
 121              		.loc 1 359 41
 122 0056 7B68     		ldr	r3, [r7, #4]
 123 0058 884A     		ldr	r2, .L28+12
 124 005a C3F8A420 		str	r2, [r3, #164]
 360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->RxFifo0Callback             = HAL_FDCAN_RxFifo0Callback;             /* Legacy weak RxF
 125              		.loc 1 360 41
 126 005e 7B68     		ldr	r3, [r7, #4]
 127 0060 874A     		ldr	r2, .L28+16
 128 0062 C3F8A820 		str	r2, [r3, #168]
 361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->RxFifo1Callback             = HAL_FDCAN_RxFifo1Callback;             /* Legacy weak RxF
 129              		.loc 1 361 41
 130 0066 7B68     		ldr	r3, [r7, #4]
 131 0068 864A     		ldr	r2, .L28+20
 132 006a C3F8AC20 		str	r2, [r3, #172]
 362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TxFifoEmptyCallback         = HAL_FDCAN_TxFifoEmptyCallback;         /* Legacy weak TxF
 133              		.loc 1 362 41
 134 006e 7B68     		ldr	r3, [r7, #4]
 135 0070 854A     		ldr	r2, .L28+24
 136 0072 C3F8B020 		str	r2, [r3, #176]
 363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TxBufferCompleteCallback    = HAL_FDCAN_TxBufferCompleteCallback;    /* Legacy weak TxB
 137              		.loc 1 363 41
 138 0076 7B68     		ldr	r3, [r7, #4]
 139 0078 844A     		ldr	r2, .L28+28
 140 007a C3F8B420 		str	r2, [r3, #180]
 364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TxBufferAbortCallback       = HAL_FDCAN_TxBufferAbortCallback;       /* Legacy weak TxB
 141              		.loc 1 364 41
 142 007e 7B68     		ldr	r3, [r7, #4]
 143 0080 834A     		ldr	r2, .L28+32
 144 0082 C3F8B820 		str	r2, [r3, #184]
 365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->RxBufferNewMessageCallback  = HAL_FDCAN_RxBufferNewMessageCallback;  /* Legacy weak RxB
 145              		.loc 1 365 41
 146 0086 7B68     		ldr	r3, [r7, #4]
 147 0088 824A     		ldr	r2, .L28+36
 148 008a C3F8BC20 		str	r2, [r3, #188]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 10


 366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->HighPriorityMessageCallback = HAL_FDCAN_HighPriorityMessageCallback; /* Legacy weak Hig
 149              		.loc 1 366 41
 150 008e 7B68     		ldr	r3, [r7, #4]
 151 0090 814A     		ldr	r2, .L28+40
 152 0092 C3F8C020 		str	r2, [r3, #192]
 367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TimestampWraparoundCallback = HAL_FDCAN_TimestampWraparoundCallback; /* Legacy weak Tim
 153              		.loc 1 367 41
 154 0096 7B68     		ldr	r3, [r7, #4]
 155 0098 804A     		ldr	r2, .L28+44
 156 009a C3F8C420 		str	r2, [r3, #196]
 368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TimeoutOccurredCallback     = HAL_FDCAN_TimeoutOccurredCallback;     /* Legacy weak Tim
 157              		.loc 1 368 41
 158 009e 7B68     		ldr	r3, [r7, #4]
 159 00a0 7F4A     		ldr	r2, .L28+48
 160 00a2 C3F8C820 		str	r2, [r3, #200]
 369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCallback               = HAL_FDCAN_ErrorCallback;               /* Legacy weak Err
 161              		.loc 1 369 41
 162 00a6 7B68     		ldr	r3, [r7, #4]
 163 00a8 7E4A     		ldr	r2, .L28+52
 164 00aa C3F8CC20 		str	r2, [r3, #204]
 370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorStatusCallback         = HAL_FDCAN_ErrorStatusCallback;         /* Legacy weak Err
 165              		.loc 1 370 41
 166 00ae 7B68     		ldr	r3, [r7, #4]
 167 00b0 7D4A     		ldr	r2, .L28+56
 168 00b2 C3F8D020 		str	r2, [r3, #208]
 371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TT_ScheduleSyncCallback     = HAL_FDCAN_TT_ScheduleSyncCallback;     /* Legacy weak TT_
 169              		.loc 1 371 41
 170 00b6 7B68     		ldr	r3, [r7, #4]
 171 00b8 7C4A     		ldr	r2, .L28+60
 172 00ba C3F8D420 		str	r2, [r3, #212]
 372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TT_TimeMarkCallback         = HAL_FDCAN_TT_TimeMarkCallback;         /* Legacy weak TT_
 173              		.loc 1 372 41
 174 00be 7B68     		ldr	r3, [r7, #4]
 175 00c0 7B4A     		ldr	r2, .L28+64
 176 00c2 C3F8D820 		str	r2, [r3, #216]
 373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TT_StopWatchCallback        = HAL_FDCAN_TT_StopWatchCallback;        /* Legacy weak TT_
 177              		.loc 1 373 41
 178 00c6 7B68     		ldr	r3, [r7, #4]
 179 00c8 7A4A     		ldr	r2, .L28+68
 180 00ca C3F8DC20 		str	r2, [r3, #220]
 374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TT_GlobalTimeCallback       = HAL_FDCAN_TT_GlobalTimeCallback;       /* Legacy weak TT_
 181              		.loc 1 374 41
 182 00ce 7B68     		ldr	r3, [r7, #4]
 183 00d0 794A     		ldr	r2, .L28+72
 184 00d2 C3F8E020 		str	r2, [r3, #224]
 375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (hfdcan->MspInitCallback == NULL)
 185              		.loc 1 376 15
 186 00d6 7B68     		ldr	r3, [r7, #4]
 187 00d8 D3F8E430 		ldr	r3, [r3, #228]
 188              		.loc 1 376 8
 189 00dc 002B     		cmp	r3, #0
 190 00de 03D1     		bne	.L6
 377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->MspInitCallback = HAL_FDCAN_MspInit;  /* Legacy weak MspInit */
 191              		.loc 1 378 31
 192 00e0 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 11


 193 00e2 764A     		ldr	r2, .L28+76
 194 00e4 C3F8E420 		str	r2, [r3, #228]
 195              	.L6:
 379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
 380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Init the low level hardware: CLOCK, NVIC */
 382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->MspInitCallback(hfdcan);
 196              		.loc 1 382 11
 197 00e8 7B68     		ldr	r3, [r7, #4]
 198 00ea D3F8E430 		ldr	r3, [r3, #228]
 199              		.loc 1 382 5
 200 00ee 7868     		ldr	r0, [r7, #4]
 201 00f0 9847     		blx	r3
 202              	.LVL0:
 203              	.L5:
 383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #else
 385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_RESET)
 386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Allocate lock resource and initialize it */
 388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->Lock = HAL_UNLOCKED;
 389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Init the low level hardware: CLOCK, NVIC */
 391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     HAL_FDCAN_MspInit(hfdcan);
 392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #endif /* USE_HAL_FDCAN_REGISTER_CALLBACKS */
 394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Exit from Sleep mode */
 396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   CLEAR_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_CSR);
 204              		.loc 1 396 3
 205 00f2 7B68     		ldr	r3, [r7, #4]
 206 00f4 1B68     		ldr	r3, [r3]
 207 00f6 9A69     		ldr	r2, [r3, #24]
 208 00f8 7B68     		ldr	r3, [r7, #4]
 209 00fa 1B68     		ldr	r3, [r3]
 210 00fc 22F01002 		bic	r2, r2, #16
 211 0100 9A61     		str	r2, [r3, #24]
 397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Get tick */
 399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   tickstart = HAL_GetTick();
 212              		.loc 1 399 15
 213 0102 FFF7FEFF 		bl	HAL_GetTick
 214 0106 F865     		str	r0, [r7, #92]
 400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check Sleep mode acknowledge */
 402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   while ((hfdcan->Instance->CCCR & FDCAN_CCCR_CSA) == FDCAN_CCCR_CSA)
 215              		.loc 1 402 9
 216 0108 14E0     		b	.L7
 217              	.L8:
 403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((HAL_GetTick() - tickstart) > FDCAN_TIMEOUT_VALUE)
 218              		.loc 1 404 10
 219 010a FFF7FEFF 		bl	HAL_GetTick
 220 010e 0246     		mov	r2, r0
 221              		.loc 1 404 24
 222 0110 FB6D     		ldr	r3, [r7, #92]
 223 0112 D31A     		subs	r3, r2, r3
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 12


 224              		.loc 1 404 8
 225 0114 0A2B     		cmp	r3, #10
 226 0116 0DD9     		bls	.L7
 405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code */
 407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
 227              		.loc 1 407 25
 228 0118 7B68     		ldr	r3, [r7, #4]
 229 011a D3F89C30 		ldr	r3, [r3, #156]
 230 011e 43F00102 		orr	r2, r3, #1
 231 0122 7B68     		ldr	r3, [r7, #4]
 232 0124 C3F89C20 		str	r2, [r3, #156]
 408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Change FDCAN state */
 410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->State = HAL_FDCAN_STATE_ERROR;
 233              		.loc 1 410 21
 234 0128 7B68     		ldr	r3, [r7, #4]
 235 012a 0322     		movs	r2, #3
 236 012c 83F89820 		strb	r2, [r3, #152]
 411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 237              		.loc 1 412 14
 238 0130 0123     		movs	r3, #1
 239 0132 B0E1     		b	.L27
 240              	.L7:
 402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 241              		.loc 1 402 17
 242 0134 7B68     		ldr	r3, [r7, #4]
 243 0136 1B68     		ldr	r3, [r3]
 402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 244              		.loc 1 402 27
 245 0138 9B69     		ldr	r3, [r3, #24]
 402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 246              		.loc 1 402 34
 247 013a 03F00803 		and	r3, r3, #8
 402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 248              		.loc 1 402 9
 249 013e 082B     		cmp	r3, #8
 250 0140 E3D0     		beq	.L8
 413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
 414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Request initialisation */
 417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   SET_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_INIT);
 251              		.loc 1 417 3
 252 0142 7B68     		ldr	r3, [r7, #4]
 253 0144 1B68     		ldr	r3, [r3]
 254 0146 9A69     		ldr	r2, [r3, #24]
 255 0148 7B68     		ldr	r3, [r7, #4]
 256 014a 1B68     		ldr	r3, [r3]
 257 014c 42F00102 		orr	r2, r2, #1
 258 0150 9A61     		str	r2, [r3, #24]
 418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Get tick */
 420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   tickstart = HAL_GetTick();
 259              		.loc 1 420 15
 260 0152 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 13


 261 0156 F865     		str	r0, [r7, #92]
 421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Wait until the INIT bit into CCCR register is set */
 423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   while ((hfdcan->Instance->CCCR & FDCAN_CCCR_INIT) == 0U)
 262              		.loc 1 423 9
 263 0158 14E0     		b	.L9
 264              	.L10:
 424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Check for the Timeout */
 426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((HAL_GetTick() - tickstart) > FDCAN_TIMEOUT_VALUE)
 265              		.loc 1 426 10
 266 015a FFF7FEFF 		bl	HAL_GetTick
 267 015e 0246     		mov	r2, r0
 268              		.loc 1 426 24
 269 0160 FB6D     		ldr	r3, [r7, #92]
 270 0162 D31A     		subs	r3, r2, r3
 271              		.loc 1 426 8
 272 0164 0A2B     		cmp	r3, #10
 273 0166 0DD9     		bls	.L9
 427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code */
 429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
 274              		.loc 1 429 25
 275 0168 7B68     		ldr	r3, [r7, #4]
 276 016a D3F89C30 		ldr	r3, [r3, #156]
 277 016e 43F00102 		orr	r2, r3, #1
 278 0172 7B68     		ldr	r3, [r7, #4]
 279 0174 C3F89C20 		str	r2, [r3, #156]
 430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Change FDCAN state */
 432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->State = HAL_FDCAN_STATE_ERROR;
 280              		.loc 1 432 21
 281 0178 7B68     		ldr	r3, [r7, #4]
 282 017a 0322     		movs	r2, #3
 283 017c 83F89820 		strb	r2, [r3, #152]
 433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 284              		.loc 1 434 14
 285 0180 0123     		movs	r3, #1
 286 0182 88E1     		b	.L27
 287              	.L9:
 423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 288              		.loc 1 423 17
 289 0184 7B68     		ldr	r3, [r7, #4]
 290 0186 1B68     		ldr	r3, [r3]
 423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 291              		.loc 1 423 27
 292 0188 9B69     		ldr	r3, [r3, #24]
 423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 293              		.loc 1 423 34
 294 018a 03F00103 		and	r3, r3, #1
 423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 295              		.loc 1 423 9
 296 018e 002B     		cmp	r3, #0
 297 0190 E3D0     		beq	.L10
 435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
 436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 14


 437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Enable configuration change */
 439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   SET_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_CCE);
 298              		.loc 1 439 3
 299 0192 7B68     		ldr	r3, [r7, #4]
 300 0194 1B68     		ldr	r3, [r3]
 301 0196 9A69     		ldr	r2, [r3, #24]
 302 0198 7B68     		ldr	r3, [r7, #4]
 303 019a 1B68     		ldr	r3, [r3]
 304 019c 42F00202 		orr	r2, r2, #2
 305 01a0 9A61     		str	r2, [r3, #24]
 440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Set the no automatic retransmission */
 442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->Init.AutoRetransmission == ENABLE)
 306              		.loc 1 442 19
 307 01a2 7B68     		ldr	r3, [r7, #4]
 308 01a4 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 309              		.loc 1 442 6
 310 01a6 012B     		cmp	r3, #1
 311 01a8 08D1     		bne	.L11
 443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     CLEAR_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_DAR);
 312              		.loc 1 444 5
 313 01aa 7B68     		ldr	r3, [r7, #4]
 314 01ac 1B68     		ldr	r3, [r3]
 315 01ae 9A69     		ldr	r2, [r3, #24]
 316 01b0 7B68     		ldr	r3, [r7, #4]
 317 01b2 1B68     		ldr	r3, [r3]
 318 01b4 22F04002 		bic	r2, r2, #64
 319 01b8 9A61     		str	r2, [r3, #24]
 320 01ba 07E0     		b	.L12
 321              	.L11:
 445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
 447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     SET_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_DAR);
 322              		.loc 1 448 5
 323 01bc 7B68     		ldr	r3, [r7, #4]
 324 01be 1B68     		ldr	r3, [r3]
 325 01c0 9A69     		ldr	r2, [r3, #24]
 326 01c2 7B68     		ldr	r3, [r7, #4]
 327 01c4 1B68     		ldr	r3, [r3]
 328 01c6 42F04002 		orr	r2, r2, #64
 329 01ca 9A61     		str	r2, [r3, #24]
 330              	.L12:
 449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Set the transmit pause feature */
 452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->Init.TransmitPause == ENABLE)
 331              		.loc 1 452 19
 332 01cc 7B68     		ldr	r3, [r7, #4]
 333 01ce 5B7C     		ldrb	r3, [r3, #17]	@ zero_extendqisi2
 334              		.loc 1 452 6
 335 01d0 012B     		cmp	r3, #1
 336 01d2 08D1     		bne	.L13
 453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     SET_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_TXP);
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 15


 337              		.loc 1 454 5
 338 01d4 7B68     		ldr	r3, [r7, #4]
 339 01d6 1B68     		ldr	r3, [r3]
 340 01d8 9A69     		ldr	r2, [r3, #24]
 341 01da 7B68     		ldr	r3, [r7, #4]
 342 01dc 1B68     		ldr	r3, [r3]
 343 01de 42F48042 		orr	r2, r2, #16384
 344 01e2 9A61     		str	r2, [r3, #24]
 345 01e4 07E0     		b	.L14
 346              	.L13:
 455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
 457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     CLEAR_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_TXP);
 347              		.loc 1 458 5
 348 01e6 7B68     		ldr	r3, [r7, #4]
 349 01e8 1B68     		ldr	r3, [r3]
 350 01ea 9A69     		ldr	r2, [r3, #24]
 351 01ec 7B68     		ldr	r3, [r7, #4]
 352 01ee 1B68     		ldr	r3, [r3]
 353 01f0 22F48042 		bic	r2, r2, #16384
 354 01f4 9A61     		str	r2, [r3, #24]
 355              	.L14:
 459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Set the Protocol Exception Handling */
 462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->Init.ProtocolException == ENABLE)
 356              		.loc 1 462 19
 357 01f6 7B68     		ldr	r3, [r7, #4]
 358 01f8 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
 359              		.loc 1 462 6
 360 01fa 012B     		cmp	r3, #1
 361 01fc 08D1     		bne	.L15
 463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     CLEAR_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_PXHD);
 362              		.loc 1 464 5
 363 01fe 7B68     		ldr	r3, [r7, #4]
 364 0200 1B68     		ldr	r3, [r3]
 365 0202 9A69     		ldr	r2, [r3, #24]
 366 0204 7B68     		ldr	r3, [r7, #4]
 367 0206 1B68     		ldr	r3, [r3]
 368 0208 22F48052 		bic	r2, r2, #4096
 369 020c 9A61     		str	r2, [r3, #24]
 370 020e 07E0     		b	.L16
 371              	.L15:
 465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
 467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     SET_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_PXHD);
 372              		.loc 1 468 5
 373 0210 7B68     		ldr	r3, [r7, #4]
 374 0212 1B68     		ldr	r3, [r3]
 375 0214 9A69     		ldr	r2, [r3, #24]
 376 0216 7B68     		ldr	r3, [r7, #4]
 377 0218 1B68     		ldr	r3, [r3]
 378 021a 42F48052 		orr	r2, r2, #4096
 379 021e 9A61     		str	r2, [r3, #24]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 16


 380              	.L16:
 469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Set FDCAN Frame Format */
 472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   MODIFY_REG(hfdcan->Instance->CCCR, FDCAN_FRAME_FD_BRS, hfdcan->Init.FrameFormat);
 381              		.loc 1 472 3
 382 0220 7B68     		ldr	r3, [r7, #4]
 383 0222 1B68     		ldr	r3, [r3]
 384 0224 9B69     		ldr	r3, [r3, #24]
 385 0226 23F44071 		bic	r1, r3, #768
 386 022a 7B68     		ldr	r3, [r7, #4]
 387 022c 9A68     		ldr	r2, [r3, #8]
 388 022e 7B68     		ldr	r3, [r7, #4]
 389 0230 1B68     		ldr	r3, [r3]
 390 0232 0A43     		orrs	r2, r2, r1
 391 0234 9A61     		str	r2, [r3, #24]
 473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Reset FDCAN Operation Mode */
 475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   CLEAR_BIT(hfdcan->Instance->CCCR, (FDCAN_CCCR_TEST | FDCAN_CCCR_MON | FDCAN_CCCR_ASM));
 392              		.loc 1 475 3
 393 0236 7B68     		ldr	r3, [r7, #4]
 394 0238 1B68     		ldr	r3, [r3]
 395 023a 9A69     		ldr	r2, [r3, #24]
 396 023c 7B68     		ldr	r3, [r7, #4]
 397 023e 1B68     		ldr	r3, [r3]
 398 0240 22F0A402 		bic	r2, r2, #164
 399 0244 9A61     		str	r2, [r3, #24]
 476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   CLEAR_BIT(hfdcan->Instance->TEST, FDCAN_TEST_LBCK);
 400              		.loc 1 476 3
 401 0246 7B68     		ldr	r3, [r7, #4]
 402 0248 1B68     		ldr	r3, [r3]
 403 024a 1A69     		ldr	r2, [r3, #16]
 404 024c 7B68     		ldr	r3, [r7, #4]
 405 024e 1B68     		ldr	r3, [r3]
 406 0250 22F01002 		bic	r2, r2, #16
 407 0254 1A61     		str	r2, [r3, #16]
 477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Set FDCAN Operating Mode:
 479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                | Normal | Restricted |    Bus     | Internal | External
 480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                |        | Operation  | Monitoring | LoopBack | LoopBack
 481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****      CCCR.TEST |   0    |     0      |     0      |    1     |    1
 482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****      CCCR.MON  |   0    |     0      |     1      |    1     |    0
 483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****      TEST.LBCK |   0    |     0      |     0      |    1     |    1
 484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****      CCCR.ASM  |   0    |     1      |     0      |    0     |    0
 485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
 486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->Init.Mode == FDCAN_MODE_RESTRICTED_OPERATION)
 408              		.loc 1 486 19
 409 0256 7B68     		ldr	r3, [r7, #4]
 410 0258 DB68     		ldr	r3, [r3, #12]
 411              		.loc 1 486 6
 412 025a 012B     		cmp	r3, #1
 413 025c 30D1     		bne	.L17
 487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Enable Restricted Operation mode */
 489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     SET_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_ASM);
 414              		.loc 1 489 5
 415 025e 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 17


 416 0260 1B68     		ldr	r3, [r3]
 417 0262 9A69     		ldr	r2, [r3, #24]
 418 0264 7B68     		ldr	r3, [r7, #4]
 419 0266 1B68     		ldr	r3, [r3]
 420 0268 42F00402 		orr	r2, r2, #4
 421 026c 9A61     		str	r2, [r3, #24]
 422 026e 54E0     		b	.L18
 423              	.L29:
 424              		.align	2
 425              	.L28:
 426 0270 00000000 		.word	.LC0
 427 0274 00A00040 		.word	1073782784
 428 0278 00000000 		.word	HAL_FDCAN_ClockCalibrationCallback
 429 027c 00000000 		.word	HAL_FDCAN_TxEventFifoCallback
 430 0280 00000000 		.word	HAL_FDCAN_RxFifo0Callback
 431 0284 00000000 		.word	HAL_FDCAN_RxFifo1Callback
 432 0288 00000000 		.word	HAL_FDCAN_TxFifoEmptyCallback
 433 028c 00000000 		.word	HAL_FDCAN_TxBufferCompleteCallback
 434 0290 00000000 		.word	HAL_FDCAN_TxBufferAbortCallback
 435 0294 00000000 		.word	HAL_FDCAN_RxBufferNewMessageCallback
 436 0298 00000000 		.word	HAL_FDCAN_HighPriorityMessageCallback
 437 029c 00000000 		.word	HAL_FDCAN_TimestampWraparoundCallback
 438 02a0 00000000 		.word	HAL_FDCAN_TimeoutOccurredCallback
 439 02a4 00000000 		.word	HAL_FDCAN_ErrorCallback
 440 02a8 00000000 		.word	HAL_FDCAN_ErrorStatusCallback
 441 02ac 00000000 		.word	HAL_FDCAN_TT_ScheduleSyncCallback
 442 02b0 00000000 		.word	HAL_FDCAN_TT_TimeMarkCallback
 443 02b4 00000000 		.word	HAL_FDCAN_TT_StopWatchCallback
 444 02b8 00000000 		.word	HAL_FDCAN_TT_GlobalTimeCallback
 445 02bc 00000000 		.word	HAL_FDCAN_MspInit
 446              	.L17:
 490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else if (hfdcan->Init.Mode != FDCAN_MODE_NORMAL)
 447              		.loc 1 491 24
 448 02c0 7B68     		ldr	r3, [r7, #4]
 449 02c2 DB68     		ldr	r3, [r3, #12]
 450              		.loc 1 491 11
 451 02c4 002B     		cmp	r3, #0
 452 02c6 28D0     		beq	.L18
 492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (hfdcan->Init.Mode != FDCAN_MODE_BUS_MONITORING)
 453              		.loc 1 493 21
 454 02c8 7B68     		ldr	r3, [r7, #4]
 455 02ca DB68     		ldr	r3, [r3, #12]
 456              		.loc 1 493 8
 457 02cc 022B     		cmp	r3, #2
 458 02ce 1CD0     		beq	.L19
 494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Enable write access to TEST register */
 496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       SET_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_TEST);
 459              		.loc 1 496 7
 460 02d0 7B68     		ldr	r3, [r7, #4]
 461 02d2 1B68     		ldr	r3, [r3]
 462 02d4 9A69     		ldr	r2, [r3, #24]
 463 02d6 7B68     		ldr	r3, [r7, #4]
 464 02d8 1B68     		ldr	r3, [r3]
 465 02da 42F08002 		orr	r2, r2, #128
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 18


 466 02de 9A61     		str	r2, [r3, #24]
 497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Enable LoopBack mode */
 499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       SET_BIT(hfdcan->Instance->TEST, FDCAN_TEST_LBCK);
 467              		.loc 1 499 7
 468 02e0 7B68     		ldr	r3, [r7, #4]
 469 02e2 1B68     		ldr	r3, [r3]
 470 02e4 1A69     		ldr	r2, [r3, #16]
 471 02e6 7B68     		ldr	r3, [r7, #4]
 472 02e8 1B68     		ldr	r3, [r3]
 473 02ea 42F01002 		orr	r2, r2, #16
 474 02ee 1A61     		str	r2, [r3, #16]
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if (hfdcan->Init.Mode == FDCAN_MODE_INTERNAL_LOOPBACK)
 475              		.loc 1 501 23
 476 02f0 7B68     		ldr	r3, [r7, #4]
 477 02f2 DB68     		ldr	r3, [r3, #12]
 478              		.loc 1 501 10
 479 02f4 032B     		cmp	r3, #3
 480 02f6 10D1     		bne	.L18
 502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         SET_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_MON);
 481              		.loc 1 503 9
 482 02f8 7B68     		ldr	r3, [r7, #4]
 483 02fa 1B68     		ldr	r3, [r3]
 484 02fc 9A69     		ldr	r2, [r3, #24]
 485 02fe 7B68     		ldr	r3, [r7, #4]
 486 0300 1B68     		ldr	r3, [r3]
 487 0302 42F02002 		orr	r2, r2, #32
 488 0306 9A61     		str	r2, [r3, #24]
 489 0308 07E0     		b	.L18
 490              	.L19:
 504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
 505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
 506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else
 507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Enable bus monitoring mode */
 509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       SET_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_MON);
 491              		.loc 1 509 7
 492 030a 7B68     		ldr	r3, [r7, #4]
 493 030c 1B68     		ldr	r3, [r3]
 494 030e 9A69     		ldr	r2, [r3, #24]
 495 0310 7B68     		ldr	r3, [r7, #4]
 496 0312 1B68     		ldr	r3, [r3]
 497 0314 42F02002 		orr	r2, r2, #32
 498 0318 9A61     		str	r2, [r3, #24]
 499              	.L18:
 510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
 511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
 513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Nothing to do: normal mode */
 515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Set the nominal bit timing register */
 518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   hfdcan->Instance->NBTP = ((((uint32_t)hfdcan->Init.NominalSyncJumpWidth - 1U) << FDCAN_NBTP_NSJW_
 500              		.loc 1 518 53
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 19


 501 031a 7B68     		ldr	r3, [r7, #4]
 502 031c 9B69     		ldr	r3, [r3, #24]
 503              		.loc 1 518 75
 504 031e 013B     		subs	r3, r3, #1
 505              		.loc 1 518 81
 506 0320 5A06     		lsls	r2, r3, #25
 519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                             (((uint32_t)hfdcan->Init.NominalTimeSeg1 - 1U) << FDCAN_NBTP_NTSEG1_Pos
 507              		.loc 1 519 53
 508 0322 7B68     		ldr	r3, [r7, #4]
 509 0324 DB69     		ldr	r3, [r3, #28]
 510              		.loc 1 519 70
 511 0326 013B     		subs	r3, r3, #1
 512              		.loc 1 519 76
 513 0328 1B02     		lsls	r3, r3, #8
 518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                             (((uint32_t)hfdcan->Init.NominalTimeSeg1 - 1U) << FDCAN_NBTP_NTSEG1_Pos
 514              		.loc 1 518 105
 515 032a 1A43     		orrs	r2, r2, r3
 520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                             (((uint32_t)hfdcan->Init.NominalTimeSeg2 - 1U) << FDCAN_NBTP_NTSEG2_Pos
 516              		.loc 1 520 53
 517 032c 7B68     		ldr	r3, [r7, #4]
 518 032e 1B6A     		ldr	r3, [r3, #32]
 519              		.loc 1 520 76
 520 0330 013B     		subs	r3, r3, #1
 519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                             (((uint32_t)hfdcan->Init.NominalTimeSeg1 - 1U) << FDCAN_NBTP_NTSEG1_Pos
 521              		.loc 1 519 105
 522 0332 42EA0301 		orr	r1, r2, r3
 521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                             (((uint32_t)hfdcan->Init.NominalPrescaler - 1U) << FDCAN_NBTP_NBRP_Pos)
 523              		.loc 1 521 53
 524 0336 7B68     		ldr	r3, [r7, #4]
 525 0338 5B69     		ldr	r3, [r3, #20]
 526              		.loc 1 521 71
 527 033a 013B     		subs	r3, r3, #1
 528              		.loc 1 521 77
 529 033c 1A04     		lsls	r2, r3, #16
 518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                             (((uint32_t)hfdcan->Init.NominalTimeSeg1 - 1U) << FDCAN_NBTP_NTSEG1_Pos
 530              		.loc 1 518 9
 531 033e 7B68     		ldr	r3, [r7, #4]
 532 0340 1B68     		ldr	r3, [r3]
 520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                             (((uint32_t)hfdcan->Init.NominalTimeSeg2 - 1U) << FDCAN_NBTP_NTSEG2_Pos
 533              		.loc 1 520 105
 534 0342 0A43     		orrs	r2, r2, r1
 518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                             (((uint32_t)hfdcan->Init.NominalTimeSeg1 - 1U) << FDCAN_NBTP_NTSEG1_Pos
 535              		.loc 1 518 26
 536 0344 DA61     		str	r2, [r3, #28]
 522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* If FD operation with BRS is selected, set the data bit timing register */
 524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->Init.FrameFormat == FDCAN_FRAME_FD_BRS)
 537              		.loc 1 524 19
 538 0346 7B68     		ldr	r3, [r7, #4]
 539 0348 9B68     		ldr	r3, [r3, #8]
 540              		.loc 1 524 6
 541 034a B3F5407F 		cmp	r3, #768
 542 034e 15D1     		bne	.L20
 525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->Instance->DBTP = ((((uint32_t)hfdcan->Init.DataSyncJumpWidth - 1U) << FDCAN_DBTP_DSJW_P
 543              		.loc 1 526 55
 544 0350 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 20


 545 0352 9B6A     		ldr	r3, [r3, #40]
 546              		.loc 1 526 80
 547 0354 5A1E     		subs	r2, r3, #1
 527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                               (((uint32_t)hfdcan->Init.DataTimeSeg1 - 1U) << FDCAN_DBTP_DTSEG1_Pos)
 548              		.loc 1 527 55
 549 0356 7B68     		ldr	r3, [r7, #4]
 550 0358 DB6A     		ldr	r3, [r3, #44]
 551              		.loc 1 527 69
 552 035a 013B     		subs	r3, r3, #1
 553              		.loc 1 527 75
 554 035c 1B02     		lsls	r3, r3, #8
 526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                               (((uint32_t)hfdcan->Init.DataTimeSeg1 - 1U) << FDCAN_DBTP_DTSEG1_Pos)
 555              		.loc 1 526 104
 556 035e 1A43     		orrs	r2, r2, r3
 528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                               (((uint32_t)hfdcan->Init.DataTimeSeg2 - 1U) << FDCAN_DBTP_DTSEG2_Pos)
 557              		.loc 1 528 55
 558 0360 7B68     		ldr	r3, [r7, #4]
 559 0362 1B6B     		ldr	r3, [r3, #48]
 560              		.loc 1 528 69
 561 0364 013B     		subs	r3, r3, #1
 562              		.loc 1 528 75
 563 0366 1B01     		lsls	r3, r3, #4
 527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                               (((uint32_t)hfdcan->Init.DataTimeSeg1 - 1U) << FDCAN_DBTP_DTSEG1_Pos)
 564              		.loc 1 527 104
 565 0368 42EA0301 		orr	r1, r2, r3
 529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                               (((uint32_t)hfdcan->Init.DataPrescaler - 1U) << FDCAN_DBTP_DBRP_Pos))
 566              		.loc 1 529 55
 567 036c 7B68     		ldr	r3, [r7, #4]
 568 036e 5B6A     		ldr	r3, [r3, #36]
 569              		.loc 1 529 70
 570 0370 013B     		subs	r3, r3, #1
 571              		.loc 1 529 76
 572 0372 1A04     		lsls	r2, r3, #16
 526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                               (((uint32_t)hfdcan->Init.DataTimeSeg1 - 1U) << FDCAN_DBTP_DTSEG1_Pos)
 573              		.loc 1 526 11
 574 0374 7B68     		ldr	r3, [r7, #4]
 575 0376 1B68     		ldr	r3, [r3]
 528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                               (((uint32_t)hfdcan->Init.DataTimeSeg2 - 1U) << FDCAN_DBTP_DTSEG2_Pos)
 576              		.loc 1 528 104
 577 0378 0A43     		orrs	r2, r2, r1
 526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                               (((uint32_t)hfdcan->Init.DataTimeSeg1 - 1U) << FDCAN_DBTP_DTSEG1_Pos)
 578              		.loc 1 526 28
 579 037a DA60     		str	r2, [r3, #12]
 580              	.L20:
 530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->Init.TxFifoQueueElmtsNbr > 0U)
 581              		.loc 1 532 19
 582 037c 7B68     		ldr	r3, [r7, #4]
 583 037e 1B6E     		ldr	r3, [r3, #96]
 584              		.loc 1 532 6
 585 0380 002B     		cmp	r3, #0
 586 0382 0AD0     		beq	.L21
 533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Select between Tx FIFO and Tx Queue operation modes */
 535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     SET_BIT(hfdcan->Instance->TXBC, hfdcan->Init.TxFifoQueueMode);
 587              		.loc 1 535 5
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 21


 588 0384 7B68     		ldr	r3, [r7, #4]
 589 0386 1B68     		ldr	r3, [r3]
 590 0388 D3F8C010 		ldr	r1, [r3, #192]
 591 038c 7B68     		ldr	r3, [r7, #4]
 592 038e 5A6E     		ldr	r2, [r3, #100]
 593 0390 7B68     		ldr	r3, [r7, #4]
 594 0392 1B68     		ldr	r3, [r3]
 595 0394 0A43     		orrs	r2, r2, r1
 596 0396 C3F8C020 		str	r2, [r3, #192]
 597              	.L21:
 536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Configure Tx element size */
 539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((hfdcan->Init.TxBuffersNbr + hfdcan->Init.TxFifoQueueElmtsNbr) > 0U)
 598              		.loc 1 539 20
 599 039a 7B68     		ldr	r3, [r7, #4]
 600 039c DA6D     		ldr	r2, [r3, #92]
 601              		.loc 1 539 48
 602 039e 7B68     		ldr	r3, [r7, #4]
 603 03a0 1B6E     		ldr	r3, [r3, #96]
 604              		.loc 1 539 34
 605 03a2 1344     		add	r3, r3, r2
 606              		.loc 1 539 6
 607 03a4 002B     		cmp	r3, #0
 608 03a6 11D0     		beq	.L22
 540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     MODIFY_REG(hfdcan->Instance->TXESC, FDCAN_TXESC_TBDS, CvtEltSize[hfdcan->Init.TxElmtSize]);
 609              		.loc 1 541 5
 610 03a8 7B68     		ldr	r3, [r7, #4]
 611 03aa 1B68     		ldr	r3, [r3]
 612 03ac D3F8C830 		ldr	r3, [r3, #200]
 613 03b0 23F00701 		bic	r1, r3, #7
 614 03b4 7B68     		ldr	r3, [r7, #4]
 615 03b6 9B6E     		ldr	r3, [r3, #104]
 616 03b8 9B00     		lsls	r3, r3, #2
 617 03ba 6033     		adds	r3, r3, #96
 618 03bc 3B44     		add	r3, r3, r7
 619 03be 53F8542C 		ldr	r2, [r3, #-84]
 620 03c2 7B68     		ldr	r3, [r7, #4]
 621 03c4 1B68     		ldr	r3, [r3]
 622 03c6 0A43     		orrs	r2, r2, r1
 623 03c8 C3F8C820 		str	r2, [r3, #200]
 624              	.L22:
 542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Configure Rx FIFO 0 element size */
 545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->Init.RxFifo0ElmtsNbr > 0U)
 625              		.loc 1 545 19
 626 03cc 7B68     		ldr	r3, [r7, #4]
 627 03ce 1B6C     		ldr	r3, [r3, #64]
 628              		.loc 1 545 6
 629 03d0 002B     		cmp	r3, #0
 630 03d2 11D0     		beq	.L23
 546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     MODIFY_REG(hfdcan->Instance->RXESC, FDCAN_RXESC_F0DS, (CvtEltSize[hfdcan->Init.RxFifo0ElmtSize]
 631              		.loc 1 547 5
 632 03d4 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 22


 633 03d6 1B68     		ldr	r3, [r3]
 634 03d8 D3F8BC30 		ldr	r3, [r3, #188]
 635 03dc 23F00701 		bic	r1, r3, #7
 636 03e0 7B68     		ldr	r3, [r7, #4]
 637 03e2 5B6C     		ldr	r3, [r3, #68]
 638 03e4 9B00     		lsls	r3, r3, #2
 639 03e6 6033     		adds	r3, r3, #96
 640 03e8 3B44     		add	r3, r3, r7
 641 03ea 53F8542C 		ldr	r2, [r3, #-84]
 642 03ee 7B68     		ldr	r3, [r7, #4]
 643 03f0 1B68     		ldr	r3, [r3]
 644 03f2 0A43     		orrs	r2, r2, r1
 645 03f4 C3F8BC20 		str	r2, [r3, #188]
 646              	.L23:
 548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Configure Rx FIFO 1 element size */
 551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->Init.RxFifo1ElmtsNbr > 0U)
 647              		.loc 1 551 19
 648 03f8 7B68     		ldr	r3, [r7, #4]
 649 03fa 9B6C     		ldr	r3, [r3, #72]
 650              		.loc 1 551 6
 651 03fc 002B     		cmp	r3, #0
 652 03fe 12D0     		beq	.L24
 552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     MODIFY_REG(hfdcan->Instance->RXESC, FDCAN_RXESC_F1DS, (CvtEltSize[hfdcan->Init.RxFifo1ElmtSize]
 653              		.loc 1 553 5
 654 0400 7B68     		ldr	r3, [r7, #4]
 655 0402 1B68     		ldr	r3, [r3]
 656 0404 D3F8BC30 		ldr	r3, [r3, #188]
 657 0408 23F07001 		bic	r1, r3, #112
 658 040c 7B68     		ldr	r3, [r7, #4]
 659 040e DB6C     		ldr	r3, [r3, #76]
 660 0410 9B00     		lsls	r3, r3, #2
 661 0412 6033     		adds	r3, r3, #96
 662 0414 3B44     		add	r3, r3, r7
 663 0416 53F8543C 		ldr	r3, [r3, #-84]
 664 041a 1A01     		lsls	r2, r3, #4
 665 041c 7B68     		ldr	r3, [r7, #4]
 666 041e 1B68     		ldr	r3, [r3]
 667 0420 0A43     		orrs	r2, r2, r1
 668 0422 C3F8BC20 		str	r2, [r3, #188]
 669              	.L24:
 554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Configure Rx buffer element size */
 557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->Init.RxBuffersNbr > 0U)
 670              		.loc 1 557 19
 671 0426 7B68     		ldr	r3, [r7, #4]
 672 0428 1B6D     		ldr	r3, [r3, #80]
 673              		.loc 1 557 6
 674 042a 002B     		cmp	r3, #0
 675 042c 12D0     		beq	.L25
 558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     MODIFY_REG(hfdcan->Instance->RXESC, FDCAN_RXESC_RBDS, (CvtEltSize[hfdcan->Init.RxBufferSize] <<
 676              		.loc 1 559 5
 677 042e 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 23


 678 0430 1B68     		ldr	r3, [r3]
 679 0432 D3F8BC30 		ldr	r3, [r3, #188]
 680 0436 23F4E061 		bic	r1, r3, #1792
 681 043a 7B68     		ldr	r3, [r7, #4]
 682 043c 5B6D     		ldr	r3, [r3, #84]
 683 043e 9B00     		lsls	r3, r3, #2
 684 0440 6033     		adds	r3, r3, #96
 685 0442 3B44     		add	r3, r3, r7
 686 0444 53F8543C 		ldr	r3, [r3, #-84]
 687 0448 1A02     		lsls	r2, r3, #8
 688 044a 7B68     		ldr	r3, [r7, #4]
 689 044c 1B68     		ldr	r3, [r3]
 690 044e 0A43     		orrs	r2, r2, r1
 691 0450 C3F8BC20 		str	r2, [r3, #188]
 692              	.L25:
 560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* By default operation mode is set to Event-driven communication.
 563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****      If Time-triggered communication is needed, user should call the
 564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****      HAL_FDCAN_TT_ConfigOperation function just after the HAL_FDCAN_Init */
 565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->Instance == FDCAN1)
 693              		.loc 1 565 13
 694 0454 7B68     		ldr	r3, [r7, #4]
 695 0456 1B68     		ldr	r3, [r3]
 696              		.loc 1 565 6
 697 0458 114A     		ldr	r2, .L30
 698 045a 9342     		cmp	r3, r2
 699 045c 07D1     		bne	.L26
 566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     CLEAR_BIT(hfdcan->ttcan->TTOCF, FDCAN_TTOCF_OM);
 700              		.loc 1 567 5
 701 045e 7B68     		ldr	r3, [r7, #4]
 702 0460 5B68     		ldr	r3, [r3, #4]
 703 0462 9A68     		ldr	r2, [r3, #8]
 704 0464 7B68     		ldr	r3, [r7, #4]
 705 0466 5B68     		ldr	r3, [r3, #4]
 706 0468 22F00302 		bic	r2, r2, #3
 707 046c 9A60     		str	r2, [r3, #8]
 708              	.L26:
 568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Initialize the Latest Tx FIFO/Queue request buffer index */
 571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   hfdcan->LatestTxFifoQRequest = 0U;
 709              		.loc 1 571 32
 710 046e 7B68     		ldr	r3, [r7, #4]
 711 0470 0022     		movs	r2, #0
 712 0472 C3F89420 		str	r2, [r3, #148]
 572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Initialize the error code */
 574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   hfdcan->ErrorCode = HAL_FDCAN_ERROR_NONE;
 713              		.loc 1 574 21
 714 0476 7B68     		ldr	r3, [r7, #4]
 715 0478 0022     		movs	r2, #0
 716 047a C3F89C20 		str	r2, [r3, #156]
 575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Initialize the FDCAN state */
 577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   hfdcan->State = HAL_FDCAN_STATE_READY;
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 24


 717              		.loc 1 577 17
 718 047e 7B68     		ldr	r3, [r7, #4]
 719 0480 0122     		movs	r2, #1
 720 0482 83F89820 		strb	r2, [r3, #152]
 578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Calculate each RAM block address */
 580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   status = FDCAN_CalcultateRamBlockAddresses(hfdcan);
 721              		.loc 1 580 12
 722 0486 7868     		ldr	r0, [r7, #4]
 723 0488 FFF7FEFF 		bl	FDCAN_CalcultateRamBlockAddresses
 724 048c 0346     		mov	r3, r0
 725 048e 87F85B30 		strb	r3, [r7, #91]
 581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Return function status */
 583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
 726              		.loc 1 583 10
 727 0492 97F85B30 		ldrb	r3, [r7, #91]	@ zero_extendqisi2
 728              	.L27:
 584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 729              		.loc 1 584 1 discriminator 2
 730 0496 1846     		mov	r0, r3
 731 0498 6037     		adds	r7, r7, #96
 732              	.LCFI3:
 733              		.cfi_def_cfa_offset 8
 734 049a BD46     		mov	sp, r7
 735              	.LCFI4:
 736              		.cfi_def_cfa_register 13
 737              		@ sp needed
 738 049c 80BD     		pop	{r7, pc}
 739              	.L31:
 740 049e 00BF     		.align	2
 741              	.L30:
 742 04a0 00A00040 		.word	1073782784
 743              		.cfi_endproc
 744              	.LFE333:
 746              		.section	.text.HAL_FDCAN_DeInit,"ax",%progbits
 747              		.align	1
 748              		.global	HAL_FDCAN_DeInit
 749              		.syntax unified
 750              		.thumb
 751              		.thumb_func
 753              	HAL_FDCAN_DeInit:
 754              	.LFB334:
 585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
 587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Deinitializes the FDCAN peripheral registers to their default reset values.
 588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
 589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
 590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
 591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
 592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_DeInit(FDCAN_HandleTypeDef *hfdcan)
 593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 755              		.loc 1 593 1
 756              		.cfi_startproc
 757              		@ args = 0, pretend = 0, frame = 8
 758              		@ frame_needed = 1, uses_anonymous_args = 0
 759 0000 80B5     		push	{r7, lr}
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 25


 760              	.LCFI5:
 761              		.cfi_def_cfa_offset 8
 762              		.cfi_offset 7, -8
 763              		.cfi_offset 14, -4
 764 0002 82B0     		sub	sp, sp, #8
 765              	.LCFI6:
 766              		.cfi_def_cfa_offset 16
 767 0004 00AF     		add	r7, sp, #0
 768              	.LCFI7:
 769              		.cfi_def_cfa_register 7
 770 0006 7860     		str	r0, [r7, #4]
 594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check FDCAN handle */
 595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan == NULL)
 771              		.loc 1 595 6
 772 0008 7B68     		ldr	r3, [r7, #4]
 773 000a 002B     		cmp	r3, #0
 774 000c 01D1     		bne	.L33
 596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 775              		.loc 1 597 12
 776 000e 0123     		movs	r3, #1
 777 0010 21E0     		b	.L34
 778              	.L33:
 598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
 601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_ALL_INSTANCE(hfdcan->Instance));
 602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Stop the FDCAN module: return value is voluntary ignored */
 604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   (void)HAL_FDCAN_Stop(hfdcan);
 779              		.loc 1 604 9
 780 0012 7868     		ldr	r0, [r7, #4]
 781 0014 FFF7FEFF 		bl	HAL_FDCAN_Stop
 605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Disable Interrupt lines */
 607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   CLEAR_BIT(hfdcan->Instance->ILE, (FDCAN_INTERRUPT_LINE0 | FDCAN_INTERRUPT_LINE1));
 782              		.loc 1 607 3
 783 0018 7B68     		ldr	r3, [r7, #4]
 784 001a 1B68     		ldr	r3, [r3]
 785 001c DA6D     		ldr	r2, [r3, #92]
 786 001e 7B68     		ldr	r3, [r7, #4]
 787 0020 1B68     		ldr	r3, [r3]
 788 0022 22F00302 		bic	r2, r2, #3
 789 0026 DA65     		str	r2, [r3, #92]
 608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #if USE_HAL_FDCAN_REGISTER_CALLBACKS == 1
 610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->MspDeInitCallback == NULL)
 790              		.loc 1 610 13
 791 0028 7B68     		ldr	r3, [r7, #4]
 792 002a D3F8E830 		ldr	r3, [r3, #232]
 793              		.loc 1 610 6
 794 002e 002B     		cmp	r3, #0
 795 0030 03D1     		bne	.L35
 611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->MspDeInitCallback = HAL_FDCAN_MspDeInit; /* Legacy weak MspDeInit */
 796              		.loc 1 612 31
 797 0032 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 26


 798 0034 0A4A     		ldr	r2, .L36
 799 0036 C3F8E820 		str	r2, [r3, #232]
 800              	.L35:
 613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* DeInit the low level hardware: CLOCK, NVIC */
 616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   hfdcan->MspDeInitCallback(hfdcan);
 801              		.loc 1 616 9
 802 003a 7B68     		ldr	r3, [r7, #4]
 803 003c D3F8E830 		ldr	r3, [r3, #232]
 804              		.loc 1 616 3
 805 0040 7868     		ldr	r0, [r7, #4]
 806 0042 9847     		blx	r3
 807              	.LVL1:
 617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #else
 618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* DeInit the low level hardware: CLOCK, NVIC */
 619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_MspDeInit(hfdcan);
 620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #endif /* USE_HAL_FDCAN_REGISTER_CALLBACKS */
 621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Reset the FDCAN ErrorCode */
 623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   hfdcan->ErrorCode = HAL_FDCAN_ERROR_NONE;
 808              		.loc 1 623 21
 809 0044 7B68     		ldr	r3, [r7, #4]
 810 0046 0022     		movs	r2, #0
 811 0048 C3F89C20 		str	r2, [r3, #156]
 624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Change FDCAN state */
 626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   hfdcan->State = HAL_FDCAN_STATE_RESET;
 812              		.loc 1 626 17
 813 004c 7B68     		ldr	r3, [r7, #4]
 814 004e 0022     		movs	r2, #0
 815 0050 83F89820 		strb	r2, [r3, #152]
 627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Return function status */
 629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return HAL_OK;
 816              		.loc 1 629 10
 817 0054 0023     		movs	r3, #0
 818              	.L34:
 630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 819              		.loc 1 630 1
 820 0056 1846     		mov	r0, r3
 821 0058 0837     		adds	r7, r7, #8
 822              	.LCFI8:
 823              		.cfi_def_cfa_offset 8
 824 005a BD46     		mov	sp, r7
 825              	.LCFI9:
 826              		.cfi_def_cfa_register 13
 827              		@ sp needed
 828 005c 80BD     		pop	{r7, pc}
 829              	.L37:
 830 005e 00BF     		.align	2
 831              	.L36:
 832 0060 00000000 		.word	HAL_FDCAN_MspDeInit
 833              		.cfi_endproc
 834              	.LFE334:
 836              		.section	.text.HAL_FDCAN_MspInit,"ax",%progbits
 837              		.align	1
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 27


 838              		.weak	HAL_FDCAN_MspInit
 839              		.syntax unified
 840              		.thumb
 841              		.thumb_func
 843              	HAL_FDCAN_MspInit:
 844              	.LFB335:
 631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
 633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Initializes the FDCAN MSP.
 634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
 635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
 636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval None
 637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
 638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** __weak void HAL_FDCAN_MspInit(FDCAN_HandleTypeDef *hfdcan)
 639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 845              		.loc 1 639 1
 846              		.cfi_startproc
 847              		@ args = 0, pretend = 0, frame = 8
 848              		@ frame_needed = 1, uses_anonymous_args = 0
 849              		@ link register save eliminated.
 850 0000 80B4     		push	{r7}
 851              	.LCFI10:
 852              		.cfi_def_cfa_offset 4
 853              		.cfi_offset 7, -4
 854 0002 83B0     		sub	sp, sp, #12
 855              	.LCFI11:
 856              		.cfi_def_cfa_offset 16
 857 0004 00AF     		add	r7, sp, #0
 858              	.LCFI12:
 859              		.cfi_def_cfa_register 7
 860 0006 7860     		str	r0, [r7, #4]
 640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Prevent unused argument(s) compilation warning */
 641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(hfdcan);
 642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             the HAL_FDCAN_MspInit could be implemented in the user file
 644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****    */
 645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 861              		.loc 1 645 1
 862 0008 00BF     		nop
 863 000a 0C37     		adds	r7, r7, #12
 864              	.LCFI13:
 865              		.cfi_def_cfa_offset 4
 866 000c BD46     		mov	sp, r7
 867              	.LCFI14:
 868              		.cfi_def_cfa_register 13
 869              		@ sp needed
 870 000e 5DF8047B 		ldr	r7, [sp], #4
 871              	.LCFI15:
 872              		.cfi_restore 7
 873              		.cfi_def_cfa_offset 0
 874 0012 7047     		bx	lr
 875              		.cfi_endproc
 876              	.LFE335:
 878              		.section	.text.HAL_FDCAN_MspDeInit,"ax",%progbits
 879              		.align	1
 880              		.weak	HAL_FDCAN_MspDeInit
 881              		.syntax unified
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 28


 882              		.thumb
 883              		.thumb_func
 885              	HAL_FDCAN_MspDeInit:
 886              	.LFB336:
 646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
 648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  DeInitializes the FDCAN MSP.
 649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
 650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
 651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval None
 652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
 653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** __weak void HAL_FDCAN_MspDeInit(FDCAN_HandleTypeDef *hfdcan)
 654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 887              		.loc 1 654 1
 888              		.cfi_startproc
 889              		@ args = 0, pretend = 0, frame = 8
 890              		@ frame_needed = 1, uses_anonymous_args = 0
 891              		@ link register save eliminated.
 892 0000 80B4     		push	{r7}
 893              	.LCFI16:
 894              		.cfi_def_cfa_offset 4
 895              		.cfi_offset 7, -4
 896 0002 83B0     		sub	sp, sp, #12
 897              	.LCFI17:
 898              		.cfi_def_cfa_offset 16
 899 0004 00AF     		add	r7, sp, #0
 900              	.LCFI18:
 901              		.cfi_def_cfa_register 7
 902 0006 7860     		str	r0, [r7, #4]
 655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Prevent unused argument(s) compilation warning */
 656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(hfdcan);
 657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             the HAL_FDCAN_MspDeInit could be implemented in the user file
 659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****    */
 660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 903              		.loc 1 660 1
 904 0008 00BF     		nop
 905 000a 0C37     		adds	r7, r7, #12
 906              	.LCFI19:
 907              		.cfi_def_cfa_offset 4
 908 000c BD46     		mov	sp, r7
 909              	.LCFI20:
 910              		.cfi_def_cfa_register 13
 911              		@ sp needed
 912 000e 5DF8047B 		ldr	r7, [sp], #4
 913              	.LCFI21:
 914              		.cfi_restore 7
 915              		.cfi_def_cfa_offset 0
 916 0012 7047     		bx	lr
 917              		.cfi_endproc
 918              	.LFE336:
 920              		.section	.text.HAL_FDCAN_EnterPowerDownMode,"ax",%progbits
 921              		.align	1
 922              		.global	HAL_FDCAN_EnterPowerDownMode
 923              		.syntax unified
 924              		.thumb
 925              		.thumb_func
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 29


 927              	HAL_FDCAN_EnterPowerDownMode:
 928              	.LFB337:
 661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
 663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Enter FDCAN peripheral in sleep mode.
 664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
 665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
 666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
 667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
 668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_EnterPowerDownMode(FDCAN_HandleTypeDef *hfdcan)
 669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 929              		.loc 1 669 1
 930              		.cfi_startproc
 931              		@ args = 0, pretend = 0, frame = 16
 932              		@ frame_needed = 1, uses_anonymous_args = 0
 933 0000 80B5     		push	{r7, lr}
 934              	.LCFI22:
 935              		.cfi_def_cfa_offset 8
 936              		.cfi_offset 7, -8
 937              		.cfi_offset 14, -4
 938 0002 84B0     		sub	sp, sp, #16
 939              	.LCFI23:
 940              		.cfi_def_cfa_offset 24
 941 0004 00AF     		add	r7, sp, #0
 942              	.LCFI24:
 943              		.cfi_def_cfa_register 7
 944 0006 7860     		str	r0, [r7, #4]
 670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t tickstart;
 671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Request clock stop */
 673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   SET_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_CSR);
 945              		.loc 1 673 3
 946 0008 7B68     		ldr	r3, [r7, #4]
 947 000a 1B68     		ldr	r3, [r3]
 948 000c 9A69     		ldr	r2, [r3, #24]
 949 000e 7B68     		ldr	r3, [r7, #4]
 950 0010 1B68     		ldr	r3, [r3]
 951 0012 42F01002 		orr	r2, r2, #16
 952 0016 9A61     		str	r2, [r3, #24]
 674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Get tick */
 676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   tickstart = HAL_GetTick();
 953              		.loc 1 676 15
 954 0018 FFF7FEFF 		bl	HAL_GetTick
 955 001c F860     		str	r0, [r7, #12]
 677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Wait until FDCAN is ready for power down */
 679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   while ((hfdcan->Instance->CCCR & FDCAN_CCCR_CSA) == 0U)
 956              		.loc 1 679 9
 957 001e 14E0     		b	.L41
 958              	.L43:
 680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((HAL_GetTick() - tickstart) > FDCAN_TIMEOUT_VALUE)
 959              		.loc 1 681 10
 960 0020 FFF7FEFF 		bl	HAL_GetTick
 961 0024 0246     		mov	r2, r0
 962              		.loc 1 681 24
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 30


 963 0026 FB68     		ldr	r3, [r7, #12]
 964 0028 D31A     		subs	r3, r2, r3
 965              		.loc 1 681 8
 966 002a 0A2B     		cmp	r3, #10
 967 002c 0DD9     		bls	.L41
 682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code */
 684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
 968              		.loc 1 684 25
 969 002e 7B68     		ldr	r3, [r7, #4]
 970 0030 D3F89C30 		ldr	r3, [r3, #156]
 971 0034 43F00102 		orr	r2, r3, #1
 972 0038 7B68     		ldr	r3, [r7, #4]
 973 003a C3F89C20 		str	r2, [r3, #156]
 685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Change FDCAN state */
 687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->State = HAL_FDCAN_STATE_ERROR;
 974              		.loc 1 687 21
 975 003e 7B68     		ldr	r3, [r7, #4]
 976 0040 0322     		movs	r2, #3
 977 0042 83F89820 		strb	r2, [r3, #152]
 688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 978              		.loc 1 689 14
 979 0046 0123     		movs	r3, #1
 980 0048 07E0     		b	.L42
 981              	.L41:
 679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 982              		.loc 1 679 17
 983 004a 7B68     		ldr	r3, [r7, #4]
 984 004c 1B68     		ldr	r3, [r3]
 679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 985              		.loc 1 679 27
 986 004e 9B69     		ldr	r3, [r3, #24]
 679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 987              		.loc 1 679 34
 988 0050 03F00803 		and	r3, r3, #8
 679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 989              		.loc 1 679 9
 990 0054 002B     		cmp	r3, #0
 991 0056 E3D0     		beq	.L43
 690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
 691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Return function status */
 694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return HAL_OK;
 992              		.loc 1 694 10
 993 0058 0023     		movs	r3, #0
 994              	.L42:
 695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 995              		.loc 1 695 1
 996 005a 1846     		mov	r0, r3
 997 005c 1037     		adds	r7, r7, #16
 998              	.LCFI25:
 999              		.cfi_def_cfa_offset 8
 1000 005e BD46     		mov	sp, r7
 1001              	.LCFI26:
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 31


 1002              		.cfi_def_cfa_register 13
 1003              		@ sp needed
 1004 0060 80BD     		pop	{r7, pc}
 1005              		.cfi_endproc
 1006              	.LFE337:
 1008              		.section	.text.HAL_FDCAN_ExitPowerDownMode,"ax",%progbits
 1009              		.align	1
 1010              		.global	HAL_FDCAN_ExitPowerDownMode
 1011              		.syntax unified
 1012              		.thumb
 1013              		.thumb_func
 1015              	HAL_FDCAN_ExitPowerDownMode:
 1016              	.LFB338:
 696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
 698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Exit power down mode.
 699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
 700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
 701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
 702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
 703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_ExitPowerDownMode(FDCAN_HandleTypeDef *hfdcan)
 704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 1017              		.loc 1 704 1
 1018              		.cfi_startproc
 1019              		@ args = 0, pretend = 0, frame = 16
 1020              		@ frame_needed = 1, uses_anonymous_args = 0
 1021 0000 80B5     		push	{r7, lr}
 1022              	.LCFI27:
 1023              		.cfi_def_cfa_offset 8
 1024              		.cfi_offset 7, -8
 1025              		.cfi_offset 14, -4
 1026 0002 84B0     		sub	sp, sp, #16
 1027              	.LCFI28:
 1028              		.cfi_def_cfa_offset 24
 1029 0004 00AF     		add	r7, sp, #0
 1030              	.LCFI29:
 1031              		.cfi_def_cfa_register 7
 1032 0006 7860     		str	r0, [r7, #4]
 705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t tickstart;
 706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Reset clock stop request */
 708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   CLEAR_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_CSR);
 1033              		.loc 1 708 3
 1034 0008 7B68     		ldr	r3, [r7, #4]
 1035 000a 1B68     		ldr	r3, [r3]
 1036 000c 9A69     		ldr	r2, [r3, #24]
 1037 000e 7B68     		ldr	r3, [r7, #4]
 1038 0010 1B68     		ldr	r3, [r3]
 1039 0012 22F01002 		bic	r2, r2, #16
 1040 0016 9A61     		str	r2, [r3, #24]
 709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Get tick */
 711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   tickstart = HAL_GetTick();
 1041              		.loc 1 711 15
 1042 0018 FFF7FEFF 		bl	HAL_GetTick
 1043 001c F860     		str	r0, [r7, #12]
 712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 32


 713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Wait until FDCAN exits sleep mode */
 714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   while ((hfdcan->Instance->CCCR & FDCAN_CCCR_CSA) == FDCAN_CCCR_CSA)
 1044              		.loc 1 714 9
 1045 001e 14E0     		b	.L45
 1046              	.L47:
 715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((HAL_GetTick() - tickstart) > FDCAN_TIMEOUT_VALUE)
 1047              		.loc 1 716 10
 1048 0020 FFF7FEFF 		bl	HAL_GetTick
 1049 0024 0246     		mov	r2, r0
 1050              		.loc 1 716 24
 1051 0026 FB68     		ldr	r3, [r7, #12]
 1052 0028 D31A     		subs	r3, r2, r3
 1053              		.loc 1 716 8
 1054 002a 0A2B     		cmp	r3, #10
 1055 002c 0DD9     		bls	.L45
 717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code */
 719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
 1056              		.loc 1 719 25
 1057 002e 7B68     		ldr	r3, [r7, #4]
 1058 0030 D3F89C30 		ldr	r3, [r3, #156]
 1059 0034 43F00102 		orr	r2, r3, #1
 1060 0038 7B68     		ldr	r3, [r7, #4]
 1061 003a C3F89C20 		str	r2, [r3, #156]
 720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Change FDCAN state */
 722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->State = HAL_FDCAN_STATE_ERROR;
 1062              		.loc 1 722 21
 1063 003e 7B68     		ldr	r3, [r7, #4]
 1064 0040 0322     		movs	r2, #3
 1065 0042 83F89820 		strb	r2, [r3, #152]
 723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 1066              		.loc 1 724 14
 1067 0046 0123     		movs	r3, #1
 1068 0048 0FE0     		b	.L46
 1069              	.L45:
 714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 1070              		.loc 1 714 17
 1071 004a 7B68     		ldr	r3, [r7, #4]
 1072 004c 1B68     		ldr	r3, [r3]
 714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 1073              		.loc 1 714 27
 1074 004e 9B69     		ldr	r3, [r3, #24]
 714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 1075              		.loc 1 714 34
 1076 0050 03F00803 		and	r3, r3, #8
 714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 1077              		.loc 1 714 9
 1078 0054 082B     		cmp	r3, #8
 1079 0056 E3D0     		beq	.L47
 725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
 726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Enter normal operation */
 729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   CLEAR_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_INIT);
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 33


 1080              		.loc 1 729 3
 1081 0058 7B68     		ldr	r3, [r7, #4]
 1082 005a 1B68     		ldr	r3, [r3]
 1083 005c 9A69     		ldr	r2, [r3, #24]
 1084 005e 7B68     		ldr	r3, [r7, #4]
 1085 0060 1B68     		ldr	r3, [r3]
 1086 0062 22F00102 		bic	r2, r2, #1
 1087 0066 9A61     		str	r2, [r3, #24]
 730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Return function status */
 732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return HAL_OK;
 1088              		.loc 1 732 10
 1089 0068 0023     		movs	r3, #0
 1090              	.L46:
 733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 1091              		.loc 1 733 1
 1092 006a 1846     		mov	r0, r3
 1093 006c 1037     		adds	r7, r7, #16
 1094              	.LCFI30:
 1095              		.cfi_def_cfa_offset 8
 1096 006e BD46     		mov	sp, r7
 1097              	.LCFI31:
 1098              		.cfi_def_cfa_register 13
 1099              		@ sp needed
 1100 0070 80BD     		pop	{r7, pc}
 1101              		.cfi_endproc
 1102              	.LFE338:
 1104              		.section	.text.HAL_FDCAN_RegisterCallback,"ax",%progbits
 1105              		.align	1
 1106              		.global	HAL_FDCAN_RegisterCallback
 1107              		.syntax unified
 1108              		.thumb
 1109              		.thumb_func
 1111              	HAL_FDCAN_RegisterCallback:
 1112              	.LFB339:
 734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #if USE_HAL_FDCAN_REGISTER_CALLBACKS == 1
 736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
 737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Register a FDCAN CallBack.
 738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         To be used instead of the weak predefined callback
 739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to a FDCAN_HandleTypeDef structure that contains
 740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for FDCAN module
 741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  CallbackID ID of the callback to be registered
 742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be one of the following values:
 743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           @arg @ref HAL_FDCAN_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty callback ID
 744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           @arg @ref HAL_FDCAN_RX_BUFFER_NEW_MSG_CB_ID Rx buffer new message callback ID
 745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           @arg @ref HAL_FDCAN_HIGH_PRIO_MESSAGE_CB_ID High priority message callback ID
 746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           @arg @ref HAL_FDCAN_TIMESTAMP_WRAPAROUND_CB_ID Timestamp wraparound callback ID
 747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           @arg @ref HAL_FDCAN_TIMEOUT_OCCURRED_CB_ID Timeout occurred callback ID
 748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           @arg @ref HAL_FDCAN_ERROR_CALLBACK_CB_ID Error callback ID
 749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           @arg @ref HAL_FDCAN_MSPINIT_CB_ID MspInit callback ID
 750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           @arg @ref HAL_FDCAN_MSPDEINIT_CB_ID MspDeInit callback ID
 751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  pCallback pointer to the Callback function
 752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
 753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
 754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_RegisterCallback(FDCAN_HandleTypeDef *hfdcan, HAL_FDCAN_CallbackIDTypeD
 755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 34


 1113              		.loc 1 755 1
 1114              		.cfi_startproc
 1115              		@ args = 0, pretend = 0, frame = 24
 1116              		@ frame_needed = 1, uses_anonymous_args = 0
 1117              		@ link register save eliminated.
 1118 0000 80B4     		push	{r7}
 1119              	.LCFI32:
 1120              		.cfi_def_cfa_offset 4
 1121              		.cfi_offset 7, -4
 1122 0002 87B0     		sub	sp, sp, #28
 1123              	.LCFI33:
 1124              		.cfi_def_cfa_offset 32
 1125 0004 00AF     		add	r7, sp, #0
 1126              	.LCFI34:
 1127              		.cfi_def_cfa_register 7
 1128 0006 F860     		str	r0, [r7, #12]
 1129 0008 0B46     		mov	r3, r1
 1130 000a 7A60     		str	r2, [r7, #4]
 1131 000c FB72     		strb	r3, [r7, #11]
 756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status = HAL_OK;
 1132              		.loc 1 756 21
 1133 000e 0023     		movs	r3, #0
 1134 0010 FB75     		strb	r3, [r7, #23]
 757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (pCallback == NULL)
 1135              		.loc 1 758 6
 1136 0012 7B68     		ldr	r3, [r7, #4]
 1137 0014 002B     		cmp	r3, #0
 1138 0016 09D1     		bne	.L49
 759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
 761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
 1139              		.loc 1 761 23
 1140 0018 FB68     		ldr	r3, [r7, #12]
 1141 001a D3F89C30 		ldr	r3, [r3, #156]
 1142 001e 43F48072 		orr	r2, r3, #256
 1143 0022 FB68     		ldr	r3, [r7, #12]
 1144 0024 C3F89C20 		str	r2, [r3, #156]
 762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 1145              		.loc 1 763 12
 1146 0028 0123     		movs	r3, #1
 1147 002a 7AE0     		b	.L50
 1148              	.L49:
 764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 1149              		.loc 1 766 13
 1150 002c FB68     		ldr	r3, [r7, #12]
 1151 002e 93F89830 		ldrb	r3, [r3, #152]
 1152 0032 DBB2     		uxtb	r3, r3
 1153              		.loc 1 766 6
 1154 0034 012B     		cmp	r3, #1
 1155 0036 48D1     		bne	.L51
 767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     switch (CallbackID)
 1156              		.loc 1 768 5
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 35


 1157 0038 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1158 003a 072B     		cmp	r3, #7
 1159 003c 3AD8     		bhi	.L52
 1160 003e 01A2     		adr	r2, .L54
 1161 0040 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1162              		.p2align 2
 1163              	.L54:
 1164 0044 65000000 		.word	.L61+1
 1165 0048 6F000000 		.word	.L60+1
 1166 004c 79000000 		.word	.L59+1
 1167 0050 83000000 		.word	.L58+1
 1168 0054 8D000000 		.word	.L57+1
 1169 0058 97000000 		.word	.L56+1
 1170 005c A1000000 		.word	.L55+1
 1171 0060 AB000000 		.word	.L53+1
 1172              		.p2align 1
 1173              	.L61:
 769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       case HAL_FDCAN_TX_FIFO_EMPTY_CB_ID :
 771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->TxFifoEmptyCallback = pCallback;
 1174              		.loc 1 771 37
 1175 0064 FB68     		ldr	r3, [r7, #12]
 1176 0066 7A68     		ldr	r2, [r7, #4]
 1177 0068 C3F8B020 		str	r2, [r3, #176]
 772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         break;
 1178              		.loc 1 772 9
 1179 006c 58E0     		b	.L63
 1180              	.L60:
 773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       case HAL_FDCAN_RX_BUFFER_NEW_MSG_CB_ID :
 775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->RxBufferNewMessageCallback = pCallback;
 1181              		.loc 1 775 44
 1182 006e FB68     		ldr	r3, [r7, #12]
 1183 0070 7A68     		ldr	r2, [r7, #4]
 1184 0072 C3F8BC20 		str	r2, [r3, #188]
 776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         break;
 1185              		.loc 1 776 9
 1186 0076 53E0     		b	.L63
 1187              	.L59:
 777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       case HAL_FDCAN_HIGH_PRIO_MESSAGE_CB_ID :
 779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->HighPriorityMessageCallback = pCallback;
 1188              		.loc 1 779 45
 1189 0078 FB68     		ldr	r3, [r7, #12]
 1190 007a 7A68     		ldr	r2, [r7, #4]
 1191 007c C3F8C020 		str	r2, [r3, #192]
 780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         break;
 1192              		.loc 1 780 9
 1193 0080 4EE0     		b	.L63
 1194              	.L58:
 781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       case HAL_FDCAN_TIMESTAMP_WRAPAROUND_CB_ID :
 783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->TimestampWraparoundCallback = pCallback;
 1195              		.loc 1 783 45
 1196 0082 FB68     		ldr	r3, [r7, #12]
 1197 0084 7A68     		ldr	r2, [r7, #4]
 1198 0086 C3F8C420 		str	r2, [r3, #196]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 36


 784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         break;
 1199              		.loc 1 784 9
 1200 008a 49E0     		b	.L63
 1201              	.L57:
 785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       case HAL_FDCAN_TIMEOUT_OCCURRED_CB_ID :
 787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->TimeoutOccurredCallback = pCallback;
 1202              		.loc 1 787 41
 1203 008c FB68     		ldr	r3, [r7, #12]
 1204 008e 7A68     		ldr	r2, [r7, #4]
 1205 0090 C3F8C820 		str	r2, [r3, #200]
 788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         break;
 1206              		.loc 1 788 9
 1207 0094 44E0     		b	.L63
 1208              	.L56:
 789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       case HAL_FDCAN_ERROR_CALLBACK_CB_ID :
 791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->ErrorCallback = pCallback;
 1209              		.loc 1 791 31
 1210 0096 FB68     		ldr	r3, [r7, #12]
 1211 0098 7A68     		ldr	r2, [r7, #4]
 1212 009a C3F8CC20 		str	r2, [r3, #204]
 792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         break;
 1213              		.loc 1 792 9
 1214 009e 3FE0     		b	.L63
 1215              	.L55:
 793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       case HAL_FDCAN_MSPINIT_CB_ID :
 795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->MspInitCallback = pCallback;
 1216              		.loc 1 795 33
 1217 00a0 FB68     		ldr	r3, [r7, #12]
 1218 00a2 7A68     		ldr	r2, [r7, #4]
 1219 00a4 C3F8E420 		str	r2, [r3, #228]
 796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         break;
 1220              		.loc 1 796 9
 1221 00a8 3AE0     		b	.L63
 1222              	.L53:
 797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       case HAL_FDCAN_MSPDEINIT_CB_ID :
 799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->MspDeInitCallback = pCallback;
 1223              		.loc 1 799 35
 1224 00aa FB68     		ldr	r3, [r7, #12]
 1225 00ac 7A68     		ldr	r2, [r7, #4]
 1226 00ae C3F8E820 		str	r2, [r3, #232]
 800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         break;
 1227              		.loc 1 800 9
 1228 00b2 35E0     		b	.L63
 1229              	.L52:
 801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       default :
 803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Update the error code */
 804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
 1230              		.loc 1 804 27
 1231 00b4 FB68     		ldr	r3, [r7, #12]
 1232 00b6 D3F89C30 		ldr	r3, [r3, #156]
 1233 00ba 43F48072 		orr	r2, r3, #256
 1234 00be FB68     		ldr	r3, [r7, #12]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 37


 1235 00c0 C3F89C20 		str	r2, [r3, #156]
 805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Return error status */
 807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         status =  HAL_ERROR;
 1236              		.loc 1 807 16
 1237 00c4 0123     		movs	r3, #1
 1238 00c6 FB75     		strb	r3, [r7, #23]
 808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         break;
 1239              		.loc 1 808 9
 1240 00c8 2AE0     		b	.L63
 1241              	.L51:
 809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
 810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else if (hfdcan->State == HAL_FDCAN_STATE_RESET)
 1242              		.loc 1 811 18
 1243 00ca FB68     		ldr	r3, [r7, #12]
 1244 00cc 93F89830 		ldrb	r3, [r3, #152]
 1245 00d0 DBB2     		uxtb	r3, r3
 1246              		.loc 1 811 11
 1247 00d2 002B     		cmp	r3, #0
 1248 00d4 1AD1     		bne	.L64
 812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     switch (CallbackID)
 1249              		.loc 1 813 5
 1250 00d6 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1251 00d8 062B     		cmp	r3, #6
 1252 00da 02D0     		beq	.L65
 1253 00dc 072B     		cmp	r3, #7
 1254 00de 05D0     		beq	.L66
 1255 00e0 09E0     		b	.L69
 1256              	.L65:
 814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       case HAL_FDCAN_MSPINIT_CB_ID :
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->MspInitCallback = pCallback;
 1257              		.loc 1 816 33
 1258 00e2 FB68     		ldr	r3, [r7, #12]
 1259 00e4 7A68     		ldr	r2, [r7, #4]
 1260 00e6 C3F8E420 		str	r2, [r3, #228]
 817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         break;
 1261              		.loc 1 817 9
 1262 00ea 19E0     		b	.L63
 1263              	.L66:
 818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       case HAL_FDCAN_MSPDEINIT_CB_ID :
 820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->MspDeInitCallback = pCallback;
 1264              		.loc 1 820 35
 1265 00ec FB68     		ldr	r3, [r7, #12]
 1266 00ee 7A68     		ldr	r2, [r7, #4]
 1267 00f0 C3F8E820 		str	r2, [r3, #232]
 821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         break;
 1268              		.loc 1 821 9
 1269 00f4 14E0     		b	.L63
 1270              	.L69:
 822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       default :
 824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Update the error code */
 825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 38


 1271              		.loc 1 825 27
 1272 00f6 FB68     		ldr	r3, [r7, #12]
 1273 00f8 D3F89C30 		ldr	r3, [r3, #156]
 1274 00fc 43F48072 		orr	r2, r3, #256
 1275 0100 FB68     		ldr	r3, [r7, #12]
 1276 0102 C3F89C20 		str	r2, [r3, #156]
 826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Return error status */
 828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         status =  HAL_ERROR;
 1277              		.loc 1 828 16
 1278 0106 0123     		movs	r3, #1
 1279 0108 FB75     		strb	r3, [r7, #23]
 829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         break;
 1280              		.loc 1 829 9
 1281 010a 09E0     		b	.L63
 1282              	.L64:
 830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
 831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
 833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
 835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
 1283              		.loc 1 835 23
 1284 010c FB68     		ldr	r3, [r7, #12]
 1285 010e D3F89C30 		ldr	r3, [r3, #156]
 1286 0112 43F48072 		orr	r2, r3, #256
 1287 0116 FB68     		ldr	r3, [r7, #12]
 1288 0118 C3F89C20 		str	r2, [r3, #156]
 836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return error status */
 838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     status =  HAL_ERROR;
 1289              		.loc 1 838 12
 1290 011c 0123     		movs	r3, #1
 1291 011e FB75     		strb	r3, [r7, #23]
 1292              	.L63:
 839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
 1293              		.loc 1 841 10
 1294 0120 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1295              	.L50:
 842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 1296              		.loc 1 842 1
 1297 0122 1846     		mov	r0, r3
 1298 0124 1C37     		adds	r7, r7, #28
 1299              	.LCFI35:
 1300              		.cfi_def_cfa_offset 4
 1301 0126 BD46     		mov	sp, r7
 1302              	.LCFI36:
 1303              		.cfi_def_cfa_register 13
 1304              		@ sp needed
 1305 0128 5DF8047B 		ldr	r7, [sp], #4
 1306              	.LCFI37:
 1307              		.cfi_restore 7
 1308              		.cfi_def_cfa_offset 0
 1309 012c 7047     		bx	lr
 1310              		.cfi_endproc
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 39


 1311              	.LFE339:
 1313 012e 00BF     		.section	.text.HAL_FDCAN_UnRegisterCallback,"ax",%progbits
 1314              		.align	1
 1315              		.global	HAL_FDCAN_UnRegisterCallback
 1316              		.syntax unified
 1317              		.thumb
 1318              		.thumb_func
 1320              	HAL_FDCAN_UnRegisterCallback:
 1321              	.LFB340:
 843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
 845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Unregister a FDCAN CallBack.
 846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         FDCAN callback is redirected to the weak predefined callback
 847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to a FDCAN_HandleTypeDef structure that contains
 848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for FDCAN module
 849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  CallbackID ID of the callback to be unregistered
 850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be one of the following values:
 851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           @arg @ref HAL_FDCAN_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty callback ID
 852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           @arg @ref HAL_FDCAN_RX_BUFFER_NEW_MSG_CB_ID Rx buffer new message callback ID
 853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           @arg @ref HAL_FDCAN_HIGH_PRIO_MESSAGE_CB_ID High priority message callback ID
 854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           @arg @ref HAL_FDCAN_TIMESTAMP_WRAPAROUND_CB_ID Timestamp wraparound callback ID
 855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           @arg @ref HAL_FDCAN_TIMEOUT_OCCURRED_CB_ID Timeout occurred callback ID
 856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           @arg @ref HAL_FDCAN_ERROR_CALLBACK_CB_ID Error callback ID
 857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           @arg @ref HAL_FDCAN_MSPINIT_CB_ID MspInit callback ID
 858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           @arg @ref HAL_FDCAN_MSPDEINIT_CB_ID MspDeInit callback ID
 859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
 860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
 861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_UnRegisterCallback(FDCAN_HandleTypeDef *hfdcan, HAL_FDCAN_CallbackIDTyp
 862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 1322              		.loc 1 862 1
 1323              		.cfi_startproc
 1324              		@ args = 0, pretend = 0, frame = 16
 1325              		@ frame_needed = 1, uses_anonymous_args = 0
 1326              		@ link register save eliminated.
 1327 0000 80B4     		push	{r7}
 1328              	.LCFI38:
 1329              		.cfi_def_cfa_offset 4
 1330              		.cfi_offset 7, -4
 1331 0002 85B0     		sub	sp, sp, #20
 1332              	.LCFI39:
 1333              		.cfi_def_cfa_offset 24
 1334 0004 00AF     		add	r7, sp, #0
 1335              	.LCFI40:
 1336              		.cfi_def_cfa_register 7
 1337 0006 7860     		str	r0, [r7, #4]
 1338 0008 0B46     		mov	r3, r1
 1339 000a FB70     		strb	r3, [r7, #3]
 863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status = HAL_OK;
 1340              		.loc 1 863 21
 1341 000c 0023     		movs	r3, #0
 1342 000e FB73     		strb	r3, [r7, #15]
 864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 1343              		.loc 1 865 13
 1344 0010 7B68     		ldr	r3, [r7, #4]
 1345 0012 93F89830 		ldrb	r3, [r3, #152]
 1346 0016 DBB2     		uxtb	r3, r3
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 40


 1347              		.loc 1 865 6
 1348 0018 012B     		cmp	r3, #1
 1349 001a 48D1     		bne	.L71
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     switch (CallbackID)
 1350              		.loc 1 867 5
 1351 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1352 001e 072B     		cmp	r3, #7
 1353 0020 3AD8     		bhi	.L72
 1354 0022 01A2     		adr	r2, .L74
 1355 0024 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1356              		.p2align 2
 1357              	.L74:
 1358 0028 49000000 		.word	.L81+1
 1359 002c 53000000 		.word	.L80+1
 1360 0030 5D000000 		.word	.L79+1
 1361 0034 67000000 		.word	.L78+1
 1362 0038 71000000 		.word	.L77+1
 1363 003c 7B000000 		.word	.L76+1
 1364 0040 85000000 		.word	.L75+1
 1365 0044 8F000000 		.word	.L73+1
 1366              		.p2align 1
 1367              	.L81:
 868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       case HAL_FDCAN_TX_FIFO_EMPTY_CB_ID :
 870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->TxFifoEmptyCallback = HAL_FDCAN_TxFifoEmptyCallback;
 1368              		.loc 1 870 37
 1369 0048 7B68     		ldr	r3, [r7, #4]
 1370 004a 324A     		ldr	r2, .L91
 1371 004c C3F8B020 		str	r2, [r3, #176]
 871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         break;
 1372              		.loc 1 871 9
 1373 0050 58E0     		b	.L83
 1374              	.L80:
 872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       case HAL_FDCAN_RX_BUFFER_NEW_MSG_CB_ID :
 874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->RxBufferNewMessageCallback = HAL_FDCAN_RxBufferNewMessageCallback;
 1375              		.loc 1 874 44
 1376 0052 7B68     		ldr	r3, [r7, #4]
 1377 0054 304A     		ldr	r2, .L91+4
 1378 0056 C3F8BC20 		str	r2, [r3, #188]
 875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         break;
 1379              		.loc 1 875 9
 1380 005a 53E0     		b	.L83
 1381              	.L79:
 876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       case HAL_FDCAN_HIGH_PRIO_MESSAGE_CB_ID :
 878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->HighPriorityMessageCallback = HAL_FDCAN_HighPriorityMessageCallback;
 1382              		.loc 1 878 45
 1383 005c 7B68     		ldr	r3, [r7, #4]
 1384 005e 2F4A     		ldr	r2, .L91+8
 1385 0060 C3F8C020 		str	r2, [r3, #192]
 879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         break;
 1386              		.loc 1 879 9
 1387 0064 4EE0     		b	.L83
 1388              	.L78:
 880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 41


 881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       case HAL_FDCAN_TIMESTAMP_WRAPAROUND_CB_ID :
 882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->TimestampWraparoundCallback = HAL_FDCAN_TimestampWraparoundCallback;
 1389              		.loc 1 882 45
 1390 0066 7B68     		ldr	r3, [r7, #4]
 1391 0068 2D4A     		ldr	r2, .L91+12
 1392 006a C3F8C420 		str	r2, [r3, #196]
 883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         break;
 1393              		.loc 1 883 9
 1394 006e 49E0     		b	.L83
 1395              	.L77:
 884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       case HAL_FDCAN_TIMEOUT_OCCURRED_CB_ID :
 886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->TimeoutOccurredCallback = HAL_FDCAN_TimeoutOccurredCallback;
 1396              		.loc 1 886 41
 1397 0070 7B68     		ldr	r3, [r7, #4]
 1398 0072 2C4A     		ldr	r2, .L91+16
 1399 0074 C3F8C820 		str	r2, [r3, #200]
 887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         break;
 1400              		.loc 1 887 9
 1401 0078 44E0     		b	.L83
 1402              	.L76:
 888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       case HAL_FDCAN_ERROR_CALLBACK_CB_ID :
 890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->ErrorCallback = HAL_FDCAN_ErrorCallback;
 1403              		.loc 1 890 31
 1404 007a 7B68     		ldr	r3, [r7, #4]
 1405 007c 2A4A     		ldr	r2, .L91+20
 1406 007e C3F8CC20 		str	r2, [r3, #204]
 891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         break;
 1407              		.loc 1 891 9
 1408 0082 3FE0     		b	.L83
 1409              	.L75:
 892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       case HAL_FDCAN_MSPINIT_CB_ID :
 894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->MspInitCallback = HAL_FDCAN_MspInit;
 1410              		.loc 1 894 33
 1411 0084 7B68     		ldr	r3, [r7, #4]
 1412 0086 294A     		ldr	r2, .L91+24
 1413 0088 C3F8E420 		str	r2, [r3, #228]
 895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         break;
 1414              		.loc 1 895 9
 1415 008c 3AE0     		b	.L83
 1416              	.L73:
 896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       case HAL_FDCAN_MSPDEINIT_CB_ID :
 898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->MspDeInitCallback = HAL_FDCAN_MspDeInit;
 1417              		.loc 1 898 35
 1418 008e 7B68     		ldr	r3, [r7, #4]
 1419 0090 274A     		ldr	r2, .L91+28
 1420 0092 C3F8E820 		str	r2, [r3, #232]
 899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         break;
 1421              		.loc 1 899 9
 1422 0096 35E0     		b	.L83
 1423              	.L72:
 900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       default :
 902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Update the error code */
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 42


 903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
 1424              		.loc 1 903 27
 1425 0098 7B68     		ldr	r3, [r7, #4]
 1426 009a D3F89C30 		ldr	r3, [r3, #156]
 1427 009e 43F48072 		orr	r2, r3, #256
 1428 00a2 7B68     		ldr	r3, [r7, #4]
 1429 00a4 C3F89C20 		str	r2, [r3, #156]
 904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Return error status */
 906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         status =  HAL_ERROR;
 1430              		.loc 1 906 16
 1431 00a8 0123     		movs	r3, #1
 1432 00aa FB73     		strb	r3, [r7, #15]
 907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         break;
 1433              		.loc 1 907 9
 1434 00ac 2AE0     		b	.L83
 1435              	.L71:
 908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
 909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else if (hfdcan->State == HAL_FDCAN_STATE_RESET)
 1436              		.loc 1 910 18
 1437 00ae 7B68     		ldr	r3, [r7, #4]
 1438 00b0 93F89830 		ldrb	r3, [r3, #152]
 1439 00b4 DBB2     		uxtb	r3, r3
 1440              		.loc 1 910 11
 1441 00b6 002B     		cmp	r3, #0
 1442 00b8 1AD1     		bne	.L84
 911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     switch (CallbackID)
 1443              		.loc 1 912 5
 1444 00ba FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1445 00bc 062B     		cmp	r3, #6
 1446 00be 02D0     		beq	.L85
 1447 00c0 072B     		cmp	r3, #7
 1448 00c2 05D0     		beq	.L86
 1449 00c4 09E0     		b	.L90
 1450              	.L85:
 913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       case HAL_FDCAN_MSPINIT_CB_ID :
 915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->MspInitCallback = HAL_FDCAN_MspInit;
 1451              		.loc 1 915 33
 1452 00c6 7B68     		ldr	r3, [r7, #4]
 1453 00c8 184A     		ldr	r2, .L91+24
 1454 00ca C3F8E420 		str	r2, [r3, #228]
 916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         break;
 1455              		.loc 1 916 9
 1456 00ce 19E0     		b	.L83
 1457              	.L86:
 917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       case HAL_FDCAN_MSPDEINIT_CB_ID :
 919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->MspDeInitCallback = HAL_FDCAN_MspDeInit;
 1458              		.loc 1 919 35
 1459 00d0 7B68     		ldr	r3, [r7, #4]
 1460 00d2 174A     		ldr	r2, .L91+28
 1461 00d4 C3F8E820 		str	r2, [r3, #232]
 920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         break;
 1462              		.loc 1 920 9
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 43


 1463 00d8 14E0     		b	.L83
 1464              	.L90:
 921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       default :
 923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Update the error code */
 924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
 1465              		.loc 1 924 27
 1466 00da 7B68     		ldr	r3, [r7, #4]
 1467 00dc D3F89C30 		ldr	r3, [r3, #156]
 1468 00e0 43F48072 		orr	r2, r3, #256
 1469 00e4 7B68     		ldr	r3, [r7, #4]
 1470 00e6 C3F89C20 		str	r2, [r3, #156]
 925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Return error status */
 927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         status =  HAL_ERROR;
 1471              		.loc 1 927 16
 1472 00ea 0123     		movs	r3, #1
 1473 00ec FB73     		strb	r3, [r7, #15]
 928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         break;
 1474              		.loc 1 928 9
 1475 00ee 09E0     		b	.L83
 1476              	.L84:
 929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
 930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
 932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
 934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
 1477              		.loc 1 934 23
 1478 00f0 7B68     		ldr	r3, [r7, #4]
 1479 00f2 D3F89C30 		ldr	r3, [r3, #156]
 1480 00f6 43F48072 		orr	r2, r3, #256
 1481 00fa 7B68     		ldr	r3, [r7, #4]
 1482 00fc C3F89C20 		str	r2, [r3, #156]
 935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return error status */
 937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     status =  HAL_ERROR;
 1483              		.loc 1 937 12
 1484 0100 0123     		movs	r3, #1
 1485 0102 FB73     		strb	r3, [r7, #15]
 1486              	.L83:
 938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
 1487              		.loc 1 940 10
 1488 0104 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 1489              		.loc 1 941 1
 1490 0106 1846     		mov	r0, r3
 1491 0108 1437     		adds	r7, r7, #20
 1492              	.LCFI41:
 1493              		.cfi_def_cfa_offset 4
 1494 010a BD46     		mov	sp, r7
 1495              	.LCFI42:
 1496              		.cfi_def_cfa_register 13
 1497              		@ sp needed
 1498 010c 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 44


 1499              	.LCFI43:
 1500              		.cfi_restore 7
 1501              		.cfi_def_cfa_offset 0
 1502 0110 7047     		bx	lr
 1503              	.L92:
 1504 0112 00BF     		.align	2
 1505              	.L91:
 1506 0114 00000000 		.word	HAL_FDCAN_TxFifoEmptyCallback
 1507 0118 00000000 		.word	HAL_FDCAN_RxBufferNewMessageCallback
 1508 011c 00000000 		.word	HAL_FDCAN_HighPriorityMessageCallback
 1509 0120 00000000 		.word	HAL_FDCAN_TimestampWraparoundCallback
 1510 0124 00000000 		.word	HAL_FDCAN_TimeoutOccurredCallback
 1511 0128 00000000 		.word	HAL_FDCAN_ErrorCallback
 1512 012c 00000000 		.word	HAL_FDCAN_MspInit
 1513 0130 00000000 		.word	HAL_FDCAN_MspDeInit
 1514              		.cfi_endproc
 1515              	.LFE340:
 1517              		.section	.text.HAL_FDCAN_RegisterClockCalibrationCallback,"ax",%progbits
 1518              		.align	1
 1519              		.global	HAL_FDCAN_RegisterClockCalibrationCallback
 1520              		.syntax unified
 1521              		.thumb
 1522              		.thumb_func
 1524              	HAL_FDCAN_RegisterClockCalibrationCallback:
 1525              	.LFB341:
 942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
 944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Register Clock Calibration FDCAN Callback
 945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         To be used instead of the weak HAL_FDCAN_ClockCalibrationCallback() predefined callback
 946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan FDCAN handle
 947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  pCallback pointer to the Clock Calibration Callback function
 948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
 949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
 950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_RegisterClockCalibrationCallback(FDCAN_HandleTypeDef *hfdcan, pFDCAN_Cl
 951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 1526              		.loc 1 951 1
 1527              		.cfi_startproc
 1528              		@ args = 0, pretend = 0, frame = 16
 1529              		@ frame_needed = 1, uses_anonymous_args = 0
 1530              		@ link register save eliminated.
 1531 0000 80B4     		push	{r7}
 1532              	.LCFI44:
 1533              		.cfi_def_cfa_offset 4
 1534              		.cfi_offset 7, -4
 1535 0002 85B0     		sub	sp, sp, #20
 1536              	.LCFI45:
 1537              		.cfi_def_cfa_offset 24
 1538 0004 00AF     		add	r7, sp, #0
 1539              	.LCFI46:
 1540              		.cfi_def_cfa_register 7
 1541 0006 7860     		str	r0, [r7, #4]
 1542 0008 3960     		str	r1, [r7]
 952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status = HAL_OK;
 1543              		.loc 1 952 21
 1544 000a 0023     		movs	r3, #0
 1545 000c FB73     		strb	r3, [r7, #15]
 953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 45


 954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (pCallback == NULL)
 1546              		.loc 1 954 6
 1547 000e 3B68     		ldr	r3, [r7]
 1548 0010 002B     		cmp	r3, #0
 1549 0012 09D1     		bne	.L94
 955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
 957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
 1550              		.loc 1 957 23
 1551 0014 7B68     		ldr	r3, [r7, #4]
 1552 0016 D3F89C30 		ldr	r3, [r3, #156]
 1553 001a 43F48072 		orr	r2, r3, #256
 1554 001e 7B68     		ldr	r3, [r7, #4]
 1555 0020 C3F89C20 		str	r2, [r3, #156]
 958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 1556              		.loc 1 958 12
 1557 0024 0123     		movs	r3, #1
 1558 0026 15E0     		b	.L95
 1559              	.L94:
 959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 1560              		.loc 1 961 13
 1561 0028 7B68     		ldr	r3, [r7, #4]
 1562 002a 93F89830 		ldrb	r3, [r3, #152]
 1563 002e DBB2     		uxtb	r3, r3
 1564              		.loc 1 961 6
 1565 0030 012B     		cmp	r3, #1
 1566 0032 04D1     		bne	.L96
 962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ClockCalibrationCallback = pCallback;
 1567              		.loc 1 963 38
 1568 0034 7B68     		ldr	r3, [r7, #4]
 1569 0036 3A68     		ldr	r2, [r7]
 1570 0038 C3F8A020 		str	r2, [r3, #160]
 1571 003c 09E0     		b	.L97
 1572              	.L96:
 964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
 966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
 968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
 1573              		.loc 1 968 23
 1574 003e 7B68     		ldr	r3, [r7, #4]
 1575 0040 D3F89C30 		ldr	r3, [r3, #156]
 1576 0044 43F48072 		orr	r2, r3, #256
 1577 0048 7B68     		ldr	r3, [r7, #4]
 1578 004a C3F89C20 		str	r2, [r3, #156]
 969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return error status */
 971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     status =  HAL_ERROR;
 1579              		.loc 1 971 12
 1580 004e 0123     		movs	r3, #1
 1581 0050 FB73     		strb	r3, [r7, #15]
 1582              	.L97:
 972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 46


 974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
 1583              		.loc 1 974 10
 1584 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1585              	.L95:
 975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 1586              		.loc 1 975 1
 1587 0054 1846     		mov	r0, r3
 1588 0056 1437     		adds	r7, r7, #20
 1589              	.LCFI47:
 1590              		.cfi_def_cfa_offset 4
 1591 0058 BD46     		mov	sp, r7
 1592              	.LCFI48:
 1593              		.cfi_def_cfa_register 13
 1594              		@ sp needed
 1595 005a 5DF8047B 		ldr	r7, [sp], #4
 1596              	.LCFI49:
 1597              		.cfi_restore 7
 1598              		.cfi_def_cfa_offset 0
 1599 005e 7047     		bx	lr
 1600              		.cfi_endproc
 1601              	.LFE341:
 1603              		.section	.text.HAL_FDCAN_UnRegisterClockCalibrationCallback,"ax",%progbits
 1604              		.align	1
 1605              		.global	HAL_FDCAN_UnRegisterClockCalibrationCallback
 1606              		.syntax unified
 1607              		.thumb
 1608              		.thumb_func
 1610              	HAL_FDCAN_UnRegisterClockCalibrationCallback:
 1611              	.LFB342:
 976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
 978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  UnRegister the Clock Calibration FDCAN Callback
 979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         Clock Calibration FDCAN Callback is redirected to the weak HAL_FDCAN_ClockCalibrationCa
 980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan FDCAN handle
 981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
 982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
 983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_UnRegisterClockCalibrationCallback(FDCAN_HandleTypeDef *hfdcan)
 984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 1612              		.loc 1 984 1
 1613              		.cfi_startproc
 1614              		@ args = 0, pretend = 0, frame = 16
 1615              		@ frame_needed = 1, uses_anonymous_args = 0
 1616              		@ link register save eliminated.
 1617 0000 80B4     		push	{r7}
 1618              	.LCFI50:
 1619              		.cfi_def_cfa_offset 4
 1620              		.cfi_offset 7, -4
 1621 0002 85B0     		sub	sp, sp, #20
 1622              	.LCFI51:
 1623              		.cfi_def_cfa_offset 24
 1624 0004 00AF     		add	r7, sp, #0
 1625              	.LCFI52:
 1626              		.cfi_def_cfa_register 7
 1627 0006 7860     		str	r0, [r7, #4]
 985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status = HAL_OK;
 1628              		.loc 1 985 21
 1629 0008 0023     		movs	r3, #0
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 47


 1630 000a FB73     		strb	r3, [r7, #15]
 986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 1631              		.loc 1 987 13
 1632 000c 7B68     		ldr	r3, [r7, #4]
 1633 000e 93F89830 		ldrb	r3, [r3, #152]
 1634 0012 DBB2     		uxtb	r3, r3
 1635              		.loc 1 987 6
 1636 0014 012B     		cmp	r3, #1
 1637 0016 04D1     		bne	.L99
 988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ClockCalibrationCallback = HAL_FDCAN_ClockCalibrationCallback; /* Legacy weak ClockCali
 1638              		.loc 1 989 38
 1639 0018 7B68     		ldr	r3, [r7, #4]
 1640 001a 0A4A     		ldr	r2, .L102
 1641 001c C3F8A020 		str	r2, [r3, #160]
 1642 0020 09E0     		b	.L100
 1643              	.L99:
 990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
 992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
 994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
 1644              		.loc 1 994 23
 1645 0022 7B68     		ldr	r3, [r7, #4]
 1646 0024 D3F89C30 		ldr	r3, [r3, #156]
 1647 0028 43F48072 		orr	r2, r3, #256
 1648 002c 7B68     		ldr	r3, [r7, #4]
 1649 002e C3F89C20 		str	r2, [r3, #156]
 995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return error status */
 997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     status =  HAL_ERROR;
 1650              		.loc 1 997 12
 1651 0032 0123     		movs	r3, #1
 1652 0034 FB73     		strb	r3, [r7, #15]
 1653              	.L100:
 998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
 1654              		.loc 1 1000 10
 1655 0036 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 1656              		.loc 1 1001 1
 1657 0038 1846     		mov	r0, r3
 1658 003a 1437     		adds	r7, r7, #20
 1659              	.LCFI53:
 1660              		.cfi_def_cfa_offset 4
 1661 003c BD46     		mov	sp, r7
 1662              	.LCFI54:
 1663              		.cfi_def_cfa_register 13
 1664              		@ sp needed
 1665 003e 5DF8047B 		ldr	r7, [sp], #4
 1666              	.LCFI55:
 1667              		.cfi_restore 7
 1668              		.cfi_def_cfa_offset 0
 1669 0042 7047     		bx	lr
 1670              	.L103:
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 48


 1671              		.align	2
 1672              	.L102:
 1673 0044 00000000 		.word	HAL_FDCAN_ClockCalibrationCallback
 1674              		.cfi_endproc
 1675              	.LFE342:
 1677              		.section	.text.HAL_FDCAN_RegisterTxEventFifoCallback,"ax",%progbits
 1678              		.align	1
 1679              		.global	HAL_FDCAN_RegisterTxEventFifoCallback
 1680              		.syntax unified
 1681              		.thumb
 1682              		.thumb_func
 1684              	HAL_FDCAN_RegisterTxEventFifoCallback:
 1685              	.LFB343:
1002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Register Tx Event Fifo FDCAN Callback
1005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         To be used instead of the weak HAL_FDCAN_TxEventFifoCallback() predefined callback
1006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan FDCAN handle
1007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  pCallback pointer to the Tx Event Fifo Callback function
1008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_RegisterTxEventFifoCallback(FDCAN_HandleTypeDef *hfdcan, pFDCAN_TxEvent
1011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 1686              		.loc 1 1011 1
 1687              		.cfi_startproc
 1688              		@ args = 0, pretend = 0, frame = 16
 1689              		@ frame_needed = 1, uses_anonymous_args = 0
 1690              		@ link register save eliminated.
 1691 0000 80B4     		push	{r7}
 1692              	.LCFI56:
 1693              		.cfi_def_cfa_offset 4
 1694              		.cfi_offset 7, -4
 1695 0002 85B0     		sub	sp, sp, #20
 1696              	.LCFI57:
 1697              		.cfi_def_cfa_offset 24
 1698 0004 00AF     		add	r7, sp, #0
 1699              	.LCFI58:
 1700              		.cfi_def_cfa_register 7
 1701 0006 7860     		str	r0, [r7, #4]
 1702 0008 3960     		str	r1, [r7]
1012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status = HAL_OK;
 1703              		.loc 1 1012 21
 1704 000a 0023     		movs	r3, #0
 1705 000c FB73     		strb	r3, [r7, #15]
1013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (pCallback == NULL)
 1706              		.loc 1 1014 6
 1707 000e 3B68     		ldr	r3, [r7]
 1708 0010 002B     		cmp	r3, #0
 1709 0012 09D1     		bne	.L105
1015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
 1710              		.loc 1 1017 23
 1711 0014 7B68     		ldr	r3, [r7, #4]
 1712 0016 D3F89C30 		ldr	r3, [r3, #156]
 1713 001a 43F48072 		orr	r2, r3, #256
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 49


 1714 001e 7B68     		ldr	r3, [r7, #4]
 1715 0020 C3F89C20 		str	r2, [r3, #156]
1018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 1716              		.loc 1 1018 12
 1717 0024 0123     		movs	r3, #1
 1718 0026 15E0     		b	.L106
 1719              	.L105:
1019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 1720              		.loc 1 1021 13
 1721 0028 7B68     		ldr	r3, [r7, #4]
 1722 002a 93F89830 		ldrb	r3, [r3, #152]
 1723 002e DBB2     		uxtb	r3, r3
 1724              		.loc 1 1021 6
 1725 0030 012B     		cmp	r3, #1
 1726 0032 04D1     		bne	.L107
1022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TxEventFifoCallback = pCallback;
 1727              		.loc 1 1023 33
 1728 0034 7B68     		ldr	r3, [r7, #4]
 1729 0036 3A68     		ldr	r2, [r7]
 1730 0038 C3F8A420 		str	r2, [r3, #164]
 1731 003c 09E0     		b	.L108
 1732              	.L107:
1024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
 1733              		.loc 1 1028 23
 1734 003e 7B68     		ldr	r3, [r7, #4]
 1735 0040 D3F89C30 		ldr	r3, [r3, #156]
 1736 0044 43F48072 		orr	r2, r3, #256
 1737 0048 7B68     		ldr	r3, [r7, #4]
 1738 004a C3F89C20 		str	r2, [r3, #156]
1029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return error status */
1031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     status =  HAL_ERROR;
 1739              		.loc 1 1031 12
 1740 004e 0123     		movs	r3, #1
 1741 0050 FB73     		strb	r3, [r7, #15]
 1742              	.L108:
1032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
 1743              		.loc 1 1034 10
 1744 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1745              	.L106:
1035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 1746              		.loc 1 1035 1
 1747 0054 1846     		mov	r0, r3
 1748 0056 1437     		adds	r7, r7, #20
 1749              	.LCFI59:
 1750              		.cfi_def_cfa_offset 4
 1751 0058 BD46     		mov	sp, r7
 1752              	.LCFI60:
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 50


 1753              		.cfi_def_cfa_register 13
 1754              		@ sp needed
 1755 005a 5DF8047B 		ldr	r7, [sp], #4
 1756              	.LCFI61:
 1757              		.cfi_restore 7
 1758              		.cfi_def_cfa_offset 0
 1759 005e 7047     		bx	lr
 1760              		.cfi_endproc
 1761              	.LFE343:
 1763              		.section	.text.HAL_FDCAN_UnRegisterTxEventFifoCallback,"ax",%progbits
 1764              		.align	1
 1765              		.global	HAL_FDCAN_UnRegisterTxEventFifoCallback
 1766              		.syntax unified
 1767              		.thumb
 1768              		.thumb_func
 1770              	HAL_FDCAN_UnRegisterTxEventFifoCallback:
 1771              	.LFB344:
1036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  UnRegister the Tx Event Fifo FDCAN Callback
1039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         Tx Event Fifo FDCAN Callback is redirected to the weak HAL_FDCAN_TxEventFifoCallback() 
1040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan FDCAN handle
1041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_UnRegisterTxEventFifoCallback(FDCAN_HandleTypeDef *hfdcan)
1044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 1772              		.loc 1 1044 1
 1773              		.cfi_startproc
 1774              		@ args = 0, pretend = 0, frame = 16
 1775              		@ frame_needed = 1, uses_anonymous_args = 0
 1776              		@ link register save eliminated.
 1777 0000 80B4     		push	{r7}
 1778              	.LCFI62:
 1779              		.cfi_def_cfa_offset 4
 1780              		.cfi_offset 7, -4
 1781 0002 85B0     		sub	sp, sp, #20
 1782              	.LCFI63:
 1783              		.cfi_def_cfa_offset 24
 1784 0004 00AF     		add	r7, sp, #0
 1785              	.LCFI64:
 1786              		.cfi_def_cfa_register 7
 1787 0006 7860     		str	r0, [r7, #4]
1045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status = HAL_OK;
 1788              		.loc 1 1045 21
 1789 0008 0023     		movs	r3, #0
 1790 000a FB73     		strb	r3, [r7, #15]
1046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 1791              		.loc 1 1047 13
 1792 000c 7B68     		ldr	r3, [r7, #4]
 1793 000e 93F89830 		ldrb	r3, [r3, #152]
 1794 0012 DBB2     		uxtb	r3, r3
 1795              		.loc 1 1047 6
 1796 0014 012B     		cmp	r3, #1
 1797 0016 04D1     		bne	.L110
1048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TxEventFifoCallback = HAL_FDCAN_TxEventFifoCallback; /* Legacy weak TxEventFifoCallback
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 51


 1798              		.loc 1 1049 33
 1799 0018 7B68     		ldr	r3, [r7, #4]
 1800 001a 0A4A     		ldr	r2, .L113
 1801 001c C3F8A420 		str	r2, [r3, #164]
 1802 0020 09E0     		b	.L111
 1803              	.L110:
1050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
 1804              		.loc 1 1054 23
 1805 0022 7B68     		ldr	r3, [r7, #4]
 1806 0024 D3F89C30 		ldr	r3, [r3, #156]
 1807 0028 43F48072 		orr	r2, r3, #256
 1808 002c 7B68     		ldr	r3, [r7, #4]
 1809 002e C3F89C20 		str	r2, [r3, #156]
1055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return error status */
1057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     status =  HAL_ERROR;
 1810              		.loc 1 1057 12
 1811 0032 0123     		movs	r3, #1
 1812 0034 FB73     		strb	r3, [r7, #15]
 1813              	.L111:
1058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
 1814              		.loc 1 1060 10
 1815 0036 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 1816              		.loc 1 1061 1
 1817 0038 1846     		mov	r0, r3
 1818 003a 1437     		adds	r7, r7, #20
 1819              	.LCFI65:
 1820              		.cfi_def_cfa_offset 4
 1821 003c BD46     		mov	sp, r7
 1822              	.LCFI66:
 1823              		.cfi_def_cfa_register 13
 1824              		@ sp needed
 1825 003e 5DF8047B 		ldr	r7, [sp], #4
 1826              	.LCFI67:
 1827              		.cfi_restore 7
 1828              		.cfi_def_cfa_offset 0
 1829 0042 7047     		bx	lr
 1830              	.L114:
 1831              		.align	2
 1832              	.L113:
 1833 0044 00000000 		.word	HAL_FDCAN_TxEventFifoCallback
 1834              		.cfi_endproc
 1835              	.LFE344:
 1837              		.section	.text.HAL_FDCAN_RegisterRxFifo0Callback,"ax",%progbits
 1838              		.align	1
 1839              		.global	HAL_FDCAN_RegisterRxFifo0Callback
 1840              		.syntax unified
 1841              		.thumb
 1842              		.thumb_func
 1844              	HAL_FDCAN_RegisterRxFifo0Callback:
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 52


 1845              	.LFB345:
1062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Register Rx Fifo 0 FDCAN Callback
1065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         To be used instead of the weak HAL_FDCAN_RxFifo0Callback() predefined callback
1066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan FDCAN handle
1067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  pCallback pointer to the Rx Fifo 0 Callback function
1068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_RegisterRxFifo0Callback(FDCAN_HandleTypeDef *hfdcan, pFDCAN_RxFifo0Call
1071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 1846              		.loc 1 1071 1
 1847              		.cfi_startproc
 1848              		@ args = 0, pretend = 0, frame = 16
 1849              		@ frame_needed = 1, uses_anonymous_args = 0
 1850              		@ link register save eliminated.
 1851 0000 80B4     		push	{r7}
 1852              	.LCFI68:
 1853              		.cfi_def_cfa_offset 4
 1854              		.cfi_offset 7, -4
 1855 0002 85B0     		sub	sp, sp, #20
 1856              	.LCFI69:
 1857              		.cfi_def_cfa_offset 24
 1858 0004 00AF     		add	r7, sp, #0
 1859              	.LCFI70:
 1860              		.cfi_def_cfa_register 7
 1861 0006 7860     		str	r0, [r7, #4]
 1862 0008 3960     		str	r1, [r7]
1072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status = HAL_OK;
 1863              		.loc 1 1072 21
 1864 000a 0023     		movs	r3, #0
 1865 000c FB73     		strb	r3, [r7, #15]
1073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (pCallback == NULL)
 1866              		.loc 1 1074 6
 1867 000e 3B68     		ldr	r3, [r7]
 1868 0010 002B     		cmp	r3, #0
 1869 0012 09D1     		bne	.L116
1075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
 1870              		.loc 1 1077 23
 1871 0014 7B68     		ldr	r3, [r7, #4]
 1872 0016 D3F89C30 		ldr	r3, [r3, #156]
 1873 001a 43F48072 		orr	r2, r3, #256
 1874 001e 7B68     		ldr	r3, [r7, #4]
 1875 0020 C3F89C20 		str	r2, [r3, #156]
1078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 1876              		.loc 1 1078 12
 1877 0024 0123     		movs	r3, #1
 1878 0026 15E0     		b	.L117
 1879              	.L116:
1079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 1880              		.loc 1 1081 13
 1881 0028 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 53


 1882 002a 93F89830 		ldrb	r3, [r3, #152]
 1883 002e DBB2     		uxtb	r3, r3
 1884              		.loc 1 1081 6
 1885 0030 012B     		cmp	r3, #1
 1886 0032 04D1     		bne	.L118
1082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->RxFifo0Callback = pCallback;
 1887              		.loc 1 1083 29
 1888 0034 7B68     		ldr	r3, [r7, #4]
 1889 0036 3A68     		ldr	r2, [r7]
 1890 0038 C3F8A820 		str	r2, [r3, #168]
 1891 003c 09E0     		b	.L119
 1892              	.L118:
1084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
 1893              		.loc 1 1088 23
 1894 003e 7B68     		ldr	r3, [r7, #4]
 1895 0040 D3F89C30 		ldr	r3, [r3, #156]
 1896 0044 43F48072 		orr	r2, r3, #256
 1897 0048 7B68     		ldr	r3, [r7, #4]
 1898 004a C3F89C20 		str	r2, [r3, #156]
1089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return error status */
1091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     status =  HAL_ERROR;
 1899              		.loc 1 1091 12
 1900 004e 0123     		movs	r3, #1
 1901 0050 FB73     		strb	r3, [r7, #15]
 1902              	.L119:
1092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
 1903              		.loc 1 1094 10
 1904 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1905              	.L117:
1095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 1906              		.loc 1 1095 1
 1907 0054 1846     		mov	r0, r3
 1908 0056 1437     		adds	r7, r7, #20
 1909              	.LCFI71:
 1910              		.cfi_def_cfa_offset 4
 1911 0058 BD46     		mov	sp, r7
 1912              	.LCFI72:
 1913              		.cfi_def_cfa_register 13
 1914              		@ sp needed
 1915 005a 5DF8047B 		ldr	r7, [sp], #4
 1916              	.LCFI73:
 1917              		.cfi_restore 7
 1918              		.cfi_def_cfa_offset 0
 1919 005e 7047     		bx	lr
 1920              		.cfi_endproc
 1921              	.LFE345:
 1923              		.section	.text.HAL_FDCAN_UnRegisterRxFifo0Callback,"ax",%progbits
 1924              		.align	1
 1925              		.global	HAL_FDCAN_UnRegisterRxFifo0Callback
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 54


 1926              		.syntax unified
 1927              		.thumb
 1928              		.thumb_func
 1930              	HAL_FDCAN_UnRegisterRxFifo0Callback:
 1931              	.LFB346:
1096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  UnRegister the Rx Fifo 0 FDCAN Callback
1099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         Rx Fifo 0 FDCAN Callback is redirected to the weak HAL_FDCAN_RxFifo0Callback() predefin
1100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan FDCAN handle
1101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_UnRegisterRxFifo0Callback(FDCAN_HandleTypeDef *hfdcan)
1104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 1932              		.loc 1 1104 1
 1933              		.cfi_startproc
 1934              		@ args = 0, pretend = 0, frame = 16
 1935              		@ frame_needed = 1, uses_anonymous_args = 0
 1936              		@ link register save eliminated.
 1937 0000 80B4     		push	{r7}
 1938              	.LCFI74:
 1939              		.cfi_def_cfa_offset 4
 1940              		.cfi_offset 7, -4
 1941 0002 85B0     		sub	sp, sp, #20
 1942              	.LCFI75:
 1943              		.cfi_def_cfa_offset 24
 1944 0004 00AF     		add	r7, sp, #0
 1945              	.LCFI76:
 1946              		.cfi_def_cfa_register 7
 1947 0006 7860     		str	r0, [r7, #4]
1105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status = HAL_OK;
 1948              		.loc 1 1105 21
 1949 0008 0023     		movs	r3, #0
 1950 000a FB73     		strb	r3, [r7, #15]
1106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 1951              		.loc 1 1107 13
 1952 000c 7B68     		ldr	r3, [r7, #4]
 1953 000e 93F89830 		ldrb	r3, [r3, #152]
 1954 0012 DBB2     		uxtb	r3, r3
 1955              		.loc 1 1107 6
 1956 0014 012B     		cmp	r3, #1
 1957 0016 04D1     		bne	.L121
1108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->RxFifo0Callback = HAL_FDCAN_RxFifo0Callback; /* Legacy weak RxFifo0Callback  */
 1958              		.loc 1 1109 29
 1959 0018 7B68     		ldr	r3, [r7, #4]
 1960 001a 0A4A     		ldr	r2, .L124
 1961 001c C3F8A820 		str	r2, [r3, #168]
 1962 0020 09E0     		b	.L122
 1963              	.L121:
1110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
 1964              		.loc 1 1114 23
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 55


 1965 0022 7B68     		ldr	r3, [r7, #4]
 1966 0024 D3F89C30 		ldr	r3, [r3, #156]
 1967 0028 43F48072 		orr	r2, r3, #256
 1968 002c 7B68     		ldr	r3, [r7, #4]
 1969 002e C3F89C20 		str	r2, [r3, #156]
1115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return error status */
1117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     status =  HAL_ERROR;
 1970              		.loc 1 1117 12
 1971 0032 0123     		movs	r3, #1
 1972 0034 FB73     		strb	r3, [r7, #15]
 1973              	.L122:
1118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
 1974              		.loc 1 1120 10
 1975 0036 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 1976              		.loc 1 1121 1
 1977 0038 1846     		mov	r0, r3
 1978 003a 1437     		adds	r7, r7, #20
 1979              	.LCFI77:
 1980              		.cfi_def_cfa_offset 4
 1981 003c BD46     		mov	sp, r7
 1982              	.LCFI78:
 1983              		.cfi_def_cfa_register 13
 1984              		@ sp needed
 1985 003e 5DF8047B 		ldr	r7, [sp], #4
 1986              	.LCFI79:
 1987              		.cfi_restore 7
 1988              		.cfi_def_cfa_offset 0
 1989 0042 7047     		bx	lr
 1990              	.L125:
 1991              		.align	2
 1992              	.L124:
 1993 0044 00000000 		.word	HAL_FDCAN_RxFifo0Callback
 1994              		.cfi_endproc
 1995              	.LFE346:
 1997              		.section	.text.HAL_FDCAN_RegisterRxFifo1Callback,"ax",%progbits
 1998              		.align	1
 1999              		.global	HAL_FDCAN_RegisterRxFifo1Callback
 2000              		.syntax unified
 2001              		.thumb
 2002              		.thumb_func
 2004              	HAL_FDCAN_RegisterRxFifo1Callback:
 2005              	.LFB347:
1122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Register Rx Fifo 1 FDCAN Callback
1125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         To be used instead of the weak HAL_FDCAN_RxFifo1Callback() predefined callback
1126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan FDCAN handle
1127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  pCallback pointer to the Rx Fifo 1 Callback function
1128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_RegisterRxFifo1Callback(FDCAN_HandleTypeDef *hfdcan, pFDCAN_RxFifo1Call
1131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 2006              		.loc 1 1131 1
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 56


 2007              		.cfi_startproc
 2008              		@ args = 0, pretend = 0, frame = 16
 2009              		@ frame_needed = 1, uses_anonymous_args = 0
 2010              		@ link register save eliminated.
 2011 0000 80B4     		push	{r7}
 2012              	.LCFI80:
 2013              		.cfi_def_cfa_offset 4
 2014              		.cfi_offset 7, -4
 2015 0002 85B0     		sub	sp, sp, #20
 2016              	.LCFI81:
 2017              		.cfi_def_cfa_offset 24
 2018 0004 00AF     		add	r7, sp, #0
 2019              	.LCFI82:
 2020              		.cfi_def_cfa_register 7
 2021 0006 7860     		str	r0, [r7, #4]
 2022 0008 3960     		str	r1, [r7]
1132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status = HAL_OK;
 2023              		.loc 1 1132 21
 2024 000a 0023     		movs	r3, #0
 2025 000c FB73     		strb	r3, [r7, #15]
1133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (pCallback == NULL)
 2026              		.loc 1 1134 6
 2027 000e 3B68     		ldr	r3, [r7]
 2028 0010 002B     		cmp	r3, #0
 2029 0012 09D1     		bne	.L127
1135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
 2030              		.loc 1 1137 23
 2031 0014 7B68     		ldr	r3, [r7, #4]
 2032 0016 D3F89C30 		ldr	r3, [r3, #156]
 2033 001a 43F48072 		orr	r2, r3, #256
 2034 001e 7B68     		ldr	r3, [r7, #4]
 2035 0020 C3F89C20 		str	r2, [r3, #156]
1138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 2036              		.loc 1 1138 12
 2037 0024 0123     		movs	r3, #1
 2038 0026 15E0     		b	.L128
 2039              	.L127:
1139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 2040              		.loc 1 1141 13
 2041 0028 7B68     		ldr	r3, [r7, #4]
 2042 002a 93F89830 		ldrb	r3, [r3, #152]
 2043 002e DBB2     		uxtb	r3, r3
 2044              		.loc 1 1141 6
 2045 0030 012B     		cmp	r3, #1
 2046 0032 04D1     		bne	.L129
1142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->RxFifo1Callback = pCallback;
 2047              		.loc 1 1143 29
 2048 0034 7B68     		ldr	r3, [r7, #4]
 2049 0036 3A68     		ldr	r2, [r7]
 2050 0038 C3F8AC20 		str	r2, [r3, #172]
 2051 003c 09E0     		b	.L130
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 57


 2052              	.L129:
1144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
 2053              		.loc 1 1148 23
 2054 003e 7B68     		ldr	r3, [r7, #4]
 2055 0040 D3F89C30 		ldr	r3, [r3, #156]
 2056 0044 43F48072 		orr	r2, r3, #256
 2057 0048 7B68     		ldr	r3, [r7, #4]
 2058 004a C3F89C20 		str	r2, [r3, #156]
1149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return error status */
1151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     status =  HAL_ERROR;
 2059              		.loc 1 1151 12
 2060 004e 0123     		movs	r3, #1
 2061 0050 FB73     		strb	r3, [r7, #15]
 2062              	.L130:
1152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
 2063              		.loc 1 1154 10
 2064 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2065              	.L128:
1155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 2066              		.loc 1 1155 1
 2067 0054 1846     		mov	r0, r3
 2068 0056 1437     		adds	r7, r7, #20
 2069              	.LCFI83:
 2070              		.cfi_def_cfa_offset 4
 2071 0058 BD46     		mov	sp, r7
 2072              	.LCFI84:
 2073              		.cfi_def_cfa_register 13
 2074              		@ sp needed
 2075 005a 5DF8047B 		ldr	r7, [sp], #4
 2076              	.LCFI85:
 2077              		.cfi_restore 7
 2078              		.cfi_def_cfa_offset 0
 2079 005e 7047     		bx	lr
 2080              		.cfi_endproc
 2081              	.LFE347:
 2083              		.section	.text.HAL_FDCAN_UnRegisterRxFifo1Callback,"ax",%progbits
 2084              		.align	1
 2085              		.global	HAL_FDCAN_UnRegisterRxFifo1Callback
 2086              		.syntax unified
 2087              		.thumb
 2088              		.thumb_func
 2090              	HAL_FDCAN_UnRegisterRxFifo1Callback:
 2091              	.LFB348:
1156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  UnRegister the Rx Fifo 1 FDCAN Callback
1159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         Rx Fifo 1 FDCAN Callback is redirected to the weak HAL_FDCAN_RxFifo1Callback() predefin
1160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan FDCAN handle
1161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 58


1163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_UnRegisterRxFifo1Callback(FDCAN_HandleTypeDef *hfdcan)
1164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 2092              		.loc 1 1164 1
 2093              		.cfi_startproc
 2094              		@ args = 0, pretend = 0, frame = 16
 2095              		@ frame_needed = 1, uses_anonymous_args = 0
 2096              		@ link register save eliminated.
 2097 0000 80B4     		push	{r7}
 2098              	.LCFI86:
 2099              		.cfi_def_cfa_offset 4
 2100              		.cfi_offset 7, -4
 2101 0002 85B0     		sub	sp, sp, #20
 2102              	.LCFI87:
 2103              		.cfi_def_cfa_offset 24
 2104 0004 00AF     		add	r7, sp, #0
 2105              	.LCFI88:
 2106              		.cfi_def_cfa_register 7
 2107 0006 7860     		str	r0, [r7, #4]
1165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status = HAL_OK;
 2108              		.loc 1 1165 21
 2109 0008 0023     		movs	r3, #0
 2110 000a FB73     		strb	r3, [r7, #15]
1166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 2111              		.loc 1 1167 13
 2112 000c 7B68     		ldr	r3, [r7, #4]
 2113 000e 93F89830 		ldrb	r3, [r3, #152]
 2114 0012 DBB2     		uxtb	r3, r3
 2115              		.loc 1 1167 6
 2116 0014 012B     		cmp	r3, #1
 2117 0016 04D1     		bne	.L132
1168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->RxFifo1Callback = HAL_FDCAN_RxFifo1Callback; /* Legacy weak RxFifo1Callback  */
 2118              		.loc 1 1169 29
 2119 0018 7B68     		ldr	r3, [r7, #4]
 2120 001a 0A4A     		ldr	r2, .L135
 2121 001c C3F8AC20 		str	r2, [r3, #172]
 2122 0020 09E0     		b	.L133
 2123              	.L132:
1170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
 2124              		.loc 1 1174 23
 2125 0022 7B68     		ldr	r3, [r7, #4]
 2126 0024 D3F89C30 		ldr	r3, [r3, #156]
 2127 0028 43F48072 		orr	r2, r3, #256
 2128 002c 7B68     		ldr	r3, [r7, #4]
 2129 002e C3F89C20 		str	r2, [r3, #156]
1175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return error status */
1177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     status =  HAL_ERROR;
 2130              		.loc 1 1177 12
 2131 0032 0123     		movs	r3, #1
 2132 0034 FB73     		strb	r3, [r7, #15]
 2133              	.L133:
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 59


1178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
 2134              		.loc 1 1180 10
 2135 0036 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 2136              		.loc 1 1181 1
 2137 0038 1846     		mov	r0, r3
 2138 003a 1437     		adds	r7, r7, #20
 2139              	.LCFI89:
 2140              		.cfi_def_cfa_offset 4
 2141 003c BD46     		mov	sp, r7
 2142              	.LCFI90:
 2143              		.cfi_def_cfa_register 13
 2144              		@ sp needed
 2145 003e 5DF8047B 		ldr	r7, [sp], #4
 2146              	.LCFI91:
 2147              		.cfi_restore 7
 2148              		.cfi_def_cfa_offset 0
 2149 0042 7047     		bx	lr
 2150              	.L136:
 2151              		.align	2
 2152              	.L135:
 2153 0044 00000000 		.word	HAL_FDCAN_RxFifo1Callback
 2154              		.cfi_endproc
 2155              	.LFE348:
 2157              		.section	.text.HAL_FDCAN_RegisterTxBufferCompleteCallback,"ax",%progbits
 2158              		.align	1
 2159              		.global	HAL_FDCAN_RegisterTxBufferCompleteCallback
 2160              		.syntax unified
 2161              		.thumb
 2162              		.thumb_func
 2164              	HAL_FDCAN_RegisterTxBufferCompleteCallback:
 2165              	.LFB349:
1182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Register Tx Buffer Complete FDCAN Callback
1185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         To be used instead of the weak HAL_FDCAN_TxBufferCompleteCallback() predefined callback
1186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan FDCAN handle
1187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  pCallback pointer to the Tx Buffer Complete Callback function
1188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_RegisterTxBufferCompleteCallback(FDCAN_HandleTypeDef *hfdcan, pFDCAN_Tx
1191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 2166              		.loc 1 1191 1
 2167              		.cfi_startproc
 2168              		@ args = 0, pretend = 0, frame = 16
 2169              		@ frame_needed = 1, uses_anonymous_args = 0
 2170              		@ link register save eliminated.
 2171 0000 80B4     		push	{r7}
 2172              	.LCFI92:
 2173              		.cfi_def_cfa_offset 4
 2174              		.cfi_offset 7, -4
 2175 0002 85B0     		sub	sp, sp, #20
 2176              	.LCFI93:
 2177              		.cfi_def_cfa_offset 24
 2178 0004 00AF     		add	r7, sp, #0
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 60


 2179              	.LCFI94:
 2180              		.cfi_def_cfa_register 7
 2181 0006 7860     		str	r0, [r7, #4]
 2182 0008 3960     		str	r1, [r7]
1192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status = HAL_OK;
 2183              		.loc 1 1192 21
 2184 000a 0023     		movs	r3, #0
 2185 000c FB73     		strb	r3, [r7, #15]
1193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (pCallback == NULL)
 2186              		.loc 1 1194 6
 2187 000e 3B68     		ldr	r3, [r7]
 2188 0010 002B     		cmp	r3, #0
 2189 0012 09D1     		bne	.L138
1195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
 2190              		.loc 1 1197 23
 2191 0014 7B68     		ldr	r3, [r7, #4]
 2192 0016 D3F89C30 		ldr	r3, [r3, #156]
 2193 001a 43F48072 		orr	r2, r3, #256
 2194 001e 7B68     		ldr	r3, [r7, #4]
 2195 0020 C3F89C20 		str	r2, [r3, #156]
1198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 2196              		.loc 1 1198 12
 2197 0024 0123     		movs	r3, #1
 2198 0026 15E0     		b	.L139
 2199              	.L138:
1199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 2200              		.loc 1 1201 13
 2201 0028 7B68     		ldr	r3, [r7, #4]
 2202 002a 93F89830 		ldrb	r3, [r3, #152]
 2203 002e DBB2     		uxtb	r3, r3
 2204              		.loc 1 1201 6
 2205 0030 012B     		cmp	r3, #1
 2206 0032 04D1     		bne	.L140
1202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TxBufferCompleteCallback = pCallback;
 2207              		.loc 1 1203 38
 2208 0034 7B68     		ldr	r3, [r7, #4]
 2209 0036 3A68     		ldr	r2, [r7]
 2210 0038 C3F8B420 		str	r2, [r3, #180]
 2211 003c 09E0     		b	.L141
 2212              	.L140:
1204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
 2213              		.loc 1 1208 23
 2214 003e 7B68     		ldr	r3, [r7, #4]
 2215 0040 D3F89C30 		ldr	r3, [r3, #156]
 2216 0044 43F48072 		orr	r2, r3, #256
 2217 0048 7B68     		ldr	r3, [r7, #4]
 2218 004a C3F89C20 		str	r2, [r3, #156]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 61


1209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return error status */
1211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     status =  HAL_ERROR;
 2219              		.loc 1 1211 12
 2220 004e 0123     		movs	r3, #1
 2221 0050 FB73     		strb	r3, [r7, #15]
 2222              	.L141:
1212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
 2223              		.loc 1 1214 10
 2224 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2225              	.L139:
1215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 2226              		.loc 1 1215 1
 2227 0054 1846     		mov	r0, r3
 2228 0056 1437     		adds	r7, r7, #20
 2229              	.LCFI95:
 2230              		.cfi_def_cfa_offset 4
 2231 0058 BD46     		mov	sp, r7
 2232              	.LCFI96:
 2233              		.cfi_def_cfa_register 13
 2234              		@ sp needed
 2235 005a 5DF8047B 		ldr	r7, [sp], #4
 2236              	.LCFI97:
 2237              		.cfi_restore 7
 2238              		.cfi_def_cfa_offset 0
 2239 005e 7047     		bx	lr
 2240              		.cfi_endproc
 2241              	.LFE349:
 2243              		.section	.text.HAL_FDCAN_UnRegisterTxBufferCompleteCallback,"ax",%progbits
 2244              		.align	1
 2245              		.global	HAL_FDCAN_UnRegisterTxBufferCompleteCallback
 2246              		.syntax unified
 2247              		.thumb
 2248              		.thumb_func
 2250              	HAL_FDCAN_UnRegisterTxBufferCompleteCallback:
 2251              	.LFB350:
1216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  UnRegister the Tx Buffer Complete FDCAN Callback
1219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         Tx Buffer Complete FDCAN Callback is redirected to the weak HAL_FDCAN_TxBufferCompleteC
1220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan FDCAN handle
1221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_UnRegisterTxBufferCompleteCallback(FDCAN_HandleTypeDef *hfdcan)
1224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 2252              		.loc 1 1224 1
 2253              		.cfi_startproc
 2254              		@ args = 0, pretend = 0, frame = 16
 2255              		@ frame_needed = 1, uses_anonymous_args = 0
 2256              		@ link register save eliminated.
 2257 0000 80B4     		push	{r7}
 2258              	.LCFI98:
 2259              		.cfi_def_cfa_offset 4
 2260              		.cfi_offset 7, -4
 2261 0002 85B0     		sub	sp, sp, #20
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 62


 2262              	.LCFI99:
 2263              		.cfi_def_cfa_offset 24
 2264 0004 00AF     		add	r7, sp, #0
 2265              	.LCFI100:
 2266              		.cfi_def_cfa_register 7
 2267 0006 7860     		str	r0, [r7, #4]
1225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status = HAL_OK;
 2268              		.loc 1 1225 21
 2269 0008 0023     		movs	r3, #0
 2270 000a FB73     		strb	r3, [r7, #15]
1226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 2271              		.loc 1 1227 13
 2272 000c 7B68     		ldr	r3, [r7, #4]
 2273 000e 93F89830 		ldrb	r3, [r3, #152]
 2274 0012 DBB2     		uxtb	r3, r3
 2275              		.loc 1 1227 6
 2276 0014 012B     		cmp	r3, #1
 2277 0016 04D1     		bne	.L143
1228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TxBufferCompleteCallback = HAL_FDCAN_TxBufferCompleteCallback; /* Legacy weak TxBufferC
 2278              		.loc 1 1229 38
 2279 0018 7B68     		ldr	r3, [r7, #4]
 2280 001a 0A4A     		ldr	r2, .L146
 2281 001c C3F8B420 		str	r2, [r3, #180]
 2282 0020 09E0     		b	.L144
 2283              	.L143:
1230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
 2284              		.loc 1 1234 23
 2285 0022 7B68     		ldr	r3, [r7, #4]
 2286 0024 D3F89C30 		ldr	r3, [r3, #156]
 2287 0028 43F48072 		orr	r2, r3, #256
 2288 002c 7B68     		ldr	r3, [r7, #4]
 2289 002e C3F89C20 		str	r2, [r3, #156]
1235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return error status */
1237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     status =  HAL_ERROR;
 2290              		.loc 1 1237 12
 2291 0032 0123     		movs	r3, #1
 2292 0034 FB73     		strb	r3, [r7, #15]
 2293              	.L144:
1238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
 2294              		.loc 1 1240 10
 2295 0036 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 2296              		.loc 1 1241 1
 2297 0038 1846     		mov	r0, r3
 2298 003a 1437     		adds	r7, r7, #20
 2299              	.LCFI101:
 2300              		.cfi_def_cfa_offset 4
 2301 003c BD46     		mov	sp, r7
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 63


 2302              	.LCFI102:
 2303              		.cfi_def_cfa_register 13
 2304              		@ sp needed
 2305 003e 5DF8047B 		ldr	r7, [sp], #4
 2306              	.LCFI103:
 2307              		.cfi_restore 7
 2308              		.cfi_def_cfa_offset 0
 2309 0042 7047     		bx	lr
 2310              	.L147:
 2311              		.align	2
 2312              	.L146:
 2313 0044 00000000 		.word	HAL_FDCAN_TxBufferCompleteCallback
 2314              		.cfi_endproc
 2315              	.LFE350:
 2317              		.section	.text.HAL_FDCAN_RegisterTxBufferAbortCallback,"ax",%progbits
 2318              		.align	1
 2319              		.global	HAL_FDCAN_RegisterTxBufferAbortCallback
 2320              		.syntax unified
 2321              		.thumb
 2322              		.thumb_func
 2324              	HAL_FDCAN_RegisterTxBufferAbortCallback:
 2325              	.LFB351:
1242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Register Tx Buffer Abort FDCAN Callback
1245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         To be used instead of the weak HAL_FDCAN_TxBufferAbortCallback() predefined callback
1246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan FDCAN handle
1247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  pCallback pointer to the Tx Buffer Abort Callback function
1248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_RegisterTxBufferAbortCallback(FDCAN_HandleTypeDef *hfdcan, pFDCAN_TxBuf
1251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 2326              		.loc 1 1251 1
 2327              		.cfi_startproc
 2328              		@ args = 0, pretend = 0, frame = 16
 2329              		@ frame_needed = 1, uses_anonymous_args = 0
 2330              		@ link register save eliminated.
 2331 0000 80B4     		push	{r7}
 2332              	.LCFI104:
 2333              		.cfi_def_cfa_offset 4
 2334              		.cfi_offset 7, -4
 2335 0002 85B0     		sub	sp, sp, #20
 2336              	.LCFI105:
 2337              		.cfi_def_cfa_offset 24
 2338 0004 00AF     		add	r7, sp, #0
 2339              	.LCFI106:
 2340              		.cfi_def_cfa_register 7
 2341 0006 7860     		str	r0, [r7, #4]
 2342 0008 3960     		str	r1, [r7]
1252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status = HAL_OK;
 2343              		.loc 1 1252 21
 2344 000a 0023     		movs	r3, #0
 2345 000c FB73     		strb	r3, [r7, #15]
1253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (pCallback == NULL)
 2346              		.loc 1 1254 6
 2347 000e 3B68     		ldr	r3, [r7]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 64


 2348 0010 002B     		cmp	r3, #0
 2349 0012 09D1     		bne	.L149
1255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
 2350              		.loc 1 1257 23
 2351 0014 7B68     		ldr	r3, [r7, #4]
 2352 0016 D3F89C30 		ldr	r3, [r3, #156]
 2353 001a 43F48072 		orr	r2, r3, #256
 2354 001e 7B68     		ldr	r3, [r7, #4]
 2355 0020 C3F89C20 		str	r2, [r3, #156]
1258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 2356              		.loc 1 1258 12
 2357 0024 0123     		movs	r3, #1
 2358 0026 15E0     		b	.L150
 2359              	.L149:
1259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 2360              		.loc 1 1261 13
 2361 0028 7B68     		ldr	r3, [r7, #4]
 2362 002a 93F89830 		ldrb	r3, [r3, #152]
 2363 002e DBB2     		uxtb	r3, r3
 2364              		.loc 1 1261 6
 2365 0030 012B     		cmp	r3, #1
 2366 0032 04D1     		bne	.L151
1262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TxBufferAbortCallback = pCallback;
 2367              		.loc 1 1263 35
 2368 0034 7B68     		ldr	r3, [r7, #4]
 2369 0036 3A68     		ldr	r2, [r7]
 2370 0038 C3F8B820 		str	r2, [r3, #184]
 2371 003c 09E0     		b	.L152
 2372              	.L151:
1264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
 2373              		.loc 1 1268 23
 2374 003e 7B68     		ldr	r3, [r7, #4]
 2375 0040 D3F89C30 		ldr	r3, [r3, #156]
 2376 0044 43F48072 		orr	r2, r3, #256
 2377 0048 7B68     		ldr	r3, [r7, #4]
 2378 004a C3F89C20 		str	r2, [r3, #156]
1269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return error status */
1271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     status =  HAL_ERROR;
 2379              		.loc 1 1271 12
 2380 004e 0123     		movs	r3, #1
 2381 0050 FB73     		strb	r3, [r7, #15]
 2382              	.L152:
1272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
 2383              		.loc 1 1274 10
 2384 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 65


 2385              	.L150:
1275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 2386              		.loc 1 1275 1
 2387 0054 1846     		mov	r0, r3
 2388 0056 1437     		adds	r7, r7, #20
 2389              	.LCFI107:
 2390              		.cfi_def_cfa_offset 4
 2391 0058 BD46     		mov	sp, r7
 2392              	.LCFI108:
 2393              		.cfi_def_cfa_register 13
 2394              		@ sp needed
 2395 005a 5DF8047B 		ldr	r7, [sp], #4
 2396              	.LCFI109:
 2397              		.cfi_restore 7
 2398              		.cfi_def_cfa_offset 0
 2399 005e 7047     		bx	lr
 2400              		.cfi_endproc
 2401              	.LFE351:
 2403              		.section	.text.HAL_FDCAN_UnRegisterTxBufferAbortCallback,"ax",%progbits
 2404              		.align	1
 2405              		.global	HAL_FDCAN_UnRegisterTxBufferAbortCallback
 2406              		.syntax unified
 2407              		.thumb
 2408              		.thumb_func
 2410              	HAL_FDCAN_UnRegisterTxBufferAbortCallback:
 2411              	.LFB352:
1276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  UnRegister the Tx Buffer Abort FDCAN Callback
1279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         Tx Buffer Abort FDCAN Callback is redirected to the weak HAL_FDCAN_TxBufferAbortCallbac
1280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan FDCAN handle
1281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_UnRegisterTxBufferAbortCallback(FDCAN_HandleTypeDef *hfdcan)
1284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 2412              		.loc 1 1284 1
 2413              		.cfi_startproc
 2414              		@ args = 0, pretend = 0, frame = 16
 2415              		@ frame_needed = 1, uses_anonymous_args = 0
 2416              		@ link register save eliminated.
 2417 0000 80B4     		push	{r7}
 2418              	.LCFI110:
 2419              		.cfi_def_cfa_offset 4
 2420              		.cfi_offset 7, -4
 2421 0002 85B0     		sub	sp, sp, #20
 2422              	.LCFI111:
 2423              		.cfi_def_cfa_offset 24
 2424 0004 00AF     		add	r7, sp, #0
 2425              	.LCFI112:
 2426              		.cfi_def_cfa_register 7
 2427 0006 7860     		str	r0, [r7, #4]
1285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status = HAL_OK;
 2428              		.loc 1 1285 21
 2429 0008 0023     		movs	r3, #0
 2430 000a FB73     		strb	r3, [r7, #15]
1286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 66


 2431              		.loc 1 1287 13
 2432 000c 7B68     		ldr	r3, [r7, #4]
 2433 000e 93F89830 		ldrb	r3, [r3, #152]
 2434 0012 DBB2     		uxtb	r3, r3
 2435              		.loc 1 1287 6
 2436 0014 012B     		cmp	r3, #1
 2437 0016 04D1     		bne	.L154
1288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TxBufferAbortCallback = HAL_FDCAN_TxBufferAbortCallback; /* Legacy weak TxBufferAbortCa
 2438              		.loc 1 1289 35
 2439 0018 7B68     		ldr	r3, [r7, #4]
 2440 001a 0A4A     		ldr	r2, .L157
 2441 001c C3F8B820 		str	r2, [r3, #184]
 2442 0020 09E0     		b	.L155
 2443              	.L154:
1290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
 2444              		.loc 1 1294 23
 2445 0022 7B68     		ldr	r3, [r7, #4]
 2446 0024 D3F89C30 		ldr	r3, [r3, #156]
 2447 0028 43F48072 		orr	r2, r3, #256
 2448 002c 7B68     		ldr	r3, [r7, #4]
 2449 002e C3F89C20 		str	r2, [r3, #156]
1295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return error status */
1297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     status =  HAL_ERROR;
 2450              		.loc 1 1297 12
 2451 0032 0123     		movs	r3, #1
 2452 0034 FB73     		strb	r3, [r7, #15]
 2453              	.L155:
1298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
 2454              		.loc 1 1300 10
 2455 0036 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 2456              		.loc 1 1301 1
 2457 0038 1846     		mov	r0, r3
 2458 003a 1437     		adds	r7, r7, #20
 2459              	.LCFI113:
 2460              		.cfi_def_cfa_offset 4
 2461 003c BD46     		mov	sp, r7
 2462              	.LCFI114:
 2463              		.cfi_def_cfa_register 13
 2464              		@ sp needed
 2465 003e 5DF8047B 		ldr	r7, [sp], #4
 2466              	.LCFI115:
 2467              		.cfi_restore 7
 2468              		.cfi_def_cfa_offset 0
 2469 0042 7047     		bx	lr
 2470              	.L158:
 2471              		.align	2
 2472              	.L157:
 2473 0044 00000000 		.word	HAL_FDCAN_TxBufferAbortCallback
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 67


 2474              		.cfi_endproc
 2475              	.LFE352:
 2477              		.section	.text.HAL_FDCAN_RegisterErrorStatusCallback,"ax",%progbits
 2478              		.align	1
 2479              		.global	HAL_FDCAN_RegisterErrorStatusCallback
 2480              		.syntax unified
 2481              		.thumb
 2482              		.thumb_func
 2484              	HAL_FDCAN_RegisterErrorStatusCallback:
 2485              	.LFB353:
1302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Register Error Status FDCAN Callback
1305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         To be used instead of the weak HAL_FDCAN_ErrorStatusCallback() predefined callback
1306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan FDCAN handle
1307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  pCallback pointer to the Error Status Callback function
1308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_RegisterErrorStatusCallback(FDCAN_HandleTypeDef *hfdcan, pFDCAN_ErrorSt
1311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 2486              		.loc 1 1311 1
 2487              		.cfi_startproc
 2488              		@ args = 0, pretend = 0, frame = 16
 2489              		@ frame_needed = 1, uses_anonymous_args = 0
 2490              		@ link register save eliminated.
 2491 0000 80B4     		push	{r7}
 2492              	.LCFI116:
 2493              		.cfi_def_cfa_offset 4
 2494              		.cfi_offset 7, -4
 2495 0002 85B0     		sub	sp, sp, #20
 2496              	.LCFI117:
 2497              		.cfi_def_cfa_offset 24
 2498 0004 00AF     		add	r7, sp, #0
 2499              	.LCFI118:
 2500              		.cfi_def_cfa_register 7
 2501 0006 7860     		str	r0, [r7, #4]
 2502 0008 3960     		str	r1, [r7]
1312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status = HAL_OK;
 2503              		.loc 1 1312 21
 2504 000a 0023     		movs	r3, #0
 2505 000c FB73     		strb	r3, [r7, #15]
1313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (pCallback == NULL)
 2506              		.loc 1 1314 6
 2507 000e 3B68     		ldr	r3, [r7]
 2508 0010 002B     		cmp	r3, #0
 2509 0012 09D1     		bne	.L160
1315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
 2510              		.loc 1 1317 23
 2511 0014 7B68     		ldr	r3, [r7, #4]
 2512 0016 D3F89C30 		ldr	r3, [r3, #156]
 2513 001a 43F48072 		orr	r2, r3, #256
 2514 001e 7B68     		ldr	r3, [r7, #4]
 2515 0020 C3F89C20 		str	r2, [r3, #156]
1318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 68


 2516              		.loc 1 1318 12
 2517 0024 0123     		movs	r3, #1
 2518 0026 15E0     		b	.L161
 2519              	.L160:
1319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 2520              		.loc 1 1321 13
 2521 0028 7B68     		ldr	r3, [r7, #4]
 2522 002a 93F89830 		ldrb	r3, [r3, #152]
 2523 002e DBB2     		uxtb	r3, r3
 2524              		.loc 1 1321 6
 2525 0030 012B     		cmp	r3, #1
 2526 0032 04D1     		bne	.L162
1322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorStatusCallback = pCallback;
 2527              		.loc 1 1323 33
 2528 0034 7B68     		ldr	r3, [r7, #4]
 2529 0036 3A68     		ldr	r2, [r7]
 2530 0038 C3F8D020 		str	r2, [r3, #208]
 2531 003c 09E0     		b	.L163
 2532              	.L162:
1324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
 2533              		.loc 1 1328 23
 2534 003e 7B68     		ldr	r3, [r7, #4]
 2535 0040 D3F89C30 		ldr	r3, [r3, #156]
 2536 0044 43F48072 		orr	r2, r3, #256
 2537 0048 7B68     		ldr	r3, [r7, #4]
 2538 004a C3F89C20 		str	r2, [r3, #156]
1329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return error status */
1331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     status =  HAL_ERROR;
 2539              		.loc 1 1331 12
 2540 004e 0123     		movs	r3, #1
 2541 0050 FB73     		strb	r3, [r7, #15]
 2542              	.L163:
1332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
 2543              		.loc 1 1334 10
 2544 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2545              	.L161:
1335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 2546              		.loc 1 1335 1
 2547 0054 1846     		mov	r0, r3
 2548 0056 1437     		adds	r7, r7, #20
 2549              	.LCFI119:
 2550              		.cfi_def_cfa_offset 4
 2551 0058 BD46     		mov	sp, r7
 2552              	.LCFI120:
 2553              		.cfi_def_cfa_register 13
 2554              		@ sp needed
 2555 005a 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 69


 2556              	.LCFI121:
 2557              		.cfi_restore 7
 2558              		.cfi_def_cfa_offset 0
 2559 005e 7047     		bx	lr
 2560              		.cfi_endproc
 2561              	.LFE353:
 2563              		.section	.text.HAL_FDCAN_UnRegisterErrorStatusCallback,"ax",%progbits
 2564              		.align	1
 2565              		.global	HAL_FDCAN_UnRegisterErrorStatusCallback
 2566              		.syntax unified
 2567              		.thumb
 2568              		.thumb_func
 2570              	HAL_FDCAN_UnRegisterErrorStatusCallback:
 2571              	.LFB354:
1336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  UnRegister the Error Status FDCAN Callback
1339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         Error Status FDCAN Callback is redirected to the weak HAL_FDCAN_ErrorStatusCallback() p
1340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan FDCAN handle
1341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_UnRegisterErrorStatusCallback(FDCAN_HandleTypeDef *hfdcan)
1344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 2572              		.loc 1 1344 1
 2573              		.cfi_startproc
 2574              		@ args = 0, pretend = 0, frame = 16
 2575              		@ frame_needed = 1, uses_anonymous_args = 0
 2576              		@ link register save eliminated.
 2577 0000 80B4     		push	{r7}
 2578              	.LCFI122:
 2579              		.cfi_def_cfa_offset 4
 2580              		.cfi_offset 7, -4
 2581 0002 85B0     		sub	sp, sp, #20
 2582              	.LCFI123:
 2583              		.cfi_def_cfa_offset 24
 2584 0004 00AF     		add	r7, sp, #0
 2585              	.LCFI124:
 2586              		.cfi_def_cfa_register 7
 2587 0006 7860     		str	r0, [r7, #4]
1345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status = HAL_OK;
 2588              		.loc 1 1345 21
 2589 0008 0023     		movs	r3, #0
 2590 000a FB73     		strb	r3, [r7, #15]
1346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 2591              		.loc 1 1347 13
 2592 000c 7B68     		ldr	r3, [r7, #4]
 2593 000e 93F89830 		ldrb	r3, [r3, #152]
 2594 0012 DBB2     		uxtb	r3, r3
 2595              		.loc 1 1347 6
 2596 0014 012B     		cmp	r3, #1
 2597 0016 04D1     		bne	.L165
1348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorStatusCallback = HAL_FDCAN_ErrorStatusCallback; /* Legacy weak ErrorStatusCallback
 2598              		.loc 1 1349 33
 2599 0018 7B68     		ldr	r3, [r7, #4]
 2600 001a 0A4A     		ldr	r2, .L168
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 70


 2601 001c C3F8D020 		str	r2, [r3, #208]
 2602 0020 09E0     		b	.L166
 2603              	.L165:
1350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
 2604              		.loc 1 1354 23
 2605 0022 7B68     		ldr	r3, [r7, #4]
 2606 0024 D3F89C30 		ldr	r3, [r3, #156]
 2607 0028 43F48072 		orr	r2, r3, #256
 2608 002c 7B68     		ldr	r3, [r7, #4]
 2609 002e C3F89C20 		str	r2, [r3, #156]
1355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return error status */
1357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     status =  HAL_ERROR;
 2610              		.loc 1 1357 12
 2611 0032 0123     		movs	r3, #1
 2612 0034 FB73     		strb	r3, [r7, #15]
 2613              	.L166:
1358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
 2614              		.loc 1 1360 10
 2615 0036 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 2616              		.loc 1 1361 1
 2617 0038 1846     		mov	r0, r3
 2618 003a 1437     		adds	r7, r7, #20
 2619              	.LCFI125:
 2620              		.cfi_def_cfa_offset 4
 2621 003c BD46     		mov	sp, r7
 2622              	.LCFI126:
 2623              		.cfi_def_cfa_register 13
 2624              		@ sp needed
 2625 003e 5DF8047B 		ldr	r7, [sp], #4
 2626              	.LCFI127:
 2627              		.cfi_restore 7
 2628              		.cfi_def_cfa_offset 0
 2629 0042 7047     		bx	lr
 2630              	.L169:
 2631              		.align	2
 2632              	.L168:
 2633 0044 00000000 		.word	HAL_FDCAN_ErrorStatusCallback
 2634              		.cfi_endproc
 2635              	.LFE354:
 2637              		.section	.text.HAL_FDCAN_RegisterTTScheduleSyncCallback,"ax",%progbits
 2638              		.align	1
 2639              		.global	HAL_FDCAN_RegisterTTScheduleSyncCallback
 2640              		.syntax unified
 2641              		.thumb
 2642              		.thumb_func
 2644              	HAL_FDCAN_RegisterTTScheduleSyncCallback:
 2645              	.LFB355:
1362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 71


1364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Register TT Schedule Synchronization FDCAN Callback
1365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         To be used instead of the weak HAL_FDCAN_TT_ScheduleSyncCallback() predefined callback
1366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan FDCAN handle
1367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  pCallback pointer to the TT Schedule Synchronization Callback function
1368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_RegisterTTScheduleSyncCallback(FDCAN_HandleTypeDef *hfdcan, pFDCAN_TT_S
1371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 2646              		.loc 1 1371 1
 2647              		.cfi_startproc
 2648              		@ args = 0, pretend = 0, frame = 16
 2649              		@ frame_needed = 1, uses_anonymous_args = 0
 2650              		@ link register save eliminated.
 2651 0000 80B4     		push	{r7}
 2652              	.LCFI128:
 2653              		.cfi_def_cfa_offset 4
 2654              		.cfi_offset 7, -4
 2655 0002 85B0     		sub	sp, sp, #20
 2656              	.LCFI129:
 2657              		.cfi_def_cfa_offset 24
 2658 0004 00AF     		add	r7, sp, #0
 2659              	.LCFI130:
 2660              		.cfi_def_cfa_register 7
 2661 0006 7860     		str	r0, [r7, #4]
 2662 0008 3960     		str	r1, [r7]
1372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status = HAL_OK;
 2663              		.loc 1 1372 21
 2664 000a 0023     		movs	r3, #0
 2665 000c FB73     		strb	r3, [r7, #15]
1373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (pCallback == NULL)
 2666              		.loc 1 1374 6
 2667 000e 3B68     		ldr	r3, [r7]
 2668 0010 002B     		cmp	r3, #0
 2669 0012 09D1     		bne	.L171
1375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
 2670              		.loc 1 1377 23
 2671 0014 7B68     		ldr	r3, [r7, #4]
 2672 0016 D3F89C30 		ldr	r3, [r3, #156]
 2673 001a 43F48072 		orr	r2, r3, #256
 2674 001e 7B68     		ldr	r3, [r7, #4]
 2675 0020 C3F89C20 		str	r2, [r3, #156]
1378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 2676              		.loc 1 1378 12
 2677 0024 0123     		movs	r3, #1
 2678 0026 15E0     		b	.L172
 2679              	.L171:
1379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 2680              		.loc 1 1381 13
 2681 0028 7B68     		ldr	r3, [r7, #4]
 2682 002a 93F89830 		ldrb	r3, [r3, #152]
 2683 002e DBB2     		uxtb	r3, r3
 2684              		.loc 1 1381 6
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 72


 2685 0030 012B     		cmp	r3, #1
 2686 0032 04D1     		bne	.L173
1382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TT_ScheduleSyncCallback = pCallback;
 2687              		.loc 1 1383 37
 2688 0034 7B68     		ldr	r3, [r7, #4]
 2689 0036 3A68     		ldr	r2, [r7]
 2690 0038 C3F8D420 		str	r2, [r3, #212]
 2691 003c 09E0     		b	.L174
 2692              	.L173:
1384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
 2693              		.loc 1 1388 23
 2694 003e 7B68     		ldr	r3, [r7, #4]
 2695 0040 D3F89C30 		ldr	r3, [r3, #156]
 2696 0044 43F48072 		orr	r2, r3, #256
 2697 0048 7B68     		ldr	r3, [r7, #4]
 2698 004a C3F89C20 		str	r2, [r3, #156]
1389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return error status */
1391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     status =  HAL_ERROR;
 2699              		.loc 1 1391 12
 2700 004e 0123     		movs	r3, #1
 2701 0050 FB73     		strb	r3, [r7, #15]
 2702              	.L174:
1392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
 2703              		.loc 1 1394 10
 2704 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2705              	.L172:
1395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 2706              		.loc 1 1395 1
 2707 0054 1846     		mov	r0, r3
 2708 0056 1437     		adds	r7, r7, #20
 2709              	.LCFI131:
 2710              		.cfi_def_cfa_offset 4
 2711 0058 BD46     		mov	sp, r7
 2712              	.LCFI132:
 2713              		.cfi_def_cfa_register 13
 2714              		@ sp needed
 2715 005a 5DF8047B 		ldr	r7, [sp], #4
 2716              	.LCFI133:
 2717              		.cfi_restore 7
 2718              		.cfi_def_cfa_offset 0
 2719 005e 7047     		bx	lr
 2720              		.cfi_endproc
 2721              	.LFE355:
 2723              		.section	.text.HAL_FDCAN_UnRegisterTTScheduleSyncCallback,"ax",%progbits
 2724              		.align	1
 2725              		.global	HAL_FDCAN_UnRegisterTTScheduleSyncCallback
 2726              		.syntax unified
 2727              		.thumb
 2728              		.thumb_func
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 73


 2730              	HAL_FDCAN_UnRegisterTTScheduleSyncCallback:
 2731              	.LFB356:
1396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  UnRegister the TT Schedule Synchronization FDCAN Callback
1399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         TT Schedule Synchronization Callback is redirected to the weak HAL_FDCAN_TT_ScheduleSyn
1400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan FDCAN handle
1401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_UnRegisterTTScheduleSyncCallback(FDCAN_HandleTypeDef *hfdcan)
1404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 2732              		.loc 1 1404 1
 2733              		.cfi_startproc
 2734              		@ args = 0, pretend = 0, frame = 16
 2735              		@ frame_needed = 1, uses_anonymous_args = 0
 2736              		@ link register save eliminated.
 2737 0000 80B4     		push	{r7}
 2738              	.LCFI134:
 2739              		.cfi_def_cfa_offset 4
 2740              		.cfi_offset 7, -4
 2741 0002 85B0     		sub	sp, sp, #20
 2742              	.LCFI135:
 2743              		.cfi_def_cfa_offset 24
 2744 0004 00AF     		add	r7, sp, #0
 2745              	.LCFI136:
 2746              		.cfi_def_cfa_register 7
 2747 0006 7860     		str	r0, [r7, #4]
1405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status = HAL_OK;
 2748              		.loc 1 1405 21
 2749 0008 0023     		movs	r3, #0
 2750 000a FB73     		strb	r3, [r7, #15]
1406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 2751              		.loc 1 1407 13
 2752 000c 7B68     		ldr	r3, [r7, #4]
 2753 000e 93F89830 		ldrb	r3, [r3, #152]
 2754 0012 DBB2     		uxtb	r3, r3
 2755              		.loc 1 1407 6
 2756 0014 012B     		cmp	r3, #1
 2757 0016 04D1     		bne	.L176
1408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TT_ScheduleSyncCallback = HAL_FDCAN_TT_ScheduleSyncCallback; /* Legacy weak TT_Schedule
 2758              		.loc 1 1409 37
 2759 0018 7B68     		ldr	r3, [r7, #4]
 2760 001a 0A4A     		ldr	r2, .L179
 2761 001c C3F8D420 		str	r2, [r3, #212]
 2762 0020 09E0     		b	.L177
 2763              	.L176:
1410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
 2764              		.loc 1 1414 23
 2765 0022 7B68     		ldr	r3, [r7, #4]
 2766 0024 D3F89C30 		ldr	r3, [r3, #156]
 2767 0028 43F48072 		orr	r2, r3, #256
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 74


 2768 002c 7B68     		ldr	r3, [r7, #4]
 2769 002e C3F89C20 		str	r2, [r3, #156]
1415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return error status */
1417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     status =  HAL_ERROR;
 2770              		.loc 1 1417 12
 2771 0032 0123     		movs	r3, #1
 2772 0034 FB73     		strb	r3, [r7, #15]
 2773              	.L177:
1418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
 2774              		.loc 1 1420 10
 2775 0036 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 2776              		.loc 1 1421 1
 2777 0038 1846     		mov	r0, r3
 2778 003a 1437     		adds	r7, r7, #20
 2779              	.LCFI137:
 2780              		.cfi_def_cfa_offset 4
 2781 003c BD46     		mov	sp, r7
 2782              	.LCFI138:
 2783              		.cfi_def_cfa_register 13
 2784              		@ sp needed
 2785 003e 5DF8047B 		ldr	r7, [sp], #4
 2786              	.LCFI139:
 2787              		.cfi_restore 7
 2788              		.cfi_def_cfa_offset 0
 2789 0042 7047     		bx	lr
 2790              	.L180:
 2791              		.align	2
 2792              	.L179:
 2793 0044 00000000 		.word	HAL_FDCAN_TT_ScheduleSyncCallback
 2794              		.cfi_endproc
 2795              	.LFE356:
 2797              		.section	.text.HAL_FDCAN_RegisterTTTimeMarkCallback,"ax",%progbits
 2798              		.align	1
 2799              		.global	HAL_FDCAN_RegisterTTTimeMarkCallback
 2800              		.syntax unified
 2801              		.thumb
 2802              		.thumb_func
 2804              	HAL_FDCAN_RegisterTTTimeMarkCallback:
 2805              	.LFB357:
1422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Register TT Time Mark FDCAN Callback
1425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         To be used instead of the weak HAL_FDCAN_TT_TimeMarkCallback() predefined callback
1426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan FDCAN handle
1427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  pCallback pointer to the TT Time Mark Callback function
1428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_RegisterTTTimeMarkCallback(FDCAN_HandleTypeDef *hfdcan, pFDCAN_TT_TimeM
1431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 2806              		.loc 1 1431 1
 2807              		.cfi_startproc
 2808              		@ args = 0, pretend = 0, frame = 16
 2809              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 75


 2810              		@ link register save eliminated.
 2811 0000 80B4     		push	{r7}
 2812              	.LCFI140:
 2813              		.cfi_def_cfa_offset 4
 2814              		.cfi_offset 7, -4
 2815 0002 85B0     		sub	sp, sp, #20
 2816              	.LCFI141:
 2817              		.cfi_def_cfa_offset 24
 2818 0004 00AF     		add	r7, sp, #0
 2819              	.LCFI142:
 2820              		.cfi_def_cfa_register 7
 2821 0006 7860     		str	r0, [r7, #4]
 2822 0008 3960     		str	r1, [r7]
1432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status = HAL_OK;
 2823              		.loc 1 1432 21
 2824 000a 0023     		movs	r3, #0
 2825 000c FB73     		strb	r3, [r7, #15]
1433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (pCallback == NULL)
 2826              		.loc 1 1434 6
 2827 000e 3B68     		ldr	r3, [r7]
 2828 0010 002B     		cmp	r3, #0
 2829 0012 09D1     		bne	.L182
1435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
 2830              		.loc 1 1437 23
 2831 0014 7B68     		ldr	r3, [r7, #4]
 2832 0016 D3F89C30 		ldr	r3, [r3, #156]
 2833 001a 43F48072 		orr	r2, r3, #256
 2834 001e 7B68     		ldr	r3, [r7, #4]
 2835 0020 C3F89C20 		str	r2, [r3, #156]
1438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 2836              		.loc 1 1438 12
 2837 0024 0123     		movs	r3, #1
 2838 0026 15E0     		b	.L183
 2839              	.L182:
1439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 2840              		.loc 1 1441 13
 2841 0028 7B68     		ldr	r3, [r7, #4]
 2842 002a 93F89830 		ldrb	r3, [r3, #152]
 2843 002e DBB2     		uxtb	r3, r3
 2844              		.loc 1 1441 6
 2845 0030 012B     		cmp	r3, #1
 2846 0032 04D1     		bne	.L184
1442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TT_TimeMarkCallback = pCallback;
 2847              		.loc 1 1443 33
 2848 0034 7B68     		ldr	r3, [r7, #4]
 2849 0036 3A68     		ldr	r2, [r7]
 2850 0038 C3F8D820 		str	r2, [r3, #216]
 2851 003c 09E0     		b	.L185
 2852              	.L184:
1444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 76


1446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
 2853              		.loc 1 1448 23
 2854 003e 7B68     		ldr	r3, [r7, #4]
 2855 0040 D3F89C30 		ldr	r3, [r3, #156]
 2856 0044 43F48072 		orr	r2, r3, #256
 2857 0048 7B68     		ldr	r3, [r7, #4]
 2858 004a C3F89C20 		str	r2, [r3, #156]
1449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return error status */
1451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     status =  HAL_ERROR;
 2859              		.loc 1 1451 12
 2860 004e 0123     		movs	r3, #1
 2861 0050 FB73     		strb	r3, [r7, #15]
 2862              	.L185:
1452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
 2863              		.loc 1 1454 10
 2864 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2865              	.L183:
1455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 2866              		.loc 1 1455 1
 2867 0054 1846     		mov	r0, r3
 2868 0056 1437     		adds	r7, r7, #20
 2869              	.LCFI143:
 2870              		.cfi_def_cfa_offset 4
 2871 0058 BD46     		mov	sp, r7
 2872              	.LCFI144:
 2873              		.cfi_def_cfa_register 13
 2874              		@ sp needed
 2875 005a 5DF8047B 		ldr	r7, [sp], #4
 2876              	.LCFI145:
 2877              		.cfi_restore 7
 2878              		.cfi_def_cfa_offset 0
 2879 005e 7047     		bx	lr
 2880              		.cfi_endproc
 2881              	.LFE357:
 2883              		.section	.text.HAL_FDCAN_UnRegisterTTTimeMarkCallback,"ax",%progbits
 2884              		.align	1
 2885              		.global	HAL_FDCAN_UnRegisterTTTimeMarkCallback
 2886              		.syntax unified
 2887              		.thumb
 2888              		.thumb_func
 2890              	HAL_FDCAN_UnRegisterTTTimeMarkCallback:
 2891              	.LFB358:
1456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  UnRegister the TT Time Mark FDCAN Callback
1459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         TT Time Mark Callback is redirected to the weak HAL_FDCAN_TT_TimeMarkCallback() predefi
1460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan FDCAN handle
1461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_UnRegisterTTTimeMarkCallback(FDCAN_HandleTypeDef *hfdcan)
1464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 2892              		.loc 1 1464 1
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 77


 2893              		.cfi_startproc
 2894              		@ args = 0, pretend = 0, frame = 16
 2895              		@ frame_needed = 1, uses_anonymous_args = 0
 2896              		@ link register save eliminated.
 2897 0000 80B4     		push	{r7}
 2898              	.LCFI146:
 2899              		.cfi_def_cfa_offset 4
 2900              		.cfi_offset 7, -4
 2901 0002 85B0     		sub	sp, sp, #20
 2902              	.LCFI147:
 2903              		.cfi_def_cfa_offset 24
 2904 0004 00AF     		add	r7, sp, #0
 2905              	.LCFI148:
 2906              		.cfi_def_cfa_register 7
 2907 0006 7860     		str	r0, [r7, #4]
1465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status = HAL_OK;
 2908              		.loc 1 1465 21
 2909 0008 0023     		movs	r3, #0
 2910 000a FB73     		strb	r3, [r7, #15]
1466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 2911              		.loc 1 1467 13
 2912 000c 7B68     		ldr	r3, [r7, #4]
 2913 000e 93F89830 		ldrb	r3, [r3, #152]
 2914 0012 DBB2     		uxtb	r3, r3
 2915              		.loc 1 1467 6
 2916 0014 012B     		cmp	r3, #1
 2917 0016 04D1     		bne	.L187
1468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TT_TimeMarkCallback = HAL_FDCAN_TT_TimeMarkCallback; /* Legacy weak TT_TimeMarkCallback
 2918              		.loc 1 1469 33
 2919 0018 7B68     		ldr	r3, [r7, #4]
 2920 001a 0A4A     		ldr	r2, .L190
 2921 001c C3F8D820 		str	r2, [r3, #216]
 2922 0020 09E0     		b	.L188
 2923              	.L187:
1470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
 2924              		.loc 1 1474 23
 2925 0022 7B68     		ldr	r3, [r7, #4]
 2926 0024 D3F89C30 		ldr	r3, [r3, #156]
 2927 0028 43F48072 		orr	r2, r3, #256
 2928 002c 7B68     		ldr	r3, [r7, #4]
 2929 002e C3F89C20 		str	r2, [r3, #156]
1475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return error status */
1477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     status =  HAL_ERROR;
 2930              		.loc 1 1477 12
 2931 0032 0123     		movs	r3, #1
 2932 0034 FB73     		strb	r3, [r7, #15]
 2933              	.L188:
1478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 78


 2934              		.loc 1 1480 10
 2935 0036 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 2936              		.loc 1 1481 1
 2937 0038 1846     		mov	r0, r3
 2938 003a 1437     		adds	r7, r7, #20
 2939              	.LCFI149:
 2940              		.cfi_def_cfa_offset 4
 2941 003c BD46     		mov	sp, r7
 2942              	.LCFI150:
 2943              		.cfi_def_cfa_register 13
 2944              		@ sp needed
 2945 003e 5DF8047B 		ldr	r7, [sp], #4
 2946              	.LCFI151:
 2947              		.cfi_restore 7
 2948              		.cfi_def_cfa_offset 0
 2949 0042 7047     		bx	lr
 2950              	.L191:
 2951              		.align	2
 2952              	.L190:
 2953 0044 00000000 		.word	HAL_FDCAN_TT_TimeMarkCallback
 2954              		.cfi_endproc
 2955              	.LFE358:
 2957              		.section	.text.HAL_FDCAN_RegisterTTStopWatchCallback,"ax",%progbits
 2958              		.align	1
 2959              		.global	HAL_FDCAN_RegisterTTStopWatchCallback
 2960              		.syntax unified
 2961              		.thumb
 2962              		.thumb_func
 2964              	HAL_FDCAN_RegisterTTStopWatchCallback:
 2965              	.LFB359:
1482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Register TT Stop Watch FDCAN Callback
1485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         To be used instead of the weak HAL_FDCAN_TT_StopWatchCallback() predefined callback
1486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan FDCAN handle
1487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  pCallback pointer to the TT Stop Watch Callback function
1488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_RegisterTTStopWatchCallback(FDCAN_HandleTypeDef *hfdcan, pFDCAN_TT_Stop
1491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 2966              		.loc 1 1491 1
 2967              		.cfi_startproc
 2968              		@ args = 0, pretend = 0, frame = 16
 2969              		@ frame_needed = 1, uses_anonymous_args = 0
 2970              		@ link register save eliminated.
 2971 0000 80B4     		push	{r7}
 2972              	.LCFI152:
 2973              		.cfi_def_cfa_offset 4
 2974              		.cfi_offset 7, -4
 2975 0002 85B0     		sub	sp, sp, #20
 2976              	.LCFI153:
 2977              		.cfi_def_cfa_offset 24
 2978 0004 00AF     		add	r7, sp, #0
 2979              	.LCFI154:
 2980              		.cfi_def_cfa_register 7
 2981 0006 7860     		str	r0, [r7, #4]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 79


 2982 0008 3960     		str	r1, [r7]
1492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status = HAL_OK;
 2983              		.loc 1 1492 21
 2984 000a 0023     		movs	r3, #0
 2985 000c FB73     		strb	r3, [r7, #15]
1493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (pCallback == NULL)
 2986              		.loc 1 1494 6
 2987 000e 3B68     		ldr	r3, [r7]
 2988 0010 002B     		cmp	r3, #0
 2989 0012 09D1     		bne	.L193
1495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
 2990              		.loc 1 1497 23
 2991 0014 7B68     		ldr	r3, [r7, #4]
 2992 0016 D3F89C30 		ldr	r3, [r3, #156]
 2993 001a 43F48072 		orr	r2, r3, #256
 2994 001e 7B68     		ldr	r3, [r7, #4]
 2995 0020 C3F89C20 		str	r2, [r3, #156]
1498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 2996              		.loc 1 1498 12
 2997 0024 0123     		movs	r3, #1
 2998 0026 15E0     		b	.L194
 2999              	.L193:
1499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 3000              		.loc 1 1501 13
 3001 0028 7B68     		ldr	r3, [r7, #4]
 3002 002a 93F89830 		ldrb	r3, [r3, #152]
 3003 002e DBB2     		uxtb	r3, r3
 3004              		.loc 1 1501 6
 3005 0030 012B     		cmp	r3, #1
 3006 0032 04D1     		bne	.L195
1502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TT_StopWatchCallback = pCallback;
 3007              		.loc 1 1503 34
 3008 0034 7B68     		ldr	r3, [r7, #4]
 3009 0036 3A68     		ldr	r2, [r7]
 3010 0038 C3F8DC20 		str	r2, [r3, #220]
 3011 003c 09E0     		b	.L196
 3012              	.L195:
1504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
 3013              		.loc 1 1508 23
 3014 003e 7B68     		ldr	r3, [r7, #4]
 3015 0040 D3F89C30 		ldr	r3, [r3, #156]
 3016 0044 43F48072 		orr	r2, r3, #256
 3017 0048 7B68     		ldr	r3, [r7, #4]
 3018 004a C3F89C20 		str	r2, [r3, #156]
1509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return error status */
1511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     status =  HAL_ERROR;
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 80


 3019              		.loc 1 1511 12
 3020 004e 0123     		movs	r3, #1
 3021 0050 FB73     		strb	r3, [r7, #15]
 3022              	.L196:
1512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
 3023              		.loc 1 1514 10
 3024 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3025              	.L194:
1515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 3026              		.loc 1 1515 1
 3027 0054 1846     		mov	r0, r3
 3028 0056 1437     		adds	r7, r7, #20
 3029              	.LCFI155:
 3030              		.cfi_def_cfa_offset 4
 3031 0058 BD46     		mov	sp, r7
 3032              	.LCFI156:
 3033              		.cfi_def_cfa_register 13
 3034              		@ sp needed
 3035 005a 5DF8047B 		ldr	r7, [sp], #4
 3036              	.LCFI157:
 3037              		.cfi_restore 7
 3038              		.cfi_def_cfa_offset 0
 3039 005e 7047     		bx	lr
 3040              		.cfi_endproc
 3041              	.LFE359:
 3043              		.section	.text.HAL_FDCAN_UnRegisterTTStopWatchCallback,"ax",%progbits
 3044              		.align	1
 3045              		.global	HAL_FDCAN_UnRegisterTTStopWatchCallback
 3046              		.syntax unified
 3047              		.thumb
 3048              		.thumb_func
 3050              	HAL_FDCAN_UnRegisterTTStopWatchCallback:
 3051              	.LFB360:
1516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  UnRegister the TT Stop Watch FDCAN Callback
1519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         TT Stop Watch Callback is redirected to the weak HAL_FDCAN_TT_StopWatchCallback() prede
1520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan FDCAN handle
1521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_UnRegisterTTStopWatchCallback(FDCAN_HandleTypeDef *hfdcan)
1524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 3052              		.loc 1 1524 1
 3053              		.cfi_startproc
 3054              		@ args = 0, pretend = 0, frame = 16
 3055              		@ frame_needed = 1, uses_anonymous_args = 0
 3056              		@ link register save eliminated.
 3057 0000 80B4     		push	{r7}
 3058              	.LCFI158:
 3059              		.cfi_def_cfa_offset 4
 3060              		.cfi_offset 7, -4
 3061 0002 85B0     		sub	sp, sp, #20
 3062              	.LCFI159:
 3063              		.cfi_def_cfa_offset 24
 3064 0004 00AF     		add	r7, sp, #0
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 81


 3065              	.LCFI160:
 3066              		.cfi_def_cfa_register 7
 3067 0006 7860     		str	r0, [r7, #4]
1525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status = HAL_OK;
 3068              		.loc 1 1525 21
 3069 0008 0023     		movs	r3, #0
 3070 000a FB73     		strb	r3, [r7, #15]
1526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 3071              		.loc 1 1527 13
 3072 000c 7B68     		ldr	r3, [r7, #4]
 3073 000e 93F89830 		ldrb	r3, [r3, #152]
 3074 0012 DBB2     		uxtb	r3, r3
 3075              		.loc 1 1527 6
 3076 0014 012B     		cmp	r3, #1
 3077 0016 04D1     		bne	.L198
1528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TT_StopWatchCallback = HAL_FDCAN_TT_StopWatchCallback; /* Legacy weak TT_StopWatchCallb
 3078              		.loc 1 1529 34
 3079 0018 7B68     		ldr	r3, [r7, #4]
 3080 001a 0A4A     		ldr	r2, .L201
 3081 001c C3F8DC20 		str	r2, [r3, #220]
 3082 0020 09E0     		b	.L199
 3083              	.L198:
1530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
 3084              		.loc 1 1534 23
 3085 0022 7B68     		ldr	r3, [r7, #4]
 3086 0024 D3F89C30 		ldr	r3, [r3, #156]
 3087 0028 43F48072 		orr	r2, r3, #256
 3088 002c 7B68     		ldr	r3, [r7, #4]
 3089 002e C3F89C20 		str	r2, [r3, #156]
1535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return error status */
1537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     status =  HAL_ERROR;
 3090              		.loc 1 1537 12
 3091 0032 0123     		movs	r3, #1
 3092 0034 FB73     		strb	r3, [r7, #15]
 3093              	.L199:
1538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
 3094              		.loc 1 1540 10
 3095 0036 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 3096              		.loc 1 1541 1
 3097 0038 1846     		mov	r0, r3
 3098 003a 1437     		adds	r7, r7, #20
 3099              	.LCFI161:
 3100              		.cfi_def_cfa_offset 4
 3101 003c BD46     		mov	sp, r7
 3102              	.LCFI162:
 3103              		.cfi_def_cfa_register 13
 3104              		@ sp needed
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 82


 3105 003e 5DF8047B 		ldr	r7, [sp], #4
 3106              	.LCFI163:
 3107              		.cfi_restore 7
 3108              		.cfi_def_cfa_offset 0
 3109 0042 7047     		bx	lr
 3110              	.L202:
 3111              		.align	2
 3112              	.L201:
 3113 0044 00000000 		.word	HAL_FDCAN_TT_StopWatchCallback
 3114              		.cfi_endproc
 3115              	.LFE360:
 3117              		.section	.text.HAL_FDCAN_RegisterTTGlobalTimeCallback,"ax",%progbits
 3118              		.align	1
 3119              		.global	HAL_FDCAN_RegisterTTGlobalTimeCallback
 3120              		.syntax unified
 3121              		.thumb
 3122              		.thumb_func
 3124              	HAL_FDCAN_RegisterTTGlobalTimeCallback:
 3125              	.LFB361:
1542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Register TT Global Time FDCAN Callback
1545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         To be used instead of the weak HAL_FDCAN_TT_GlobalTimeCallback() predefined callback
1546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan FDCAN handle
1547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  pCallback pointer to the TT Global Time Callback function
1548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_RegisterTTGlobalTimeCallback(FDCAN_HandleTypeDef *hfdcan, pFDCAN_TT_Glo
1551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 3126              		.loc 1 1551 1
 3127              		.cfi_startproc
 3128              		@ args = 0, pretend = 0, frame = 16
 3129              		@ frame_needed = 1, uses_anonymous_args = 0
 3130              		@ link register save eliminated.
 3131 0000 80B4     		push	{r7}
 3132              	.LCFI164:
 3133              		.cfi_def_cfa_offset 4
 3134              		.cfi_offset 7, -4
 3135 0002 85B0     		sub	sp, sp, #20
 3136              	.LCFI165:
 3137              		.cfi_def_cfa_offset 24
 3138 0004 00AF     		add	r7, sp, #0
 3139              	.LCFI166:
 3140              		.cfi_def_cfa_register 7
 3141 0006 7860     		str	r0, [r7, #4]
 3142 0008 3960     		str	r1, [r7]
1552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status = HAL_OK;
 3143              		.loc 1 1552 21
 3144 000a 0023     		movs	r3, #0
 3145 000c FB73     		strb	r3, [r7, #15]
1553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (pCallback == NULL)
 3146              		.loc 1 1554 6
 3147 000e 3B68     		ldr	r3, [r7]
 3148 0010 002B     		cmp	r3, #0
 3149 0012 09D1     		bne	.L204
1555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 83


1556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
 3150              		.loc 1 1557 23
 3151 0014 7B68     		ldr	r3, [r7, #4]
 3152 0016 D3F89C30 		ldr	r3, [r3, #156]
 3153 001a 43F48072 		orr	r2, r3, #256
 3154 001e 7B68     		ldr	r3, [r7, #4]
 3155 0020 C3F89C20 		str	r2, [r3, #156]
1558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 3156              		.loc 1 1558 12
 3157 0024 0123     		movs	r3, #1
 3158 0026 15E0     		b	.L205
 3159              	.L204:
1559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 3160              		.loc 1 1561 13
 3161 0028 7B68     		ldr	r3, [r7, #4]
 3162 002a 93F89830 		ldrb	r3, [r3, #152]
 3163 002e DBB2     		uxtb	r3, r3
 3164              		.loc 1 1561 6
 3165 0030 012B     		cmp	r3, #1
 3166 0032 04D1     		bne	.L206
1562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TT_GlobalTimeCallback = pCallback;
 3167              		.loc 1 1563 35
 3168 0034 7B68     		ldr	r3, [r7, #4]
 3169 0036 3A68     		ldr	r2, [r7]
 3170 0038 C3F8E020 		str	r2, [r3, #224]
 3171 003c 09E0     		b	.L207
 3172              	.L206:
1564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
 3173              		.loc 1 1568 23
 3174 003e 7B68     		ldr	r3, [r7, #4]
 3175 0040 D3F89C30 		ldr	r3, [r3, #156]
 3176 0044 43F48072 		orr	r2, r3, #256
 3177 0048 7B68     		ldr	r3, [r7, #4]
 3178 004a C3F89C20 		str	r2, [r3, #156]
1569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return error status */
1571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     status =  HAL_ERROR;
 3179              		.loc 1 1571 12
 3180 004e 0123     		movs	r3, #1
 3181 0050 FB73     		strb	r3, [r7, #15]
 3182              	.L207:
1572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
 3183              		.loc 1 1574 10
 3184 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3185              	.L205:
1575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 3186              		.loc 1 1575 1
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 84


 3187 0054 1846     		mov	r0, r3
 3188 0056 1437     		adds	r7, r7, #20
 3189              	.LCFI167:
 3190              		.cfi_def_cfa_offset 4
 3191 0058 BD46     		mov	sp, r7
 3192              	.LCFI168:
 3193              		.cfi_def_cfa_register 13
 3194              		@ sp needed
 3195 005a 5DF8047B 		ldr	r7, [sp], #4
 3196              	.LCFI169:
 3197              		.cfi_restore 7
 3198              		.cfi_def_cfa_offset 0
 3199 005e 7047     		bx	lr
 3200              		.cfi_endproc
 3201              	.LFE361:
 3203              		.section	.text.HAL_FDCAN_UnRegisterTTGlobalTimeCallback,"ax",%progbits
 3204              		.align	1
 3205              		.global	HAL_FDCAN_UnRegisterTTGlobalTimeCallback
 3206              		.syntax unified
 3207              		.thumb
 3208              		.thumb_func
 3210              	HAL_FDCAN_UnRegisterTTGlobalTimeCallback:
 3211              	.LFB362:
1576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  UnRegister the TT Global Time FDCAN Callback
1579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         TT Global Time Callback is redirected to the weak HAL_FDCAN_TT_GlobalTimeCallback() pre
1580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan FDCAN handle
1581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_UnRegisterTTGlobalTimeCallback(FDCAN_HandleTypeDef *hfdcan)
1584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 3212              		.loc 1 1584 1
 3213              		.cfi_startproc
 3214              		@ args = 0, pretend = 0, frame = 16
 3215              		@ frame_needed = 1, uses_anonymous_args = 0
 3216              		@ link register save eliminated.
 3217 0000 80B4     		push	{r7}
 3218              	.LCFI170:
 3219              		.cfi_def_cfa_offset 4
 3220              		.cfi_offset 7, -4
 3221 0002 85B0     		sub	sp, sp, #20
 3222              	.LCFI171:
 3223              		.cfi_def_cfa_offset 24
 3224 0004 00AF     		add	r7, sp, #0
 3225              	.LCFI172:
 3226              		.cfi_def_cfa_register 7
 3227 0006 7860     		str	r0, [r7, #4]
1585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_StatusTypeDef status = HAL_OK;
 3228              		.loc 1 1585 21
 3229 0008 0023     		movs	r3, #0
 3230 000a FB73     		strb	r3, [r7, #15]
1586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 3231              		.loc 1 1587 13
 3232 000c 7B68     		ldr	r3, [r7, #4]
 3233 000e 93F89830 		ldrb	r3, [r3, #152]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 85


 3234 0012 DBB2     		uxtb	r3, r3
 3235              		.loc 1 1587 6
 3236 0014 012B     		cmp	r3, #1
 3237 0016 04D1     		bne	.L209
1588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TT_GlobalTimeCallback = HAL_FDCAN_TT_GlobalTimeCallback; /* Legacy weak TT_GlobalTimeCa
 3238              		.loc 1 1589 35
 3239 0018 7B68     		ldr	r3, [r7, #4]
 3240 001a 0A4A     		ldr	r2, .L212
 3241 001c C3F8E020 		str	r2, [r3, #224]
 3242 0020 09E0     		b	.L210
 3243              	.L209:
1590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update the error code */
1594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_INVALID_CALLBACK;
 3244              		.loc 1 1594 23
 3245 0022 7B68     		ldr	r3, [r7, #4]
 3246 0024 D3F89C30 		ldr	r3, [r3, #156]
 3247 0028 43F48072 		orr	r2, r3, #256
 3248 002c 7B68     		ldr	r3, [r7, #4]
 3249 002e C3F89C20 		str	r2, [r3, #156]
1595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return error status */
1597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     status =  HAL_ERROR;
 3250              		.loc 1 1597 12
 3251 0032 0123     		movs	r3, #1
 3252 0034 FB73     		strb	r3, [r7, #15]
 3253              	.L210:
1598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return status;
 3254              		.loc 1 1600 10
 3255 0036 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 3256              		.loc 1 1601 1
 3257 0038 1846     		mov	r0, r3
 3258 003a 1437     		adds	r7, r7, #20
 3259              	.LCFI173:
 3260              		.cfi_def_cfa_offset 4
 3261 003c BD46     		mov	sp, r7
 3262              	.LCFI174:
 3263              		.cfi_def_cfa_register 13
 3264              		@ sp needed
 3265 003e 5DF8047B 		ldr	r7, [sp], #4
 3266              	.LCFI175:
 3267              		.cfi_restore 7
 3268              		.cfi_def_cfa_offset 0
 3269 0042 7047     		bx	lr
 3270              	.L213:
 3271              		.align	2
 3272              	.L212:
 3273 0044 00000000 		.word	HAL_FDCAN_TT_GlobalTimeCallback
 3274              		.cfi_endproc
 3275              	.LFE362:
 3277              		.section	.text.HAL_FDCAN_ConfigClockCalibration,"ax",%progbits
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 86


 3278              		.align	1
 3279              		.global	HAL_FDCAN_ConfigClockCalibration
 3280              		.syntax unified
 3281              		.thumb
 3282              		.thumb_func
 3284              	HAL_FDCAN_ConfigClockCalibration:
 3285              	.LFB363:
1602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #endif /* USE_HAL_FDCAN_REGISTER_CALLBACKS */
1604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @}
1607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /** @defgroup FDCAN_Exported_Functions_Group2 Configuration functions
1610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****  *  @brief    FDCAN Configuration functions.
1611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****  *
1612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** @verbatim
1613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ==============================================================================
1614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****               ##### Configuration functions #####
1615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ==============================================================================
1616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     [..]  This section provides functions allowing to:
1617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_ConfigClockCalibration        : Configure the FDCAN clock calibration unit
1618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         (+) HAL_FDCAN_GetClockCalibrationState      : Get the clock calibration state
1619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         (+) HAL_FDCAN_ResetClockCalibrationState    : Reset the clock calibration state
1620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         (+) HAL_FDCAN_GetClockCalibrationCounter    : Get the clock calibration counters values
1621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_ConfigFilter                  : Configure the FDCAN reception filters
1622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_ConfigGlobalFilter            : Configure the FDCAN global filter
1623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_ConfigExtendedIdMask          : Configure the extended ID mask
1624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_ConfigRxFifoOverwrite         : Configure the Rx FIFO operation mode
1625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_ConfigFifoWatermark           : Configure the FIFO watermark
1626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_ConfigRamWatchdog             : Configure the RAM watchdog
1627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_ConfigTimestampCounter        : Configure the timestamp counter
1628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         (+) HAL_FDCAN_EnableTimestampCounter        : Enable the timestamp counter
1629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         (+) HAL_FDCAN_DisableTimestampCounter       : Disable the timestamp counter
1630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         (+) HAL_FDCAN_GetTimestampCounter           : Get the timestamp counter value
1631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         (+) HAL_FDCAN_ResetTimestampCounter         : Reset the timestamp counter to zero
1632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_ConfigTimeoutCounter          : Configure the timeout counter
1633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         (+) HAL_FDCAN_EnableTimeoutCounter          : Enable the timeout counter
1634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         (+) HAL_FDCAN_DisableTimeoutCounter         : Disable the timeout counter
1635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         (+) HAL_FDCAN_GetTimeoutCounter             : Get the timeout counter value
1636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         (+) HAL_FDCAN_ResetTimeoutCounter           : Reset the timeout counter to its start value
1637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_ConfigTxDelayCompensation     : Configure the transmitter delay compensation
1638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         (+) HAL_FDCAN_EnableTxDelayCompensation     : Enable the transmitter delay compensation
1639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         (+) HAL_FDCAN_DisableTxDelayCompensation    : Disable the transmitter delay compensation
1640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_EnableISOMode                 : Enable ISO 11898-1 protocol mode
1641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_DisableISOMode                : Disable ISO 11898-1 protocol mode
1642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_EnableEdgeFiltering           : Enable edge filtering during bus integration
1643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_DisableEdgeFiltering          : Disable edge filtering during bus integration
1644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** @endverbatim
1646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @{
1647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Configure the FDCAN clock calibration unit according to the specified
1651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         parameters in the FDCAN_ClkCalUnitTypeDef structure.
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 87


1652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
1653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
1654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  sCcuConfig pointer to an FDCAN_ClkCalUnitTypeDef structure that
1655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         contains the clock calibration information
1656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_ConfigClockCalibration(FDCAN_HandleTypeDef *hfdcan, FDCAN_ClkCalUnitTyp
1659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 3286              		.loc 1 1659 1
 3287              		.cfi_startproc
 3288              		@ args = 0, pretend = 0, frame = 8
 3289              		@ frame_needed = 1, uses_anonymous_args = 0
 3290              		@ link register save eliminated.
 3291 0000 80B4     		push	{r7}
 3292              	.LCFI176:
 3293              		.cfi_def_cfa_offset 4
 3294              		.cfi_offset 7, -4
 3295 0002 83B0     		sub	sp, sp, #12
 3296              	.LCFI177:
 3297              		.cfi_def_cfa_offset 16
 3298 0004 00AF     		add	r7, sp, #0
 3299              	.LCFI178:
 3300              		.cfi_def_cfa_register 7
 3301 0006 7860     		str	r0, [r7, #4]
 3302 0008 3960     		str	r1, [r7]
1660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
1661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_CLOCK_CALIBRATION(sCcuConfig->ClockCalibration));
1662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (sCcuConfig->ClockCalibration == FDCAN_CLOCK_CALIBRATION_DISABLE)
1663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_CKDIV(sCcuConfig->ClockDivider));
1665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_MAX_VALUE(sCcuConfig->MinOscClkPeriods, 0xFFU));
1669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_CALIBRATION_FIELD_LENGTH(sCcuConfig->CalFieldLength));
1670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_MIN_VALUE(sCcuConfig->TimeQuantaPerBitTime, 4U));
1671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_MAX_VALUE(sCcuConfig->TimeQuantaPerBitTime, 0x25U));
1672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_MAX_VALUE(sCcuConfig->WatchdogStartValue, 0xFFFFU));
1673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* FDCAN1 should be initialized in order to use clock calibration */
1676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->Instance != FDCAN1)
 3303              		.loc 1 1676 13
 3304 000a 7B68     		ldr	r3, [r7, #4]
 3305 000c 1B68     		ldr	r3, [r3]
 3306              		.loc 1 1676 6
 3307 000e 2B4A     		ldr	r2, .L220
 3308 0010 9342     		cmp	r3, r2
 3309 0012 09D0     		beq	.L215
1677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
1679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_PARAM;
 3310              		.loc 1 1679 23
 3311 0014 7B68     		ldr	r3, [r7, #4]
 3312 0016 D3F89C30 		ldr	r3, [r3, #156]
 3313 001a 43F02002 		orr	r2, r3, #32
 3314 001e 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 88


 3315 0020 C3F89C20 		str	r2, [r3, #156]
1680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 3316              		.loc 1 1681 12
 3317 0024 0123     		movs	r3, #1
 3318 0026 43E0     		b	.L216
 3319              	.L215:
1682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 3320              		.loc 1 1684 13
 3321 0028 7B68     		ldr	r3, [r7, #4]
 3322 002a 93F89830 		ldrb	r3, [r3, #152]
 3323 002e DBB2     		uxtb	r3, r3
 3324              		.loc 1 1684 6
 3325 0030 012B     		cmp	r3, #1
 3326 0032 34D1     		bne	.L217
1685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (sCcuConfig->ClockCalibration == FDCAN_CLOCK_CALIBRATION_DISABLE)
 3327              		.loc 1 1686 19
 3328 0034 3B68     		ldr	r3, [r7]
 3329 0036 1B68     		ldr	r3, [r3]
 3330              		.loc 1 1686 8
 3331 0038 002B     		cmp	r3, #0
 3332 003a 0FD1     		bne	.L218
1687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
1688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Bypass clock calibration */
1689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       SET_BIT(FDCAN_CCU->CCFG, FDCANCCU_CCFG_BCC);
 3333              		.loc 1 1689 7
 3334 003c 204B     		ldr	r3, .L220+4
 3335 003e 5B68     		ldr	r3, [r3, #4]
 3336 0040 1F4A     		ldr	r2, .L220+4
 3337 0042 43F04003 		orr	r3, r3, #64
 3338 0046 5360     		str	r3, [r2, #4]
1690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Configure clock divider */
1692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       MODIFY_REG(FDCAN_CCU->CCFG, FDCANCCU_CCFG_CDIV, sCcuConfig->ClockDivider);
 3339              		.loc 1 1692 7
 3340 0048 1D4B     		ldr	r3, .L220+4
 3341 004a 5B68     		ldr	r3, [r3, #4]
 3342 004c 23F47022 		bic	r2, r3, #983040
 3343 0050 3B68     		ldr	r3, [r7]
 3344 0052 5B68     		ldr	r3, [r3, #4]
 3345 0054 1A49     		ldr	r1, .L220+4
 3346 0056 1343     		orrs	r3, r3, r2
 3347 0058 4B60     		str	r3, [r1, #4]
 3348 005a 1EE0     		b	.L219
 3349              	.L218:
1693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
1694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else /* sCcuConfig->ClockCalibration == ENABLE */
1695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
1696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Clock calibration unit generates time quanta clock */
1697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       CLEAR_BIT(FDCAN_CCU->CCFG, FDCANCCU_CCFG_BCC);
 3350              		.loc 1 1697 7
 3351 005c 184B     		ldr	r3, .L220+4
 3352 005e 5B68     		ldr	r3, [r3, #4]
 3353 0060 174A     		ldr	r2, .L220+4
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 89


 3354 0062 23F04003 		bic	r3, r3, #64
 3355 0066 5360     		str	r3, [r2, #4]
1698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Configure clock calibration unit */
1700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       MODIFY_REG(FDCAN_CCU->CCFG,
 3356              		.loc 1 1700 7
 3357 0068 154B     		ldr	r3, .L220+4
 3358 006a 5A68     		ldr	r2, [r3, #4]
 3359 006c 154B     		ldr	r3, .L220+8
 3360 006e 1340     		ands	r3, r3, r2
 3361 0070 3A68     		ldr	r2, [r7]
 3362 0072 1169     		ldr	r1, [r2, #16]
 3363 0074 3A68     		ldr	r2, [r7]
 3364 0076 D268     		ldr	r2, [r2, #12]
 3365 0078 1143     		orrs	r1, r1, r2
 3366 007a 3A68     		ldr	r2, [r7]
 3367 007c 9268     		ldr	r2, [r2, #8]
 3368 007e 1202     		lsls	r2, r2, #8
 3369 0080 0A43     		orrs	r2, r2, r1
 3370 0082 0F49     		ldr	r1, .L220+4
 3371 0084 1343     		orrs	r3, r3, r2
 3372 0086 4B60     		str	r3, [r1, #4]
1701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                  (FDCANCCU_CCFG_TQBT | FDCANCCU_CCFG_CFL | FDCANCCU_CCFG_OCPM),
1702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                  ((sCcuConfig->TimeQuantaPerBitTime << FDCANCCU_CCFG_TQBT_Pos) | sCcuConfig->CalFie
1703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Configure the start value of the calibration watchdog counter */
1705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       MODIFY_REG(FDCAN_CCU->CWD, FDCANCCU_CWD_WDC, sCcuConfig->WatchdogStartValue);
 3373              		.loc 1 1705 7
 3374 0088 0D4B     		ldr	r3, .L220+4
 3375 008a DA68     		ldr	r2, [r3, #12]
 3376 008c 0E4B     		ldr	r3, .L220+12
 3377 008e 1340     		ands	r3, r3, r2
 3378 0090 3A68     		ldr	r2, [r7]
 3379 0092 5269     		ldr	r2, [r2, #20]
 3380 0094 0A49     		ldr	r1, .L220+4
 3381 0096 1343     		orrs	r3, r3, r2
 3382 0098 CB60     		str	r3, [r1, #12]
 3383              	.L219:
1706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
1707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
1709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 3384              		.loc 1 1709 12
 3385 009a 0023     		movs	r3, #0
 3386 009c 08E0     		b	.L216
 3387              	.L217:
1710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
1714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
 3388              		.loc 1 1714 23
 3389 009e 7B68     		ldr	r3, [r7, #4]
 3390 00a0 D3F89C30 		ldr	r3, [r3, #156]
 3391 00a4 43F00402 		orr	r2, r3, #4
 3392 00a8 7B68     		ldr	r3, [r7, #4]
 3393 00aa C3F89C20 		str	r2, [r3, #156]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 90


1715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 3394              		.loc 1 1716 12
 3395 00ae 0123     		movs	r3, #1
 3396              	.L216:
1717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 3397              		.loc 1 1718 1
 3398 00b0 1846     		mov	r0, r3
 3399 00b2 0C37     		adds	r7, r7, #12
 3400              	.LCFI179:
 3401              		.cfi_def_cfa_offset 4
 3402 00b4 BD46     		mov	sp, r7
 3403              	.LCFI180:
 3404              		.cfi_def_cfa_register 13
 3405              		@ sp needed
 3406 00b6 5DF8047B 		ldr	r7, [sp], #4
 3407              	.LCFI181:
 3408              		.cfi_restore 7
 3409              		.cfi_def_cfa_offset 0
 3410 00ba 7047     		bx	lr
 3411              	.L221:
 3412              		.align	2
 3413              	.L220:
 3414 00bc 00A00040 		.word	1073782784
 3415 00c0 00A80040 		.word	1073784832
 3416 00c4 6000FFFF 		.word	-65440
 3417 00c8 0000FFFF 		.word	-65536
 3418              		.cfi_endproc
 3419              	.LFE363:
 3421              		.section	.text.HAL_FDCAN_GetClockCalibrationState,"ax",%progbits
 3422              		.align	1
 3423              		.global	HAL_FDCAN_GetClockCalibrationState
 3424              		.syntax unified
 3425              		.thumb
 3426              		.thumb_func
 3428              	HAL_FDCAN_GetClockCalibrationState:
 3429              	.LFB364:
1719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Get the clock calibration state.
1722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
1723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
1724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval State clock calibration state (can be a value of @arg FDCAN_calibration_state)
1725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** uint32_t HAL_FDCAN_GetClockCalibrationState(FDCAN_HandleTypeDef *hfdcan)
1727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 3430              		.loc 1 1727 1
 3431              		.cfi_startproc
 3432              		@ args = 0, pretend = 0, frame = 8
 3433              		@ frame_needed = 1, uses_anonymous_args = 0
 3434              		@ link register save eliminated.
 3435 0000 80B4     		push	{r7}
 3436              	.LCFI182:
 3437              		.cfi_def_cfa_offset 4
 3438              		.cfi_offset 7, -4
 3439 0002 83B0     		sub	sp, sp, #12
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 91


 3440              	.LCFI183:
 3441              		.cfi_def_cfa_offset 16
 3442 0004 00AF     		add	r7, sp, #0
 3443              	.LCFI184:
 3444              		.cfi_def_cfa_register 7
 3445 0006 7860     		str	r0, [r7, #4]
1728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Prevent unused argument(s) compilation warning */
1729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(hfdcan);
1730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return (FDCAN_CCU->CSTAT & FDCANCCU_CSTAT_CALS);
 3446              		.loc 1 1731 20
 3447 0008 044B     		ldr	r3, .L224
 3448 000a 9B68     		ldr	r3, [r3, #8]
 3449              		.loc 1 1731 28
 3450 000c 03F04043 		and	r3, r3, #-1073741824
1732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 3451              		.loc 1 1732 1
 3452 0010 1846     		mov	r0, r3
 3453 0012 0C37     		adds	r7, r7, #12
 3454              	.LCFI185:
 3455              		.cfi_def_cfa_offset 4
 3456 0014 BD46     		mov	sp, r7
 3457              	.LCFI186:
 3458              		.cfi_def_cfa_register 13
 3459              		@ sp needed
 3460 0016 5DF8047B 		ldr	r7, [sp], #4
 3461              	.LCFI187:
 3462              		.cfi_restore 7
 3463              		.cfi_def_cfa_offset 0
 3464 001a 7047     		bx	lr
 3465              	.L225:
 3466              		.align	2
 3467              	.L224:
 3468 001c 00A80040 		.word	1073784832
 3469              		.cfi_endproc
 3470              	.LFE364:
 3472              		.section	.text.HAL_FDCAN_ResetClockCalibrationState,"ax",%progbits
 3473              		.align	1
 3474              		.global	HAL_FDCAN_ResetClockCalibrationState
 3475              		.syntax unified
 3476              		.thumb
 3477              		.thumb_func
 3479              	HAL_FDCAN_ResetClockCalibrationState:
 3480              	.LFB365:
1733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Reset the clock calibration state.
1736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
1737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
1738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_ResetClockCalibrationState(FDCAN_HandleTypeDef *hfdcan)
1741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 3481              		.loc 1 1741 1
 3482              		.cfi_startproc
 3483              		@ args = 0, pretend = 0, frame = 8
 3484              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 92


 3485              		@ link register save eliminated.
 3486 0000 80B4     		push	{r7}
 3487              	.LCFI188:
 3488              		.cfi_def_cfa_offset 4
 3489              		.cfi_offset 7, -4
 3490 0002 83B0     		sub	sp, sp, #12
 3491              	.LCFI189:
 3492              		.cfi_def_cfa_offset 16
 3493 0004 00AF     		add	r7, sp, #0
 3494              	.LCFI190:
 3495              		.cfi_def_cfa_register 7
 3496 0006 7860     		str	r0, [r7, #4]
1742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* FDCAN1 should be initialized in order to use clock calibration */
1743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->Instance != FDCAN1)
 3497              		.loc 1 1743 13
 3498 0008 7B68     		ldr	r3, [r7, #4]
 3499 000a 1B68     		ldr	r3, [r3]
 3500              		.loc 1 1743 6
 3501 000c 144A     		ldr	r2, .L230
 3502 000e 9342     		cmp	r3, r2
 3503 0010 09D0     		beq	.L227
1744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
1746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_PARAM;
 3504              		.loc 1 1746 23
 3505 0012 7B68     		ldr	r3, [r7, #4]
 3506 0014 D3F89C30 		ldr	r3, [r3, #156]
 3507 0018 43F02002 		orr	r2, r3, #32
 3508 001c 7B68     		ldr	r3, [r7, #4]
 3509 001e C3F89C20 		str	r2, [r3, #156]
1747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 3510              		.loc 1 1748 12
 3511 0022 0123     		movs	r3, #1
 3512 0024 16E0     		b	.L228
 3513              	.L227:
1749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 3514              		.loc 1 1751 13
 3515 0026 7B68     		ldr	r3, [r7, #4]
 3516 0028 93F89830 		ldrb	r3, [r3, #152]
 3517 002c DBB2     		uxtb	r3, r3
 3518              		.loc 1 1751 6
 3519 002e 012B     		cmp	r3, #1
 3520 0030 07D1     		bne	.L229
1752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Calibration software reset */
1754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     SET_BIT(FDCAN_CCU->CCFG, FDCANCCU_CCFG_SWR);
 3521              		.loc 1 1754 5
 3522 0032 0C4B     		ldr	r3, .L230+4
 3523 0034 5B68     		ldr	r3, [r3, #4]
 3524 0036 0B4A     		ldr	r2, .L230+4
 3525 0038 43F00043 		orr	r3, r3, #-2147483648
 3526 003c 5360     		str	r3, [r2, #4]
1755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 93


1757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 3527              		.loc 1 1757 12
 3528 003e 0023     		movs	r3, #0
 3529 0040 08E0     		b	.L228
 3530              	.L229:
1758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
1762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
 3531              		.loc 1 1762 23
 3532 0042 7B68     		ldr	r3, [r7, #4]
 3533 0044 D3F89C30 		ldr	r3, [r3, #156]
 3534 0048 43F00402 		orr	r2, r3, #4
 3535 004c 7B68     		ldr	r3, [r7, #4]
 3536 004e C3F89C20 		str	r2, [r3, #156]
1763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 3537              		.loc 1 1764 12
 3538 0052 0123     		movs	r3, #1
 3539              	.L228:
1765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 3540              		.loc 1 1766 1
 3541 0054 1846     		mov	r0, r3
 3542 0056 0C37     		adds	r7, r7, #12
 3543              	.LCFI191:
 3544              		.cfi_def_cfa_offset 4
 3545 0058 BD46     		mov	sp, r7
 3546              	.LCFI192:
 3547              		.cfi_def_cfa_register 13
 3548              		@ sp needed
 3549 005a 5DF8047B 		ldr	r7, [sp], #4
 3550              	.LCFI193:
 3551              		.cfi_restore 7
 3552              		.cfi_def_cfa_offset 0
 3553 005e 7047     		bx	lr
 3554              	.L231:
 3555              		.align	2
 3556              	.L230:
 3557 0060 00A00040 		.word	1073782784
 3558 0064 00A80040 		.word	1073784832
 3559              		.cfi_endproc
 3560              	.LFE365:
 3562              		.section	.text.HAL_FDCAN_GetClockCalibrationCounter,"ax",%progbits
 3563              		.align	1
 3564              		.global	HAL_FDCAN_GetClockCalibrationCounter
 3565              		.syntax unified
 3566              		.thumb
 3567              		.thumb_func
 3569              	HAL_FDCAN_GetClockCalibrationCounter:
 3570              	.LFB366:
1767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Get the clock calibration counter value.
1770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
1771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 94


1772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  Counter clock calibration counter.
1773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be a value of @arg FDCAN_calibration_counter.
1774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval Value clock calibration counter value
1775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** uint32_t HAL_FDCAN_GetClockCalibrationCounter(FDCAN_HandleTypeDef *hfdcan, uint32_t Counter)
1777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 3571              		.loc 1 1777 1
 3572              		.cfi_startproc
 3573              		@ args = 0, pretend = 0, frame = 8
 3574              		@ frame_needed = 1, uses_anonymous_args = 0
 3575              		@ link register save eliminated.
 3576 0000 80B4     		push	{r7}
 3577              	.LCFI194:
 3578              		.cfi_def_cfa_offset 4
 3579              		.cfi_offset 7, -4
 3580 0002 83B0     		sub	sp, sp, #12
 3581              	.LCFI195:
 3582              		.cfi_def_cfa_offset 16
 3583 0004 00AF     		add	r7, sp, #0
 3584              	.LCFI196:
 3585              		.cfi_def_cfa_register 7
 3586 0006 7860     		str	r0, [r7, #4]
 3587 0008 3960     		str	r1, [r7]
1778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Prevent unused argument(s) compilation warning */
1779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(hfdcan);
1780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
1782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_CALIBRATION_COUNTER(Counter));
1783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (Counter == FDCAN_CALIB_TIME_QUANTA_COUNTER)
 3588              		.loc 1 1784 6
 3589 000a 3B68     		ldr	r3, [r7]
 3590 000c 002B     		cmp	r3, #0
 3591 000e 05D1     		bne	.L233
1785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return ((FDCAN_CCU->CSTAT & FDCANCCU_CSTAT_TQC) >> FDCANCCU_CSTAT_TQC_Pos);
 3592              		.loc 1 1786 23
 3593 0010 0B4B     		ldr	r3, .L236
 3594 0012 9B68     		ldr	r3, [r3, #8]
 3595              		.loc 1 1786 53
 3596 0014 9B0C     		lsrs	r3, r3, #18
 3597 0016 C3F30A03 		ubfx	r3, r3, #0, #11
 3598 001a 0BE0     		b	.L234
 3599              	.L233:
1787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else if (Counter == FDCAN_CALIB_CLOCK_PERIOD_COUNTER)
 3600              		.loc 1 1788 11
 3601 001c 3B68     		ldr	r3, [r7]
 3602 001e 012B     		cmp	r3, #1
 3603 0020 04D1     		bne	.L235
1789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return (FDCAN_CCU->CSTAT & FDCANCCU_CSTAT_OCPC);
 3604              		.loc 1 1790 22
 3605 0022 074B     		ldr	r3, .L236
 3606 0024 9B68     		ldr	r3, [r3, #8]
 3607              		.loc 1 1790 30
 3608 0026 C3F31103 		ubfx	r3, r3, #0, #18
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 95


 3609 002a 03E0     		b	.L234
 3610              	.L235:
1791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else /* Counter == FDCAN_CALIB_WATCHDOG_COUNTER */
1793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return ((FDCAN_CCU->CWD & FDCANCCU_CWD_WDV) >> FDCANCCU_CWD_WDV_Pos);
 3611              		.loc 1 1794 23
 3612 002c 044B     		ldr	r3, .L236
 3613 002e DB68     		ldr	r3, [r3, #12]
 3614              		.loc 1 1794 49
 3615 0030 1B0C     		lsrs	r3, r3, #16
 3616 0032 9BB2     		uxth	r3, r3
 3617              	.L234:
1795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 3618              		.loc 1 1796 1
 3619 0034 1846     		mov	r0, r3
 3620 0036 0C37     		adds	r7, r7, #12
 3621              	.LCFI197:
 3622              		.cfi_def_cfa_offset 4
 3623 0038 BD46     		mov	sp, r7
 3624              	.LCFI198:
 3625              		.cfi_def_cfa_register 13
 3626              		@ sp needed
 3627 003a 5DF8047B 		ldr	r7, [sp], #4
 3628              	.LCFI199:
 3629              		.cfi_restore 7
 3630              		.cfi_def_cfa_offset 0
 3631 003e 7047     		bx	lr
 3632              	.L237:
 3633              		.align	2
 3634              	.L236:
 3635 0040 00A80040 		.word	1073784832
 3636              		.cfi_endproc
 3637              	.LFE366:
 3639              		.section	.text.HAL_FDCAN_ConfigFilter,"ax",%progbits
 3640              		.align	1
 3641              		.global	HAL_FDCAN_ConfigFilter
 3642              		.syntax unified
 3643              		.thumb
 3644              		.thumb_func
 3646              	HAL_FDCAN_ConfigFilter:
 3647              	.LFB367:
1797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Configure the FDCAN reception filter according to the specified
1800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         parameters in the FDCAN_FilterTypeDef structure.
1801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
1802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
1803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  sFilterConfig pointer to an FDCAN_FilterTypeDef structure that
1804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         contains the filter configuration information
1805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_ConfigFilter(FDCAN_HandleTypeDef *hfdcan, FDCAN_FilterTypeDef *sFilterC
1808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 3648              		.loc 1 1808 1
 3649              		.cfi_startproc
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 96


 3650              		@ args = 0, pretend = 0, frame = 24
 3651              		@ frame_needed = 1, uses_anonymous_args = 0
 3652              		@ link register save eliminated.
 3653 0000 80B4     		push	{r7}
 3654              	.LCFI200:
 3655              		.cfi_def_cfa_offset 4
 3656              		.cfi_offset 7, -4
 3657 0002 87B0     		sub	sp, sp, #28
 3658              	.LCFI201:
 3659              		.cfi_def_cfa_offset 32
 3660 0004 00AF     		add	r7, sp, #0
 3661              	.LCFI202:
 3662              		.cfi_def_cfa_register 7
 3663 0006 7860     		str	r0, [r7, #4]
 3664 0008 3960     		str	r1, [r7]
1809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t FilterElementW1;
1810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t FilterElementW2;
1811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t *FilterAddress;
1812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 3665              		.loc 1 1812 26
 3666 000a 7B68     		ldr	r3, [r7, #4]
 3667 000c 93F89830 		ldrb	r3, [r3, #152]
 3668 0010 FB73     		strb	r3, [r7, #15]
1813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 3669              		.loc 1 1814 6
 3670 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3671 0014 012B     		cmp	r3, #1
 3672 0016 02D0     		beq	.L239
 3673              		.loc 1 1814 40 discriminator 1
 3674 0018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3675 001a 022B     		cmp	r3, #2
 3676 001c 57D1     		bne	.L240
 3677              	.L239:
1815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Check function parameters */
1817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_ID_TYPE(sFilterConfig->IdType));
1818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_FILTER_CFG(sFilterConfig->FilterConfig));
1819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (sFilterConfig->FilterConfig == FDCAN_FILTER_TO_RXBUFFER)
1820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
1821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       assert_param(IS_FDCAN_MAX_VALUE(sFilterConfig->RxBufferIndex, 63U));
1822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       assert_param(IS_FDCAN_MAX_VALUE(sFilterConfig->IsCalibrationMsg, 1U));
1823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
1824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (sFilterConfig->IdType == FDCAN_STANDARD_ID)
 3678              		.loc 1 1825 22
 3679 001e 3B68     		ldr	r3, [r7]
 3680 0020 1B68     		ldr	r3, [r3]
 3681              		.loc 1 1825 8
 3682 0022 002B     		cmp	r3, #0
 3683 0024 2BD1     		bne	.L241
1826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
1827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Check function parameters */
1828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       assert_param(IS_FDCAN_MAX_VALUE(sFilterConfig->FilterIndex, (hfdcan->Init.StdFiltersNbr - 1U)
1829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       assert_param(IS_FDCAN_MAX_VALUE(sFilterConfig->FilterID1, 0x7FFU));
1830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if (sFilterConfig->FilterConfig != FDCAN_FILTER_TO_RXBUFFER)
1831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 97


1832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         assert_param(IS_FDCAN_MAX_VALUE(sFilterConfig->FilterID2, 0x7FFU));
1833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         assert_param(IS_FDCAN_STD_FILTER_TYPE(sFilterConfig->FilterType));
1834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
1835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Build filter element */
1837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if (sFilterConfig->FilterConfig == FDCAN_FILTER_TO_RXBUFFER)
 3684              		.loc 1 1837 24
 3685 0026 3B68     		ldr	r3, [r7]
 3686 0028 DB68     		ldr	r3, [r3, #12]
 3687              		.loc 1 1837 10
 3688 002a 072B     		cmp	r3, #7
 3689 002c 0DD1     		bne	.L242
1838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
1839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         FilterElementW1 = ((FDCAN_FILTER_TO_RXBUFFER << 27U)       |
1840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                            (sFilterConfig->FilterID1 << 16U)       |
 3690              		.loc 1 1840 42
 3691 002e 3B68     		ldr	r3, [r7]
 3692 0030 1B69     		ldr	r3, [r3, #16]
 3693              		.loc 1 1840 54
 3694 0032 1A04     		lsls	r2, r3, #16
1841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                            (sFilterConfig->IsCalibrationMsg << 8U) |
 3695              		.loc 1 1841 42
 3696 0034 3B68     		ldr	r3, [r7]
 3697 0036 DB69     		ldr	r3, [r3, #28]
 3698              		.loc 1 1841 61
 3699 0038 1B02     		lsls	r3, r3, #8
1840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                            (sFilterConfig->IsCalibrationMsg << 8U) |
 3700              		.loc 1 1840 68
 3701 003a 1A43     		orrs	r2, r2, r3
1842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                            sFilterConfig->RxBufferIndex);
 3702              		.loc 1 1842 41
 3703 003c 3B68     		ldr	r3, [r7]
 3704 003e 9B69     		ldr	r3, [r3, #24]
1841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                            (sFilterConfig->IsCalibrationMsg << 8U) |
 3705              		.loc 1 1841 68
 3706 0040 1343     		orrs	r3, r3, r2
1839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                            (sFilterConfig->FilterID1 << 16U)       |
 3707              		.loc 1 1839 25
 3708 0042 43F06053 		orr	r3, r3, #939524096
 3709 0046 7B61     		str	r3, [r7, #20]
 3710 0048 0EE0     		b	.L243
 3711              	.L242:
1843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
1844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       else
1845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
1846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         FilterElementW1 = ((sFilterConfig->FilterType << 30U)   |
 3712              		.loc 1 1846 42
 3713 004a 3B68     		ldr	r3, [r7]
 3714 004c 9B68     		ldr	r3, [r3, #8]
 3715              		.loc 1 1846 55
 3716 004e 9A07     		lsls	r2, r3, #30
1847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                            (sFilterConfig->FilterConfig << 27U) |
 3717              		.loc 1 1847 42
 3718 0050 3B68     		ldr	r3, [r7]
 3719 0052 DB68     		ldr	r3, [r3, #12]
 3720              		.loc 1 1847 57
 3721 0054 DB06     		lsls	r3, r3, #27
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 98


1846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                            (sFilterConfig->FilterConfig << 27U) |
 3722              		.loc 1 1846 65
 3723 0056 1A43     		orrs	r2, r2, r3
1848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                            (sFilterConfig->FilterID1 << 16U)    |
 3724              		.loc 1 1848 42
 3725 0058 3B68     		ldr	r3, [r7]
 3726 005a 1B69     		ldr	r3, [r3, #16]
 3727              		.loc 1 1848 54
 3728 005c 1B04     		lsls	r3, r3, #16
1847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                            (sFilterConfig->FilterConfig << 27U) |
 3729              		.loc 1 1847 65
 3730 005e 1A43     		orrs	r2, r2, r3
1849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                            sFilterConfig->FilterID2);
 3731              		.loc 1 1849 41
 3732 0060 3B68     		ldr	r3, [r7]
 3733 0062 5B69     		ldr	r3, [r3, #20]
1846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                            (sFilterConfig->FilterConfig << 27U) |
 3734              		.loc 1 1846 25
 3735 0064 1343     		orrs	r3, r3, r2
 3736 0066 7B61     		str	r3, [r7, #20]
 3737              	.L243:
1850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
1851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Calculate filter address */
1853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       FilterAddress = (uint32_t *)(hfdcan->msgRam.StandardFilterSA + (sFilterConfig->FilterIndex * 
 3738              		.loc 1 1853 50
 3739 0068 7B68     		ldr	r3, [r7, #4]
 3740 006a DA6E     		ldr	r2, [r3, #108]
 3741              		.loc 1 1853 84
 3742 006c 3B68     		ldr	r3, [r7]
 3743 006e 5B68     		ldr	r3, [r3, #4]
 3744              		.loc 1 1853 98
 3745 0070 9B00     		lsls	r3, r3, #2
 3746              		.loc 1 1853 68
 3747 0072 1344     		add	r3, r3, r2
 3748              		.loc 1 1853 21
 3749 0074 BB60     		str	r3, [r7, #8]
1854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Write filter element to the message RAM */
1856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       *FilterAddress = FilterElementW1;
 3750              		.loc 1 1856 22
 3751 0076 BB68     		ldr	r3, [r7, #8]
 3752 0078 7A69     		ldr	r2, [r7, #20]
 3753 007a 1A60     		str	r2, [r3]
 3754 007c 25E0     		b	.L244
 3755              	.L241:
1857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
1858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else /* sFilterConfig->IdType == FDCAN_EXTENDED_ID */
1859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
1860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Check function parameters */
1861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       assert_param(IS_FDCAN_MAX_VALUE(sFilterConfig->FilterIndex, (hfdcan->Init.ExtFiltersNbr - 1U)
1862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       assert_param(IS_FDCAN_MAX_VALUE(sFilterConfig->FilterID1, 0x1FFFFFFFU));
1863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if (sFilterConfig->FilterConfig != FDCAN_FILTER_TO_RXBUFFER)
1864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
1865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         assert_param(IS_FDCAN_MAX_VALUE(sFilterConfig->FilterID2, 0x1FFFFFFFU));
1866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         assert_param(IS_FDCAN_EXT_FILTER_TYPE(sFilterConfig->FilterType));
1867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 99


1868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Build first word of filter element */
1870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       FilterElementW1 = ((sFilterConfig->FilterConfig << 29U) | sFilterConfig->FilterID1);
 3756              		.loc 1 1870 40
 3757 007e 3B68     		ldr	r3, [r7]
 3758 0080 DB68     		ldr	r3, [r3, #12]
 3759              		.loc 1 1870 55
 3760 0082 5A07     		lsls	r2, r3, #29
 3761              		.loc 1 1870 78
 3762 0084 3B68     		ldr	r3, [r7]
 3763 0086 1B69     		ldr	r3, [r3, #16]
 3764              		.loc 1 1870 23
 3765 0088 1343     		orrs	r3, r3, r2
 3766 008a 7B61     		str	r3, [r7, #20]
1871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Build second word of filter element */
1873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if (sFilterConfig->FilterConfig == FDCAN_FILTER_TO_RXBUFFER)
 3767              		.loc 1 1873 24
 3768 008c 3B68     		ldr	r3, [r7]
 3769 008e DB68     		ldr	r3, [r3, #12]
 3770              		.loc 1 1873 10
 3771 0090 072B     		cmp	r3, #7
 3772 0092 03D1     		bne	.L245
1874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
1875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         FilterElementW2 = sFilterConfig->RxBufferIndex;
 3773              		.loc 1 1875 25
 3774 0094 3B68     		ldr	r3, [r7]
 3775 0096 9B69     		ldr	r3, [r3, #24]
 3776 0098 3B61     		str	r3, [r7, #16]
 3777 009a 06E0     		b	.L246
 3778              	.L245:
1876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
1877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       else
1878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
1879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         FilterElementW2 = ((sFilterConfig->FilterType << 30U) | sFilterConfig->FilterID2);
 3779              		.loc 1 1879 42
 3780 009c 3B68     		ldr	r3, [r7]
 3781 009e 9B68     		ldr	r3, [r3, #8]
 3782              		.loc 1 1879 55
 3783 00a0 9A07     		lsls	r2, r3, #30
 3784              		.loc 1 1879 78
 3785 00a2 3B68     		ldr	r3, [r7]
 3786 00a4 5B69     		ldr	r3, [r3, #20]
 3787              		.loc 1 1879 25
 3788 00a6 1343     		orrs	r3, r3, r2
 3789 00a8 3B61     		str	r3, [r7, #16]
 3790              	.L246:
1880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
1881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Calculate filter address */
1883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       FilterAddress = (uint32_t *)(hfdcan->msgRam.ExtendedFilterSA + (sFilterConfig->FilterIndex * 
 3791              		.loc 1 1883 50
 3792 00aa 7B68     		ldr	r3, [r7, #4]
 3793 00ac 1A6F     		ldr	r2, [r3, #112]
 3794              		.loc 1 1883 84
 3795 00ae 3B68     		ldr	r3, [r7]
 3796 00b0 5B68     		ldr	r3, [r3, #4]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 100


 3797              		.loc 1 1883 103
 3798 00b2 DB00     		lsls	r3, r3, #3
 3799              		.loc 1 1883 68
 3800 00b4 1344     		add	r3, r3, r2
 3801              		.loc 1 1883 21
 3802 00b6 BB60     		str	r3, [r7, #8]
1884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Write filter element to the message RAM */
1886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       *FilterAddress = FilterElementW1;
 3803              		.loc 1 1886 22
 3804 00b8 BB68     		ldr	r3, [r7, #8]
 3805 00ba 7A69     		ldr	r2, [r7, #20]
 3806 00bc 1A60     		str	r2, [r3]
1887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       FilterAddress++;
 3807              		.loc 1 1887 20
 3808 00be BB68     		ldr	r3, [r7, #8]
 3809 00c0 0433     		adds	r3, r3, #4
 3810 00c2 BB60     		str	r3, [r7, #8]
1888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       *FilterAddress = FilterElementW2;
 3811              		.loc 1 1888 22
 3812 00c4 BB68     		ldr	r3, [r7, #8]
 3813 00c6 3A69     		ldr	r2, [r7, #16]
 3814 00c8 1A60     		str	r2, [r3]
 3815              	.L244:
1889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
1890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
1892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 3816              		.loc 1 1892 12
 3817 00ca 0023     		movs	r3, #0
 3818 00cc 08E0     		b	.L247
 3819              	.L240:
1893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
1897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 3820              		.loc 1 1897 23
 3821 00ce 7B68     		ldr	r3, [r7, #4]
 3822 00d0 D3F89C30 		ldr	r3, [r3, #156]
 3823 00d4 43F00202 		orr	r2, r3, #2
 3824 00d8 7B68     		ldr	r3, [r7, #4]
 3825 00da C3F89C20 		str	r2, [r3, #156]
1898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 3826              		.loc 1 1899 12
 3827 00de 0123     		movs	r3, #1
 3828              	.L247:
1900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 3829              		.loc 1 1901 1
 3830 00e0 1846     		mov	r0, r3
 3831 00e2 1C37     		adds	r7, r7, #28
 3832              	.LCFI203:
 3833              		.cfi_def_cfa_offset 4
 3834 00e4 BD46     		mov	sp, r7
 3835              	.LCFI204:
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 101


 3836              		.cfi_def_cfa_register 13
 3837              		@ sp needed
 3838 00e6 5DF8047B 		ldr	r7, [sp], #4
 3839              	.LCFI205:
 3840              		.cfi_restore 7
 3841              		.cfi_def_cfa_offset 0
 3842 00ea 7047     		bx	lr
 3843              		.cfi_endproc
 3844              	.LFE367:
 3846              		.section	.text.HAL_FDCAN_ConfigGlobalFilter,"ax",%progbits
 3847              		.align	1
 3848              		.global	HAL_FDCAN_ConfigGlobalFilter
 3849              		.syntax unified
 3850              		.thumb
 3851              		.thumb_func
 3853              	HAL_FDCAN_ConfigGlobalFilter:
 3854              	.LFB368:
1902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Configure the FDCAN global filter.
1905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
1906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
1907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  NonMatchingStd Defines how received messages with 11-bit IDs that
1908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         do not match any element of the filter list are treated.
1909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be a value of @arg FDCAN_Non_Matching_Frames.
1910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  NonMatchingExt Defines how received messages with 29-bit IDs that
1911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         do not match any element of the filter list are treated.
1912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be a value of @arg FDCAN_Non_Matching_Frames.
1913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  RejectRemoteStd Filter or reject all the remote 11-bit IDs frames.
1914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be a value of @arg FDCAN_Reject_Remote_Frames.
1915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  RejectRemoteExt Filter or reject all the remote 29-bit IDs frames.
1916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be a value of @arg FDCAN_Reject_Remote_Frames.
1917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_ConfigGlobalFilter(FDCAN_HandleTypeDef *hfdcan,
1920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                                                uint32_t NonMatchingStd,
1921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                                                uint32_t NonMatchingExt,
1922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                                                uint32_t RejectRemoteStd,
1923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                                                uint32_t RejectRemoteExt)
1924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 3855              		.loc 1 1924 1
 3856              		.cfi_startproc
 3857              		@ args = 4, pretend = 0, frame = 16
 3858              		@ frame_needed = 1, uses_anonymous_args = 0
 3859              		@ link register save eliminated.
 3860 0000 80B4     		push	{r7}
 3861              	.LCFI206:
 3862              		.cfi_def_cfa_offset 4
 3863              		.cfi_offset 7, -4
 3864 0002 85B0     		sub	sp, sp, #20
 3865              	.LCFI207:
 3866              		.cfi_def_cfa_offset 24
 3867 0004 00AF     		add	r7, sp, #0
 3868              	.LCFI208:
 3869              		.cfi_def_cfa_register 7
 3870 0006 F860     		str	r0, [r7, #12]
 3871 0008 B960     		str	r1, [r7, #8]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 102


 3872 000a 7A60     		str	r2, [r7, #4]
 3873 000c 3B60     		str	r3, [r7]
1925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
1926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_NON_MATCHING(NonMatchingStd));
1927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_NON_MATCHING(NonMatchingExt));
1928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_REJECT_REMOTE(RejectRemoteStd));
1929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_REJECT_REMOTE(RejectRemoteExt));
1930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 3874              		.loc 1 1931 13
 3875 000e FB68     		ldr	r3, [r7, #12]
 3876 0010 93F89830 		ldrb	r3, [r3, #152]
 3877 0014 DBB2     		uxtb	r3, r3
 3878              		.loc 1 1931 6
 3879 0016 012B     		cmp	r3, #1
 3880 0018 10D1     		bne	.L249
1932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Configure global filter */
1934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->Instance->GFC = ((NonMatchingStd << FDCAN_GFC_ANFS_Pos)  |
 3881              		.loc 1 1934 46
 3882 001a BB68     		ldr	r3, [r7, #8]
 3883 001c 1A01     		lsls	r2, r3, #4
1935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                              (NonMatchingExt << FDCAN_GFC_ANFE_Pos)  |
 3884              		.loc 1 1935 46
 3885 001e 7B68     		ldr	r3, [r7, #4]
 3886 0020 9B00     		lsls	r3, r3, #2
1934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                              (NonMatchingExt << FDCAN_GFC_ANFE_Pos)  |
 3887              		.loc 1 1934 70
 3888 0022 1A43     		orrs	r2, r2, r3
1936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                              (RejectRemoteStd << FDCAN_GFC_RRFS_Pos) |
 3889              		.loc 1 1936 47
 3890 0024 3B68     		ldr	r3, [r7]
 3891 0026 5B00     		lsls	r3, r3, #1
1935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                              (NonMatchingExt << FDCAN_GFC_ANFE_Pos)  |
 3892              		.loc 1 1935 70
 3893 0028 42EA0301 		orr	r1, r2, r3
1934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                              (NonMatchingExt << FDCAN_GFC_ANFE_Pos)  |
 3894              		.loc 1 1934 11
 3895 002c FB68     		ldr	r3, [r7, #12]
 3896 002e 1B68     		ldr	r3, [r3]
 3897              		.loc 1 1936 70
 3898 0030 BA69     		ldr	r2, [r7, #24]
 3899 0032 0A43     		orrs	r2, r2, r1
1934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                              (NonMatchingExt << FDCAN_GFC_ANFE_Pos)  |
 3900              		.loc 1 1934 27
 3901 0034 C3F88020 		str	r2, [r3, #128]
1937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                              (RejectRemoteExt << FDCAN_GFC_RRFE_Pos));
1938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
1940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 3902              		.loc 1 1940 12
 3903 0038 0023     		movs	r3, #0
 3904 003a 08E0     		b	.L250
 3905              	.L249:
1941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 103


1944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
1945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
 3906              		.loc 1 1945 23
 3907 003c FB68     		ldr	r3, [r7, #12]
 3908 003e D3F89C30 		ldr	r3, [r3, #156]
 3909 0042 43F00402 		orr	r2, r3, #4
 3910 0046 FB68     		ldr	r3, [r7, #12]
 3911 0048 C3F89C20 		str	r2, [r3, #156]
1946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 3912              		.loc 1 1947 12
 3913 004c 0123     		movs	r3, #1
 3914              	.L250:
1948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 3915              		.loc 1 1949 1
 3916 004e 1846     		mov	r0, r3
 3917 0050 1437     		adds	r7, r7, #20
 3918              	.LCFI209:
 3919              		.cfi_def_cfa_offset 4
 3920 0052 BD46     		mov	sp, r7
 3921              	.LCFI210:
 3922              		.cfi_def_cfa_register 13
 3923              		@ sp needed
 3924 0054 5DF8047B 		ldr	r7, [sp], #4
 3925              	.LCFI211:
 3926              		.cfi_restore 7
 3927              		.cfi_def_cfa_offset 0
 3928 0058 7047     		bx	lr
 3929              		.cfi_endproc
 3930              	.LFE368:
 3932              		.section	.text.HAL_FDCAN_ConfigExtendedIdMask,"ax",%progbits
 3933              		.align	1
 3934              		.global	HAL_FDCAN_ConfigExtendedIdMask
 3935              		.syntax unified
 3936              		.thumb
 3937              		.thumb_func
 3939              	HAL_FDCAN_ConfigExtendedIdMask:
 3940              	.LFB369:
1950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Configure the extended ID mask.
1953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
1954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
1955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  Mask Extended ID Mask.
1956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter must be a number between 0 and 0x1FFFFFFF
1957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_ConfigExtendedIdMask(FDCAN_HandleTypeDef *hfdcan, uint32_t Mask)
1960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 3941              		.loc 1 1960 1
 3942              		.cfi_startproc
 3943              		@ args = 0, pretend = 0, frame = 8
 3944              		@ frame_needed = 1, uses_anonymous_args = 0
 3945              		@ link register save eliminated.
 3946 0000 80B4     		push	{r7}
 3947              	.LCFI212:
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 104


 3948              		.cfi_def_cfa_offset 4
 3949              		.cfi_offset 7, -4
 3950 0002 83B0     		sub	sp, sp, #12
 3951              	.LCFI213:
 3952              		.cfi_def_cfa_offset 16
 3953 0004 00AF     		add	r7, sp, #0
 3954              	.LCFI214:
 3955              		.cfi_def_cfa_register 7
 3956 0006 7860     		str	r0, [r7, #4]
 3957 0008 3960     		str	r1, [r7]
1961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
1962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_MAX_VALUE(Mask, 0x1FFFFFFFU));
1963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 3958              		.loc 1 1964 13
 3959 000a 7B68     		ldr	r3, [r7, #4]
 3960 000c 93F89830 		ldrb	r3, [r3, #152]
 3961 0010 DBB2     		uxtb	r3, r3
 3962              		.loc 1 1964 6
 3963 0012 012B     		cmp	r3, #1
 3964 0014 06D1     		bne	.L252
1965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Configure the extended ID mask */
1967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->Instance->XIDAM = Mask;
 3965              		.loc 1 1967 11
 3966 0016 7B68     		ldr	r3, [r7, #4]
 3967 0018 1B68     		ldr	r3, [r3]
 3968              		.loc 1 1967 29
 3969 001a 3A68     		ldr	r2, [r7]
 3970 001c C3F89020 		str	r2, [r3, #144]
1968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
1970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 3971              		.loc 1 1970 12
 3972 0020 0023     		movs	r3, #0
 3973 0022 08E0     		b	.L253
 3974              	.L252:
1971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
1973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
1974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
1975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
 3975              		.loc 1 1975 23
 3976 0024 7B68     		ldr	r3, [r7, #4]
 3977 0026 D3F89C30 		ldr	r3, [r3, #156]
 3978 002a 43F00402 		orr	r2, r3, #4
 3979 002e 7B68     		ldr	r3, [r7, #4]
 3980 0030 C3F89C20 		str	r2, [r3, #156]
1976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 3981              		.loc 1 1977 12
 3982 0034 0123     		movs	r3, #1
 3983              	.L253:
1978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
1979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 3984              		.loc 1 1979 1
 3985 0036 1846     		mov	r0, r3
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 105


 3986 0038 0C37     		adds	r7, r7, #12
 3987              	.LCFI215:
 3988              		.cfi_def_cfa_offset 4
 3989 003a BD46     		mov	sp, r7
 3990              	.LCFI216:
 3991              		.cfi_def_cfa_register 13
 3992              		@ sp needed
 3993 003c 5DF8047B 		ldr	r7, [sp], #4
 3994              	.LCFI217:
 3995              		.cfi_restore 7
 3996              		.cfi_def_cfa_offset 0
 3997 0040 7047     		bx	lr
 3998              		.cfi_endproc
 3999              	.LFE369:
 4001              		.section	.text.HAL_FDCAN_ConfigRxFifoOverwrite,"ax",%progbits
 4002              		.align	1
 4003              		.global	HAL_FDCAN_ConfigRxFifoOverwrite
 4004              		.syntax unified
 4005              		.thumb
 4006              		.thumb_func
 4008              	HAL_FDCAN_ConfigRxFifoOverwrite:
 4009              	.LFB370:
1980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
1982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Configure the Rx FIFO operation mode.
1983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
1984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
1985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  RxFifo Rx FIFO.
1986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be one of the following values:
1987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           @arg FDCAN_RX_FIFO0: Rx FIFO 0
1988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           @arg FDCAN_RX_FIFO1: Rx FIFO 1
1989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  OperationMode operation mode.
1990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be a value of @arg FDCAN_Rx_FIFO_operation_mode.
1991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
1992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
1993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_ConfigRxFifoOverwrite(FDCAN_HandleTypeDef *hfdcan, uint32_t RxFifo, uin
1994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 4010              		.loc 1 1994 1
 4011              		.cfi_startproc
 4012              		@ args = 0, pretend = 0, frame = 16
 4013              		@ frame_needed = 1, uses_anonymous_args = 0
 4014              		@ link register save eliminated.
 4015 0000 80B4     		push	{r7}
 4016              	.LCFI218:
 4017              		.cfi_def_cfa_offset 4
 4018              		.cfi_offset 7, -4
 4019 0002 85B0     		sub	sp, sp, #20
 4020              	.LCFI219:
 4021              		.cfi_def_cfa_offset 24
 4022 0004 00AF     		add	r7, sp, #0
 4023              	.LCFI220:
 4024              		.cfi_def_cfa_register 7
 4025 0006 F860     		str	r0, [r7, #12]
 4026 0008 B960     		str	r1, [r7, #8]
 4027 000a 7A60     		str	r2, [r7, #4]
1995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
1996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_RX_FIFO(RxFifo));
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 106


1997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_RX_FIFO_MODE(OperationMode));
1998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
1999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 4028              		.loc 1 1999 13
 4029 000c FB68     		ldr	r3, [r7, #12]
 4030 000e 93F89830 		ldrb	r3, [r3, #152]
 4031 0012 DBB2     		uxtb	r3, r3
 4032              		.loc 1 1999 6
 4033 0014 012B     		cmp	r3, #1
 4034 0016 1DD1     		bne	.L255
2000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (RxFifo == FDCAN_RX_FIFO0)
 4035              		.loc 1 2001 8
 4036 0018 BB68     		ldr	r3, [r7, #8]
 4037 001a 402B     		cmp	r3, #64
 4038 001c 0CD1     		bne	.L256
2002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
2003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Select FIFO 0 Operation Mode */
2004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       MODIFY_REG(hfdcan->Instance->RXF0C, FDCAN_RXF0C_F0OM, OperationMode);
 4039              		.loc 1 2004 7
 4040 001e FB68     		ldr	r3, [r7, #12]
 4041 0020 1B68     		ldr	r3, [r3]
 4042 0022 D3F8A030 		ldr	r3, [r3, #160]
 4043 0026 23F00041 		bic	r1, r3, #-2147483648
 4044 002a FB68     		ldr	r3, [r7, #12]
 4045 002c 1B68     		ldr	r3, [r3]
 4046 002e 7A68     		ldr	r2, [r7, #4]
 4047 0030 0A43     		orrs	r2, r2, r1
 4048 0032 C3F8A020 		str	r2, [r3, #160]
 4049 0036 0BE0     		b	.L257
 4050              	.L256:
2005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
2006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else /* RxFifo == FDCAN_RX_FIFO1 */
2007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
2008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Select FIFO 1 Operation Mode */
2009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       MODIFY_REG(hfdcan->Instance->RXF1C, FDCAN_RXF1C_F1OM, OperationMode);
 4051              		.loc 1 2009 7
 4052 0038 FB68     		ldr	r3, [r7, #12]
 4053 003a 1B68     		ldr	r3, [r3]
 4054 003c D3F8B030 		ldr	r3, [r3, #176]
 4055 0040 23F00041 		bic	r1, r3, #-2147483648
 4056 0044 FB68     		ldr	r3, [r7, #12]
 4057 0046 1B68     		ldr	r3, [r3]
 4058 0048 7A68     		ldr	r2, [r7, #4]
 4059 004a 0A43     		orrs	r2, r2, r1
 4060 004c C3F8B020 		str	r2, [r3, #176]
 4061              	.L257:
2010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
2011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
2013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 4062              		.loc 1 2013 12
 4063 0050 0023     		movs	r3, #0
 4064 0052 08E0     		b	.L258
 4065              	.L255:
2014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 107


2016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
2018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
 4066              		.loc 1 2018 23
 4067 0054 FB68     		ldr	r3, [r7, #12]
 4068 0056 D3F89C30 		ldr	r3, [r3, #156]
 4069 005a 43F00402 		orr	r2, r3, #4
 4070 005e FB68     		ldr	r3, [r7, #12]
 4071 0060 C3F89C20 		str	r2, [r3, #156]
2019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 4072              		.loc 1 2020 12
 4073 0064 0123     		movs	r3, #1
 4074              	.L258:
2021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 4075              		.loc 1 2022 1
 4076 0066 1846     		mov	r0, r3
 4077 0068 1437     		adds	r7, r7, #20
 4078              	.LCFI221:
 4079              		.cfi_def_cfa_offset 4
 4080 006a BD46     		mov	sp, r7
 4081              	.LCFI222:
 4082              		.cfi_def_cfa_register 13
 4083              		@ sp needed
 4084 006c 5DF8047B 		ldr	r7, [sp], #4
 4085              	.LCFI223:
 4086              		.cfi_restore 7
 4087              		.cfi_def_cfa_offset 0
 4088 0070 7047     		bx	lr
 4089              		.cfi_endproc
 4090              	.LFE370:
 4092              		.section	.text.HAL_FDCAN_ConfigFifoWatermark,"ax",%progbits
 4093              		.align	1
 4094              		.global	HAL_FDCAN_ConfigFifoWatermark
 4095              		.syntax unified
 4096              		.thumb
 4097              		.thumb_func
 4099              	HAL_FDCAN_ConfigFifoWatermark:
 4100              	.LFB371:
2023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Configure the FIFO watermark.
2026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  FIFO select the FIFO to be configured.
2029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be a value of @arg FDCAN_FIFO_watermark.
2030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  Watermark level for FIFO watermark interrupt.
2031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter must be a number between:
2032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           - 0 and 32, if FIFO is FDCAN_CFG_TX_EVENT_FIFO
2033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           - 0 and 64, if FIFO is FDCAN_CFG_RX_FIFO0 or FDCAN_CFG_RX_FIFO1
2034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_ConfigFifoWatermark(FDCAN_HandleTypeDef *hfdcan, uint32_t FIFO, uint32_
2037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 4101              		.loc 1 2037 1
 4102              		.cfi_startproc
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 108


 4103              		@ args = 0, pretend = 0, frame = 16
 4104              		@ frame_needed = 1, uses_anonymous_args = 0
 4105              		@ link register save eliminated.
 4106 0000 80B4     		push	{r7}
 4107              	.LCFI224:
 4108              		.cfi_def_cfa_offset 4
 4109              		.cfi_offset 7, -4
 4110 0002 85B0     		sub	sp, sp, #20
 4111              	.LCFI225:
 4112              		.cfi_def_cfa_offset 24
 4113 0004 00AF     		add	r7, sp, #0
 4114              	.LCFI226:
 4115              		.cfi_def_cfa_register 7
 4116 0006 F860     		str	r0, [r7, #12]
 4117 0008 B960     		str	r1, [r7, #8]
 4118 000a 7A60     		str	r2, [r7, #4]
2038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
2039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_FIFO_WATERMARK(FIFO));
2040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (FIFO == FDCAN_CFG_TX_EVENT_FIFO)
2041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_MAX_VALUE(Watermark, 32U));
2043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else /* (FIFO == FDCAN_CFG_RX_FIFO0) || (FIFO == FDCAN_CFG_RX_FIFO1) */
2045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_MAX_VALUE(Watermark, 64U));
2047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 4119              		.loc 1 2049 13
 4120 000c FB68     		ldr	r3, [r7, #12]
 4121 000e 93F89830 		ldrb	r3, [r3, #152]
 4122 0012 DBB2     		uxtb	r3, r3
 4123              		.loc 1 2049 6
 4124 0014 012B     		cmp	r3, #1
 4125 0016 30D1     		bne	.L260
2050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Set the level for FIFO watermark interrupt */
2052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (FIFO == FDCAN_CFG_TX_EVENT_FIFO)
 4126              		.loc 1 2052 8
 4127 0018 BB68     		ldr	r3, [r7, #8]
 4128 001a 002B     		cmp	r3, #0
 4129 001c 0DD1     		bne	.L261
2053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
2054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       MODIFY_REG(hfdcan->Instance->TXEFC, FDCAN_TXEFC_EFWM, (Watermark << FDCAN_TXEFC_EFWM_Pos));
 4130              		.loc 1 2054 7
 4131 001e FB68     		ldr	r3, [r7, #12]
 4132 0020 1B68     		ldr	r3, [r3]
 4133 0022 D3F8F030 		ldr	r3, [r3, #240]
 4134 0026 23F07C51 		bic	r1, r3, #1056964608
 4135 002a 7B68     		ldr	r3, [r7, #4]
 4136 002c 1A06     		lsls	r2, r3, #24
 4137 002e FB68     		ldr	r3, [r7, #12]
 4138 0030 1B68     		ldr	r3, [r3]
 4139 0032 0A43     		orrs	r2, r2, r1
 4140 0034 C3F8F020 		str	r2, [r3, #240]
 4141 0038 1DE0     		b	.L262
 4142              	.L261:
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 109


2055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
2056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else if (FIFO == FDCAN_CFG_RX_FIFO0)
 4143              		.loc 1 2056 13
 4144 003a BB68     		ldr	r3, [r7, #8]
 4145 003c 012B     		cmp	r3, #1
 4146 003e 0DD1     		bne	.L263
2057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
2058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       MODIFY_REG(hfdcan->Instance->RXF0C, FDCAN_RXF0C_F0WM, (Watermark << FDCAN_RXF0C_F0WM_Pos));
 4147              		.loc 1 2058 7
 4148 0040 FB68     		ldr	r3, [r7, #12]
 4149 0042 1B68     		ldr	r3, [r3]
 4150 0044 D3F8A030 		ldr	r3, [r3, #160]
 4151 0048 23F0FE41 		bic	r1, r3, #2130706432
 4152 004c 7B68     		ldr	r3, [r7, #4]
 4153 004e 1A06     		lsls	r2, r3, #24
 4154 0050 FB68     		ldr	r3, [r7, #12]
 4155 0052 1B68     		ldr	r3, [r3]
 4156 0054 0A43     		orrs	r2, r2, r1
 4157 0056 C3F8A020 		str	r2, [r3, #160]
 4158 005a 0CE0     		b	.L262
 4159              	.L263:
2059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
2060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else /* FIFO == FDCAN_CFG_RX_FIFO1 */
2061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
2062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       MODIFY_REG(hfdcan->Instance->RXF1C, FDCAN_RXF1C_F1WM, (Watermark << FDCAN_RXF1C_F1WM_Pos));
 4160              		.loc 1 2062 7
 4161 005c FB68     		ldr	r3, [r7, #12]
 4162 005e 1B68     		ldr	r3, [r3]
 4163 0060 D3F8B030 		ldr	r3, [r3, #176]
 4164 0064 23F0FE41 		bic	r1, r3, #2130706432
 4165 0068 7B68     		ldr	r3, [r7, #4]
 4166 006a 1A06     		lsls	r2, r3, #24
 4167 006c FB68     		ldr	r3, [r7, #12]
 4168 006e 1B68     		ldr	r3, [r3]
 4169 0070 0A43     		orrs	r2, r2, r1
 4170 0072 C3F8B020 		str	r2, [r3, #176]
 4171              	.L262:
2063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
2064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
2066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 4172              		.loc 1 2066 12
 4173 0076 0023     		movs	r3, #0
 4174 0078 08E0     		b	.L264
 4175              	.L260:
2067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
2069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
2071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
 4176              		.loc 1 2071 23
 4177 007a FB68     		ldr	r3, [r7, #12]
 4178 007c D3F89C30 		ldr	r3, [r3, #156]
 4179 0080 43F00402 		orr	r2, r3, #4
 4180 0084 FB68     		ldr	r3, [r7, #12]
 4181 0086 C3F89C20 		str	r2, [r3, #156]
2072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 110


2073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 4182              		.loc 1 2073 12
 4183 008a 0123     		movs	r3, #1
 4184              	.L264:
2074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 4185              		.loc 1 2075 1
 4186 008c 1846     		mov	r0, r3
 4187 008e 1437     		adds	r7, r7, #20
 4188              	.LCFI227:
 4189              		.cfi_def_cfa_offset 4
 4190 0090 BD46     		mov	sp, r7
 4191              	.LCFI228:
 4192              		.cfi_def_cfa_register 13
 4193              		@ sp needed
 4194 0092 5DF8047B 		ldr	r7, [sp], #4
 4195              	.LCFI229:
 4196              		.cfi_restore 7
 4197              		.cfi_def_cfa_offset 0
 4198 0096 7047     		bx	lr
 4199              		.cfi_endproc
 4200              	.LFE371:
 4202              		.section	.text.HAL_FDCAN_ConfigRamWatchdog,"ax",%progbits
 4203              		.align	1
 4204              		.global	HAL_FDCAN_ConfigRamWatchdog
 4205              		.syntax unified
 4206              		.thumb
 4207              		.thumb_func
 4209              	HAL_FDCAN_ConfigRamWatchdog:
 4210              	.LFB372:
2076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Configure the RAM watchdog.
2079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  CounterStartValue Start value of the Message RAM Watchdog Counter,
2082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter must be a number between 0x00 and 0xFF,
2083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         with the reset value of 0x00 the counter is disabled.
2084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_ConfigRamWatchdog(FDCAN_HandleTypeDef *hfdcan, uint32_t CounterStartVal
2087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 4211              		.loc 1 2087 1
 4212              		.cfi_startproc
 4213              		@ args = 0, pretend = 0, frame = 8
 4214              		@ frame_needed = 1, uses_anonymous_args = 0
 4215              		@ link register save eliminated.
 4216 0000 80B4     		push	{r7}
 4217              	.LCFI230:
 4218              		.cfi_def_cfa_offset 4
 4219              		.cfi_offset 7, -4
 4220 0002 83B0     		sub	sp, sp, #12
 4221              	.LCFI231:
 4222              		.cfi_def_cfa_offset 16
 4223 0004 00AF     		add	r7, sp, #0
 4224              	.LCFI232:
 4225              		.cfi_def_cfa_register 7
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 111


 4226 0006 7860     		str	r0, [r7, #4]
 4227 0008 3960     		str	r1, [r7]
2088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
2089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_MAX_VALUE(CounterStartValue, 0xFFU));
2090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 4228              		.loc 1 2091 13
 4229 000a 7B68     		ldr	r3, [r7, #4]
 4230 000c 93F89830 		ldrb	r3, [r3, #152]
 4231 0010 DBB2     		uxtb	r3, r3
 4232              		.loc 1 2091 6
 4233 0012 012B     		cmp	r3, #1
 4234 0014 0BD1     		bne	.L266
2092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Configure the RAM watchdog counter start value */
2094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     MODIFY_REG(hfdcan->Instance->RWD, FDCAN_RWD_WDC, CounterStartValue);
 4235              		.loc 1 2094 5
 4236 0016 7B68     		ldr	r3, [r7, #4]
 4237 0018 1B68     		ldr	r3, [r3]
 4238 001a 5B69     		ldr	r3, [r3, #20]
 4239 001c 23F0FF01 		bic	r1, r3, #255
 4240 0020 7B68     		ldr	r3, [r7, #4]
 4241 0022 1B68     		ldr	r3, [r3]
 4242 0024 3A68     		ldr	r2, [r7]
 4243 0026 0A43     		orrs	r2, r2, r1
 4244 0028 5A61     		str	r2, [r3, #20]
2095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
2097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 4245              		.loc 1 2097 12
 4246 002a 0023     		movs	r3, #0
 4247 002c 08E0     		b	.L267
 4248              	.L266:
2098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
2100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
2102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
 4249              		.loc 1 2102 23
 4250 002e 7B68     		ldr	r3, [r7, #4]
 4251 0030 D3F89C30 		ldr	r3, [r3, #156]
 4252 0034 43F00402 		orr	r2, r3, #4
 4253 0038 7B68     		ldr	r3, [r7, #4]
 4254 003a C3F89C20 		str	r2, [r3, #156]
2103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 4255              		.loc 1 2104 12
 4256 003e 0123     		movs	r3, #1
 4257              	.L267:
2105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 4258              		.loc 1 2106 1
 4259 0040 1846     		mov	r0, r3
 4260 0042 0C37     		adds	r7, r7, #12
 4261              	.LCFI233:
 4262              		.cfi_def_cfa_offset 4
 4263 0044 BD46     		mov	sp, r7
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 112


 4264              	.LCFI234:
 4265              		.cfi_def_cfa_register 13
 4266              		@ sp needed
 4267 0046 5DF8047B 		ldr	r7, [sp], #4
 4268              	.LCFI235:
 4269              		.cfi_restore 7
 4270              		.cfi_def_cfa_offset 0
 4271 004a 7047     		bx	lr
 4272              		.cfi_endproc
 4273              	.LFE372:
 4275              		.section	.text.HAL_FDCAN_ConfigTimestampCounter,"ax",%progbits
 4276              		.align	1
 4277              		.global	HAL_FDCAN_ConfigTimestampCounter
 4278              		.syntax unified
 4279              		.thumb
 4280              		.thumb_func
 4282              	HAL_FDCAN_ConfigTimestampCounter:
 4283              	.LFB373:
2107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Configure the timestamp counter.
2110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  TimestampPrescaler Timestamp Counter Prescaler.
2113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be a value of @arg FDCAN_Timestamp_Prescaler.
2114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_ConfigTimestampCounter(FDCAN_HandleTypeDef *hfdcan, uint32_t TimestampP
2117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 4284              		.loc 1 2117 1
 4285              		.cfi_startproc
 4286              		@ args = 0, pretend = 0, frame = 8
 4287              		@ frame_needed = 1, uses_anonymous_args = 0
 4288              		@ link register save eliminated.
 4289 0000 80B4     		push	{r7}
 4290              	.LCFI236:
 4291              		.cfi_def_cfa_offset 4
 4292              		.cfi_offset 7, -4
 4293 0002 83B0     		sub	sp, sp, #12
 4294              	.LCFI237:
 4295              		.cfi_def_cfa_offset 16
 4296 0004 00AF     		add	r7, sp, #0
 4297              	.LCFI238:
 4298              		.cfi_def_cfa_register 7
 4299 0006 7860     		str	r0, [r7, #4]
 4300 0008 3960     		str	r1, [r7]
2118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
2119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TIMESTAMP_PRESCALER(TimestampPrescaler));
2120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 4301              		.loc 1 2121 13
 4302 000a 7B68     		ldr	r3, [r7, #4]
 4303 000c 93F89830 		ldrb	r3, [r3, #152]
 4304 0010 DBB2     		uxtb	r3, r3
 4305              		.loc 1 2121 6
 4306 0012 012B     		cmp	r3, #1
 4307 0014 0BD1     		bne	.L269
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 113


2122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Configure prescaler */
2124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     MODIFY_REG(hfdcan->Instance->TSCC, FDCAN_TSCC_TCP, TimestampPrescaler);
 4308              		.loc 1 2124 5
 4309 0016 7B68     		ldr	r3, [r7, #4]
 4310 0018 1B68     		ldr	r3, [r3]
 4311 001a 1B6A     		ldr	r3, [r3, #32]
 4312 001c 23F47021 		bic	r1, r3, #983040
 4313 0020 7B68     		ldr	r3, [r7, #4]
 4314 0022 1B68     		ldr	r3, [r3]
 4315 0024 3A68     		ldr	r2, [r7]
 4316 0026 0A43     		orrs	r2, r2, r1
 4317 0028 1A62     		str	r2, [r3, #32]
2125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
2127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 4318              		.loc 1 2127 12
 4319 002a 0023     		movs	r3, #0
 4320 002c 08E0     		b	.L270
 4321              	.L269:
2128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
2130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
2132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
 4322              		.loc 1 2132 23
 4323 002e 7B68     		ldr	r3, [r7, #4]
 4324 0030 D3F89C30 		ldr	r3, [r3, #156]
 4325 0034 43F00402 		orr	r2, r3, #4
 4326 0038 7B68     		ldr	r3, [r7, #4]
 4327 003a C3F89C20 		str	r2, [r3, #156]
2133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 4328              		.loc 1 2134 12
 4329 003e 0123     		movs	r3, #1
 4330              	.L270:
2135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 4331              		.loc 1 2136 1
 4332 0040 1846     		mov	r0, r3
 4333 0042 0C37     		adds	r7, r7, #12
 4334              	.LCFI239:
 4335              		.cfi_def_cfa_offset 4
 4336 0044 BD46     		mov	sp, r7
 4337              	.LCFI240:
 4338              		.cfi_def_cfa_register 13
 4339              		@ sp needed
 4340 0046 5DF8047B 		ldr	r7, [sp], #4
 4341              	.LCFI241:
 4342              		.cfi_restore 7
 4343              		.cfi_def_cfa_offset 0
 4344 004a 7047     		bx	lr
 4345              		.cfi_endproc
 4346              	.LFE373:
 4348              		.section	.text.HAL_FDCAN_EnableTimestampCounter,"ax",%progbits
 4349              		.align	1
 4350              		.global	HAL_FDCAN_EnableTimestampCounter
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 114


 4351              		.syntax unified
 4352              		.thumb
 4353              		.thumb_func
 4355              	HAL_FDCAN_EnableTimestampCounter:
 4356              	.LFB374:
2137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Enable the timestamp counter.
2140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  TimestampOperation Timestamp counter operation.
2143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be a value of @arg FDCAN_Timestamp.
2144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_EnableTimestampCounter(FDCAN_HandleTypeDef *hfdcan, uint32_t TimestampO
2147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 4357              		.loc 1 2147 1
 4358              		.cfi_startproc
 4359              		@ args = 0, pretend = 0, frame = 8
 4360              		@ frame_needed = 1, uses_anonymous_args = 0
 4361              		@ link register save eliminated.
 4362 0000 80B4     		push	{r7}
 4363              	.LCFI242:
 4364              		.cfi_def_cfa_offset 4
 4365              		.cfi_offset 7, -4
 4366 0002 83B0     		sub	sp, sp, #12
 4367              	.LCFI243:
 4368              		.cfi_def_cfa_offset 16
 4369 0004 00AF     		add	r7, sp, #0
 4370              	.LCFI244:
 4371              		.cfi_def_cfa_register 7
 4372 0006 7860     		str	r0, [r7, #4]
 4373 0008 3960     		str	r1, [r7]
2148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
2149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TIMESTAMP(TimestampOperation));
2150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 4374              		.loc 1 2151 13
 4375 000a 7B68     		ldr	r3, [r7, #4]
 4376 000c 93F89830 		ldrb	r3, [r3, #152]
 4377 0010 DBB2     		uxtb	r3, r3
 4378              		.loc 1 2151 6
 4379 0012 012B     		cmp	r3, #1
 4380 0014 0BD1     		bne	.L272
2152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Enable timestamp counter */
2154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     MODIFY_REG(hfdcan->Instance->TSCC, FDCAN_TSCC_TSS, TimestampOperation);
 4381              		.loc 1 2154 5
 4382 0016 7B68     		ldr	r3, [r7, #4]
 4383 0018 1B68     		ldr	r3, [r3]
 4384 001a 1B6A     		ldr	r3, [r3, #32]
 4385 001c 23F00301 		bic	r1, r3, #3
 4386 0020 7B68     		ldr	r3, [r7, #4]
 4387 0022 1B68     		ldr	r3, [r3]
 4388 0024 3A68     		ldr	r2, [r7]
 4389 0026 0A43     		orrs	r2, r2, r1
 4390 0028 1A62     		str	r2, [r3, #32]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 115


2155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
2157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 4391              		.loc 1 2157 12
 4392 002a 0023     		movs	r3, #0
 4393 002c 08E0     		b	.L273
 4394              	.L272:
2158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
2160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
2162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
 4395              		.loc 1 2162 23
 4396 002e 7B68     		ldr	r3, [r7, #4]
 4397 0030 D3F89C30 		ldr	r3, [r3, #156]
 4398 0034 43F00402 		orr	r2, r3, #4
 4399 0038 7B68     		ldr	r3, [r7, #4]
 4400 003a C3F89C20 		str	r2, [r3, #156]
2163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 4401              		.loc 1 2164 12
 4402 003e 0123     		movs	r3, #1
 4403              	.L273:
2165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 4404              		.loc 1 2166 1
 4405 0040 1846     		mov	r0, r3
 4406 0042 0C37     		adds	r7, r7, #12
 4407              	.LCFI245:
 4408              		.cfi_def_cfa_offset 4
 4409 0044 BD46     		mov	sp, r7
 4410              	.LCFI246:
 4411              		.cfi_def_cfa_register 13
 4412              		@ sp needed
 4413 0046 5DF8047B 		ldr	r7, [sp], #4
 4414              	.LCFI247:
 4415              		.cfi_restore 7
 4416              		.cfi_def_cfa_offset 0
 4417 004a 7047     		bx	lr
 4418              		.cfi_endproc
 4419              	.LFE374:
 4421              		.section	.text.HAL_FDCAN_DisableTimestampCounter,"ax",%progbits
 4422              		.align	1
 4423              		.global	HAL_FDCAN_DisableTimestampCounter
 4424              		.syntax unified
 4425              		.thumb
 4426              		.thumb_func
 4428              	HAL_FDCAN_DisableTimestampCounter:
 4429              	.LFB375:
2167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Disable the timestamp counter.
2170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_DisableTimestampCounter(FDCAN_HandleTypeDef *hfdcan)
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 116


2175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 4430              		.loc 1 2175 1
 4431              		.cfi_startproc
 4432              		@ args = 0, pretend = 0, frame = 8
 4433              		@ frame_needed = 1, uses_anonymous_args = 0
 4434              		@ link register save eliminated.
 4435 0000 80B4     		push	{r7}
 4436              	.LCFI248:
 4437              		.cfi_def_cfa_offset 4
 4438              		.cfi_offset 7, -4
 4439 0002 83B0     		sub	sp, sp, #12
 4440              	.LCFI249:
 4441              		.cfi_def_cfa_offset 16
 4442 0004 00AF     		add	r7, sp, #0
 4443              	.LCFI250:
 4444              		.cfi_def_cfa_register 7
 4445 0006 7860     		str	r0, [r7, #4]
2176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 4446              		.loc 1 2176 13
 4447 0008 7B68     		ldr	r3, [r7, #4]
 4448 000a 93F89830 		ldrb	r3, [r3, #152]
 4449 000e DBB2     		uxtb	r3, r3
 4450              		.loc 1 2176 6
 4451 0010 012B     		cmp	r3, #1
 4452 0012 09D1     		bne	.L275
2177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Disable timestamp counter */
2179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     CLEAR_BIT(hfdcan->Instance->TSCC, FDCAN_TSCC_TSS);
 4453              		.loc 1 2179 5
 4454 0014 7B68     		ldr	r3, [r7, #4]
 4455 0016 1B68     		ldr	r3, [r3]
 4456 0018 1A6A     		ldr	r2, [r3, #32]
 4457 001a 7B68     		ldr	r3, [r7, #4]
 4458 001c 1B68     		ldr	r3, [r3]
 4459 001e 22F00302 		bic	r2, r2, #3
 4460 0022 1A62     		str	r2, [r3, #32]
2180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
2182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 4461              		.loc 1 2182 12
 4462 0024 0023     		movs	r3, #0
 4463 0026 08E0     		b	.L276
 4464              	.L275:
2183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
2185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
2187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
 4465              		.loc 1 2187 23
 4466 0028 7B68     		ldr	r3, [r7, #4]
 4467 002a D3F89C30 		ldr	r3, [r3, #156]
 4468 002e 43F00402 		orr	r2, r3, #4
 4469 0032 7B68     		ldr	r3, [r7, #4]
 4470 0034 C3F89C20 		str	r2, [r3, #156]
2188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 4471              		.loc 1 2189 12
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 117


 4472 0038 0123     		movs	r3, #1
 4473              	.L276:
2190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 4474              		.loc 1 2191 1
 4475 003a 1846     		mov	r0, r3
 4476 003c 0C37     		adds	r7, r7, #12
 4477              	.LCFI251:
 4478              		.cfi_def_cfa_offset 4
 4479 003e BD46     		mov	sp, r7
 4480              	.LCFI252:
 4481              		.cfi_def_cfa_register 13
 4482              		@ sp needed
 4483 0040 5DF8047B 		ldr	r7, [sp], #4
 4484              	.LCFI253:
 4485              		.cfi_restore 7
 4486              		.cfi_def_cfa_offset 0
 4487 0044 7047     		bx	lr
 4488              		.cfi_endproc
 4489              	.LFE375:
 4491              		.section	.text.HAL_FDCAN_GetTimestampCounter,"ax",%progbits
 4492              		.align	1
 4493              		.global	HAL_FDCAN_GetTimestampCounter
 4494              		.syntax unified
 4495              		.thumb
 4496              		.thumb_func
 4498              	HAL_FDCAN_GetTimestampCounter:
 4499              	.LFB376:
2192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Get the timestamp counter value.
2195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval Value Timestamp counter value
2198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** uint16_t HAL_FDCAN_GetTimestampCounter(FDCAN_HandleTypeDef *hfdcan)
2200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 4500              		.loc 1 2200 1
 4501              		.cfi_startproc
 4502              		@ args = 0, pretend = 0, frame = 8
 4503              		@ frame_needed = 1, uses_anonymous_args = 0
 4504              		@ link register save eliminated.
 4505 0000 80B4     		push	{r7}
 4506              	.LCFI254:
 4507              		.cfi_def_cfa_offset 4
 4508              		.cfi_offset 7, -4
 4509 0002 83B0     		sub	sp, sp, #12
 4510              	.LCFI255:
 4511              		.cfi_def_cfa_offset 16
 4512 0004 00AF     		add	r7, sp, #0
 4513              	.LCFI256:
 4514              		.cfi_def_cfa_register 7
 4515 0006 7860     		str	r0, [r7, #4]
2201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return (uint16_t)(hfdcan->Instance->TSCV);
 4516              		.loc 1 2201 27
 4517 0008 7B68     		ldr	r3, [r7, #4]
 4518 000a 1B68     		ldr	r3, [r3]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 118


 4519              		.loc 1 2201 37
 4520 000c 5B6A     		ldr	r3, [r3, #36]
 4521              		.loc 1 2201 10
 4522 000e 9BB2     		uxth	r3, r3
2202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 4523              		.loc 1 2202 1
 4524 0010 1846     		mov	r0, r3
 4525 0012 0C37     		adds	r7, r7, #12
 4526              	.LCFI257:
 4527              		.cfi_def_cfa_offset 4
 4528 0014 BD46     		mov	sp, r7
 4529              	.LCFI258:
 4530              		.cfi_def_cfa_register 13
 4531              		@ sp needed
 4532 0016 5DF8047B 		ldr	r7, [sp], #4
 4533              	.LCFI259:
 4534              		.cfi_restore 7
 4535              		.cfi_def_cfa_offset 0
 4536 001a 7047     		bx	lr
 4537              		.cfi_endproc
 4538              	.LFE376:
 4540              		.section	.text.HAL_FDCAN_ResetTimestampCounter,"ax",%progbits
 4541              		.align	1
 4542              		.global	HAL_FDCAN_ResetTimestampCounter
 4543              		.syntax unified
 4544              		.thumb
 4545              		.thumb_func
 4547              	HAL_FDCAN_ResetTimestampCounter:
 4548              	.LFB377:
2203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Reset the timestamp counter to zero.
2206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_ResetTimestampCounter(FDCAN_HandleTypeDef *hfdcan)
2211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 4549              		.loc 1 2211 1
 4550              		.cfi_startproc
 4551              		@ args = 0, pretend = 0, frame = 8
 4552              		@ frame_needed = 1, uses_anonymous_args = 0
 4553              		@ link register save eliminated.
 4554 0000 80B4     		push	{r7}
 4555              	.LCFI260:
 4556              		.cfi_def_cfa_offset 4
 4557              		.cfi_offset 7, -4
 4558 0002 83B0     		sub	sp, sp, #12
 4559              	.LCFI261:
 4560              		.cfi_def_cfa_offset 16
 4561 0004 00AF     		add	r7, sp, #0
 4562              	.LCFI262:
 4563              		.cfi_def_cfa_register 7
 4564 0006 7860     		str	r0, [r7, #4]
2212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((hfdcan->Instance->TSCC & FDCAN_TSCC_TSS) != FDCAN_TIMESTAMP_EXTERNAL)
 4565              		.loc 1 2212 14
 4566 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 119


 4567 000a 1B68     		ldr	r3, [r3]
 4568              		.loc 1 2212 24
 4569 000c 1B6A     		ldr	r3, [r3, #32]
 4570              		.loc 1 2212 31
 4571 000e 03F00303 		and	r3, r3, #3
 4572              		.loc 1 2212 6
 4573 0012 022B     		cmp	r3, #2
 4574 0014 05D0     		beq	.L280
2213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Reset timestamp counter.
2215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****        Actually any write operation to TSCV clears the counter */
2216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     CLEAR_REG(hfdcan->Instance->TSCV);
 4575              		.loc 1 2216 5
 4576 0016 7B68     		ldr	r3, [r7, #4]
 4577 0018 1B68     		ldr	r3, [r3]
 4578 001a 0022     		movs	r2, #0
 4579 001c 5A62     		str	r2, [r3, #36]
2217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
2219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code.
2221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****        Unable to reset external counter */
2222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_SUPPORTED;
2223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
2225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Return function status */
2228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return HAL_OK;
 4580              		.loc 1 2228 10
 4581 001e 0023     		movs	r3, #0
 4582 0020 08E0     		b	.L282
 4583              	.L280:
2222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
 4584              		.loc 1 2222 23
 4585 0022 7B68     		ldr	r3, [r7, #4]
 4586 0024 D3F89C30 		ldr	r3, [r3, #156]
 4587 0028 43F01002 		orr	r2, r3, #16
 4588 002c 7B68     		ldr	r3, [r7, #4]
 4589 002e C3F89C20 		str	r2, [r3, #156]
2224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
 4590              		.loc 1 2224 12
 4591 0032 0123     		movs	r3, #1
 4592              	.L282:
2229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 4593              		.loc 1 2229 1
 4594 0034 1846     		mov	r0, r3
 4595 0036 0C37     		adds	r7, r7, #12
 4596              	.LCFI263:
 4597              		.cfi_def_cfa_offset 4
 4598 0038 BD46     		mov	sp, r7
 4599              	.LCFI264:
 4600              		.cfi_def_cfa_register 13
 4601              		@ sp needed
 4602 003a 5DF8047B 		ldr	r7, [sp], #4
 4603              	.LCFI265:
 4604              		.cfi_restore 7
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 120


 4605              		.cfi_def_cfa_offset 0
 4606 003e 7047     		bx	lr
 4607              		.cfi_endproc
 4608              	.LFE377:
 4610              		.section	.text.HAL_FDCAN_ConfigTimeoutCounter,"ax",%progbits
 4611              		.align	1
 4612              		.global	HAL_FDCAN_ConfigTimeoutCounter
 4613              		.syntax unified
 4614              		.thumb
 4615              		.thumb_func
 4617              	HAL_FDCAN_ConfigTimeoutCounter:
 4618              	.LFB378:
2230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Configure the timeout counter.
2233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  TimeoutOperation Timeout counter operation.
2236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be a value of @arg FDCAN_Timeout_Operation.
2237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  TimeoutPeriod Start value of the timeout down-counter.
2238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter must be a number between 0x0000 and 0xFFFF
2239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_ConfigTimeoutCounter(FDCAN_HandleTypeDef *hfdcan, uint32_t TimeoutOpera
2242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 4619              		.loc 1 2242 1
 4620              		.cfi_startproc
 4621              		@ args = 0, pretend = 0, frame = 16
 4622              		@ frame_needed = 1, uses_anonymous_args = 0
 4623              		@ link register save eliminated.
 4624 0000 80B4     		push	{r7}
 4625              	.LCFI266:
 4626              		.cfi_def_cfa_offset 4
 4627              		.cfi_offset 7, -4
 4628 0002 85B0     		sub	sp, sp, #20
 4629              	.LCFI267:
 4630              		.cfi_def_cfa_offset 24
 4631 0004 00AF     		add	r7, sp, #0
 4632              	.LCFI268:
 4633              		.cfi_def_cfa_register 7
 4634 0006 F860     		str	r0, [r7, #12]
 4635 0008 B960     		str	r1, [r7, #8]
 4636 000a 7A60     		str	r2, [r7, #4]
2243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
2244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TIMEOUT(TimeoutOperation));
2245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_MAX_VALUE(TimeoutPeriod, 0xFFFFU));
2246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 4637              		.loc 1 2247 13
 4638 000c FB68     		ldr	r3, [r7, #12]
 4639 000e 93F89830 		ldrb	r3, [r3, #152]
 4640 0012 DBB2     		uxtb	r3, r3
 4641              		.loc 1 2247 6
 4642 0014 012B     		cmp	r3, #1
 4643 0016 0FD1     		bne	.L284
2248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Select timeout operation and configure period */
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 121


2250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     MODIFY_REG(hfdcan->Instance->TOCC, (FDCAN_TOCC_TOS | FDCAN_TOCC_TOP), (TimeoutOperation | (Time
 4644              		.loc 1 2250 5
 4645 0018 FB68     		ldr	r3, [r7, #12]
 4646 001a 1B68     		ldr	r3, [r3]
 4647 001c 9A6A     		ldr	r2, [r3, #40]
 4648 001e 4FF6F973 		movw	r3, #65529
 4649 0022 1340     		ands	r3, r3, r2
 4650 0024 7A68     		ldr	r2, [r7, #4]
 4651 0026 1104     		lsls	r1, r2, #16
 4652 0028 BA68     		ldr	r2, [r7, #8]
 4653 002a 1143     		orrs	r1, r1, r2
 4654 002c FA68     		ldr	r2, [r7, #12]
 4655 002e 1268     		ldr	r2, [r2]
 4656 0030 0B43     		orrs	r3, r3, r1
 4657 0032 9362     		str	r3, [r2, #40]
2251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
2253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 4658              		.loc 1 2253 12
 4659 0034 0023     		movs	r3, #0
 4660 0036 08E0     		b	.L285
 4661              	.L284:
2254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
2256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
2258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
 4662              		.loc 1 2258 23
 4663 0038 FB68     		ldr	r3, [r7, #12]
 4664 003a D3F89C30 		ldr	r3, [r3, #156]
 4665 003e 43F00402 		orr	r2, r3, #4
 4666 0042 FB68     		ldr	r3, [r7, #12]
 4667 0044 C3F89C20 		str	r2, [r3, #156]
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 4668              		.loc 1 2260 12
 4669 0048 0123     		movs	r3, #1
 4670              	.L285:
2261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 4671              		.loc 1 2262 1
 4672 004a 1846     		mov	r0, r3
 4673 004c 1437     		adds	r7, r7, #20
 4674              	.LCFI269:
 4675              		.cfi_def_cfa_offset 4
 4676 004e BD46     		mov	sp, r7
 4677              	.LCFI270:
 4678              		.cfi_def_cfa_register 13
 4679              		@ sp needed
 4680 0050 5DF8047B 		ldr	r7, [sp], #4
 4681              	.LCFI271:
 4682              		.cfi_restore 7
 4683              		.cfi_def_cfa_offset 0
 4684 0054 7047     		bx	lr
 4685              		.cfi_endproc
 4686              	.LFE378:
 4688              		.section	.text.HAL_FDCAN_EnableTimeoutCounter,"ax",%progbits
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 122


 4689              		.align	1
 4690              		.global	HAL_FDCAN_EnableTimeoutCounter
 4691              		.syntax unified
 4692              		.thumb
 4693              		.thumb_func
 4695              	HAL_FDCAN_EnableTimeoutCounter:
 4696              	.LFB379:
2263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Enable the timeout counter.
2266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_EnableTimeoutCounter(FDCAN_HandleTypeDef *hfdcan)
2271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 4697              		.loc 1 2271 1
 4698              		.cfi_startproc
 4699              		@ args = 0, pretend = 0, frame = 8
 4700              		@ frame_needed = 1, uses_anonymous_args = 0
 4701              		@ link register save eliminated.
 4702 0000 80B4     		push	{r7}
 4703              	.LCFI272:
 4704              		.cfi_def_cfa_offset 4
 4705              		.cfi_offset 7, -4
 4706 0002 83B0     		sub	sp, sp, #12
 4707              	.LCFI273:
 4708              		.cfi_def_cfa_offset 16
 4709 0004 00AF     		add	r7, sp, #0
 4710              	.LCFI274:
 4711              		.cfi_def_cfa_register 7
 4712 0006 7860     		str	r0, [r7, #4]
2272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 4713              		.loc 1 2272 13
 4714 0008 7B68     		ldr	r3, [r7, #4]
 4715 000a 93F89830 		ldrb	r3, [r3, #152]
 4716 000e DBB2     		uxtb	r3, r3
 4717              		.loc 1 2272 6
 4718 0010 012B     		cmp	r3, #1
 4719 0012 09D1     		bne	.L287
2273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Enable timeout counter */
2275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     SET_BIT(hfdcan->Instance->TOCC, FDCAN_TOCC_ETOC);
 4720              		.loc 1 2275 5
 4721 0014 7B68     		ldr	r3, [r7, #4]
 4722 0016 1B68     		ldr	r3, [r3]
 4723 0018 9A6A     		ldr	r2, [r3, #40]
 4724 001a 7B68     		ldr	r3, [r7, #4]
 4725 001c 1B68     		ldr	r3, [r3]
 4726 001e 42F00102 		orr	r2, r2, #1
 4727 0022 9A62     		str	r2, [r3, #40]
2276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
2278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 4728              		.loc 1 2278 12
 4729 0024 0023     		movs	r3, #0
 4730 0026 08E0     		b	.L288
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 123


 4731              	.L287:
2279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
2281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
2283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
 4732              		.loc 1 2283 23
 4733 0028 7B68     		ldr	r3, [r7, #4]
 4734 002a D3F89C30 		ldr	r3, [r3, #156]
 4735 002e 43F00402 		orr	r2, r3, #4
 4736 0032 7B68     		ldr	r3, [r7, #4]
 4737 0034 C3F89C20 		str	r2, [r3, #156]
2284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 4738              		.loc 1 2285 12
 4739 0038 0123     		movs	r3, #1
 4740              	.L288:
2286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 4741              		.loc 1 2287 1
 4742 003a 1846     		mov	r0, r3
 4743 003c 0C37     		adds	r7, r7, #12
 4744              	.LCFI275:
 4745              		.cfi_def_cfa_offset 4
 4746 003e BD46     		mov	sp, r7
 4747              	.LCFI276:
 4748              		.cfi_def_cfa_register 13
 4749              		@ sp needed
 4750 0040 5DF8047B 		ldr	r7, [sp], #4
 4751              	.LCFI277:
 4752              		.cfi_restore 7
 4753              		.cfi_def_cfa_offset 0
 4754 0044 7047     		bx	lr
 4755              		.cfi_endproc
 4756              	.LFE379:
 4758              		.section	.text.HAL_FDCAN_DisableTimeoutCounter,"ax",%progbits
 4759              		.align	1
 4760              		.global	HAL_FDCAN_DisableTimeoutCounter
 4761              		.syntax unified
 4762              		.thumb
 4763              		.thumb_func
 4765              	HAL_FDCAN_DisableTimeoutCounter:
 4766              	.LFB380:
2288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Disable the timeout counter.
2291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_DisableTimeoutCounter(FDCAN_HandleTypeDef *hfdcan)
2296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 4767              		.loc 1 2296 1
 4768              		.cfi_startproc
 4769              		@ args = 0, pretend = 0, frame = 8
 4770              		@ frame_needed = 1, uses_anonymous_args = 0
 4771              		@ link register save eliminated.
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 124


 4772 0000 80B4     		push	{r7}
 4773              	.LCFI278:
 4774              		.cfi_def_cfa_offset 4
 4775              		.cfi_offset 7, -4
 4776 0002 83B0     		sub	sp, sp, #12
 4777              	.LCFI279:
 4778              		.cfi_def_cfa_offset 16
 4779 0004 00AF     		add	r7, sp, #0
 4780              	.LCFI280:
 4781              		.cfi_def_cfa_register 7
 4782 0006 7860     		str	r0, [r7, #4]
2297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 4783              		.loc 1 2297 13
 4784 0008 7B68     		ldr	r3, [r7, #4]
 4785 000a 93F89830 		ldrb	r3, [r3, #152]
 4786 000e DBB2     		uxtb	r3, r3
 4787              		.loc 1 2297 6
 4788 0010 012B     		cmp	r3, #1
 4789 0012 09D1     		bne	.L290
2298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Disable timeout counter */
2300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     CLEAR_BIT(hfdcan->Instance->TOCC, FDCAN_TOCC_ETOC);
 4790              		.loc 1 2300 5
 4791 0014 7B68     		ldr	r3, [r7, #4]
 4792 0016 1B68     		ldr	r3, [r3]
 4793 0018 9A6A     		ldr	r2, [r3, #40]
 4794 001a 7B68     		ldr	r3, [r7, #4]
 4795 001c 1B68     		ldr	r3, [r3]
 4796 001e 22F00102 		bic	r2, r2, #1
 4797 0022 9A62     		str	r2, [r3, #40]
2301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
2303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 4798              		.loc 1 2303 12
 4799 0024 0023     		movs	r3, #0
 4800 0026 08E0     		b	.L291
 4801              	.L290:
2304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
2306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
2308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
 4802              		.loc 1 2308 23
 4803 0028 7B68     		ldr	r3, [r7, #4]
 4804 002a D3F89C30 		ldr	r3, [r3, #156]
 4805 002e 43F00402 		orr	r2, r3, #4
 4806 0032 7B68     		ldr	r3, [r7, #4]
 4807 0034 C3F89C20 		str	r2, [r3, #156]
2309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 4808              		.loc 1 2310 12
 4809 0038 0123     		movs	r3, #1
 4810              	.L291:
2311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 4811              		.loc 1 2312 1
 4812 003a 1846     		mov	r0, r3
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 125


 4813 003c 0C37     		adds	r7, r7, #12
 4814              	.LCFI281:
 4815              		.cfi_def_cfa_offset 4
 4816 003e BD46     		mov	sp, r7
 4817              	.LCFI282:
 4818              		.cfi_def_cfa_register 13
 4819              		@ sp needed
 4820 0040 5DF8047B 		ldr	r7, [sp], #4
 4821              	.LCFI283:
 4822              		.cfi_restore 7
 4823              		.cfi_def_cfa_offset 0
 4824 0044 7047     		bx	lr
 4825              		.cfi_endproc
 4826              	.LFE380:
 4828              		.section	.text.HAL_FDCAN_GetTimeoutCounter,"ax",%progbits
 4829              		.align	1
 4830              		.global	HAL_FDCAN_GetTimeoutCounter
 4831              		.syntax unified
 4832              		.thumb
 4833              		.thumb_func
 4835              	HAL_FDCAN_GetTimeoutCounter:
 4836              	.LFB381:
2313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Get the timeout counter value.
2316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval Value Timeout counter value
2319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** uint16_t HAL_FDCAN_GetTimeoutCounter(FDCAN_HandleTypeDef *hfdcan)
2321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 4837              		.loc 1 2321 1
 4838              		.cfi_startproc
 4839              		@ args = 0, pretend = 0, frame = 8
 4840              		@ frame_needed = 1, uses_anonymous_args = 0
 4841              		@ link register save eliminated.
 4842 0000 80B4     		push	{r7}
 4843              	.LCFI284:
 4844              		.cfi_def_cfa_offset 4
 4845              		.cfi_offset 7, -4
 4846 0002 83B0     		sub	sp, sp, #12
 4847              	.LCFI285:
 4848              		.cfi_def_cfa_offset 16
 4849 0004 00AF     		add	r7, sp, #0
 4850              	.LCFI286:
 4851              		.cfi_def_cfa_register 7
 4852 0006 7860     		str	r0, [r7, #4]
2322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return (uint16_t)(hfdcan->Instance->TOCV);
 4853              		.loc 1 2322 27
 4854 0008 7B68     		ldr	r3, [r7, #4]
 4855 000a 1B68     		ldr	r3, [r3]
 4856              		.loc 1 2322 37
 4857 000c DB6A     		ldr	r3, [r3, #44]
 4858              		.loc 1 2322 10
 4859 000e 9BB2     		uxth	r3, r3
2323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 4860              		.loc 1 2323 1
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 126


 4861 0010 1846     		mov	r0, r3
 4862 0012 0C37     		adds	r7, r7, #12
 4863              	.LCFI287:
 4864              		.cfi_def_cfa_offset 4
 4865 0014 BD46     		mov	sp, r7
 4866              	.LCFI288:
 4867              		.cfi_def_cfa_register 13
 4868              		@ sp needed
 4869 0016 5DF8047B 		ldr	r7, [sp], #4
 4870              	.LCFI289:
 4871              		.cfi_restore 7
 4872              		.cfi_def_cfa_offset 0
 4873 001a 7047     		bx	lr
 4874              		.cfi_endproc
 4875              	.LFE381:
 4877              		.section	.text.HAL_FDCAN_ResetTimeoutCounter,"ax",%progbits
 4878              		.align	1
 4879              		.global	HAL_FDCAN_ResetTimeoutCounter
 4880              		.syntax unified
 4881              		.thumb
 4882              		.thumb_func
 4884              	HAL_FDCAN_ResetTimeoutCounter:
 4885              	.LFB382:
2324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Reset the timeout counter to its start value.
2327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_ResetTimeoutCounter(FDCAN_HandleTypeDef *hfdcan)
2332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 4886              		.loc 1 2332 1
 4887              		.cfi_startproc
 4888              		@ args = 0, pretend = 0, frame = 8
 4889              		@ frame_needed = 1, uses_anonymous_args = 0
 4890              		@ link register save eliminated.
 4891 0000 80B4     		push	{r7}
 4892              	.LCFI290:
 4893              		.cfi_def_cfa_offset 4
 4894              		.cfi_offset 7, -4
 4895 0002 83B0     		sub	sp, sp, #12
 4896              	.LCFI291:
 4897              		.cfi_def_cfa_offset 16
 4898 0004 00AF     		add	r7, sp, #0
 4899              	.LCFI292:
 4900              		.cfi_def_cfa_register 7
 4901 0006 7860     		str	r0, [r7, #4]
2333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((hfdcan->Instance->TOCC & FDCAN_TOCC_TOS) == FDCAN_TIMEOUT_CONTINUOUS)
 4902              		.loc 1 2333 14
 4903 0008 7B68     		ldr	r3, [r7, #4]
 4904 000a 1B68     		ldr	r3, [r3]
 4905              		.loc 1 2333 24
 4906 000c 9B6A     		ldr	r3, [r3, #40]
 4907              		.loc 1 2333 31
 4908 000e 03F00603 		and	r3, r3, #6
 4909              		.loc 1 2333 6
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 127


 4910 0012 002B     		cmp	r3, #0
 4911 0014 05D1     		bne	.L295
2334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Reset timeout counter to start value */
2336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     CLEAR_REG(hfdcan->Instance->TOCV);
 4912              		.loc 1 2336 5
 4913 0016 7B68     		ldr	r3, [r7, #4]
 4914 0018 1B68     		ldr	r3, [r3]
 4915 001a 0022     		movs	r2, #0
 4916 001c DA62     		str	r2, [r3, #44]
2337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
2339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 4917              		.loc 1 2339 12
 4918 001e 0023     		movs	r3, #0
 4919 0020 08E0     		b	.L296
 4920              	.L295:
2340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
2342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code.
2344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****        Unable to reset counter: controlled only by FIFO empty state */
2345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_SUPPORTED;
 4921              		.loc 1 2345 23
 4922 0022 7B68     		ldr	r3, [r7, #4]
 4923 0024 D3F89C30 		ldr	r3, [r3, #156]
 4924 0028 43F01002 		orr	r2, r3, #16
 4925 002c 7B68     		ldr	r3, [r7, #4]
 4926 002e C3F89C20 		str	r2, [r3, #156]
2346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 4927              		.loc 1 2347 12
 4928 0032 0123     		movs	r3, #1
 4929              	.L296:
2348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 4930              		.loc 1 2349 1
 4931 0034 1846     		mov	r0, r3
 4932 0036 0C37     		adds	r7, r7, #12
 4933              	.LCFI293:
 4934              		.cfi_def_cfa_offset 4
 4935 0038 BD46     		mov	sp, r7
 4936              	.LCFI294:
 4937              		.cfi_def_cfa_register 13
 4938              		@ sp needed
 4939 003a 5DF8047B 		ldr	r7, [sp], #4
 4940              	.LCFI295:
 4941              		.cfi_restore 7
 4942              		.cfi_def_cfa_offset 0
 4943 003e 7047     		bx	lr
 4944              		.cfi_endproc
 4945              	.LFE382:
 4947              		.section	.text.HAL_FDCAN_ConfigTxDelayCompensation,"ax",%progbits
 4948              		.align	1
 4949              		.global	HAL_FDCAN_ConfigTxDelayCompensation
 4950              		.syntax unified
 4951              		.thumb
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 128


 4952              		.thumb_func
 4954              	HAL_FDCAN_ConfigTxDelayCompensation:
 4955              	.LFB383:
2350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Configure the transmitter delay compensation.
2353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  TdcOffset Transmitter Delay Compensation Offset.
2356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter must be a number between 0x00 and 0x7F.
2357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  TdcFilter Transmitter Delay Compensation Filter Window Length.
2358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter must be a number between 0x00 and 0x7F.
2359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_ConfigTxDelayCompensation(FDCAN_HandleTypeDef *hfdcan, uint32_t TdcOffs
2362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 4956              		.loc 1 2362 1
 4957              		.cfi_startproc
 4958              		@ args = 0, pretend = 0, frame = 16
 4959              		@ frame_needed = 1, uses_anonymous_args = 0
 4960              		@ link register save eliminated.
 4961 0000 80B4     		push	{r7}
 4962              	.LCFI296:
 4963              		.cfi_def_cfa_offset 4
 4964              		.cfi_offset 7, -4
 4965 0002 85B0     		sub	sp, sp, #20
 4966              	.LCFI297:
 4967              		.cfi_def_cfa_offset 24
 4968 0004 00AF     		add	r7, sp, #0
 4969              	.LCFI298:
 4970              		.cfi_def_cfa_register 7
 4971 0006 F860     		str	r0, [r7, #12]
 4972 0008 B960     		str	r1, [r7, #8]
 4973 000a 7A60     		str	r2, [r7, #4]
2363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
2364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_MAX_VALUE(TdcOffset, 0x7FU));
2365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_MAX_VALUE(TdcFilter, 0x7FU));
2366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 4974              		.loc 1 2367 13
 4975 000c FB68     		ldr	r3, [r7, #12]
 4976 000e 93F89830 		ldrb	r3, [r3, #152]
 4977 0012 DBB2     		uxtb	r3, r3
 4978              		.loc 1 2367 6
 4979 0014 012B     		cmp	r3, #1
 4980 0016 08D1     		bne	.L298
2368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Configure TDC offset and filter window */
2370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->Instance->TDCR = ((TdcFilter << FDCAN_TDCR_TDCF_Pos) | (TdcOffset << FDCAN_TDCR_TDCO_Po
 4981              		.loc 1 2370 79
 4982 0018 BB68     		ldr	r3, [r7, #8]
 4983 001a 1902     		lsls	r1, r3, #8
 4984              		.loc 1 2370 11
 4985 001c FB68     		ldr	r3, [r7, #12]
 4986 001e 1B68     		ldr	r3, [r3]
 4987              		.loc 1 2370 66
 4988 0020 7A68     		ldr	r2, [r7, #4]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 129


 4989 0022 0A43     		orrs	r2, r2, r1
 4990              		.loc 1 2370 28
 4991 0024 9A64     		str	r2, [r3, #72]
2371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
2373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 4992              		.loc 1 2373 12
 4993 0026 0023     		movs	r3, #0
 4994 0028 08E0     		b	.L299
 4995              	.L298:
2374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
2376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
2378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
 4996              		.loc 1 2378 23
 4997 002a FB68     		ldr	r3, [r7, #12]
 4998 002c D3F89C30 		ldr	r3, [r3, #156]
 4999 0030 43F00402 		orr	r2, r3, #4
 5000 0034 FB68     		ldr	r3, [r7, #12]
 5001 0036 C3F89C20 		str	r2, [r3, #156]
2379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 5002              		.loc 1 2380 12
 5003 003a 0123     		movs	r3, #1
 5004              	.L299:
2381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 5005              		.loc 1 2382 1
 5006 003c 1846     		mov	r0, r3
 5007 003e 1437     		adds	r7, r7, #20
 5008              	.LCFI299:
 5009              		.cfi_def_cfa_offset 4
 5010 0040 BD46     		mov	sp, r7
 5011              	.LCFI300:
 5012              		.cfi_def_cfa_register 13
 5013              		@ sp needed
 5014 0042 5DF8047B 		ldr	r7, [sp], #4
 5015              	.LCFI301:
 5016              		.cfi_restore 7
 5017              		.cfi_def_cfa_offset 0
 5018 0046 7047     		bx	lr
 5019              		.cfi_endproc
 5020              	.LFE383:
 5022              		.section	.text.HAL_FDCAN_EnableTxDelayCompensation,"ax",%progbits
 5023              		.align	1
 5024              		.global	HAL_FDCAN_EnableTxDelayCompensation
 5025              		.syntax unified
 5026              		.thumb
 5027              		.thumb_func
 5029              	HAL_FDCAN_EnableTxDelayCompensation:
 5030              	.LFB384:
2383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Enable the transmitter delay compensation.
2386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 130


2388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_EnableTxDelayCompensation(FDCAN_HandleTypeDef *hfdcan)
2391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 5031              		.loc 1 2391 1
 5032              		.cfi_startproc
 5033              		@ args = 0, pretend = 0, frame = 8
 5034              		@ frame_needed = 1, uses_anonymous_args = 0
 5035              		@ link register save eliminated.
 5036 0000 80B4     		push	{r7}
 5037              	.LCFI302:
 5038              		.cfi_def_cfa_offset 4
 5039              		.cfi_offset 7, -4
 5040 0002 83B0     		sub	sp, sp, #12
 5041              	.LCFI303:
 5042              		.cfi_def_cfa_offset 16
 5043 0004 00AF     		add	r7, sp, #0
 5044              	.LCFI304:
 5045              		.cfi_def_cfa_register 7
 5046 0006 7860     		str	r0, [r7, #4]
2392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 5047              		.loc 1 2392 13
 5048 0008 7B68     		ldr	r3, [r7, #4]
 5049 000a 93F89830 		ldrb	r3, [r3, #152]
 5050 000e DBB2     		uxtb	r3, r3
 5051              		.loc 1 2392 6
 5052 0010 012B     		cmp	r3, #1
 5053 0012 09D1     		bne	.L301
2393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Enable transmitter delay compensation */
2395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     SET_BIT(hfdcan->Instance->DBTP, FDCAN_DBTP_TDC);
 5054              		.loc 1 2395 5
 5055 0014 7B68     		ldr	r3, [r7, #4]
 5056 0016 1B68     		ldr	r3, [r3]
 5057 0018 DA68     		ldr	r2, [r3, #12]
 5058 001a 7B68     		ldr	r3, [r7, #4]
 5059 001c 1B68     		ldr	r3, [r3]
 5060 001e 42F40002 		orr	r2, r2, #8388608
 5061 0022 DA60     		str	r2, [r3, #12]
2396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
2398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 5062              		.loc 1 2398 12
 5063 0024 0023     		movs	r3, #0
 5064 0026 08E0     		b	.L302
 5065              	.L301:
2399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
2401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
2403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
 5066              		.loc 1 2403 23
 5067 0028 7B68     		ldr	r3, [r7, #4]
 5068 002a D3F89C30 		ldr	r3, [r3, #156]
 5069 002e 43F00402 		orr	r2, r3, #4
 5070 0032 7B68     		ldr	r3, [r7, #4]
 5071 0034 C3F89C20 		str	r2, [r3, #156]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 131


2404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 5072              		.loc 1 2405 12
 5073 0038 0123     		movs	r3, #1
 5074              	.L302:
2406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 5075              		.loc 1 2407 1
 5076 003a 1846     		mov	r0, r3
 5077 003c 0C37     		adds	r7, r7, #12
 5078              	.LCFI305:
 5079              		.cfi_def_cfa_offset 4
 5080 003e BD46     		mov	sp, r7
 5081              	.LCFI306:
 5082              		.cfi_def_cfa_register 13
 5083              		@ sp needed
 5084 0040 5DF8047B 		ldr	r7, [sp], #4
 5085              	.LCFI307:
 5086              		.cfi_restore 7
 5087              		.cfi_def_cfa_offset 0
 5088 0044 7047     		bx	lr
 5089              		.cfi_endproc
 5090              	.LFE384:
 5092              		.section	.text.HAL_FDCAN_DisableTxDelayCompensation,"ax",%progbits
 5093              		.align	1
 5094              		.global	HAL_FDCAN_DisableTxDelayCompensation
 5095              		.syntax unified
 5096              		.thumb
 5097              		.thumb_func
 5099              	HAL_FDCAN_DisableTxDelayCompensation:
 5100              	.LFB385:
2408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Disable the transmitter delay compensation.
2411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_DisableTxDelayCompensation(FDCAN_HandleTypeDef *hfdcan)
2416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 5101              		.loc 1 2416 1
 5102              		.cfi_startproc
 5103              		@ args = 0, pretend = 0, frame = 8
 5104              		@ frame_needed = 1, uses_anonymous_args = 0
 5105              		@ link register save eliminated.
 5106 0000 80B4     		push	{r7}
 5107              	.LCFI308:
 5108              		.cfi_def_cfa_offset 4
 5109              		.cfi_offset 7, -4
 5110 0002 83B0     		sub	sp, sp, #12
 5111              	.LCFI309:
 5112              		.cfi_def_cfa_offset 16
 5113 0004 00AF     		add	r7, sp, #0
 5114              	.LCFI310:
 5115              		.cfi_def_cfa_register 7
 5116 0006 7860     		str	r0, [r7, #4]
2417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 132


 5117              		.loc 1 2417 13
 5118 0008 7B68     		ldr	r3, [r7, #4]
 5119 000a 93F89830 		ldrb	r3, [r3, #152]
 5120 000e DBB2     		uxtb	r3, r3
 5121              		.loc 1 2417 6
 5122 0010 012B     		cmp	r3, #1
 5123 0012 09D1     		bne	.L304
2418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Disable transmitter delay compensation */
2420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     CLEAR_BIT(hfdcan->Instance->DBTP, FDCAN_DBTP_TDC);
 5124              		.loc 1 2420 5
 5125 0014 7B68     		ldr	r3, [r7, #4]
 5126 0016 1B68     		ldr	r3, [r3]
 5127 0018 DA68     		ldr	r2, [r3, #12]
 5128 001a 7B68     		ldr	r3, [r7, #4]
 5129 001c 1B68     		ldr	r3, [r3]
 5130 001e 22F40002 		bic	r2, r2, #8388608
 5131 0022 DA60     		str	r2, [r3, #12]
2421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
2423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 5132              		.loc 1 2423 12
 5133 0024 0023     		movs	r3, #0
 5134 0026 08E0     		b	.L305
 5135              	.L304:
2424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
2426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
2428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
 5136              		.loc 1 2428 23
 5137 0028 7B68     		ldr	r3, [r7, #4]
 5138 002a D3F89C30 		ldr	r3, [r3, #156]
 5139 002e 43F00402 		orr	r2, r3, #4
 5140 0032 7B68     		ldr	r3, [r7, #4]
 5141 0034 C3F89C20 		str	r2, [r3, #156]
2429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 5142              		.loc 1 2430 12
 5143 0038 0123     		movs	r3, #1
 5144              	.L305:
2431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 5145              		.loc 1 2432 1
 5146 003a 1846     		mov	r0, r3
 5147 003c 0C37     		adds	r7, r7, #12
 5148              	.LCFI311:
 5149              		.cfi_def_cfa_offset 4
 5150 003e BD46     		mov	sp, r7
 5151              	.LCFI312:
 5152              		.cfi_def_cfa_register 13
 5153              		@ sp needed
 5154 0040 5DF8047B 		ldr	r7, [sp], #4
 5155              	.LCFI313:
 5156              		.cfi_restore 7
 5157              		.cfi_def_cfa_offset 0
 5158 0044 7047     		bx	lr
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 133


 5159              		.cfi_endproc
 5160              	.LFE385:
 5162              		.section	.text.HAL_FDCAN_EnableISOMode,"ax",%progbits
 5163              		.align	1
 5164              		.global	HAL_FDCAN_EnableISOMode
 5165              		.syntax unified
 5166              		.thumb
 5167              		.thumb_func
 5169              	HAL_FDCAN_EnableISOMode:
 5170              	.LFB386:
2433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Enable ISO 11898-1 protocol mode.
2436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         CAN FD frame format is according to ISO 11898-1 standard.
2437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_EnableISOMode(FDCAN_HandleTypeDef *hfdcan)
2442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 5171              		.loc 1 2442 1
 5172              		.cfi_startproc
 5173              		@ args = 0, pretend = 0, frame = 8
 5174              		@ frame_needed = 1, uses_anonymous_args = 0
 5175              		@ link register save eliminated.
 5176 0000 80B4     		push	{r7}
 5177              	.LCFI314:
 5178              		.cfi_def_cfa_offset 4
 5179              		.cfi_offset 7, -4
 5180 0002 83B0     		sub	sp, sp, #12
 5181              	.LCFI315:
 5182              		.cfi_def_cfa_offset 16
 5183 0004 00AF     		add	r7, sp, #0
 5184              	.LCFI316:
 5185              		.cfi_def_cfa_register 7
 5186 0006 7860     		str	r0, [r7, #4]
2443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 5187              		.loc 1 2443 13
 5188 0008 7B68     		ldr	r3, [r7, #4]
 5189 000a 93F89830 		ldrb	r3, [r3, #152]
 5190 000e DBB2     		uxtb	r3, r3
 5191              		.loc 1 2443 6
 5192 0010 012B     		cmp	r3, #1
 5193 0012 09D1     		bne	.L307
2444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Disable Non ISO protocol mode */
2446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     CLEAR_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_NISO);
 5194              		.loc 1 2446 5
 5195 0014 7B68     		ldr	r3, [r7, #4]
 5196 0016 1B68     		ldr	r3, [r3]
 5197 0018 9A69     		ldr	r2, [r3, #24]
 5198 001a 7B68     		ldr	r3, [r7, #4]
 5199 001c 1B68     		ldr	r3, [r3]
 5200 001e 22F40042 		bic	r2, r2, #32768
 5201 0022 9A61     		str	r2, [r3, #24]
2447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 134


2449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 5202              		.loc 1 2449 12
 5203 0024 0023     		movs	r3, #0
 5204 0026 08E0     		b	.L308
 5205              	.L307:
2450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
2452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
2454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
 5206              		.loc 1 2454 23
 5207 0028 7B68     		ldr	r3, [r7, #4]
 5208 002a D3F89C30 		ldr	r3, [r3, #156]
 5209 002e 43F00402 		orr	r2, r3, #4
 5210 0032 7B68     		ldr	r3, [r7, #4]
 5211 0034 C3F89C20 		str	r2, [r3, #156]
2455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 5212              		.loc 1 2456 12
 5213 0038 0123     		movs	r3, #1
 5214              	.L308:
2457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 5215              		.loc 1 2458 1
 5216 003a 1846     		mov	r0, r3
 5217 003c 0C37     		adds	r7, r7, #12
 5218              	.LCFI317:
 5219              		.cfi_def_cfa_offset 4
 5220 003e BD46     		mov	sp, r7
 5221              	.LCFI318:
 5222              		.cfi_def_cfa_register 13
 5223              		@ sp needed
 5224 0040 5DF8047B 		ldr	r7, [sp], #4
 5225              	.LCFI319:
 5226              		.cfi_restore 7
 5227              		.cfi_def_cfa_offset 0
 5228 0044 7047     		bx	lr
 5229              		.cfi_endproc
 5230              	.LFE386:
 5232              		.section	.text.HAL_FDCAN_DisableISOMode,"ax",%progbits
 5233              		.align	1
 5234              		.global	HAL_FDCAN_DisableISOMode
 5235              		.syntax unified
 5236              		.thumb
 5237              		.thumb_func
 5239              	HAL_FDCAN_DisableISOMode:
 5240              	.LFB387:
2459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Disable ISO 11898-1 protocol mode.
2462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         CAN FD frame format is according to Bosch CAN FD specification V1.0.
2463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_DisableISOMode(FDCAN_HandleTypeDef *hfdcan)
2468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 135


 5241              		.loc 1 2468 1
 5242              		.cfi_startproc
 5243              		@ args = 0, pretend = 0, frame = 8
 5244              		@ frame_needed = 1, uses_anonymous_args = 0
 5245              		@ link register save eliminated.
 5246 0000 80B4     		push	{r7}
 5247              	.LCFI320:
 5248              		.cfi_def_cfa_offset 4
 5249              		.cfi_offset 7, -4
 5250 0002 83B0     		sub	sp, sp, #12
 5251              	.LCFI321:
 5252              		.cfi_def_cfa_offset 16
 5253 0004 00AF     		add	r7, sp, #0
 5254              	.LCFI322:
 5255              		.cfi_def_cfa_register 7
 5256 0006 7860     		str	r0, [r7, #4]
2469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 5257              		.loc 1 2469 13
 5258 0008 7B68     		ldr	r3, [r7, #4]
 5259 000a 93F89830 		ldrb	r3, [r3, #152]
 5260 000e DBB2     		uxtb	r3, r3
 5261              		.loc 1 2469 6
 5262 0010 012B     		cmp	r3, #1
 5263 0012 09D1     		bne	.L310
2470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Enable Non ISO protocol mode */
2472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     SET_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_NISO);
 5264              		.loc 1 2472 5
 5265 0014 7B68     		ldr	r3, [r7, #4]
 5266 0016 1B68     		ldr	r3, [r3]
 5267 0018 9A69     		ldr	r2, [r3, #24]
 5268 001a 7B68     		ldr	r3, [r7, #4]
 5269 001c 1B68     		ldr	r3, [r3]
 5270 001e 42F40042 		orr	r2, r2, #32768
 5271 0022 9A61     		str	r2, [r3, #24]
2473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
2475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 5272              		.loc 1 2475 12
 5273 0024 0023     		movs	r3, #0
 5274 0026 08E0     		b	.L311
 5275              	.L310:
2476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
2478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
2480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
 5276              		.loc 1 2480 23
 5277 0028 7B68     		ldr	r3, [r7, #4]
 5278 002a D3F89C30 		ldr	r3, [r3, #156]
 5279 002e 43F00402 		orr	r2, r3, #4
 5280 0032 7B68     		ldr	r3, [r7, #4]
 5281 0034 C3F89C20 		str	r2, [r3, #156]
2481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 5282              		.loc 1 2482 12
 5283 0038 0123     		movs	r3, #1
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 136


 5284              	.L311:
2483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 5285              		.loc 1 2484 1
 5286 003a 1846     		mov	r0, r3
 5287 003c 0C37     		adds	r7, r7, #12
 5288              	.LCFI323:
 5289              		.cfi_def_cfa_offset 4
 5290 003e BD46     		mov	sp, r7
 5291              	.LCFI324:
 5292              		.cfi_def_cfa_register 13
 5293              		@ sp needed
 5294 0040 5DF8047B 		ldr	r7, [sp], #4
 5295              	.LCFI325:
 5296              		.cfi_restore 7
 5297              		.cfi_def_cfa_offset 0
 5298 0044 7047     		bx	lr
 5299              		.cfi_endproc
 5300              	.LFE387:
 5302              		.section	.text.HAL_FDCAN_EnableEdgeFiltering,"ax",%progbits
 5303              		.align	1
 5304              		.global	HAL_FDCAN_EnableEdgeFiltering
 5305              		.syntax unified
 5306              		.thumb
 5307              		.thumb_func
 5309              	HAL_FDCAN_EnableEdgeFiltering:
 5310              	.LFB388:
2485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Enable edge filtering during bus integration.
2488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         Two consecutive dominant tq are required to detect an edge for hard synchronization.
2489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_EnableEdgeFiltering(FDCAN_HandleTypeDef *hfdcan)
2494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 5311              		.loc 1 2494 1
 5312              		.cfi_startproc
 5313              		@ args = 0, pretend = 0, frame = 8
 5314              		@ frame_needed = 1, uses_anonymous_args = 0
 5315              		@ link register save eliminated.
 5316 0000 80B4     		push	{r7}
 5317              	.LCFI326:
 5318              		.cfi_def_cfa_offset 4
 5319              		.cfi_offset 7, -4
 5320 0002 83B0     		sub	sp, sp, #12
 5321              	.LCFI327:
 5322              		.cfi_def_cfa_offset 16
 5323 0004 00AF     		add	r7, sp, #0
 5324              	.LCFI328:
 5325              		.cfi_def_cfa_register 7
 5326 0006 7860     		str	r0, [r7, #4]
2495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 5327              		.loc 1 2495 13
 5328 0008 7B68     		ldr	r3, [r7, #4]
 5329 000a 93F89830 		ldrb	r3, [r3, #152]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 137


 5330 000e DBB2     		uxtb	r3, r3
 5331              		.loc 1 2495 6
 5332 0010 012B     		cmp	r3, #1
 5333 0012 09D1     		bne	.L313
2496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Enable edge filtering */
2498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     SET_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_EFBI);
 5334              		.loc 1 2498 5
 5335 0014 7B68     		ldr	r3, [r7, #4]
 5336 0016 1B68     		ldr	r3, [r3]
 5337 0018 9A69     		ldr	r2, [r3, #24]
 5338 001a 7B68     		ldr	r3, [r7, #4]
 5339 001c 1B68     		ldr	r3, [r3]
 5340 001e 42F40052 		orr	r2, r2, #8192
 5341 0022 9A61     		str	r2, [r3, #24]
2499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
2501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 5342              		.loc 1 2501 12
 5343 0024 0023     		movs	r3, #0
 5344 0026 08E0     		b	.L314
 5345              	.L313:
2502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
2504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
2506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
 5346              		.loc 1 2506 23
 5347 0028 7B68     		ldr	r3, [r7, #4]
 5348 002a D3F89C30 		ldr	r3, [r3, #156]
 5349 002e 43F00402 		orr	r2, r3, #4
 5350 0032 7B68     		ldr	r3, [r7, #4]
 5351 0034 C3F89C20 		str	r2, [r3, #156]
2507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 5352              		.loc 1 2508 12
 5353 0038 0123     		movs	r3, #1
 5354              	.L314:
2509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 5355              		.loc 1 2510 1
 5356 003a 1846     		mov	r0, r3
 5357 003c 0C37     		adds	r7, r7, #12
 5358              	.LCFI329:
 5359              		.cfi_def_cfa_offset 4
 5360 003e BD46     		mov	sp, r7
 5361              	.LCFI330:
 5362              		.cfi_def_cfa_register 13
 5363              		@ sp needed
 5364 0040 5DF8047B 		ldr	r7, [sp], #4
 5365              	.LCFI331:
 5366              		.cfi_restore 7
 5367              		.cfi_def_cfa_offset 0
 5368 0044 7047     		bx	lr
 5369              		.cfi_endproc
 5370              	.LFE388:
 5372              		.section	.text.HAL_FDCAN_DisableEdgeFiltering,"ax",%progbits
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 138


 5373              		.align	1
 5374              		.global	HAL_FDCAN_DisableEdgeFiltering
 5375              		.syntax unified
 5376              		.thumb
 5377              		.thumb_func
 5379              	HAL_FDCAN_DisableEdgeFiltering:
 5380              	.LFB389:
2511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Disable edge filtering during bus integration.
2514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         One dominant tq is required to detect an edge for hard synchronization.
2515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_DisableEdgeFiltering(FDCAN_HandleTypeDef *hfdcan)
2520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 5381              		.loc 1 2520 1
 5382              		.cfi_startproc
 5383              		@ args = 0, pretend = 0, frame = 8
 5384              		@ frame_needed = 1, uses_anonymous_args = 0
 5385              		@ link register save eliminated.
 5386 0000 80B4     		push	{r7}
 5387              	.LCFI332:
 5388              		.cfi_def_cfa_offset 4
 5389              		.cfi_offset 7, -4
 5390 0002 83B0     		sub	sp, sp, #12
 5391              	.LCFI333:
 5392              		.cfi_def_cfa_offset 16
 5393 0004 00AF     		add	r7, sp, #0
 5394              	.LCFI334:
 5395              		.cfi_def_cfa_register 7
 5396 0006 7860     		str	r0, [r7, #4]
2521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 5397              		.loc 1 2521 13
 5398 0008 7B68     		ldr	r3, [r7, #4]
 5399 000a 93F89830 		ldrb	r3, [r3, #152]
 5400 000e DBB2     		uxtb	r3, r3
 5401              		.loc 1 2521 6
 5402 0010 012B     		cmp	r3, #1
 5403 0012 09D1     		bne	.L316
2522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Disable edge filtering */
2524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     CLEAR_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_EFBI);
 5404              		.loc 1 2524 5
 5405 0014 7B68     		ldr	r3, [r7, #4]
 5406 0016 1B68     		ldr	r3, [r3]
 5407 0018 9A69     		ldr	r2, [r3, #24]
 5408 001a 7B68     		ldr	r3, [r7, #4]
 5409 001c 1B68     		ldr	r3, [r3]
 5410 001e 22F40052 		bic	r2, r2, #8192
 5411 0022 9A61     		str	r2, [r3, #24]
2525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
2527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 5412              		.loc 1 2527 12
 5413 0024 0023     		movs	r3, #0
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 139


 5414 0026 08E0     		b	.L317
 5415              	.L316:
2528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
2530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
2532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
 5416              		.loc 1 2532 23
 5417 0028 7B68     		ldr	r3, [r7, #4]
 5418 002a D3F89C30 		ldr	r3, [r3, #156]
 5419 002e 43F00402 		orr	r2, r3, #4
 5420 0032 7B68     		ldr	r3, [r7, #4]
 5421 0034 C3F89C20 		str	r2, [r3, #156]
2533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 5422              		.loc 1 2534 12
 5423 0038 0123     		movs	r3, #1
 5424              	.L317:
2535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 5425              		.loc 1 2536 1
 5426 003a 1846     		mov	r0, r3
 5427 003c 0C37     		adds	r7, r7, #12
 5428              	.LCFI335:
 5429              		.cfi_def_cfa_offset 4
 5430 003e BD46     		mov	sp, r7
 5431              	.LCFI336:
 5432              		.cfi_def_cfa_register 13
 5433              		@ sp needed
 5434 0040 5DF8047B 		ldr	r7, [sp], #4
 5435              	.LCFI337:
 5436              		.cfi_restore 7
 5437              		.cfi_def_cfa_offset 0
 5438 0044 7047     		bx	lr
 5439              		.cfi_endproc
 5440              	.LFE389:
 5442              		.section	.text.HAL_FDCAN_Start,"ax",%progbits
 5443              		.align	1
 5444              		.global	HAL_FDCAN_Start
 5445              		.syntax unified
 5446              		.thumb
 5447              		.thumb_func
 5449              	HAL_FDCAN_Start:
 5450              	.LFB390:
2537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @}
2540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /** @defgroup FDCAN_Exported_Functions_Group3 Control functions
2543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****  *  @brief    Control functions
2544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****  *
2545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** @verbatim
2546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ==============================================================================
2547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                           ##### Control functions #####
2548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ==============================================================================
2549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     [..]  This section provides functions allowing to:
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 140


2550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_Start                         : Start the FDCAN module
2551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_Stop                          : Stop the FDCAN module and enable access to conf
2552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_AddMessageToTxFifoQ           : Add a message to the Tx FIFO/Queue and activate
2553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_AddMessageToTxBuffer          : Add a message to a dedicated Tx buffer
2554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_EnableTxBufferRequest         : Enable transmission request
2555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_GetLatestTxFifoQRequestBuffer : Get Tx buffer index of latest Tx FIFO/Queue req
2556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_AbortTxRequest                : Abort transmission request
2557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_GetRxMessage                  : Get an FDCAN frame from the Rx Buffer/FIFO zone
2558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_GetTxEvent                    : Get an FDCAN Tx event from the Tx Event FIFO zo
2559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_GetHighPriorityMessageStatus  : Get high priority message status
2560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_GetProtocolStatus             : Get protocol status
2561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_GetErrorCounters              : Get error counter values
2562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_IsRxBufferMessageAvailable    : Check if a new message is received in the selec
2563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_IsTxBufferMessagePending      : Check if a transmission request is pending on t
2564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_GetRxFifoFillLevel            : Return Rx FIFO fill level
2565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_GetTxFifoFreeLevel            : Return Tx FIFO free level
2566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_IsRestrictedOperationMode     : Check if the FDCAN peripheral entered Restricte
2567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_ExitRestrictedOperationMode   : Exit Restricted Operation Mode
2568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** @endverbatim
2570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @{
2571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Start the FDCAN module.
2575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_Start(FDCAN_HandleTypeDef *hfdcan)
2580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 5451              		.loc 1 2580 1
 5452              		.cfi_startproc
 5453              		@ args = 0, pretend = 0, frame = 8
 5454              		@ frame_needed = 1, uses_anonymous_args = 0
 5455              		@ link register save eliminated.
 5456 0000 80B4     		push	{r7}
 5457              	.LCFI338:
 5458              		.cfi_def_cfa_offset 4
 5459              		.cfi_offset 7, -4
 5460 0002 83B0     		sub	sp, sp, #12
 5461              	.LCFI339:
 5462              		.cfi_def_cfa_offset 16
 5463 0004 00AF     		add	r7, sp, #0
 5464              	.LCFI340:
 5465              		.cfi_def_cfa_register 7
 5466 0006 7860     		str	r0, [r7, #4]
2581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 5467              		.loc 1 2581 13
 5468 0008 7B68     		ldr	r3, [r7, #4]
 5469 000a 93F89830 		ldrb	r3, [r3, #152]
 5470 000e DBB2     		uxtb	r3, r3
 5471              		.loc 1 2581 6
 5472 0010 012B     		cmp	r3, #1
 5473 0012 11D1     		bne	.L319
2582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Change FDCAN peripheral state */
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 141


2584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->State = HAL_FDCAN_STATE_BUSY;
 5474              		.loc 1 2584 19
 5475 0014 7B68     		ldr	r3, [r7, #4]
 5476 0016 0222     		movs	r2, #2
 5477 0018 83F89820 		strb	r2, [r3, #152]
2585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Request leave initialisation */
2587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     CLEAR_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_INIT);
 5478              		.loc 1 2587 5
 5479 001c 7B68     		ldr	r3, [r7, #4]
 5480 001e 1B68     		ldr	r3, [r3]
 5481 0020 9A69     		ldr	r2, [r3, #24]
 5482 0022 7B68     		ldr	r3, [r7, #4]
 5483 0024 1B68     		ldr	r3, [r3]
 5484 0026 22F00102 		bic	r2, r2, #1
 5485 002a 9A61     		str	r2, [r3, #24]
2588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Reset the FDCAN ErrorCode */
2590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode = HAL_FDCAN_ERROR_NONE;
 5486              		.loc 1 2590 23
 5487 002c 7B68     		ldr	r3, [r7, #4]
 5488 002e 0022     		movs	r2, #0
 5489 0030 C3F89C20 		str	r2, [r3, #156]
2591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
2593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 5490              		.loc 1 2593 12
 5491 0034 0023     		movs	r3, #0
 5492 0036 08E0     		b	.L320
 5493              	.L319:
2594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
2596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
2598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
 5494              		.loc 1 2598 23
 5495 0038 7B68     		ldr	r3, [r7, #4]
 5496 003a D3F89C30 		ldr	r3, [r3, #156]
 5497 003e 43F00402 		orr	r2, r3, #4
 5498 0042 7B68     		ldr	r3, [r7, #4]
 5499 0044 C3F89C20 		str	r2, [r3, #156]
2599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 5500              		.loc 1 2600 12
 5501 0048 0123     		movs	r3, #1
 5502              	.L320:
2601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 5503              		.loc 1 2602 1
 5504 004a 1846     		mov	r0, r3
 5505 004c 0C37     		adds	r7, r7, #12
 5506              	.LCFI341:
 5507              		.cfi_def_cfa_offset 4
 5508 004e BD46     		mov	sp, r7
 5509              	.LCFI342:
 5510              		.cfi_def_cfa_register 13
 5511              		@ sp needed
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 142


 5512 0050 5DF8047B 		ldr	r7, [sp], #4
 5513              	.LCFI343:
 5514              		.cfi_restore 7
 5515              		.cfi_def_cfa_offset 0
 5516 0054 7047     		bx	lr
 5517              		.cfi_endproc
 5518              	.LFE390:
 5520              		.section	.text.HAL_FDCAN_Stop,"ax",%progbits
 5521              		.align	1
 5522              		.global	HAL_FDCAN_Stop
 5523              		.syntax unified
 5524              		.thumb
 5525              		.thumb_func
 5527              	HAL_FDCAN_Stop:
 5528              	.LFB391:
2603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Stop the FDCAN module and enable access to configuration registers.
2606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_Stop(FDCAN_HandleTypeDef *hfdcan)
2611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 5529              		.loc 1 2611 1
 5530              		.cfi_startproc
 5531              		@ args = 0, pretend = 0, frame = 16
 5532              		@ frame_needed = 1, uses_anonymous_args = 0
 5533              		@ link register save eliminated.
 5534 0000 80B4     		push	{r7}
 5535              	.LCFI344:
 5536              		.cfi_def_cfa_offset 4
 5537              		.cfi_offset 7, -4
 5538 0002 85B0     		sub	sp, sp, #20
 5539              	.LCFI345:
 5540              		.cfi_def_cfa_offset 24
 5541 0004 00AF     		add	r7, sp, #0
 5542              	.LCFI346:
 5543              		.cfi_def_cfa_register 7
 5544 0006 7860     		str	r0, [r7, #4]
2612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t Counter = 0U;
 5545              		.loc 1 2612 12
 5546 0008 0023     		movs	r3, #0
 5547 000a FB60     		str	r3, [r7, #12]
2613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_BUSY)
 5548              		.loc 1 2614 13
 5549 000c 7B68     		ldr	r3, [r7, #4]
 5550 000e 93F89830 		ldrb	r3, [r3, #152]
 5551 0012 DBB2     		uxtb	r3, r3
 5552              		.loc 1 2614 6
 5553 0014 022B     		cmp	r3, #2
 5554 0016 5BD1     		bne	.L322
2615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Request initialisation */
2617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     SET_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_INIT);
 5555              		.loc 1 2617 5
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 143


 5556 0018 7B68     		ldr	r3, [r7, #4]
 5557 001a 1B68     		ldr	r3, [r3]
 5558 001c 9A69     		ldr	r2, [r3, #24]
 5559 001e 7B68     		ldr	r3, [r7, #4]
 5560 0020 1B68     		ldr	r3, [r3]
 5561 0022 42F00102 		orr	r2, r2, #1
 5562 0026 9A61     		str	r2, [r3, #24]
2618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Wait until the INIT bit into CCCR register is set */
2620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     while ((hfdcan->Instance->CCCR & FDCAN_CCCR_INIT) == 0U)
 5563              		.loc 1 2620 11
 5564 0028 13E0     		b	.L323
 5565              	.L326:
2621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
2622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Check for the Timeout */
2623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if (Counter > FDCAN_TIMEOUT_COUNT)
 5566              		.loc 1 2623 10
 5567 002a FB68     		ldr	r3, [r7, #12]
 5568 002c 322B     		cmp	r3, #50
 5569 002e 0DD9     		bls	.L324
2624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
2625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Update error code */
2626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
 5570              		.loc 1 2626 27
 5571 0030 7B68     		ldr	r3, [r7, #4]
 5572 0032 D3F89C30 		ldr	r3, [r3, #156]
 5573 0036 43F00102 		orr	r2, r3, #1
 5574 003a 7B68     		ldr	r3, [r7, #4]
 5575 003c C3F89C20 		str	r2, [r3, #156]
2627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Change FDCAN state */
2629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->State = HAL_FDCAN_STATE_ERROR;
 5576              		.loc 1 2629 23
 5577 0040 7B68     		ldr	r3, [r7, #4]
 5578 0042 0322     		movs	r2, #3
 5579 0044 83F89820 		strb	r2, [r3, #152]
2630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         return HAL_ERROR;
 5580              		.loc 1 2631 16
 5581 0048 0123     		movs	r3, #1
 5582 004a 4AE0     		b	.L325
 5583              	.L324:
2632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
2633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Increment counter */
2635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       Counter++;
 5584              		.loc 1 2635 14
 5585 004c FB68     		ldr	r3, [r7, #12]
 5586 004e 0133     		adds	r3, r3, #1
 5587 0050 FB60     		str	r3, [r7, #12]
 5588              	.L323:
2620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 5589              		.loc 1 2620 19
 5590 0052 7B68     		ldr	r3, [r7, #4]
 5591 0054 1B68     		ldr	r3, [r3]
2620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 5592              		.loc 1 2620 29
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 144


 5593 0056 9B69     		ldr	r3, [r3, #24]
2620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 5594              		.loc 1 2620 36
 5595 0058 03F00103 		and	r3, r3, #1
2620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 5596              		.loc 1 2620 11
 5597 005c 002B     		cmp	r3, #0
 5598 005e E4D0     		beq	.L326
2636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
2637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Reset counter */
2639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     Counter = 0U;
 5599              		.loc 1 2639 13
 5600 0060 0023     		movs	r3, #0
 5601 0062 FB60     		str	r3, [r7, #12]
2640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Exit from Sleep mode */
2642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     CLEAR_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_CSR);
 5602              		.loc 1 2642 5
 5603 0064 7B68     		ldr	r3, [r7, #4]
 5604 0066 1B68     		ldr	r3, [r3]
 5605 0068 9A69     		ldr	r2, [r3, #24]
 5606 006a 7B68     		ldr	r3, [r7, #4]
 5607 006c 1B68     		ldr	r3, [r3]
 5608 006e 22F01002 		bic	r2, r2, #16
 5609 0072 9A61     		str	r2, [r3, #24]
2643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Wait until FDCAN exits sleep mode */
2645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     while ((hfdcan->Instance->CCCR & FDCAN_CCCR_CSA) == FDCAN_CCCR_CSA)
 5610              		.loc 1 2645 11
 5611 0074 13E0     		b	.L327
 5612              	.L329:
2646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
2647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Check for the Timeout */
2648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if (Counter > FDCAN_TIMEOUT_COUNT)
 5613              		.loc 1 2648 10
 5614 0076 FB68     		ldr	r3, [r7, #12]
 5615 0078 322B     		cmp	r3, #50
 5616 007a 0DD9     		bls	.L328
2649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
2650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Update error code */
2651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
 5617              		.loc 1 2651 27
 5618 007c 7B68     		ldr	r3, [r7, #4]
 5619 007e D3F89C30 		ldr	r3, [r3, #156]
 5620 0082 43F00102 		orr	r2, r3, #1
 5621 0086 7B68     		ldr	r3, [r7, #4]
 5622 0088 C3F89C20 		str	r2, [r3, #156]
2652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Change FDCAN state */
2654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->State = HAL_FDCAN_STATE_ERROR;
 5623              		.loc 1 2654 23
 5624 008c 7B68     		ldr	r3, [r7, #4]
 5625 008e 0322     		movs	r2, #3
 5626 0090 83F89820 		strb	r2, [r3, #152]
2655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         return HAL_ERROR;
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 145


 5627              		.loc 1 2656 16
 5628 0094 0123     		movs	r3, #1
 5629 0096 24E0     		b	.L325
 5630              	.L328:
2657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
2658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Increment counter */
2660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       Counter++;
 5631              		.loc 1 2660 14
 5632 0098 FB68     		ldr	r3, [r7, #12]
 5633 009a 0133     		adds	r3, r3, #1
 5634 009c FB60     		str	r3, [r7, #12]
 5635              	.L327:
2645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 5636              		.loc 1 2645 19
 5637 009e 7B68     		ldr	r3, [r7, #4]
 5638 00a0 1B68     		ldr	r3, [r3]
2645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 5639              		.loc 1 2645 29
 5640 00a2 9B69     		ldr	r3, [r3, #24]
2645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 5641              		.loc 1 2645 36
 5642 00a4 03F00803 		and	r3, r3, #8
2645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 5643              		.loc 1 2645 11
 5644 00a8 082B     		cmp	r3, #8
 5645 00aa E4D0     		beq	.L329
2661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
2662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Enable configuration change */
2664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     SET_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_CCE);
 5646              		.loc 1 2664 5
 5647 00ac 7B68     		ldr	r3, [r7, #4]
 5648 00ae 1B68     		ldr	r3, [r3]
 5649 00b0 9A69     		ldr	r2, [r3, #24]
 5650 00b2 7B68     		ldr	r3, [r7, #4]
 5651 00b4 1B68     		ldr	r3, [r3]
 5652 00b6 42F00202 		orr	r2, r2, #2
 5653 00ba 9A61     		str	r2, [r3, #24]
2665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Reset Latest Tx FIFO/Queue Request Buffer Index */
2667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->LatestTxFifoQRequest = 0U;
 5654              		.loc 1 2667 34
 5655 00bc 7B68     		ldr	r3, [r7, #4]
 5656 00be 0022     		movs	r2, #0
 5657 00c0 C3F89420 		str	r2, [r3, #148]
2668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Change FDCAN peripheral state */
2670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->State = HAL_FDCAN_STATE_READY;
 5658              		.loc 1 2670 19
 5659 00c4 7B68     		ldr	r3, [r7, #4]
 5660 00c6 0122     		movs	r2, #1
 5661 00c8 83F89820 		strb	r2, [r3, #152]
2671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
2673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 5662              		.loc 1 2673 12
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 146


 5663 00cc 0023     		movs	r3, #0
 5664 00ce 08E0     		b	.L325
 5665              	.L322:
2674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
2676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
2678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_STARTED;
 5666              		.loc 1 2678 23
 5667 00d0 7B68     		ldr	r3, [r7, #4]
 5668 00d2 D3F89C30 		ldr	r3, [r3, #156]
 5669 00d6 43F00802 		orr	r2, r3, #8
 5670 00da 7B68     		ldr	r3, [r7, #4]
 5671 00dc C3F89C20 		str	r2, [r3, #156]
2679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 5672              		.loc 1 2680 12
 5673 00e0 0123     		movs	r3, #1
 5674              	.L325:
2681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 5675              		.loc 1 2682 1
 5676 00e2 1846     		mov	r0, r3
 5677 00e4 1437     		adds	r7, r7, #20
 5678              	.LCFI347:
 5679              		.cfi_def_cfa_offset 4
 5680 00e6 BD46     		mov	sp, r7
 5681              	.LCFI348:
 5682              		.cfi_def_cfa_register 13
 5683              		@ sp needed
 5684 00e8 5DF8047B 		ldr	r7, [sp], #4
 5685              	.LCFI349:
 5686              		.cfi_restore 7
 5687              		.cfi_def_cfa_offset 0
 5688 00ec 7047     		bx	lr
 5689              		.cfi_endproc
 5690              	.LFE391:
 5692              		.section	.text.HAL_FDCAN_AddMessageToTxFifoQ,"ax",%progbits
 5693              		.align	1
 5694              		.global	HAL_FDCAN_AddMessageToTxFifoQ
 5695              		.syntax unified
 5696              		.thumb
 5697              		.thumb_func
 5699              	HAL_FDCAN_AddMessageToTxFifoQ:
 5700              	.LFB392:
2683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Add a message to the Tx FIFO/Queue and activate the corresponding transmission request
2686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  pTxHeader pointer to a FDCAN_TxHeaderTypeDef structure.
2689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  pTxData pointer to a buffer containing the payload of the Tx frame.
2690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_AddMessageToTxFifoQ(FDCAN_HandleTypeDef *hfdcan, FDCAN_TxHeaderTypeDef 
2693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 5701              		.loc 1 2693 1
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 147


 5702              		.cfi_startproc
 5703              		@ args = 0, pretend = 0, frame = 24
 5704              		@ frame_needed = 1, uses_anonymous_args = 0
 5705 0000 80B5     		push	{r7, lr}
 5706              	.LCFI350:
 5707              		.cfi_def_cfa_offset 8
 5708              		.cfi_offset 7, -8
 5709              		.cfi_offset 14, -4
 5710 0002 86B0     		sub	sp, sp, #24
 5711              	.LCFI351:
 5712              		.cfi_def_cfa_offset 32
 5713 0004 00AF     		add	r7, sp, #0
 5714              	.LCFI352:
 5715              		.cfi_def_cfa_register 7
 5716 0006 F860     		str	r0, [r7, #12]
 5717 0008 B960     		str	r1, [r7, #8]
 5718 000a 7A60     		str	r2, [r7, #4]
2694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t PutIndex;
2695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
2697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_ID_TYPE(pTxHeader->IdType));
2698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (pTxHeader->IdType == FDCAN_STANDARD_ID)
2699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_MAX_VALUE(pTxHeader->Identifier, 0x7FFU));
2701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else /* pTxHeader->IdType == FDCAN_EXTENDED_ID */
2703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_MAX_VALUE(pTxHeader->Identifier, 0x1FFFFFFFU));
2705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_FRAME_TYPE(pTxHeader->TxFrameType));
2707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_DLC(pTxHeader->DataLength));
2708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_ESI(pTxHeader->ErrorStateIndicator));
2709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_BRS(pTxHeader->BitRateSwitch));
2710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_FDF(pTxHeader->FDFormat));
2711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_EFC(pTxHeader->TxEventFifoControl));
2712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_MAX_VALUE(pTxHeader->MessageMarker, 0xFFU));
2713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_BUSY)
 5719              		.loc 1 2714 13
 5720 000c FB68     		ldr	r3, [r7, #12]
 5721 000e 93F89830 		ldrb	r3, [r3, #152]
 5722 0012 DBB2     		uxtb	r3, r3
 5723              		.loc 1 2714 6
 5724 0014 022B     		cmp	r3, #2
 5725 0016 41D1     		bne	.L331
2715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Check that the Tx FIFO/Queue has an allocated area into the RAM */
2717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->Instance->TXBC & FDCAN_TXBC_TFQS) == 0U)
 5726              		.loc 1 2717 16
 5727 0018 FB68     		ldr	r3, [r7, #12]
 5728 001a 1B68     		ldr	r3, [r3]
 5729              		.loc 1 2717 26
 5730 001c D3F8C030 		ldr	r3, [r3, #192]
 5731              		.loc 1 2717 33
 5732 0020 03F07C53 		and	r3, r3, #1056964608
 5733              		.loc 1 2717 8
 5734 0024 002B     		cmp	r3, #0
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 148


 5735 0026 09D1     		bne	.L332
2718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
2719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code */
2720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_PARAM;
 5736              		.loc 1 2720 25
 5737 0028 FB68     		ldr	r3, [r7, #12]
 5738 002a D3F89C30 		ldr	r3, [r3, #156]
 5739 002e 43F02002 		orr	r2, r3, #32
 5740 0032 FB68     		ldr	r3, [r7, #12]
 5741 0034 C3F89C20 		str	r2, [r3, #156]
2721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 5742              		.loc 1 2722 14
 5743 0038 0123     		movs	r3, #1
 5744 003a 38E0     		b	.L333
 5745              	.L332:
2723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
2724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Check that the Tx FIFO/Queue is not full */
2726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->Instance->TXFQS & FDCAN_TXFQS_TFQF) != 0U)
 5746              		.loc 1 2726 16
 5747 003c FB68     		ldr	r3, [r7, #12]
 5748 003e 1B68     		ldr	r3, [r3]
 5749              		.loc 1 2726 26
 5750 0040 D3F8C430 		ldr	r3, [r3, #196]
 5751              		.loc 1 2726 34
 5752 0044 03F40013 		and	r3, r3, #2097152
 5753              		.loc 1 2726 8
 5754 0048 002B     		cmp	r3, #0
 5755 004a 09D0     		beq	.L334
2727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
2728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code */
2729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_FIFO_FULL;
 5756              		.loc 1 2729 25
 5757 004c FB68     		ldr	r3, [r7, #12]
 5758 004e D3F89C30 		ldr	r3, [r3, #156]
 5759 0052 43F40072 		orr	r2, r3, #512
 5760 0056 FB68     		ldr	r3, [r7, #12]
 5761 0058 C3F89C20 		str	r2, [r3, #156]
2730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 5762              		.loc 1 2731 14
 5763 005c 0123     		movs	r3, #1
 5764 005e 26E0     		b	.L333
 5765              	.L334:
2732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
2733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else
2734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
2735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Retrieve the Tx FIFO PutIndex */
2736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       PutIndex = ((hfdcan->Instance->TXFQS & FDCAN_TXFQS_TFQPI) >> FDCAN_TXFQS_TFQPI_Pos);
 5766              		.loc 1 2736 26
 5767 0060 FB68     		ldr	r3, [r7, #12]
 5768 0062 1B68     		ldr	r3, [r3]
 5769              		.loc 1 2736 36
 5770 0064 D3F8C430 		ldr	r3, [r3, #196]
 5771              		.loc 1 2736 65
 5772 0068 1B0C     		lsrs	r3, r3, #16
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 149


 5773              		.loc 1 2736 16
 5774 006a 03F01F03 		and	r3, r3, #31
 5775 006e 7B61     		str	r3, [r7, #20]
2737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Add the message to the Tx FIFO/Queue */
2739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       FDCAN_CopyMessageToRAM(hfdcan, pTxHeader, pTxData, PutIndex);
 5776              		.loc 1 2739 7
 5777 0070 7B69     		ldr	r3, [r7, #20]
 5778 0072 7A68     		ldr	r2, [r7, #4]
 5779 0074 B968     		ldr	r1, [r7, #8]
 5780 0076 F868     		ldr	r0, [r7, #12]
 5781 0078 FFF7FEFF 		bl	FDCAN_CopyMessageToRAM
2740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Activate the corresponding transmission request */
2742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->Instance->TXBAR = ((uint32_t)1 << PutIndex);
 5782              		.loc 1 2742 13
 5783 007c FB68     		ldr	r3, [r7, #12]
 5784 007e 1B68     		ldr	r3, [r3]
 5785              		.loc 1 2742 46
 5786 0080 0121     		movs	r1, #1
 5787 0082 7A69     		ldr	r2, [r7, #20]
 5788 0084 01FA02F2 		lsl	r2, r1, r2
 5789              		.loc 1 2742 31
 5790 0088 C3F8D020 		str	r2, [r3, #208]
2743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Store the Latest Tx FIFO/Queue Request Buffer Index */
2745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->LatestTxFifoQRequest = ((uint32_t)1 << PutIndex);
 5791              		.loc 1 2745 51
 5792 008c 0122     		movs	r2, #1
 5793 008e 7B69     		ldr	r3, [r7, #20]
 5794 0090 9A40     		lsls	r2, r2, r3
 5795              		.loc 1 2745 36
 5796 0092 FB68     		ldr	r3, [r7, #12]
 5797 0094 C3F89420 		str	r2, [r3, #148]
2746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
2747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
2749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 5798              		.loc 1 2749 12
 5799 0098 0023     		movs	r3, #0
 5800 009a 08E0     		b	.L333
 5801              	.L331:
2750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
2752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
2754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_STARTED;
 5802              		.loc 1 2754 23
 5803 009c FB68     		ldr	r3, [r7, #12]
 5804 009e D3F89C30 		ldr	r3, [r3, #156]
 5805 00a2 43F00802 		orr	r2, r3, #8
 5806 00a6 FB68     		ldr	r3, [r7, #12]
 5807 00a8 C3F89C20 		str	r2, [r3, #156]
2755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 5808              		.loc 1 2756 12
 5809 00ac 0123     		movs	r3, #1
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 150


 5810              	.L333:
2757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 5811              		.loc 1 2758 1
 5812 00ae 1846     		mov	r0, r3
 5813 00b0 1837     		adds	r7, r7, #24
 5814              	.LCFI353:
 5815              		.cfi_def_cfa_offset 8
 5816 00b2 BD46     		mov	sp, r7
 5817              	.LCFI354:
 5818              		.cfi_def_cfa_register 13
 5819              		@ sp needed
 5820 00b4 80BD     		pop	{r7, pc}
 5821              		.cfi_endproc
 5822              	.LFE392:
 5824              		.section	.text.HAL_FDCAN_AddMessageToTxBuffer,"ax",%progbits
 5825              		.align	1
 5826              		.global	HAL_FDCAN_AddMessageToTxBuffer
 5827              		.syntax unified
 5828              		.thumb
 5829              		.thumb_func
 5831              	HAL_FDCAN_AddMessageToTxBuffer:
 5832              	.LFB393:
2759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Add a message to a dedicated Tx buffer
2762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  pTxHeader pointer to a FDCAN_TxHeaderTypeDef structure.
2765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  pTxData pointer to a buffer containing the payload of the Tx frame.
2766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  BufferIndex index of the buffer to be configured.
2767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be a value of @arg FDCAN_Tx_location.
2768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_AddMessageToTxBuffer(FDCAN_HandleTypeDef *hfdcan, FDCAN_TxHeaderTypeDef
2771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 5833              		.loc 1 2771 1
 5834              		.cfi_startproc
 5835              		@ args = 0, pretend = 0, frame = 48
 5836              		@ frame_needed = 1, uses_anonymous_args = 0
 5837 0000 80B5     		push	{r7, lr}
 5838              	.LCFI355:
 5839              		.cfi_def_cfa_offset 8
 5840              		.cfi_offset 7, -8
 5841              		.cfi_offset 14, -4
 5842 0002 8CB0     		sub	sp, sp, #48
 5843              	.LCFI356:
 5844              		.cfi_def_cfa_offset 56
 5845 0004 00AF     		add	r7, sp, #0
 5846              	.LCFI357:
 5847              		.cfi_def_cfa_register 7
 5848 0006 F860     		str	r0, [r7, #12]
 5849 0008 B960     		str	r1, [r7, #8]
 5850 000a 7A60     		str	r2, [r7, #4]
 5851 000c 3B60     		str	r3, [r7]
2772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 5852              		.loc 1 2772 26
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 151


 5853 000e FB68     		ldr	r3, [r7, #12]
 5854 0010 93F89830 		ldrb	r3, [r3, #152]
 5855 0014 87F82F30 		strb	r3, [r7, #47]
2773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
2775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_ID_TYPE(pTxHeader->IdType));
2776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (pTxHeader->IdType == FDCAN_STANDARD_ID)
2777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_MAX_VALUE(pTxHeader->Identifier, 0x7FFU));
2779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else /* pTxHeader->IdType == FDCAN_EXTENDED_ID */
2781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_MAX_VALUE(pTxHeader->Identifier, 0x1FFFFFFFU));
2783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_FRAME_TYPE(pTxHeader->TxFrameType));
2785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_DLC(pTxHeader->DataLength));
2786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_ESI(pTxHeader->ErrorStateIndicator));
2787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_BRS(pTxHeader->BitRateSwitch));
2788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_FDF(pTxHeader->FDFormat));
2789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_EFC(pTxHeader->TxEventFifoControl));
2790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_MAX_VALUE(pTxHeader->MessageMarker, 0xFFU));
2791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TX_LOCATION(BufferIndex));
2792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 5856              		.loc 1 2793 6
 5857 0018 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 5858 001c 012B     		cmp	r3, #1
 5859 001e 03D0     		beq	.L336
 5860              		.loc 1 2793 40 discriminator 1
 5861 0020 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 5862 0024 022B     		cmp	r3, #2
 5863 0026 4ED1     		bne	.L337
 5864              	.L336:
 5865 0028 3B68     		ldr	r3, [r7]
 5866 002a 7B62     		str	r3, [r7, #36]
 5867              	.LBB14:
 5868              	.LBB15:
 5869              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 152


  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 153


  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 154


 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 155


 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 214:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 220:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 156


 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 260:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 262:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 302:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 157


 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 321:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 346:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 360:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 158


 362:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 364:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 402:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 159


 419:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 423:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 437:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 441:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 449:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 452:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 474:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 160


 476:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 512:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 519:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 530:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 161


 533:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 545:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 546:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 553:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 576:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 578:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 587:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 588:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 589:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 162


 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 597:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 617:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 618:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 640:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 642:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 163


 647:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 667:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 686:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 164


 704:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 706:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 753:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 754:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 758:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 165


 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 774:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 779:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 782:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 784:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 788:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 802:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 815:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 166


 818:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 819:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 821:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 833:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 843:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 847:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 848:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 854:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 167


 875:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 884:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 885:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 886:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 903:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 905:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 913:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 917:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 168


 932:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 933:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 935:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 948:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 958:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 959:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 963:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 964:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 965:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 967:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 968:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 969:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 971:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 972:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 975:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 976:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 977:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 978:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 979:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 980:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 981:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 982:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 984:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 985:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 986:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 987:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 169


 989:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 991:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 992:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 993:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 994:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 995:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1000:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1001:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
1002:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1003:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1004:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
1005:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1006:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
1007:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1008:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1009:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
1010:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1011:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1012:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1013:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1014:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1015:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
1016:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
1017:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
1018:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
1019:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
1020:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1021:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
1022:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1023:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
1024:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
1025:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1026:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
1027:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1028:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
1029:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1030:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1031:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1032:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1033:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
1034:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
1035:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
1036:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
1037:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
1038:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1039:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
1040:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1041:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1042:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1043:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
1044:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
1045:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 170


1046:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1047:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
1049:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1050:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
1051:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1052:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1053:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1054:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1055:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 5870              		.loc 2 1055 4
 5871 002c 7B6A     		ldr	r3, [r7, #36]
 5872              		.syntax unified
 5873              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5874 002e 93FAA3F3 		rbit r3, r3
 5875              	@ 0 "" 2
 5876              		.thumb
 5877              		.syntax unified
 5878 0032 3B62     		str	r3, [r7, #32]
1056:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1057:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
1058:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1059:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
1060:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
1061:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1062:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
1063:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
1064:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
1065:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1066:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1067:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1068:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 5879              		.loc 2 1068 10
 5880 0034 3B6A     		ldr	r3, [r7, #32]
 5881 0036 BB62     		str	r3, [r7, #40]
 5882              	.LBE15:
 5883              	.LBE14:
 5884              	.LBB16:
 5885              	.LBB17:
1069:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1070:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1071:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1072:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1073:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1074:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1075:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1076:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1077:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
1079:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1080:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
1081:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
1082:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
1083:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
1084:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
1085:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
1086:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 171


1087:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
1088:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 5886              		.loc 2 1089 6
 5887 0038 BB6A     		ldr	r3, [r7, #40]
 5888 003a 002B     		cmp	r3, #0
 5889 003c 01D1     		bne	.L339
1090:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 5890              		.loc 2 1091 12
 5891 003e 2023     		movs	r3, #32
 5892 0040 03E0     		b	.L340
 5893              	.L339:
1092:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1093:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 5894              		.loc 2 1093 10
 5895 0042 BB6A     		ldr	r3, [r7, #40]
 5896 0044 B3FA83F3 		clz	r3, r3
 5897 0048 DBB2     		uxtb	r3, r3
 5898              	.L340:
 5899              	.LBE17:
 5900              	.LBE16:
2794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Check that the selected buffer has an allocated area into the RAM */
2796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (POSITION_VAL(BufferIndex) >= ((hfdcan->Instance->TXBC & FDCAN_TXBC_NDTB) >> FDCAN_TXBC_NDTB
 5901              		.loc 1 2796 9
 5902 004a 1A46     		mov	r2, r3
 5903              		.loc 1 2796 46
 5904 004c FB68     		ldr	r3, [r7, #12]
 5905 004e 1B68     		ldr	r3, [r3]
 5906              		.loc 1 2796 56
 5907 0050 D3F8C030 		ldr	r3, [r3, #192]
 5908              		.loc 1 2796 82
 5909 0054 1B0C     		lsrs	r3, r3, #16
 5910 0056 03F03F03 		and	r3, r3, #63
 5911              		.loc 1 2796 8
 5912 005a 9A42     		cmp	r2, r3
 5913 005c 09D3     		bcc	.L341
2797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
2798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code */
2799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_PARAM;
 5914              		.loc 1 2799 25
 5915 005e FB68     		ldr	r3, [r7, #12]
 5916 0060 D3F89C30 		ldr	r3, [r3, #156]
 5917 0064 43F02002 		orr	r2, r3, #32
 5918 0068 FB68     		ldr	r3, [r7, #12]
 5919 006a C3F89C20 		str	r2, [r3, #156]
2800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 5920              		.loc 1 2801 14
 5921 006e 0123     		movs	r3, #1
 5922 0070 32E0     		b	.L342
 5923              	.L341:
2802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
2803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Check that there is no transmission request pending for the selected buffer */
2805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->Instance->TXBRP & BufferIndex) != 0U)
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 172


 5924              		.loc 1 2805 16
 5925 0072 FB68     		ldr	r3, [r7, #12]
 5926 0074 1B68     		ldr	r3, [r3]
 5927              		.loc 1 2805 26
 5928 0076 D3F8CC20 		ldr	r2, [r3, #204]
 5929              		.loc 1 2805 34
 5930 007a 3B68     		ldr	r3, [r7]
 5931 007c 1340     		ands	r3, r3, r2
 5932              		.loc 1 2805 8
 5933 007e 002B     		cmp	r3, #0
 5934 0080 09D0     		beq	.L343
2806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
2807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code */
2808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_PENDING;
 5935              		.loc 1 2808 25
 5936 0082 FB68     		ldr	r3, [r7, #12]
 5937 0084 D3F89C30 		ldr	r3, [r3, #156]
 5938 0088 43F04002 		orr	r2, r3, #64
 5939 008c FB68     		ldr	r3, [r7, #12]
 5940 008e C3F89C20 		str	r2, [r3, #156]
2809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 5941              		.loc 1 2810 14
 5942 0092 0123     		movs	r3, #1
 5943 0094 20E0     		b	.L342
 5944              	.L343:
 5945 0096 3B68     		ldr	r3, [r7]
 5946 0098 BB61     		str	r3, [r7, #24]
 5947              	.LBB18:
 5948              	.LBB19:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 5949              		.loc 2 1055 4
 5950 009a BB69     		ldr	r3, [r7, #24]
 5951              		.syntax unified
 5952              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5953 009c 93FAA3F3 		rbit r3, r3
 5954              	@ 0 "" 2
 5955              		.thumb
 5956              		.syntax unified
 5957 00a0 7B61     		str	r3, [r7, #20]
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5958              		.loc 2 1068 10
 5959 00a2 7B69     		ldr	r3, [r7, #20]
 5960 00a4 FB61     		str	r3, [r7, #28]
 5961              	.LBE19:
 5962              	.LBE18:
 5963              	.LBB20:
 5964              	.LBB21:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 5965              		.loc 2 1089 6
 5966 00a6 FB69     		ldr	r3, [r7, #28]
 5967 00a8 002B     		cmp	r3, #0
 5968 00aa 01D1     		bne	.L345
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 5969              		.loc 2 1091 12
 5970 00ac 2023     		movs	r3, #32
 5971 00ae 03E0     		b	.L346
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 173


 5972              	.L345:
 5973              		.loc 2 1093 10
 5974 00b0 FB69     		ldr	r3, [r7, #28]
 5975 00b2 B3FA83F3 		clz	r3, r3
 5976 00b6 DBB2     		uxtb	r3, r3
 5977              	.L346:
 5978              	.LBE21:
 5979              	.LBE20:
2811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
2812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else
2813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
2814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Add the message to the Tx buffer */
2815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       FDCAN_CopyMessageToRAM(hfdcan, pTxHeader, pTxData, POSITION_VAL(BufferIndex));
 5980              		.loc 1 2815 7
 5981 00b8 7A68     		ldr	r2, [r7, #4]
 5982 00ba B968     		ldr	r1, [r7, #8]
 5983 00bc F868     		ldr	r0, [r7, #12]
 5984 00be FFF7FEFF 		bl	FDCAN_CopyMessageToRAM
2816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
2817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
2819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 5985              		.loc 1 2819 12
 5986 00c2 0023     		movs	r3, #0
 5987 00c4 08E0     		b	.L342
 5988              	.L337:
2820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
2822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
2824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 5989              		.loc 1 2824 23
 5990 00c6 FB68     		ldr	r3, [r7, #12]
 5991 00c8 D3F89C30 		ldr	r3, [r3, #156]
 5992 00cc 43F00202 		orr	r2, r3, #2
 5993 00d0 FB68     		ldr	r3, [r7, #12]
 5994 00d2 C3F89C20 		str	r2, [r3, #156]
2825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 5995              		.loc 1 2826 12
 5996 00d6 0123     		movs	r3, #1
 5997              	.L342:
2827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 5998              		.loc 1 2828 1
 5999 00d8 1846     		mov	r0, r3
 6000 00da 3037     		adds	r7, r7, #48
 6001              	.LCFI358:
 6002              		.cfi_def_cfa_offset 8
 6003 00dc BD46     		mov	sp, r7
 6004              	.LCFI359:
 6005              		.cfi_def_cfa_register 13
 6006              		@ sp needed
 6007 00de 80BD     		pop	{r7, pc}
 6008              		.cfi_endproc
 6009              	.LFE393:
 6011              		.section	.text.HAL_FDCAN_EnableTxBufferRequest,"ax",%progbits
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 174


 6012              		.align	1
 6013              		.global	HAL_FDCAN_EnableTxBufferRequest
 6014              		.syntax unified
 6015              		.thumb
 6016              		.thumb_func
 6018              	HAL_FDCAN_EnableTxBufferRequest:
 6019              	.LFB394:
2829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Enable transmission request.
2832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  BufferIndex buffer index.
2835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be any combination of @arg FDCAN_Tx_location.
2836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_EnableTxBufferRequest(FDCAN_HandleTypeDef *hfdcan, uint32_t BufferIndex
2839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 6020              		.loc 1 2839 1
 6021              		.cfi_startproc
 6022              		@ args = 0, pretend = 0, frame = 8
 6023              		@ frame_needed = 1, uses_anonymous_args = 0
 6024              		@ link register save eliminated.
 6025 0000 80B4     		push	{r7}
 6026              	.LCFI360:
 6027              		.cfi_def_cfa_offset 4
 6028              		.cfi_offset 7, -4
 6029 0002 83B0     		sub	sp, sp, #12
 6030              	.LCFI361:
 6031              		.cfi_def_cfa_offset 16
 6032 0004 00AF     		add	r7, sp, #0
 6033              	.LCFI362:
 6034              		.cfi_def_cfa_register 7
 6035 0006 7860     		str	r0, [r7, #4]
 6036 0008 3960     		str	r1, [r7]
2840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_BUSY)
 6037              		.loc 1 2840 13
 6038 000a 7B68     		ldr	r3, [r7, #4]
 6039 000c 93F89830 		ldrb	r3, [r3, #152]
 6040 0010 DBB2     		uxtb	r3, r3
 6041              		.loc 1 2840 6
 6042 0012 022B     		cmp	r3, #2
 6043 0014 06D1     		bne	.L348
2841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Add transmission request */
2843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->Instance->TXBAR = BufferIndex;
 6044              		.loc 1 2843 11
 6045 0016 7B68     		ldr	r3, [r7, #4]
 6046 0018 1B68     		ldr	r3, [r3]
 6047              		.loc 1 2843 29
 6048 001a 3A68     		ldr	r2, [r7]
 6049 001c C3F8D020 		str	r2, [r3, #208]
2844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
2846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 6050              		.loc 1 2846 12
 6051 0020 0023     		movs	r3, #0
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 175


 6052 0022 08E0     		b	.L349
 6053              	.L348:
2847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
2849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
2851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_STARTED;
 6054              		.loc 1 2851 23
 6055 0024 7B68     		ldr	r3, [r7, #4]
 6056 0026 D3F89C30 		ldr	r3, [r3, #156]
 6057 002a 43F00802 		orr	r2, r3, #8
 6058 002e 7B68     		ldr	r3, [r7, #4]
 6059 0030 C3F89C20 		str	r2, [r3, #156]
2852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 6060              		.loc 1 2853 12
 6061 0034 0123     		movs	r3, #1
 6062              	.L349:
2854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 6063              		.loc 1 2855 1
 6064 0036 1846     		mov	r0, r3
 6065 0038 0C37     		adds	r7, r7, #12
 6066              	.LCFI363:
 6067              		.cfi_def_cfa_offset 4
 6068 003a BD46     		mov	sp, r7
 6069              	.LCFI364:
 6070              		.cfi_def_cfa_register 13
 6071              		@ sp needed
 6072 003c 5DF8047B 		ldr	r7, [sp], #4
 6073              	.LCFI365:
 6074              		.cfi_restore 7
 6075              		.cfi_def_cfa_offset 0
 6076 0040 7047     		bx	lr
 6077              		.cfi_endproc
 6078              	.LFE394:
 6080              		.section	.text.HAL_FDCAN_GetLatestTxFifoQRequestBuffer,"ax",%progbits
 6081              		.align	1
 6082              		.global	HAL_FDCAN_GetLatestTxFifoQRequestBuffer
 6083              		.syntax unified
 6084              		.thumb
 6085              		.thumb_func
 6087              	HAL_FDCAN_GetLatestTxFifoQRequestBuffer:
 6088              	.LFB395:
2856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Get Tx buffer index of latest Tx FIFO/Queue request
2859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval Tx buffer index of last Tx FIFO/Queue request
2862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *          - Any value of @arg FDCAN_Tx_location if Tx request has been submitted.
2863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *          - 0 if no Tx FIFO/Queue request have been submitted.
2864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** uint32_t HAL_FDCAN_GetLatestTxFifoQRequestBuffer(FDCAN_HandleTypeDef *hfdcan)
2866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 6089              		.loc 1 2866 1
 6090              		.cfi_startproc
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 176


 6091              		@ args = 0, pretend = 0, frame = 8
 6092              		@ frame_needed = 1, uses_anonymous_args = 0
 6093              		@ link register save eliminated.
 6094 0000 80B4     		push	{r7}
 6095              	.LCFI366:
 6096              		.cfi_def_cfa_offset 4
 6097              		.cfi_offset 7, -4
 6098 0002 83B0     		sub	sp, sp, #12
 6099              	.LCFI367:
 6100              		.cfi_def_cfa_offset 16
 6101 0004 00AF     		add	r7, sp, #0
 6102              	.LCFI368:
 6103              		.cfi_def_cfa_register 7
 6104 0006 7860     		str	r0, [r7, #4]
2867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Return Last Tx FIFO/Queue Request Buffer */
2868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return hfdcan->LatestTxFifoQRequest;
 6105              		.loc 1 2868 16
 6106 0008 7B68     		ldr	r3, [r7, #4]
 6107 000a D3F89430 		ldr	r3, [r3, #148]
2869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 6108              		.loc 1 2869 1
 6109 000e 1846     		mov	r0, r3
 6110 0010 0C37     		adds	r7, r7, #12
 6111              	.LCFI369:
 6112              		.cfi_def_cfa_offset 4
 6113 0012 BD46     		mov	sp, r7
 6114              	.LCFI370:
 6115              		.cfi_def_cfa_register 13
 6116              		@ sp needed
 6117 0014 5DF8047B 		ldr	r7, [sp], #4
 6118              	.LCFI371:
 6119              		.cfi_restore 7
 6120              		.cfi_def_cfa_offset 0
 6121 0018 7047     		bx	lr
 6122              		.cfi_endproc
 6123              	.LFE395:
 6125              		.section	.text.HAL_FDCAN_AbortTxRequest,"ax",%progbits
 6126              		.align	1
 6127              		.global	HAL_FDCAN_AbortTxRequest
 6128              		.syntax unified
 6129              		.thumb
 6130              		.thumb_func
 6132              	HAL_FDCAN_AbortTxRequest:
 6133              	.LFB396:
2870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Abort transmission request
2873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  BufferIndex buffer index.
2876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be any combination of @arg FDCAN_Tx_location.
2877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_AbortTxRequest(FDCAN_HandleTypeDef *hfdcan, uint32_t BufferIndex)
2880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 6134              		.loc 1 2880 1
 6135              		.cfi_startproc
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 177


 6136              		@ args = 0, pretend = 0, frame = 8
 6137              		@ frame_needed = 1, uses_anonymous_args = 0
 6138              		@ link register save eliminated.
 6139 0000 80B4     		push	{r7}
 6140              	.LCFI372:
 6141              		.cfi_def_cfa_offset 4
 6142              		.cfi_offset 7, -4
 6143 0002 83B0     		sub	sp, sp, #12
 6144              	.LCFI373:
 6145              		.cfi_def_cfa_offset 16
 6146 0004 00AF     		add	r7, sp, #0
 6147              	.LCFI374:
 6148              		.cfi_def_cfa_register 7
 6149 0006 7860     		str	r0, [r7, #4]
 6150 0008 3960     		str	r1, [r7]
2881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_BUSY)
 6151              		.loc 1 2881 13
 6152 000a 7B68     		ldr	r3, [r7, #4]
 6153 000c 93F89830 		ldrb	r3, [r3, #152]
 6154 0010 DBB2     		uxtb	r3, r3
 6155              		.loc 1 2881 6
 6156 0012 022B     		cmp	r3, #2
 6157 0014 06D1     		bne	.L353
2882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Add cancellation request */
2884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->Instance->TXBCR = BufferIndex;
 6158              		.loc 1 2884 11
 6159 0016 7B68     		ldr	r3, [r7, #4]
 6160 0018 1B68     		ldr	r3, [r3]
 6161              		.loc 1 2884 29
 6162 001a 3A68     		ldr	r2, [r7]
 6163 001c C3F8D420 		str	r2, [r3, #212]
2885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
2887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 6164              		.loc 1 2887 12
 6165 0020 0023     		movs	r3, #0
 6166 0022 08E0     		b	.L354
 6167              	.L353:
2888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
2890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
2892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_STARTED;
 6168              		.loc 1 2892 23
 6169 0024 7B68     		ldr	r3, [r7, #4]
 6170 0026 D3F89C30 		ldr	r3, [r3, #156]
 6171 002a 43F00802 		orr	r2, r3, #8
 6172 002e 7B68     		ldr	r3, [r7, #4]
 6173 0030 C3F89C20 		str	r2, [r3, #156]
2893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 6174              		.loc 1 2894 12
 6175 0034 0123     		movs	r3, #1
 6176              	.L354:
2895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
2896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 178


 6177              		.loc 1 2896 1
 6178 0036 1846     		mov	r0, r3
 6179 0038 0C37     		adds	r7, r7, #12
 6180              	.LCFI375:
 6181              		.cfi_def_cfa_offset 4
 6182 003a BD46     		mov	sp, r7
 6183              	.LCFI376:
 6184              		.cfi_def_cfa_register 13
 6185              		@ sp needed
 6186 003c 5DF8047B 		ldr	r7, [sp], #4
 6187              	.LCFI377:
 6188              		.cfi_restore 7
 6189              		.cfi_def_cfa_offset 0
 6190 0040 7047     		bx	lr
 6191              		.cfi_endproc
 6192              	.LFE396:
 6194              		.section	.text.HAL_FDCAN_GetRxMessage,"ax",%progbits
 6195              		.align	1
 6196              		.global	HAL_FDCAN_GetRxMessage
 6197              		.syntax unified
 6198              		.thumb
 6199              		.thumb_func
 6201              	HAL_FDCAN_GetRxMessage:
 6202              	.LFB397:
2897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
2899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Get an FDCAN frame from the Rx Buffer/FIFO zone into the message RAM.
2900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
2901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
2902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  RxLocation Location of the received message to be read.
2903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be a value of @arg FDCAN_Rx_location.
2904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  pRxHeader pointer to a FDCAN_RxHeaderTypeDef structure.
2905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  pRxData pointer to a buffer where the payload of the Rx frame will be stored.
2906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
2907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
2908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_GetRxMessage(FDCAN_HandleTypeDef *hfdcan, uint32_t RxLocation, FDCAN_Rx
2909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 6203              		.loc 1 2909 1
 6204              		.cfi_startproc
 6205              		@ args = 0, pretend = 0, frame = 40
 6206              		@ frame_needed = 1, uses_anonymous_args = 0
 6207              		@ link register save eliminated.
 6208 0000 80B4     		push	{r7}
 6209              	.LCFI378:
 6210              		.cfi_def_cfa_offset 4
 6211              		.cfi_offset 7, -4
 6212 0002 8BB0     		sub	sp, sp, #44
 6213              	.LCFI379:
 6214              		.cfi_def_cfa_offset 48
 6215 0004 00AF     		add	r7, sp, #0
 6216              	.LCFI380:
 6217              		.cfi_def_cfa_register 7
 6218 0006 F860     		str	r0, [r7, #12]
 6219 0008 B960     		str	r1, [r7, #8]
 6220 000a 7A60     		str	r2, [r7, #4]
 6221 000c 3B60     		str	r3, [r7]
2910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t *RxAddress;
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 179


2911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint8_t  *pData;
2912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t ByteCounter;
2913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t GetIndex = 0;
 6222              		.loc 1 2913 12
 6223 000e 0023     		movs	r3, #0
 6224 0010 FB61     		str	r3, [r7, #28]
2914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 6225              		.loc 1 2914 26
 6226 0012 FB68     		ldr	r3, [r7, #12]
 6227 0014 93F89830 		ldrb	r3, [r3, #152]
 6228 0018 FB76     		strb	r3, [r7, #27]
2915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (state == HAL_FDCAN_STATE_BUSY)
 6229              		.loc 1 2916 6
 6230 001a FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 6231 001c 022B     		cmp	r3, #2
 6232 001e 40F04B81 		bne	.L356
2917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
2918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (RxLocation == FDCAN_RX_FIFO0) /* Rx element is assigned to the Rx FIFO 0 */
 6233              		.loc 1 2918 8
 6234 0022 BB68     		ldr	r3, [r7, #8]
 6235 0024 402B     		cmp	r3, #64
 6236 0026 4DD1     		bne	.L357
2919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
2920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Check that the Rx FIFO 0 has an allocated area into the RAM */
2921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if ((hfdcan->Instance->RXF0C & FDCAN_RXF0C_F0S) == 0U)
 6237              		.loc 1 2921 18
 6238 0028 FB68     		ldr	r3, [r7, #12]
 6239 002a 1B68     		ldr	r3, [r3]
 6240              		.loc 1 2921 28
 6241 002c D3F8A030 		ldr	r3, [r3, #160]
 6242              		.loc 1 2921 36
 6243 0030 03F4FE03 		and	r3, r3, #8323072
 6244              		.loc 1 2921 10
 6245 0034 002B     		cmp	r3, #0
 6246 0036 09D1     		bne	.L358
2922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
2923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Update error code */
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->ErrorCode |= HAL_FDCAN_ERROR_PARAM;
 6247              		.loc 1 2924 27
 6248 0038 FB68     		ldr	r3, [r7, #12]
 6249 003a D3F89C30 		ldr	r3, [r3, #156]
 6250 003e 43F02002 		orr	r2, r3, #32
 6251 0042 FB68     		ldr	r3, [r7, #12]
 6252 0044 C3F89C20 		str	r2, [r3, #156]
2925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         return HAL_ERROR;
 6253              		.loc 1 2926 16
 6254 0048 0123     		movs	r3, #1
 6255 004a 3EE1     		b	.L359
 6256              	.L358:
2927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
2928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Check that the Rx FIFO 0 is not empty */
2930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if ((hfdcan->Instance->RXF0S & FDCAN_RXF0S_F0FL) == 0U)
 6257              		.loc 1 2930 18
 6258 004c FB68     		ldr	r3, [r7, #12]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 180


 6259 004e 1B68     		ldr	r3, [r3]
 6260              		.loc 1 2930 28
 6261 0050 D3F8A430 		ldr	r3, [r3, #164]
 6262              		.loc 1 2930 36
 6263 0054 03F07F03 		and	r3, r3, #127
 6264              		.loc 1 2930 10
 6265 0058 002B     		cmp	r3, #0
 6266 005a 09D1     		bne	.L360
2931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
2932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Update error code */
2933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->ErrorCode |= HAL_FDCAN_ERROR_FIFO_EMPTY;
 6267              		.loc 1 2933 27
 6268 005c FB68     		ldr	r3, [r7, #12]
 6269 005e D3F89C30 		ldr	r3, [r3, #156]
 6270 0062 43F48072 		orr	r2, r3, #256
 6271 0066 FB68     		ldr	r3, [r7, #12]
 6272 0068 C3F89C20 		str	r2, [r3, #156]
2934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         return HAL_ERROR;
 6273              		.loc 1 2935 16
 6274 006c 0123     		movs	r3, #1
 6275 006e 2CE1     		b	.L359
 6276              	.L360:
2936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
2937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       else
2938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
2939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Check that the Rx FIFO 0 is full & overwrite mode is on*/
2940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         if(((hfdcan->Instance->RXF0S & FDCAN_RXF0S_F0F) >> FDCAN_RXF0S_F0F_Pos) == 1U)
 6277              		.loc 1 2940 20
 6278 0070 FB68     		ldr	r3, [r7, #12]
 6279 0072 1B68     		ldr	r3, [r3]
 6280              		.loc 1 2940 30
 6281 0074 D3F8A430 		ldr	r3, [r3, #164]
 6282              		.loc 1 2940 57
 6283 0078 1B0E     		lsrs	r3, r3, #24
 6284 007a 03F00103 		and	r3, r3, #1
 6285              		.loc 1 2940 11
 6286 007e 012B     		cmp	r3, #1
 6287 0080 0BD1     		bne	.L361
2941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         {
2942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           if(((hfdcan->Instance->RXF0C & FDCAN_RXF0C_F0OM) >> FDCAN_RXF0C_F0OM_Pos) == FDCAN_RX_FIF
 6288              		.loc 1 2942 22
 6289 0082 FB68     		ldr	r3, [r7, #12]
 6290 0084 1B68     		ldr	r3, [r3]
 6291              		.loc 1 2942 32
 6292 0086 D3F8A030 		ldr	r3, [r3, #160]
 6293              		.loc 1 2942 60
 6294 008a DB0F     		lsrs	r3, r3, #31
 6295 008c 03F00103 		and	r3, r3, #1
 6296              		.loc 1 2942 13
 6297 0090 B3F1004F 		cmp	r3, #-2147483648
 6298 0094 01D1     		bne	.L361
2943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           {
2944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             /* When overwrite status is on discard first message in FIFO */
2945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             GetIndex = 1U;
 6299              		.loc 1 2945 22
 6300 0096 0123     		movs	r3, #1
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 181


 6301 0098 FB61     		str	r3, [r7, #28]
 6302              	.L361:
2946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           }
2947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         }
2948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Calculate Rx FIFO 0 element index*/
2950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         GetIndex += ((hfdcan->Instance->RXF0S & FDCAN_RXF0S_F0GI) >> FDCAN_RXF0S_F0GI_Pos);
 6303              		.loc 1 2950 29
 6304 009a FB68     		ldr	r3, [r7, #12]
 6305 009c 1B68     		ldr	r3, [r3]
 6306              		.loc 1 2950 39
 6307 009e D3F8A430 		ldr	r3, [r3, #164]
 6308              		.loc 1 2950 67
 6309 00a2 1B0A     		lsrs	r3, r3, #8
 6310 00a4 03F03F03 		and	r3, r3, #63
 6311              		.loc 1 2950 18
 6312 00a8 FA69     		ldr	r2, [r7, #28]
 6313 00aa 1344     		add	r3, r3, r2
 6314 00ac FB61     		str	r3, [r7, #28]
2951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Calculate Rx FIFO 0 element address */
2953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         RxAddress = (uint32_t *)(hfdcan->msgRam.RxFIFO0SA + (GetIndex * hfdcan->Init.RxFifo0ElmtSiz
 6315              		.loc 1 2953 48
 6316 00ae FB68     		ldr	r3, [r7, #12]
 6317 00b0 5A6F     		ldr	r2, [r3, #116]
 6318              		.loc 1 2953 85
 6319 00b2 FB68     		ldr	r3, [r7, #12]
 6320 00b4 5B6C     		ldr	r3, [r3, #68]
 6321              		.loc 1 2953 71
 6322 00b6 F969     		ldr	r1, [r7, #28]
 6323 00b8 01FB03F3 		mul	r3, r1, r3
 6324              		.loc 1 2953 102
 6325 00bc 9B00     		lsls	r3, r3, #2
 6326              		.loc 1 2953 59
 6327 00be 1344     		add	r3, r3, r2
 6328              		.loc 1 2953 19
 6329 00c0 7B62     		str	r3, [r7, #36]
 6330 00c2 69E0     		b	.L362
 6331              	.L357:
2954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
2955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
2956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else if (RxLocation == FDCAN_RX_FIFO1) /* Rx element is assigned to the Rx FIFO 1 */
 6332              		.loc 1 2956 13
 6333 00c4 BB68     		ldr	r3, [r7, #8]
 6334 00c6 412B     		cmp	r3, #65
 6335 00c8 4DD1     		bne	.L363
2957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
2958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Check that the Rx FIFO 1 has an allocated area into the RAM */
2959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if ((hfdcan->Instance->RXF1C & FDCAN_RXF1C_F1S) == 0U)
 6336              		.loc 1 2959 18
 6337 00ca FB68     		ldr	r3, [r7, #12]
 6338 00cc 1B68     		ldr	r3, [r3]
 6339              		.loc 1 2959 28
 6340 00ce D3F8B030 		ldr	r3, [r3, #176]
 6341              		.loc 1 2959 36
 6342 00d2 03F4FE03 		and	r3, r3, #8323072
 6343              		.loc 1 2959 10
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 182


 6344 00d6 002B     		cmp	r3, #0
 6345 00d8 09D1     		bne	.L364
2960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
2961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Update error code */
2962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->ErrorCode |= HAL_FDCAN_ERROR_PARAM;
 6346              		.loc 1 2962 27
 6347 00da FB68     		ldr	r3, [r7, #12]
 6348 00dc D3F89C30 		ldr	r3, [r3, #156]
 6349 00e0 43F02002 		orr	r2, r3, #32
 6350 00e4 FB68     		ldr	r3, [r7, #12]
 6351 00e6 C3F89C20 		str	r2, [r3, #156]
2963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         return HAL_ERROR;
 6352              		.loc 1 2964 16
 6353 00ea 0123     		movs	r3, #1
 6354 00ec EDE0     		b	.L359
 6355              	.L364:
2965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
2966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Check that the Rx FIFO 0 is not empty */
2968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if ((hfdcan->Instance->RXF1S & FDCAN_RXF1S_F1FL) == 0U)
 6356              		.loc 1 2968 18
 6357 00ee FB68     		ldr	r3, [r7, #12]
 6358 00f0 1B68     		ldr	r3, [r3]
 6359              		.loc 1 2968 28
 6360 00f2 D3F8B430 		ldr	r3, [r3, #180]
 6361              		.loc 1 2968 36
 6362 00f6 03F07F03 		and	r3, r3, #127
 6363              		.loc 1 2968 10
 6364 00fa 002B     		cmp	r3, #0
 6365 00fc 09D1     		bne	.L365
2969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
2970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Update error code */
2971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->ErrorCode |= HAL_FDCAN_ERROR_FIFO_EMPTY;
 6366              		.loc 1 2971 27
 6367 00fe FB68     		ldr	r3, [r7, #12]
 6368 0100 D3F89C30 		ldr	r3, [r3, #156]
 6369 0104 43F48072 		orr	r2, r3, #256
 6370 0108 FB68     		ldr	r3, [r7, #12]
 6371 010a C3F89C20 		str	r2, [r3, #156]
2972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         return HAL_ERROR;
 6372              		.loc 1 2973 16
 6373 010e 0123     		movs	r3, #1
 6374 0110 DBE0     		b	.L359
 6375              	.L365:
2974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
2975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       else
2976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
2977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Check that the Rx FIFO 1 is full & overwrite mode is on*/
2978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         if(((hfdcan->Instance->RXF1S & FDCAN_RXF1S_F1F) >> FDCAN_RXF1S_F1F_Pos) == 1U)
 6376              		.loc 1 2978 20
 6377 0112 FB68     		ldr	r3, [r7, #12]
 6378 0114 1B68     		ldr	r3, [r3]
 6379              		.loc 1 2978 30
 6380 0116 D3F8B430 		ldr	r3, [r3, #180]
 6381              		.loc 1 2978 57
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 183


 6382 011a 1B0E     		lsrs	r3, r3, #24
 6383 011c 03F00103 		and	r3, r3, #1
 6384              		.loc 1 2978 11
 6385 0120 012B     		cmp	r3, #1
 6386 0122 0BD1     		bne	.L366
2979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         {
2980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           if(((hfdcan->Instance->RXF1C & FDCAN_RXF1C_F1OM) >> FDCAN_RXF1C_F1OM_Pos) == FDCAN_RX_FIF
 6387              		.loc 1 2980 22
 6388 0124 FB68     		ldr	r3, [r7, #12]
 6389 0126 1B68     		ldr	r3, [r3]
 6390              		.loc 1 2980 32
 6391 0128 D3F8B030 		ldr	r3, [r3, #176]
 6392              		.loc 1 2980 60
 6393 012c DB0F     		lsrs	r3, r3, #31
 6394 012e 03F00103 		and	r3, r3, #1
 6395              		.loc 1 2980 13
 6396 0132 B3F1004F 		cmp	r3, #-2147483648
 6397 0136 01D1     		bne	.L366
2981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           {
2982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             /* When overwrite status is on discard first message in FIFO */
2983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             GetIndex = 1U;
 6398              		.loc 1 2983 22
 6399 0138 0123     		movs	r3, #1
 6400 013a FB61     		str	r3, [r7, #28]
 6401              	.L366:
2984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           }
2985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         }
2986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Calculate Rx FIFO 1 element index*/
2988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         GetIndex += ((hfdcan->Instance->RXF1S & FDCAN_RXF1S_F1GI) >> FDCAN_RXF1S_F1GI_Pos);
 6402              		.loc 1 2988 29
 6403 013c FB68     		ldr	r3, [r7, #12]
 6404 013e 1B68     		ldr	r3, [r3]
 6405              		.loc 1 2988 39
 6406 0140 D3F8B430 		ldr	r3, [r3, #180]
 6407              		.loc 1 2988 67
 6408 0144 1B0A     		lsrs	r3, r3, #8
 6409 0146 03F03F03 		and	r3, r3, #63
 6410              		.loc 1 2988 18
 6411 014a FA69     		ldr	r2, [r7, #28]
 6412 014c 1344     		add	r3, r3, r2
 6413 014e FB61     		str	r3, [r7, #28]
2989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
2990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Calculate Rx FIFO 1 element address */
2991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         RxAddress = (uint32_t *)(hfdcan->msgRam.RxFIFO1SA + (GetIndex * hfdcan->Init.RxFifo1ElmtSiz
 6414              		.loc 1 2991 48
 6415 0150 FB68     		ldr	r3, [r7, #12]
 6416 0152 9A6F     		ldr	r2, [r3, #120]
 6417              		.loc 1 2991 85
 6418 0154 FB68     		ldr	r3, [r7, #12]
 6419 0156 DB6C     		ldr	r3, [r3, #76]
 6420              		.loc 1 2991 71
 6421 0158 F969     		ldr	r1, [r7, #28]
 6422 015a 01FB03F3 		mul	r3, r1, r3
 6423              		.loc 1 2991 102
 6424 015e 9B00     		lsls	r3, r3, #2
 6425              		.loc 1 2991 59
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 184


 6426 0160 1344     		add	r3, r3, r2
 6427              		.loc 1 2991 19
 6428 0162 7B62     		str	r3, [r7, #36]
 6429 0164 18E0     		b	.L362
 6430              	.L363:
2992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
2993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
2994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else /* Rx element is assigned to a dedicated Rx buffer */
2995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
2996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Check that the selected buffer has an allocated area into the RAM */
2997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if (RxLocation >= hfdcan->Init.RxBuffersNbr)
 6431              		.loc 1 2997 37
 6432 0166 FB68     		ldr	r3, [r7, #12]
 6433 0168 1B6D     		ldr	r3, [r3, #80]
 6434              		.loc 1 2997 10
 6435 016a BA68     		ldr	r2, [r7, #8]
 6436 016c 9A42     		cmp	r2, r3
 6437 016e 09D3     		bcc	.L367
2998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
2999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Update error code */
3000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->ErrorCode |= HAL_FDCAN_ERROR_PARAM;
 6438              		.loc 1 3000 27
 6439 0170 FB68     		ldr	r3, [r7, #12]
 6440 0172 D3F89C30 		ldr	r3, [r3, #156]
 6441 0176 43F02002 		orr	r2, r3, #32
 6442 017a FB68     		ldr	r3, [r7, #12]
 6443 017c C3F89C20 		str	r2, [r3, #156]
3001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         return HAL_ERROR;
 6444              		.loc 1 3002 16
 6445 0180 0123     		movs	r3, #1
 6446 0182 A2E0     		b	.L359
 6447              	.L367:
3003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
3004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       else
3005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
3006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Calculate Rx buffer address */
3007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         RxAddress = (uint32_t *)(hfdcan->msgRam.RxBufferSA + (RxLocation * hfdcan->Init.RxBufferSiz
 6448              		.loc 1 3007 48
 6449 0184 FB68     		ldr	r3, [r7, #12]
 6450 0186 DA6F     		ldr	r2, [r3, #124]
 6451              		.loc 1 3007 88
 6452 0188 FB68     		ldr	r3, [r7, #12]
 6453 018a 5B6D     		ldr	r3, [r3, #84]
 6454              		.loc 1 3007 74
 6455 018c B968     		ldr	r1, [r7, #8]
 6456 018e 01FB03F3 		mul	r3, r1, r3
 6457              		.loc 1 3007 102
 6458 0192 9B00     		lsls	r3, r3, #2
 6459              		.loc 1 3007 60
 6460 0194 1344     		add	r3, r3, r2
 6461              		.loc 1 3007 19
 6462 0196 7B62     		str	r3, [r7, #36]
 6463              	.L362:
3008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
3009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 185


3011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Retrieve IdType */
3012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     pRxHeader->IdType = *RxAddress & FDCAN_ELEMENT_MASK_XTD;
 6464              		.loc 1 3012 25
 6465 0198 7B6A     		ldr	r3, [r7, #36]
 6466 019a 1B68     		ldr	r3, [r3]
 6467              		.loc 1 3012 36
 6468 019c 03F08042 		and	r2, r3, #1073741824
 6469              		.loc 1 3012 23
 6470 01a0 7B68     		ldr	r3, [r7, #4]
 6471 01a2 5A60     		str	r2, [r3, #4]
3013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Retrieve Identifier */
3015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (pRxHeader->IdType == FDCAN_STANDARD_ID) /* Standard ID element */
 6472              		.loc 1 3015 18
 6473 01a4 7B68     		ldr	r3, [r7, #4]
 6474 01a6 5B68     		ldr	r3, [r3, #4]
 6475              		.loc 1 3015 8
 6476 01a8 002B     		cmp	r3, #0
 6477 01aa 07D1     		bne	.L368
3016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       pRxHeader->Identifier = ((*RxAddress & FDCAN_ELEMENT_MASK_STDID) >> 18);
 6478              		.loc 1 3017 33
 6479 01ac 7B6A     		ldr	r3, [r7, #36]
 6480 01ae 1B68     		ldr	r3, [r3]
 6481              		.loc 1 3017 72
 6482 01b0 9B0C     		lsrs	r3, r3, #18
 6483 01b2 C3F30A02 		ubfx	r2, r3, #0, #11
 6484              		.loc 1 3017 29
 6485 01b6 7B68     		ldr	r3, [r7, #4]
 6486 01b8 1A60     		str	r2, [r3]
 6487 01ba 05E0     		b	.L369
 6488              	.L368:
3018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else /* Extended ID element */
3020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       pRxHeader->Identifier = (*RxAddress & FDCAN_ELEMENT_MASK_EXTID);
 6489              		.loc 1 3021 32
 6490 01bc 7B6A     		ldr	r3, [r7, #36]
 6491 01be 1B68     		ldr	r3, [r3]
 6492              		.loc 1 3021 43
 6493 01c0 23F06042 		bic	r2, r3, #-536870912
 6494              		.loc 1 3021 29
 6495 01c4 7B68     		ldr	r3, [r7, #4]
 6496 01c6 1A60     		str	r2, [r3]
 6497              	.L369:
3022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Retrieve RxFrameType */
3025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     pRxHeader->RxFrameType = (*RxAddress & FDCAN_ELEMENT_MASK_RTR);
 6498              		.loc 1 3025 31
 6499 01c8 7B6A     		ldr	r3, [r7, #36]
 6500 01ca 1B68     		ldr	r3, [r3]
 6501              		.loc 1 3025 42
 6502 01cc 03F00052 		and	r2, r3, #536870912
 6503              		.loc 1 3025 28
 6504 01d0 7B68     		ldr	r3, [r7, #4]
 6505 01d2 9A60     		str	r2, [r3, #8]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 186


3026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Retrieve ErrorStateIndicator */
3028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     pRxHeader->ErrorStateIndicator = (*RxAddress & FDCAN_ELEMENT_MASK_ESI);
 6506              		.loc 1 3028 39
 6507 01d4 7B6A     		ldr	r3, [r7, #36]
 6508 01d6 1B68     		ldr	r3, [r3]
 6509              		.loc 1 3028 50
 6510 01d8 03F00042 		and	r2, r3, #-2147483648
 6511              		.loc 1 3028 36
 6512 01dc 7B68     		ldr	r3, [r7, #4]
 6513 01de 1A61     		str	r2, [r3, #16]
3029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Increment RxAddress pointer to second word of Rx FIFO element */
3031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     RxAddress++;
 6514              		.loc 1 3031 14
 6515 01e0 7B6A     		ldr	r3, [r7, #36]
 6516 01e2 0433     		adds	r3, r3, #4
 6517 01e4 7B62     		str	r3, [r7, #36]
3032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Retrieve RxTimestamp */
3034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     pRxHeader->RxTimestamp = (*RxAddress & FDCAN_ELEMENT_MASK_TS);
 6518              		.loc 1 3034 31
 6519 01e6 7B6A     		ldr	r3, [r7, #36]
 6520 01e8 1B68     		ldr	r3, [r3]
 6521              		.loc 1 3034 42
 6522 01ea 9AB2     		uxth	r2, r3
 6523              		.loc 1 3034 28
 6524 01ec 7B68     		ldr	r3, [r7, #4]
 6525 01ee DA61     		str	r2, [r3, #28]
3035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Retrieve DataLength */
3037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     pRxHeader->DataLength = (*RxAddress & FDCAN_ELEMENT_MASK_DLC);
 6526              		.loc 1 3037 30
 6527 01f0 7B6A     		ldr	r3, [r7, #36]
 6528 01f2 1B68     		ldr	r3, [r3]
 6529              		.loc 1 3037 41
 6530 01f4 03F47022 		and	r2, r3, #983040
 6531              		.loc 1 3037 27
 6532 01f8 7B68     		ldr	r3, [r7, #4]
 6533 01fa DA60     		str	r2, [r3, #12]
3038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Retrieve BitRateSwitch */
3040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     pRxHeader->BitRateSwitch = (*RxAddress & FDCAN_ELEMENT_MASK_BRS);
 6534              		.loc 1 3040 33
 6535 01fc 7B6A     		ldr	r3, [r7, #36]
 6536 01fe 1B68     		ldr	r3, [r3]
 6537              		.loc 1 3040 44
 6538 0200 03F48012 		and	r2, r3, #1048576
 6539              		.loc 1 3040 30
 6540 0204 7B68     		ldr	r3, [r7, #4]
 6541 0206 5A61     		str	r2, [r3, #20]
3041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Retrieve FDFormat */
3043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     pRxHeader->FDFormat = (*RxAddress & FDCAN_ELEMENT_MASK_FDF);
 6542              		.loc 1 3043 28
 6543 0208 7B6A     		ldr	r3, [r7, #36]
 6544 020a 1B68     		ldr	r3, [r3]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 187


 6545              		.loc 1 3043 39
 6546 020c 03F40012 		and	r2, r3, #2097152
 6547              		.loc 1 3043 25
 6548 0210 7B68     		ldr	r3, [r7, #4]
 6549 0212 9A61     		str	r2, [r3, #24]
3044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Retrieve FilterIndex */
3046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     pRxHeader->FilterIndex = ((*RxAddress & FDCAN_ELEMENT_MASK_FIDX) >> 24);
 6550              		.loc 1 3046 32
 6551 0214 7B6A     		ldr	r3, [r7, #36]
 6552 0216 1B68     		ldr	r3, [r3]
 6553              		.loc 1 3046 70
 6554 0218 1B0E     		lsrs	r3, r3, #24
 6555 021a 03F07F02 		and	r2, r3, #127
 6556              		.loc 1 3046 28
 6557 021e 7B68     		ldr	r3, [r7, #4]
 6558 0220 1A62     		str	r2, [r3, #32]
3047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Retrieve NonMatchingFrame */
3049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     pRxHeader->IsFilterMatchingFrame = ((*RxAddress & FDCAN_ELEMENT_MASK_ANMF) >> 31);
 6559              		.loc 1 3049 42
 6560 0222 7B6A     		ldr	r3, [r7, #36]
 6561 0224 1B68     		ldr	r3, [r3]
 6562              		.loc 1 3049 80
 6563 0226 DA0F     		lsrs	r2, r3, #31
 6564              		.loc 1 3049 38
 6565 0228 7B68     		ldr	r3, [r7, #4]
 6566 022a 5A62     		str	r2, [r3, #36]
3050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Increment RxAddress pointer to payload of Rx FIFO element */
3052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     RxAddress++;
 6567              		.loc 1 3052 14
 6568 022c 7B6A     		ldr	r3, [r7, #36]
 6569 022e 0433     		adds	r3, r3, #4
 6570 0230 7B62     		str	r3, [r7, #36]
3053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Retrieve Rx payload */
3055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     pData = (uint8_t *)RxAddress;
 6571              		.loc 1 3055 11
 6572 0232 7B6A     		ldr	r3, [r7, #36]
 6573 0234 7B61     		str	r3, [r7, #20]
3056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     for (ByteCounter = 0; ByteCounter < DLCtoBytes[pRxHeader->DataLength >> 16]; ByteCounter++)
 6574              		.loc 1 3056 22
 6575 0236 0023     		movs	r3, #0
 6576 0238 3B62     		str	r3, [r7, #32]
 6577              		.loc 1 3056 5
 6578 023a 0AE0     		b	.L370
 6579              	.L371:
3057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       pRxData[ByteCounter] = pData[ByteCounter];
 6580              		.loc 1 3058 35 discriminator 3
 6581 023c 7A69     		ldr	r2, [r7, #20]
 6582 023e 3B6A     		ldr	r3, [r7, #32]
 6583 0240 1A44     		add	r2, r2, r3
 6584              		.loc 1 3058 14 discriminator 3
 6585 0242 3968     		ldr	r1, [r7]
 6586 0244 3B6A     		ldr	r3, [r7, #32]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 188


 6587 0246 0B44     		add	r3, r3, r1
 6588              		.loc 1 3058 35 discriminator 3
 6589 0248 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 6590              		.loc 1 3058 28 discriminator 3
 6591 024a 1A70     		strb	r2, [r3]
3056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     for (ByteCounter = 0; ByteCounter < DLCtoBytes[pRxHeader->DataLength >> 16]; ByteCounter++)
 6592              		.loc 1 3056 93 discriminator 3
 6593 024c 3B6A     		ldr	r3, [r7, #32]
 6594 024e 0133     		adds	r3, r3, #1
 6595 0250 3B62     		str	r3, [r7, #32]
 6596              	.L370:
3056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     for (ByteCounter = 0; ByteCounter < DLCtoBytes[pRxHeader->DataLength >> 16]; ByteCounter++)
 6597              		.loc 1 3056 61 discriminator 1
 6598 0252 7B68     		ldr	r3, [r7, #4]
 6599 0254 DB68     		ldr	r3, [r3, #12]
3056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     for (ByteCounter = 0; ByteCounter < DLCtoBytes[pRxHeader->DataLength >> 16]; ByteCounter++)
 6600              		.loc 1 3056 74 discriminator 1
 6601 0256 1B0C     		lsrs	r3, r3, #16
3056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     for (ByteCounter = 0; ByteCounter < DLCtoBytes[pRxHeader->DataLength >> 16]; ByteCounter++)
 6602              		.loc 1 3056 51 discriminator 1
 6603 0258 1F4A     		ldr	r2, .L376
 6604 025a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6605 025c 1A46     		mov	r2, r3
3056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     for (ByteCounter = 0; ByteCounter < DLCtoBytes[pRxHeader->DataLength >> 16]; ByteCounter++)
 6606              		.loc 1 3056 5 discriminator 1
 6607 025e 3B6A     		ldr	r3, [r7, #32]
 6608 0260 9342     		cmp	r3, r2
 6609 0262 EBD3     		bcc	.L371
3059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (RxLocation == FDCAN_RX_FIFO0) /* Rx element is assigned to the Rx FIFO 0 */
 6610              		.loc 1 3061 8
 6611 0264 BB68     		ldr	r3, [r7, #8]
 6612 0266 402B     		cmp	r3, #64
 6613 0268 05D1     		bne	.L372
3062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Acknowledge the Rx FIFO 0 that the oldest element is read so that it increments the GetInd
3064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->Instance->RXF0A = GetIndex;
 6614              		.loc 1 3064 13
 6615 026a FB68     		ldr	r3, [r7, #12]
 6616 026c 1B68     		ldr	r3, [r3]
 6617              		.loc 1 3064 31
 6618 026e FA69     		ldr	r2, [r7, #28]
 6619 0270 C3F8A820 		str	r2, [r3, #168]
 6620 0274 1EE0     		b	.L373
 6621              	.L372:
3065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else if (RxLocation == FDCAN_RX_FIFO1) /* Rx element is assigned to the Rx FIFO 1 */
 6622              		.loc 1 3066 13
 6623 0276 BB68     		ldr	r3, [r7, #8]
 6624 0278 412B     		cmp	r3, #65
 6625 027a 05D1     		bne	.L374
3067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Acknowledge the Rx FIFO 1 that the oldest element is read so that it increments the GetInd
3069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->Instance->RXF1A = GetIndex;
 6626              		.loc 1 3069 13
 6627 027c FB68     		ldr	r3, [r7, #12]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 189


 6628 027e 1B68     		ldr	r3, [r3]
 6629              		.loc 1 3069 31
 6630 0280 FA69     		ldr	r2, [r7, #28]
 6631 0282 C3F8B820 		str	r2, [r3, #184]
 6632 0286 15E0     		b	.L373
 6633              	.L374:
3070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else /* Rx element is assigned to a dedicated Rx buffer */
3072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Clear the New Data flag of the current Rx buffer */
3074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if (RxLocation < FDCAN_RX_BUFFER32)
 6634              		.loc 1 3074 10
 6635 0288 BB68     		ldr	r3, [r7, #8]
 6636 028a 1F2B     		cmp	r3, #31
 6637 028c 08D8     		bhi	.L375
3075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
3076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->Instance->NDAT1 = ((uint32_t)1 << RxLocation);
 6638              		.loc 1 3076 15
 6639 028e FB68     		ldr	r3, [r7, #12]
 6640 0290 1B68     		ldr	r3, [r3]
 6641              		.loc 1 3076 48
 6642 0292 0121     		movs	r1, #1
 6643 0294 BA68     		ldr	r2, [r7, #8]
 6644 0296 01FA02F2 		lsl	r2, r1, r2
 6645              		.loc 1 3076 33
 6646 029a C3F89820 		str	r2, [r3, #152]
 6647 029e 09E0     		b	.L373
 6648              	.L375:
3077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
3078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       else /* FDCAN_RX_BUFFER32 <= RxLocation <= FDCAN_RX_BUFFER63 */
3079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
3080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->Instance->NDAT2 = ((uint32_t)1 << (RxLocation & 0x1FU));
 6649              		.loc 1 3080 63
 6650 02a0 BB68     		ldr	r3, [r7, #8]
 6651 02a2 03F01F02 		and	r2, r3, #31
 6652              		.loc 1 3080 15
 6653 02a6 FB68     		ldr	r3, [r7, #12]
 6654 02a8 1B68     		ldr	r3, [r3]
 6655              		.loc 1 3080 48
 6656 02aa 0121     		movs	r1, #1
 6657 02ac 01FA02F2 		lsl	r2, r1, r2
 6658              		.loc 1 3080 33
 6659 02b0 C3F89C20 		str	r2, [r3, #156]
 6660              	.L373:
3081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
3082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
3085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 6661              		.loc 1 3085 12
 6662 02b4 0023     		movs	r3, #0
 6663 02b6 08E0     		b	.L359
 6664              	.L356:
3086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
3088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 190


3090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_STARTED;
 6665              		.loc 1 3090 23
 6666 02b8 FB68     		ldr	r3, [r7, #12]
 6667 02ba D3F89C30 		ldr	r3, [r3, #156]
 6668 02be 43F00802 		orr	r2, r3, #8
 6669 02c2 FB68     		ldr	r3, [r7, #12]
 6670 02c4 C3F89C20 		str	r2, [r3, #156]
3091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 6671              		.loc 1 3092 12
 6672 02c8 0123     		movs	r3, #1
 6673              	.L359:
3093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 6674              		.loc 1 3094 1
 6675 02ca 1846     		mov	r0, r3
 6676 02cc 2C37     		adds	r7, r7, #44
 6677              	.LCFI381:
 6678              		.cfi_def_cfa_offset 4
 6679 02ce BD46     		mov	sp, r7
 6680              	.LCFI382:
 6681              		.cfi_def_cfa_register 13
 6682              		@ sp needed
 6683 02d0 5DF8047B 		ldr	r7, [sp], #4
 6684              	.LCFI383:
 6685              		.cfi_restore 7
 6686              		.cfi_def_cfa_offset 0
 6687 02d4 7047     		bx	lr
 6688              	.L377:
 6689 02d6 00BF     		.align	2
 6690              	.L376:
 6691 02d8 00000000 		.word	DLCtoBytes
 6692              		.cfi_endproc
 6693              	.LFE397:
 6695              		.section	.text.HAL_FDCAN_GetTxEvent,"ax",%progbits
 6696              		.align	1
 6697              		.global	HAL_FDCAN_GetTxEvent
 6698              		.syntax unified
 6699              		.thumb
 6700              		.thumb_func
 6702              	HAL_FDCAN_GetTxEvent:
 6703              	.LFB398:
3095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
3097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Get an FDCAN Tx event from the Tx Event FIFO zone into the message RAM.
3098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
3099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
3100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  pTxEvent pointer to a FDCAN_TxEventFifoTypeDef structure.
3101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
3102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
3103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_GetTxEvent(FDCAN_HandleTypeDef *hfdcan, FDCAN_TxEventFifoTypeDef *pTxEv
3104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 6704              		.loc 1 3104 1
 6705              		.cfi_startproc
 6706              		@ args = 0, pretend = 0, frame = 24
 6707              		@ frame_needed = 1, uses_anonymous_args = 0
 6708              		@ link register save eliminated.
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 191


 6709 0000 80B4     		push	{r7}
 6710              	.LCFI384:
 6711              		.cfi_def_cfa_offset 4
 6712              		.cfi_offset 7, -4
 6713 0002 87B0     		sub	sp, sp, #28
 6714              	.LCFI385:
 6715              		.cfi_def_cfa_offset 32
 6716 0004 00AF     		add	r7, sp, #0
 6717              	.LCFI386:
 6718              		.cfi_def_cfa_register 7
 6719 0006 7860     		str	r0, [r7, #4]
 6720 0008 3960     		str	r1, [r7]
3105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t *TxEventAddress;
3106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t GetIndex;
3107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 6721              		.loc 1 3107 26
 6722 000a 7B68     		ldr	r3, [r7, #4]
 6723 000c 93F89830 		ldrb	r3, [r3, #152]
 6724 0010 FB75     		strb	r3, [r7, #23]
3108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
3110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_MIN_VALUE(hfdcan->Init.TxEventsNbr, 1U));
3111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (state == HAL_FDCAN_STATE_BUSY)
 6725              		.loc 1 3112 6
 6726 0012 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6727 0014 022B     		cmp	r3, #2
 6728 0016 40F08380 		bne	.L379
3113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Check that the Tx Event FIFO has an allocated area into the RAM */
3115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->Instance->TXEFC & FDCAN_TXEFC_EFS) == 0U)
 6729              		.loc 1 3115 16
 6730 001a 7B68     		ldr	r3, [r7, #4]
 6731 001c 1B68     		ldr	r3, [r3]
 6732              		.loc 1 3115 26
 6733 001e D3F8F030 		ldr	r3, [r3, #240]
 6734              		.loc 1 3115 34
 6735 0022 03F47C13 		and	r3, r3, #4128768
 6736              		.loc 1 3115 8
 6737 0026 002B     		cmp	r3, #0
 6738 0028 09D1     		bne	.L380
3116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code */
3118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_PARAM;
 6739              		.loc 1 3118 25
 6740 002a 7B68     		ldr	r3, [r7, #4]
 6741 002c D3F89C30 		ldr	r3, [r3, #156]
 6742 0030 43F02002 		orr	r2, r3, #32
 6743 0034 7B68     		ldr	r3, [r7, #4]
 6744 0036 C3F89C20 		str	r2, [r3, #156]
3119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 6745              		.loc 1 3120 14
 6746 003a 0123     		movs	r3, #1
 6747 003c 79E0     		b	.L381
 6748              	.L380:
3121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 192


3122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Check that the Tx event FIFO is not empty */
3124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->Instance->TXEFS & FDCAN_TXEFS_EFFL) == 0U)
 6749              		.loc 1 3124 16
 6750 003e 7B68     		ldr	r3, [r7, #4]
 6751 0040 1B68     		ldr	r3, [r3]
 6752              		.loc 1 3124 26
 6753 0042 D3F8F430 		ldr	r3, [r3, #244]
 6754              		.loc 1 3124 34
 6755 0046 03F03F03 		and	r3, r3, #63
 6756              		.loc 1 3124 8
 6757 004a 002B     		cmp	r3, #0
 6758 004c 09D1     		bne	.L382
3125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code */
3127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_FIFO_EMPTY;
 6759              		.loc 1 3127 25
 6760 004e 7B68     		ldr	r3, [r7, #4]
 6761 0050 D3F89C30 		ldr	r3, [r3, #156]
 6762 0054 43F48072 		orr	r2, r3, #256
 6763 0058 7B68     		ldr	r3, [r7, #4]
 6764 005a C3F89C20 		str	r2, [r3, #156]
3128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 6765              		.loc 1 3129 14
 6766 005e 0123     		movs	r3, #1
 6767 0060 67E0     		b	.L381
 6768              	.L382:
3130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Calculate Tx event FIFO element address */
3133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     GetIndex = ((hfdcan->Instance->TXEFS & FDCAN_TXEFS_EFGI) >> FDCAN_TXEFS_EFGI_Pos);
 6769              		.loc 1 3133 24
 6770 0062 7B68     		ldr	r3, [r7, #4]
 6771 0064 1B68     		ldr	r3, [r3]
 6772              		.loc 1 3133 34
 6773 0066 D3F8F430 		ldr	r3, [r3, #244]
 6774              		.loc 1 3133 62
 6775 006a 1B0A     		lsrs	r3, r3, #8
 6776              		.loc 1 3133 14
 6777 006c 03F01F03 		and	r3, r3, #31
 6778 0070 3B61     		str	r3, [r7, #16]
3134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     TxEventAddress = (uint32_t *)(hfdcan->msgRam.TxEventFIFOSA + (GetIndex * 2U * 4U));
 6779              		.loc 1 3134 49
 6780 0072 7B68     		ldr	r3, [r7, #4]
 6781 0074 D3F88020 		ldr	r2, [r3, #128]
 6782              		.loc 1 3134 81
 6783 0078 3B69     		ldr	r3, [r7, #16]
 6784 007a DB00     		lsls	r3, r3, #3
 6785              		.loc 1 3134 64
 6786 007c 1344     		add	r3, r3, r2
 6787              		.loc 1 3134 20
 6788 007e FB60     		str	r3, [r7, #12]
3135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Retrieve IdType */
3137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     pTxEvent->IdType = *TxEventAddress & FDCAN_ELEMENT_MASK_XTD;
 6789              		.loc 1 3137 24
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 193


 6790 0080 FB68     		ldr	r3, [r7, #12]
 6791 0082 1B68     		ldr	r3, [r3]
 6792              		.loc 1 3137 40
 6793 0084 03F08042 		and	r2, r3, #1073741824
 6794              		.loc 1 3137 22
 6795 0088 3B68     		ldr	r3, [r7]
 6796 008a 5A60     		str	r2, [r3, #4]
3138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Retrieve Identifier */
3140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (pTxEvent->IdType == FDCAN_STANDARD_ID) /* Standard ID element */
 6797              		.loc 1 3140 17
 6798 008c 3B68     		ldr	r3, [r7]
 6799 008e 5B68     		ldr	r3, [r3, #4]
 6800              		.loc 1 3140 8
 6801 0090 002B     		cmp	r3, #0
 6802 0092 07D1     		bne	.L383
3141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       pTxEvent->Identifier = ((*TxEventAddress & FDCAN_ELEMENT_MASK_STDID) >> 18U);
 6803              		.loc 1 3142 32
 6804 0094 FB68     		ldr	r3, [r7, #12]
 6805 0096 1B68     		ldr	r3, [r3]
 6806              		.loc 1 3142 76
 6807 0098 9B0C     		lsrs	r3, r3, #18
 6808 009a C3F30A02 		ubfx	r2, r3, #0, #11
 6809              		.loc 1 3142 28
 6810 009e 3B68     		ldr	r3, [r7]
 6811 00a0 1A60     		str	r2, [r3]
 6812 00a2 05E0     		b	.L384
 6813              	.L383:
3143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else /* Extended ID element */
3145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       pTxEvent->Identifier = (*TxEventAddress & FDCAN_ELEMENT_MASK_EXTID);
 6814              		.loc 1 3146 31
 6815 00a4 FB68     		ldr	r3, [r7, #12]
 6816 00a6 1B68     		ldr	r3, [r3]
 6817              		.loc 1 3146 47
 6818 00a8 23F06042 		bic	r2, r3, #-536870912
 6819              		.loc 1 3146 28
 6820 00ac 3B68     		ldr	r3, [r7]
 6821 00ae 1A60     		str	r2, [r3]
 6822              	.L384:
3147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Retrieve TxFrameType */
3150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     pTxEvent->TxFrameType = (*TxEventAddress & FDCAN_ELEMENT_MASK_RTR);
 6823              		.loc 1 3150 30
 6824 00b0 FB68     		ldr	r3, [r7, #12]
 6825 00b2 1B68     		ldr	r3, [r3]
 6826              		.loc 1 3150 46
 6827 00b4 03F00052 		and	r2, r3, #536870912
 6828              		.loc 1 3150 27
 6829 00b8 3B68     		ldr	r3, [r7]
 6830 00ba 9A60     		str	r2, [r3, #8]
3151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Retrieve ErrorStateIndicator */
3153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     pTxEvent->ErrorStateIndicator = (*TxEventAddress & FDCAN_ELEMENT_MASK_ESI);
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 194


 6831              		.loc 1 3153 38
 6832 00bc FB68     		ldr	r3, [r7, #12]
 6833 00be 1B68     		ldr	r3, [r3]
 6834              		.loc 1 3153 54
 6835 00c0 03F00042 		and	r2, r3, #-2147483648
 6836              		.loc 1 3153 35
 6837 00c4 3B68     		ldr	r3, [r7]
 6838 00c6 1A61     		str	r2, [r3, #16]
3154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Increment TxEventAddress pointer to second word of Tx Event FIFO element */
3156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     TxEventAddress++;
 6839              		.loc 1 3156 19
 6840 00c8 FB68     		ldr	r3, [r7, #12]
 6841 00ca 0433     		adds	r3, r3, #4
 6842 00cc FB60     		str	r3, [r7, #12]
3157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Retrieve TxTimestamp */
3159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     pTxEvent->TxTimestamp = (*TxEventAddress & FDCAN_ELEMENT_MASK_TS);
 6843              		.loc 1 3159 30
 6844 00ce FB68     		ldr	r3, [r7, #12]
 6845 00d0 1B68     		ldr	r3, [r3]
 6846              		.loc 1 3159 46
 6847 00d2 9AB2     		uxth	r2, r3
 6848              		.loc 1 3159 27
 6849 00d4 3B68     		ldr	r3, [r7]
 6850 00d6 DA61     		str	r2, [r3, #28]
3160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Retrieve DataLength */
3162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     pTxEvent->DataLength = (*TxEventAddress & FDCAN_ELEMENT_MASK_DLC);
 6851              		.loc 1 3162 29
 6852 00d8 FB68     		ldr	r3, [r7, #12]
 6853 00da 1B68     		ldr	r3, [r3]
 6854              		.loc 1 3162 45
 6855 00dc 03F47022 		and	r2, r3, #983040
 6856              		.loc 1 3162 26
 6857 00e0 3B68     		ldr	r3, [r7]
 6858 00e2 DA60     		str	r2, [r3, #12]
3163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Retrieve BitRateSwitch */
3165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     pTxEvent->BitRateSwitch = (*TxEventAddress & FDCAN_ELEMENT_MASK_BRS);
 6859              		.loc 1 3165 32
 6860 00e4 FB68     		ldr	r3, [r7, #12]
 6861 00e6 1B68     		ldr	r3, [r3]
 6862              		.loc 1 3165 48
 6863 00e8 03F48012 		and	r2, r3, #1048576
 6864              		.loc 1 3165 29
 6865 00ec 3B68     		ldr	r3, [r7]
 6866 00ee 5A61     		str	r2, [r3, #20]
3166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Retrieve FDFormat */
3168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     pTxEvent->FDFormat = (*TxEventAddress & FDCAN_ELEMENT_MASK_FDF);
 6867              		.loc 1 3168 27
 6868 00f0 FB68     		ldr	r3, [r7, #12]
 6869 00f2 1B68     		ldr	r3, [r3]
 6870              		.loc 1 3168 43
 6871 00f4 03F40012 		and	r2, r3, #2097152
 6872              		.loc 1 3168 24
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 195


 6873 00f8 3B68     		ldr	r3, [r7]
 6874 00fa 9A61     		str	r2, [r3, #24]
3169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Retrieve EventType */
3171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     pTxEvent->EventType = (*TxEventAddress & FDCAN_ELEMENT_MASK_ET);
 6875              		.loc 1 3171 28
 6876 00fc FB68     		ldr	r3, [r7, #12]
 6877 00fe 1B68     		ldr	r3, [r3]
 6878              		.loc 1 3171 44
 6879 0100 03F44002 		and	r2, r3, #12582912
 6880              		.loc 1 3171 25
 6881 0104 3B68     		ldr	r3, [r7]
 6882 0106 5A62     		str	r2, [r3, #36]
3172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Retrieve MessageMarker */
3174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     pTxEvent->MessageMarker = ((*TxEventAddress & FDCAN_ELEMENT_MASK_MM) >> 24);
 6883              		.loc 1 3174 33
 6884 0108 FB68     		ldr	r3, [r7, #12]
 6885 010a 1B68     		ldr	r3, [r3]
 6886              		.loc 1 3174 74
 6887 010c 1A0E     		lsrs	r2, r3, #24
 6888              		.loc 1 3174 29
 6889 010e 3B68     		ldr	r3, [r7]
 6890 0110 1A62     		str	r2, [r3, #32]
3175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Acknowledge the Tx Event FIFO that the oldest element is read so that it increments the GetI
3177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->Instance->TXEFA = GetIndex;
 6891              		.loc 1 3177 11
 6892 0112 7B68     		ldr	r3, [r7, #4]
 6893 0114 1B68     		ldr	r3, [r3]
 6894              		.loc 1 3177 29
 6895 0116 3A69     		ldr	r2, [r7, #16]
 6896 0118 C3F8F820 		str	r2, [r3, #248]
3178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
3180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 6897              		.loc 1 3180 12
 6898 011c 0023     		movs	r3, #0
 6899 011e 08E0     		b	.L381
 6900              	.L379:
3181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
3183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
3185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_STARTED;
 6901              		.loc 1 3185 23
 6902 0120 7B68     		ldr	r3, [r7, #4]
 6903 0122 D3F89C30 		ldr	r3, [r3, #156]
 6904 0126 43F00802 		orr	r2, r3, #8
 6905 012a 7B68     		ldr	r3, [r7, #4]
 6906 012c C3F89C20 		str	r2, [r3, #156]
3186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 6907              		.loc 1 3187 12
 6908 0130 0123     		movs	r3, #1
 6909              	.L381:
3188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 196


3189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 6910              		.loc 1 3189 1
 6911 0132 1846     		mov	r0, r3
 6912 0134 1C37     		adds	r7, r7, #28
 6913              	.LCFI387:
 6914              		.cfi_def_cfa_offset 4
 6915 0136 BD46     		mov	sp, r7
 6916              	.LCFI388:
 6917              		.cfi_def_cfa_register 13
 6918              		@ sp needed
 6919 0138 5DF8047B 		ldr	r7, [sp], #4
 6920              	.LCFI389:
 6921              		.cfi_restore 7
 6922              		.cfi_def_cfa_offset 0
 6923 013c 7047     		bx	lr
 6924              		.cfi_endproc
 6925              	.LFE398:
 6927              		.section	.text.HAL_FDCAN_GetHighPriorityMessageStatus,"ax",%progbits
 6928              		.align	1
 6929              		.global	HAL_FDCAN_GetHighPriorityMessageStatus
 6930              		.syntax unified
 6931              		.thumb
 6932              		.thumb_func
 6934              	HAL_FDCAN_GetHighPriorityMessageStatus:
 6935              	.LFB399:
3190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
3192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Get high priority message status.
3193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
3194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
3195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  HpMsgStatus pointer to an FDCAN_HpMsgStatusTypeDef structure.
3196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
3197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
3198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_GetHighPriorityMessageStatus(FDCAN_HandleTypeDef *hfdcan, FDCAN_HpMsgSt
3199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 6936              		.loc 1 3199 1
 6937              		.cfi_startproc
 6938              		@ args = 0, pretend = 0, frame = 8
 6939              		@ frame_needed = 1, uses_anonymous_args = 0
 6940              		@ link register save eliminated.
 6941 0000 80B4     		push	{r7}
 6942              	.LCFI390:
 6943              		.cfi_def_cfa_offset 4
 6944              		.cfi_offset 7, -4
 6945 0002 83B0     		sub	sp, sp, #12
 6946              	.LCFI391:
 6947              		.cfi_def_cfa_offset 16
 6948 0004 00AF     		add	r7, sp, #0
 6949              	.LCFI392:
 6950              		.cfi_def_cfa_register 7
 6951 0006 7860     		str	r0, [r7, #4]
 6952 0008 3960     		str	r1, [r7]
3200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HpMsgStatus->FilterList = ((hfdcan->Instance->HPMS & FDCAN_HPMS_FLST) >> FDCAN_HPMS_FLST_Pos);
 6953              		.loc 1 3200 37
 6954 000a 7B68     		ldr	r3, [r7, #4]
 6955 000c 1B68     		ldr	r3, [r3]
 6956              		.loc 1 3200 47
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 197


 6957 000e D3F89430 		ldr	r3, [r3, #148]
 6958              		.loc 1 3200 73
 6959 0012 DB0B     		lsrs	r3, r3, #15
 6960 0014 03F00102 		and	r2, r3, #1
 6961              		.loc 1 3200 27
 6962 0018 3B68     		ldr	r3, [r7]
 6963 001a 1A60     		str	r2, [r3]
3201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HpMsgStatus->FilterIndex = ((hfdcan->Instance->HPMS & FDCAN_HPMS_FIDX) >> FDCAN_HPMS_FIDX_Pos);
 6964              		.loc 1 3201 38
 6965 001c 7B68     		ldr	r3, [r7, #4]
 6966 001e 1B68     		ldr	r3, [r3]
 6967              		.loc 1 3201 48
 6968 0020 D3F89430 		ldr	r3, [r3, #148]
 6969              		.loc 1 3201 74
 6970 0024 1B0A     		lsrs	r3, r3, #8
 6971 0026 03F07F02 		and	r2, r3, #127
 6972              		.loc 1 3201 28
 6973 002a 3B68     		ldr	r3, [r7]
 6974 002c 5A60     		str	r2, [r3, #4]
3202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HpMsgStatus->MessageStorage = (hfdcan->Instance->HPMS & FDCAN_HPMS_MSI);
 6975              		.loc 1 3202 40
 6976 002e 7B68     		ldr	r3, [r7, #4]
 6977 0030 1B68     		ldr	r3, [r3]
 6978              		.loc 1 3202 50
 6979 0032 D3F89430 		ldr	r3, [r3, #148]
 6980              		.loc 1 3202 57
 6981 0036 03F0C002 		and	r2, r3, #192
 6982              		.loc 1 3202 31
 6983 003a 3B68     		ldr	r3, [r7]
 6984 003c 9A60     		str	r2, [r3, #8]
3203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HpMsgStatus->MessageIndex = (hfdcan->Instance->HPMS & FDCAN_HPMS_BIDX);
 6985              		.loc 1 3203 38
 6986 003e 7B68     		ldr	r3, [r7, #4]
 6987 0040 1B68     		ldr	r3, [r3]
 6988              		.loc 1 3203 48
 6989 0042 D3F89430 		ldr	r3, [r3, #148]
 6990              		.loc 1 3203 55
 6991 0046 03F03F02 		and	r2, r3, #63
 6992              		.loc 1 3203 29
 6993 004a 3B68     		ldr	r3, [r7]
 6994 004c DA60     		str	r2, [r3, #12]
3204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Return function status */
3206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return HAL_OK;
 6995              		.loc 1 3206 10
 6996 004e 0023     		movs	r3, #0
3207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 6997              		.loc 1 3207 1
 6998 0050 1846     		mov	r0, r3
 6999 0052 0C37     		adds	r7, r7, #12
 7000              	.LCFI393:
 7001              		.cfi_def_cfa_offset 4
 7002 0054 BD46     		mov	sp, r7
 7003              	.LCFI394:
 7004              		.cfi_def_cfa_register 13
 7005              		@ sp needed
 7006 0056 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 198


 7007              	.LCFI395:
 7008              		.cfi_restore 7
 7009              		.cfi_def_cfa_offset 0
 7010 005a 7047     		bx	lr
 7011              		.cfi_endproc
 7012              	.LFE399:
 7014              		.section	.text.HAL_FDCAN_GetProtocolStatus,"ax",%progbits
 7015              		.align	1
 7016              		.global	HAL_FDCAN_GetProtocolStatus
 7017              		.syntax unified
 7018              		.thumb
 7019              		.thumb_func
 7021              	HAL_FDCAN_GetProtocolStatus:
 7022              	.LFB400:
3208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
3210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Get protocol status.
3211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
3212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
3213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  ProtocolStatus pointer to an FDCAN_ProtocolStatusTypeDef structure.
3214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
3215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
3216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_GetProtocolStatus(FDCAN_HandleTypeDef *hfdcan, FDCAN_ProtocolStatusType
3217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 7023              		.loc 1 3217 1
 7024              		.cfi_startproc
 7025              		@ args = 0, pretend = 0, frame = 16
 7026              		@ frame_needed = 1, uses_anonymous_args = 0
 7027              		@ link register save eliminated.
 7028 0000 80B4     		push	{r7}
 7029              	.LCFI396:
 7030              		.cfi_def_cfa_offset 4
 7031              		.cfi_offset 7, -4
 7032 0002 85B0     		sub	sp, sp, #20
 7033              	.LCFI397:
 7034              		.cfi_def_cfa_offset 24
 7035 0004 00AF     		add	r7, sp, #0
 7036              	.LCFI398:
 7037              		.cfi_def_cfa_register 7
 7038 0006 7860     		str	r0, [r7, #4]
 7039 0008 3960     		str	r1, [r7]
3218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t StatusReg;
3219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Read the protocol status register */
3221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   StatusReg = READ_REG(hfdcan->Instance->PSR);
 7040              		.loc 1 3221 15
 7041 000a 7B68     		ldr	r3, [r7, #4]
 7042 000c 1B68     		ldr	r3, [r3]
 7043              		.loc 1 3221 13
 7044 000e 5B6C     		ldr	r3, [r3, #68]
 7045 0010 FB60     		str	r3, [r7, #12]
3222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Fill the protocol status structure */
3224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ProtocolStatus->LastErrorCode = (StatusReg & FDCAN_PSR_LEC);
 7046              		.loc 1 3224 46
 7047 0012 FB68     		ldr	r3, [r7, #12]
 7048 0014 03F00702 		and	r2, r3, #7
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 199


 7049              		.loc 1 3224 33
 7050 0018 3B68     		ldr	r3, [r7]
 7051 001a 1A60     		str	r2, [r3]
3225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ProtocolStatus->DataLastErrorCode = ((StatusReg & FDCAN_PSR_DLEC) >> FDCAN_PSR_DLEC_Pos);
 7052              		.loc 1 3225 69
 7053 001c FB68     		ldr	r3, [r7, #12]
 7054 001e 1B0A     		lsrs	r3, r3, #8
 7055 0020 03F00702 		and	r2, r3, #7
 7056              		.loc 1 3225 37
 7057 0024 3B68     		ldr	r3, [r7]
 7058 0026 5A60     		str	r2, [r3, #4]
3226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ProtocolStatus->Activity = (StatusReg & FDCAN_PSR_ACT);
 7059              		.loc 1 3226 41
 7060 0028 FB68     		ldr	r3, [r7, #12]
 7061 002a 03F01802 		and	r2, r3, #24
 7062              		.loc 1 3226 28
 7063 002e 3B68     		ldr	r3, [r7]
 7064 0030 9A60     		str	r2, [r3, #8]
3227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ProtocolStatus->ErrorPassive = ((StatusReg & FDCAN_PSR_EP) >> FDCAN_PSR_EP_Pos);
 7065              		.loc 1 3227 62
 7066 0032 FB68     		ldr	r3, [r7, #12]
 7067 0034 5B09     		lsrs	r3, r3, #5
 7068 0036 03F00102 		and	r2, r3, #1
 7069              		.loc 1 3227 32
 7070 003a 3B68     		ldr	r3, [r7]
 7071 003c DA60     		str	r2, [r3, #12]
3228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ProtocolStatus->Warning = ((StatusReg & FDCAN_PSR_EW) >> FDCAN_PSR_EW_Pos);
 7072              		.loc 1 3228 57
 7073 003e FB68     		ldr	r3, [r7, #12]
 7074 0040 9B09     		lsrs	r3, r3, #6
 7075 0042 03F00102 		and	r2, r3, #1
 7076              		.loc 1 3228 27
 7077 0046 3B68     		ldr	r3, [r7]
 7078 0048 1A61     		str	r2, [r3, #16]
3229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ProtocolStatus->BusOff = ((StatusReg & FDCAN_PSR_BO) >> FDCAN_PSR_BO_Pos);
 7079              		.loc 1 3229 56
 7080 004a FB68     		ldr	r3, [r7, #12]
 7081 004c DB09     		lsrs	r3, r3, #7
 7082 004e 03F00102 		and	r2, r3, #1
 7083              		.loc 1 3229 26
 7084 0052 3B68     		ldr	r3, [r7]
 7085 0054 5A61     		str	r2, [r3, #20]
3230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ProtocolStatus->RxESIflag = ((StatusReg & FDCAN_PSR_RESI) >> FDCAN_PSR_RESI_Pos);
 7086              		.loc 1 3230 61
 7087 0056 FB68     		ldr	r3, [r7, #12]
 7088 0058 DB0A     		lsrs	r3, r3, #11
 7089 005a 03F00102 		and	r2, r3, #1
 7090              		.loc 1 3230 29
 7091 005e 3B68     		ldr	r3, [r7]
 7092 0060 9A61     		str	r2, [r3, #24]
3231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ProtocolStatus->RxBRSflag = ((StatusReg & FDCAN_PSR_RBRS) >> FDCAN_PSR_RBRS_Pos);
 7093              		.loc 1 3231 61
 7094 0062 FB68     		ldr	r3, [r7, #12]
 7095 0064 1B0B     		lsrs	r3, r3, #12
 7096 0066 03F00102 		and	r2, r3, #1
 7097              		.loc 1 3231 29
 7098 006a 3B68     		ldr	r3, [r7]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 200


 7099 006c DA61     		str	r2, [r3, #28]
3232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ProtocolStatus->RxFDFflag = ((StatusReg & FDCAN_PSR_REDL) >> FDCAN_PSR_REDL_Pos);
 7100              		.loc 1 3232 61
 7101 006e FB68     		ldr	r3, [r7, #12]
 7102 0070 5B0B     		lsrs	r3, r3, #13
 7103 0072 03F00102 		and	r2, r3, #1
 7104              		.loc 1 3232 29
 7105 0076 3B68     		ldr	r3, [r7]
 7106 0078 1A62     		str	r2, [r3, #32]
3233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ProtocolStatus->ProtocolException = ((StatusReg & FDCAN_PSR_PXE) >> FDCAN_PSR_PXE_Pos);
 7107              		.loc 1 3233 68
 7108 007a FB68     		ldr	r3, [r7, #12]
 7109 007c 9B0B     		lsrs	r3, r3, #14
 7110 007e 03F00102 		and	r2, r3, #1
 7111              		.loc 1 3233 37
 7112 0082 3B68     		ldr	r3, [r7]
 7113 0084 5A62     		str	r2, [r3, #36]
3234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ProtocolStatus->TDCvalue = ((StatusReg & FDCAN_PSR_TDCV) >> FDCAN_PSR_TDCV_Pos);
 7114              		.loc 1 3234 60
 7115 0086 FB68     		ldr	r3, [r7, #12]
 7116 0088 1B0C     		lsrs	r3, r3, #16
 7117 008a 03F07F02 		and	r2, r3, #127
 7118              		.loc 1 3234 28
 7119 008e 3B68     		ldr	r3, [r7]
 7120 0090 9A62     		str	r2, [r3, #40]
3235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Return function status */
3237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return HAL_OK;
 7121              		.loc 1 3237 10
 7122 0092 0023     		movs	r3, #0
3238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 7123              		.loc 1 3238 1
 7124 0094 1846     		mov	r0, r3
 7125 0096 1437     		adds	r7, r7, #20
 7126              	.LCFI399:
 7127              		.cfi_def_cfa_offset 4
 7128 0098 BD46     		mov	sp, r7
 7129              	.LCFI400:
 7130              		.cfi_def_cfa_register 13
 7131              		@ sp needed
 7132 009a 5DF8047B 		ldr	r7, [sp], #4
 7133              	.LCFI401:
 7134              		.cfi_restore 7
 7135              		.cfi_def_cfa_offset 0
 7136 009e 7047     		bx	lr
 7137              		.cfi_endproc
 7138              	.LFE400:
 7140              		.section	.text.HAL_FDCAN_GetErrorCounters,"ax",%progbits
 7141              		.align	1
 7142              		.global	HAL_FDCAN_GetErrorCounters
 7143              		.syntax unified
 7144              		.thumb
 7145              		.thumb_func
 7147              	HAL_FDCAN_GetErrorCounters:
 7148              	.LFB401:
3239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 201


3241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Get error counter values.
3242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
3243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
3244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  ErrorCounters pointer to an FDCAN_ErrorCountersTypeDef structure.
3245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
3246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
3247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_GetErrorCounters(FDCAN_HandleTypeDef *hfdcan, FDCAN_ErrorCountersTypeDe
3248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 7149              		.loc 1 3248 1
 7150              		.cfi_startproc
 7151              		@ args = 0, pretend = 0, frame = 16
 7152              		@ frame_needed = 1, uses_anonymous_args = 0
 7153              		@ link register save eliminated.
 7154 0000 80B4     		push	{r7}
 7155              	.LCFI402:
 7156              		.cfi_def_cfa_offset 4
 7157              		.cfi_offset 7, -4
 7158 0002 85B0     		sub	sp, sp, #20
 7159              	.LCFI403:
 7160              		.cfi_def_cfa_offset 24
 7161 0004 00AF     		add	r7, sp, #0
 7162              	.LCFI404:
 7163              		.cfi_def_cfa_register 7
 7164 0006 7860     		str	r0, [r7, #4]
 7165 0008 3960     		str	r1, [r7]
3249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t CountersReg;
3250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Read the error counters register */
3252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   CountersReg = READ_REG(hfdcan->Instance->ECR);
 7166              		.loc 1 3252 17
 7167 000a 7B68     		ldr	r3, [r7, #4]
 7168 000c 1B68     		ldr	r3, [r3]
 7169              		.loc 1 3252 15
 7170 000e 1B6C     		ldr	r3, [r3, #64]
 7171 0010 FB60     		str	r3, [r7, #12]
3253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Fill the error counters structure */
3255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ErrorCounters->TxErrorCnt = ((CountersReg & FDCAN_ECR_TEC) >> FDCAN_ECR_TEC_Pos);
 7172              		.loc 1 3255 62
 7173 0012 FB68     		ldr	r3, [r7, #12]
 7174 0014 DAB2     		uxtb	r2, r3
 7175              		.loc 1 3255 29
 7176 0016 3B68     		ldr	r3, [r7]
 7177 0018 1A60     		str	r2, [r3]
3256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ErrorCounters->RxErrorCnt = ((CountersReg & FDCAN_ECR_REC) >> FDCAN_ECR_REC_Pos);
 7178              		.loc 1 3256 62
 7179 001a FB68     		ldr	r3, [r7, #12]
 7180 001c 1B0A     		lsrs	r3, r3, #8
 7181 001e 03F07F02 		and	r2, r3, #127
 7182              		.loc 1 3256 29
 7183 0022 3B68     		ldr	r3, [r7]
 7184 0024 5A60     		str	r2, [r3, #4]
3257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ErrorCounters->RxErrorPassive = ((CountersReg & FDCAN_ECR_RP) >> FDCAN_ECR_RP_Pos);
 7185              		.loc 1 3257 65
 7186 0026 FB68     		ldr	r3, [r7, #12]
 7187 0028 DB0B     		lsrs	r3, r3, #15
 7188 002a 03F00102 		and	r2, r3, #1
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 202


 7189              		.loc 1 3257 33
 7190 002e 3B68     		ldr	r3, [r7]
 7191 0030 9A60     		str	r2, [r3, #8]
3258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ErrorCounters->ErrorLogging = ((CountersReg & FDCAN_ECR_CEL) >> FDCAN_ECR_CEL_Pos);
 7192              		.loc 1 3258 64
 7193 0032 FB68     		ldr	r3, [r7, #12]
 7194 0034 1B0C     		lsrs	r3, r3, #16
 7195 0036 DAB2     		uxtb	r2, r3
 7196              		.loc 1 3258 31
 7197 0038 3B68     		ldr	r3, [r7]
 7198 003a DA60     		str	r2, [r3, #12]
3259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Return function status */
3261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return HAL_OK;
 7199              		.loc 1 3261 10
 7200 003c 0023     		movs	r3, #0
3262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 7201              		.loc 1 3262 1
 7202 003e 1846     		mov	r0, r3
 7203 0040 1437     		adds	r7, r7, #20
 7204              	.LCFI405:
 7205              		.cfi_def_cfa_offset 4
 7206 0042 BD46     		mov	sp, r7
 7207              	.LCFI406:
 7208              		.cfi_def_cfa_register 13
 7209              		@ sp needed
 7210 0044 5DF8047B 		ldr	r7, [sp], #4
 7211              	.LCFI407:
 7212              		.cfi_restore 7
 7213              		.cfi_def_cfa_offset 0
 7214 0048 7047     		bx	lr
 7215              		.cfi_endproc
 7216              	.LFE401:
 7218              		.section	.text.HAL_FDCAN_IsRxBufferMessageAvailable,"ax",%progbits
 7219              		.align	1
 7220              		.global	HAL_FDCAN_IsRxBufferMessageAvailable
 7221              		.syntax unified
 7222              		.thumb
 7223              		.thumb_func
 7225              	HAL_FDCAN_IsRxBufferMessageAvailable:
 7226              	.LFB402:
3263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
3265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Check if a new message is received in the selected Rx buffer.
3266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
3267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
3268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  RxBufferIndex Rx buffer index.
3269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter must be a number between 0 and 63.
3270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval Status
3271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *          - 0 : No new message on RxBufferIndex.
3272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *          - 1 : New message received on RxBufferIndex.
3273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
3274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** uint32_t HAL_FDCAN_IsRxBufferMessageAvailable(FDCAN_HandleTypeDef *hfdcan, uint32_t RxBufferIndex)
3275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 7227              		.loc 1 3275 1
 7228              		.cfi_startproc
 7229              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 203


 7230              		@ frame_needed = 1, uses_anonymous_args = 0
 7231              		@ link register save eliminated.
 7232 0000 80B4     		push	{r7}
 7233              	.LCFI408:
 7234              		.cfi_def_cfa_offset 4
 7235              		.cfi_offset 7, -4
 7236 0002 85B0     		sub	sp, sp, #20
 7237              	.LCFI409:
 7238              		.cfi_def_cfa_offset 24
 7239 0004 00AF     		add	r7, sp, #0
 7240              	.LCFI410:
 7241              		.cfi_def_cfa_register 7
 7242 0006 7860     		str	r0, [r7, #4]
 7243 0008 3960     		str	r1, [r7]
3276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
3277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_MAX_VALUE(RxBufferIndex, 63U));
3278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t NewData1 = hfdcan->Instance->NDAT1;
 7244              		.loc 1 3278 29
 7245 000a 7B68     		ldr	r3, [r7, #4]
 7246 000c 1B68     		ldr	r3, [r3]
 7247              		.loc 1 3278 12
 7248 000e D3F89830 		ldr	r3, [r3, #152]
 7249 0012 FB60     		str	r3, [r7, #12]
3279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t NewData2 = hfdcan->Instance->NDAT2;
 7250              		.loc 1 3279 29
 7251 0014 7B68     		ldr	r3, [r7, #4]
 7252 0016 1B68     		ldr	r3, [r3]
 7253              		.loc 1 3279 12
 7254 0018 D3F89C30 		ldr	r3, [r3, #156]
 7255 001c BB60     		str	r3, [r7, #8]
3280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check new message reception on the selected buffer */
3282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (((RxBufferIndex < 32U) && ((NewData1 & (uint32_t)((uint32_t)1 << RxBufferIndex)) == 0U)) ||
 7256              		.loc 1 3282 6
 7257 001e 3B68     		ldr	r3, [r7]
 7258 0020 1F2B     		cmp	r3, #31
 7259 0022 07D8     		bhi	.L392
 7260              		.loc 1 3282 88 discriminator 1
 7261 0024 FA68     		ldr	r2, [r7, #12]
 7262 0026 3B68     		ldr	r3, [r7]
 7263 0028 22FA03F3 		lsr	r3, r2, r3
 7264 002c 03F00103 		and	r3, r3, #1
 7265              		.loc 1 3282 30 discriminator 1
 7266 0030 002B     		cmp	r3, #0
 7267 0032 0CD0     		beq	.L393
 7268              	.L392:
 7269              		.loc 1 3282 96 discriminator 3
 7270 0034 3B68     		ldr	r3, [r7]
 7271 0036 1F2B     		cmp	r3, #31
 7272 0038 0BD9     		bls	.L394
3283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       ((RxBufferIndex >= 32U) && ((NewData2 & (uint32_t)((uint32_t)1 << (RxBufferIndex & 0x1FU))) =
 7273              		.loc 1 3283 88
 7274 003a 3B68     		ldr	r3, [r7]
 7275 003c 03F01F03 		and	r3, r3, #31
 7276              		.loc 1 3283 99
 7277 0040 BA68     		ldr	r2, [r7, #8]
 7278 0042 22FA03F3 		lsr	r3, r2, r3
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 204


 7279 0046 03F00103 		and	r3, r3, #1
 7280              		.loc 1 3283 31
 7281 004a 002B     		cmp	r3, #0
 7282 004c 01D1     		bne	.L394
 7283              	.L393:
3284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return 0;
 7284              		.loc 1 3285 12
 7285 004e 0023     		movs	r3, #0
 7286 0050 16E0     		b	.L395
 7287              	.L394:
3286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Clear the New Data flag of the current Rx buffer */
3289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (RxBufferIndex < 32U)
 7288              		.loc 1 3289 6
 7289 0052 3B68     		ldr	r3, [r7]
 7290 0054 1F2B     		cmp	r3, #31
 7291 0056 08D8     		bhi	.L396
3290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->Instance->NDAT1 = ((uint32_t)1 << RxBufferIndex);
 7292              		.loc 1 3291 11
 7293 0058 7B68     		ldr	r3, [r7, #4]
 7294 005a 1B68     		ldr	r3, [r3]
 7295              		.loc 1 3291 44
 7296 005c 0121     		movs	r1, #1
 7297 005e 3A68     		ldr	r2, [r7]
 7298 0060 01FA02F2 		lsl	r2, r1, r2
 7299              		.loc 1 3291 29
 7300 0064 C3F89820 		str	r2, [r3, #152]
 7301 0068 09E0     		b	.L397
 7302              	.L396:
3292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else /* 32 <= RxBufferIndex <= 63 */
3294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->Instance->NDAT2 = ((uint32_t)1 << (RxBufferIndex & 0x1FU));
 7303              		.loc 1 3295 62
 7304 006a 3B68     		ldr	r3, [r7]
 7305 006c 03F01F02 		and	r2, r3, #31
 7306              		.loc 1 3295 11
 7307 0070 7B68     		ldr	r3, [r7, #4]
 7308 0072 1B68     		ldr	r3, [r3]
 7309              		.loc 1 3295 44
 7310 0074 0121     		movs	r1, #1
 7311 0076 01FA02F2 		lsl	r2, r1, r2
 7312              		.loc 1 3295 29
 7313 007a C3F89C20 		str	r2, [r3, #156]
 7314              	.L397:
3296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return 1;
 7315              		.loc 1 3298 10
 7316 007e 0123     		movs	r3, #1
 7317              	.L395:
3299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 7318              		.loc 1 3299 1
 7319 0080 1846     		mov	r0, r3
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 205


 7320 0082 1437     		adds	r7, r7, #20
 7321              	.LCFI411:
 7322              		.cfi_def_cfa_offset 4
 7323 0084 BD46     		mov	sp, r7
 7324              	.LCFI412:
 7325              		.cfi_def_cfa_register 13
 7326              		@ sp needed
 7327 0086 5DF8047B 		ldr	r7, [sp], #4
 7328              	.LCFI413:
 7329              		.cfi_restore 7
 7330              		.cfi_def_cfa_offset 0
 7331 008a 7047     		bx	lr
 7332              		.cfi_endproc
 7333              	.LFE402:
 7335              		.section	.text.HAL_FDCAN_IsTxBufferMessagePending,"ax",%progbits
 7336              		.align	1
 7337              		.global	HAL_FDCAN_IsTxBufferMessagePending
 7338              		.syntax unified
 7339              		.thumb
 7340              		.thumb_func
 7342              	HAL_FDCAN_IsTxBufferMessagePending:
 7343              	.LFB403:
3300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
3302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Check if a transmission request is pending on the selected Tx buffer.
3303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
3304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
3305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  TxBufferIndex Tx buffer index.
3306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be any combination of @arg FDCAN_Tx_location.
3307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval Status
3308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *          - 0 : No pending transmission request on TxBufferIndex.
3309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *          - 1 : Pending transmission request on TxBufferIndex.
3310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
3311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** uint32_t HAL_FDCAN_IsTxBufferMessagePending(FDCAN_HandleTypeDef *hfdcan, uint32_t TxBufferIndex)
3312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 7344              		.loc 1 3312 1
 7345              		.cfi_startproc
 7346              		@ args = 0, pretend = 0, frame = 8
 7347              		@ frame_needed = 1, uses_anonymous_args = 0
 7348              		@ link register save eliminated.
 7349 0000 80B4     		push	{r7}
 7350              	.LCFI414:
 7351              		.cfi_def_cfa_offset 4
 7352              		.cfi_offset 7, -4
 7353 0002 83B0     		sub	sp, sp, #12
 7354              	.LCFI415:
 7355              		.cfi_def_cfa_offset 16
 7356 0004 00AF     		add	r7, sp, #0
 7357              	.LCFI416:
 7358              		.cfi_def_cfa_register 7
 7359 0006 7860     		str	r0, [r7, #4]
 7360 0008 3960     		str	r1, [r7]
3313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check pending transmission request on the selected buffer */
3314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((hfdcan->Instance->TXBRP & TxBufferIndex) == 0U)
 7361              		.loc 1 3314 14
 7362 000a 7B68     		ldr	r3, [r7, #4]
 7363 000c 1B68     		ldr	r3, [r3]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 206


 7364              		.loc 1 3314 24
 7365 000e D3F8CC20 		ldr	r2, [r3, #204]
 7366              		.loc 1 3314 32
 7367 0012 3B68     		ldr	r3, [r7]
 7368 0014 1340     		ands	r3, r3, r2
 7369              		.loc 1 3314 6
 7370 0016 002B     		cmp	r3, #0
 7371 0018 01D1     		bne	.L399
3315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return 0;
 7372              		.loc 1 3316 12
 7373 001a 0023     		movs	r3, #0
 7374 001c 00E0     		b	.L400
 7375              	.L399:
3317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return 1;
 7376              		.loc 1 3318 10
 7377 001e 0123     		movs	r3, #1
 7378              	.L400:
3319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 7379              		.loc 1 3319 1
 7380 0020 1846     		mov	r0, r3
 7381 0022 0C37     		adds	r7, r7, #12
 7382              	.LCFI417:
 7383              		.cfi_def_cfa_offset 4
 7384 0024 BD46     		mov	sp, r7
 7385              	.LCFI418:
 7386              		.cfi_def_cfa_register 13
 7387              		@ sp needed
 7388 0026 5DF8047B 		ldr	r7, [sp], #4
 7389              	.LCFI419:
 7390              		.cfi_restore 7
 7391              		.cfi_def_cfa_offset 0
 7392 002a 7047     		bx	lr
 7393              		.cfi_endproc
 7394              	.LFE403:
 7396              		.section	.text.HAL_FDCAN_GetRxFifoFillLevel,"ax",%progbits
 7397              		.align	1
 7398              		.global	HAL_FDCAN_GetRxFifoFillLevel
 7399              		.syntax unified
 7400              		.thumb
 7401              		.thumb_func
 7403              	HAL_FDCAN_GetRxFifoFillLevel:
 7404              	.LFB404:
3320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
3322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Return Rx FIFO fill level.
3323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
3324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
3325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  RxFifo Rx FIFO.
3326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be one of the following values:
3327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           @arg FDCAN_RX_FIFO0: Rx FIFO 0
3328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           @arg FDCAN_RX_FIFO1: Rx FIFO 1
3329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval Level Rx FIFO fill level.
3330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
3331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** uint32_t HAL_FDCAN_GetRxFifoFillLevel(FDCAN_HandleTypeDef *hfdcan, uint32_t RxFifo)
3332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 207


 7405              		.loc 1 3332 1
 7406              		.cfi_startproc
 7407              		@ args = 0, pretend = 0, frame = 16
 7408              		@ frame_needed = 1, uses_anonymous_args = 0
 7409              		@ link register save eliminated.
 7410 0000 80B4     		push	{r7}
 7411              	.LCFI420:
 7412              		.cfi_def_cfa_offset 4
 7413              		.cfi_offset 7, -4
 7414 0002 85B0     		sub	sp, sp, #20
 7415              	.LCFI421:
 7416              		.cfi_def_cfa_offset 24
 7417 0004 00AF     		add	r7, sp, #0
 7418              	.LCFI422:
 7419              		.cfi_def_cfa_register 7
 7420 0006 7860     		str	r0, [r7, #4]
 7421 0008 3960     		str	r1, [r7]
3333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t FillLevel;
3334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
3336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_RX_FIFO(RxFifo));
3337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (RxFifo == FDCAN_RX_FIFO0)
 7422              		.loc 1 3338 6
 7423 000a 3B68     		ldr	r3, [r7]
 7424 000c 402B     		cmp	r3, #64
 7425 000e 07D1     		bne	.L402
3339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     FillLevel = hfdcan->Instance->RXF0S & FDCAN_RXF0S_F0FL;
 7426              		.loc 1 3340 23
 7427 0010 7B68     		ldr	r3, [r7, #4]
 7428 0012 1B68     		ldr	r3, [r3]
 7429              		.loc 1 3340 33
 7430 0014 D3F8A430 		ldr	r3, [r3, #164]
 7431              		.loc 1 3340 15
 7432 0018 03F07F03 		and	r3, r3, #127
 7433 001c FB60     		str	r3, [r7, #12]
 7434 001e 06E0     		b	.L403
 7435              	.L402:
3341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else /* RxFifo == FDCAN_RX_FIFO1 */
3343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     FillLevel = hfdcan->Instance->RXF1S & FDCAN_RXF1S_F1FL;
 7436              		.loc 1 3344 23
 7437 0020 7B68     		ldr	r3, [r7, #4]
 7438 0022 1B68     		ldr	r3, [r3]
 7439              		.loc 1 3344 33
 7440 0024 D3F8B430 		ldr	r3, [r3, #180]
 7441              		.loc 1 3344 15
 7442 0028 03F07F03 		and	r3, r3, #127
 7443 002c FB60     		str	r3, [r7, #12]
 7444              	.L403:
3345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Return Rx FIFO fill level */
3348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return FillLevel;
 7445              		.loc 1 3348 10
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 208


 7446 002e FB68     		ldr	r3, [r7, #12]
3349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 7447              		.loc 1 3349 1
 7448 0030 1846     		mov	r0, r3
 7449 0032 1437     		adds	r7, r7, #20
 7450              	.LCFI423:
 7451              		.cfi_def_cfa_offset 4
 7452 0034 BD46     		mov	sp, r7
 7453              	.LCFI424:
 7454              		.cfi_def_cfa_register 13
 7455              		@ sp needed
 7456 0036 5DF8047B 		ldr	r7, [sp], #4
 7457              	.LCFI425:
 7458              		.cfi_restore 7
 7459              		.cfi_def_cfa_offset 0
 7460 003a 7047     		bx	lr
 7461              		.cfi_endproc
 7462              	.LFE404:
 7464              		.section	.text.HAL_FDCAN_GetTxFifoFreeLevel,"ax",%progbits
 7465              		.align	1
 7466              		.global	HAL_FDCAN_GetTxFifoFreeLevel
 7467              		.syntax unified
 7468              		.thumb
 7469              		.thumb_func
 7471              	HAL_FDCAN_GetTxFifoFreeLevel:
 7472              	.LFB405:
3350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
3352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Return Tx FIFO free level: number of consecutive free Tx FIFO
3353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         elements starting from Tx FIFO GetIndex.
3354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
3355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
3356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval Level Tx FIFO free level.
3357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
3358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** uint32_t HAL_FDCAN_GetTxFifoFreeLevel(FDCAN_HandleTypeDef *hfdcan)
3359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 7473              		.loc 1 3359 1
 7474              		.cfi_startproc
 7475              		@ args = 0, pretend = 0, frame = 16
 7476              		@ frame_needed = 1, uses_anonymous_args = 0
 7477              		@ link register save eliminated.
 7478 0000 80B4     		push	{r7}
 7479              	.LCFI426:
 7480              		.cfi_def_cfa_offset 4
 7481              		.cfi_offset 7, -4
 7482 0002 85B0     		sub	sp, sp, #20
 7483              	.LCFI427:
 7484              		.cfi_def_cfa_offset 24
 7485 0004 00AF     		add	r7, sp, #0
 7486              	.LCFI428:
 7487              		.cfi_def_cfa_register 7
 7488 0006 7860     		str	r0, [r7, #4]
3360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t FreeLevel;
3361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   FreeLevel = hfdcan->Instance->TXFQS & FDCAN_TXFQS_TFFL;
 7489              		.loc 1 3362 21
 7490 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 209


 7491 000a 1B68     		ldr	r3, [r3]
 7492              		.loc 1 3362 31
 7493 000c D3F8C430 		ldr	r3, [r3, #196]
 7494              		.loc 1 3362 13
 7495 0010 03F03F03 		and	r3, r3, #63
 7496 0014 FB60     		str	r3, [r7, #12]
3363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Return Tx FIFO free level */
3365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return FreeLevel;
 7497              		.loc 1 3365 10
 7498 0016 FB68     		ldr	r3, [r7, #12]
3366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 7499              		.loc 1 3366 1
 7500 0018 1846     		mov	r0, r3
 7501 001a 1437     		adds	r7, r7, #20
 7502              	.LCFI429:
 7503              		.cfi_def_cfa_offset 4
 7504 001c BD46     		mov	sp, r7
 7505              	.LCFI430:
 7506              		.cfi_def_cfa_register 13
 7507              		@ sp needed
 7508 001e 5DF8047B 		ldr	r7, [sp], #4
 7509              	.LCFI431:
 7510              		.cfi_restore 7
 7511              		.cfi_def_cfa_offset 0
 7512 0022 7047     		bx	lr
 7513              		.cfi_endproc
 7514              	.LFE405:
 7516              		.section	.text.HAL_FDCAN_IsRestrictedOperationMode,"ax",%progbits
 7517              		.align	1
 7518              		.global	HAL_FDCAN_IsRestrictedOperationMode
 7519              		.syntax unified
 7520              		.thumb
 7521              		.thumb_func
 7523              	HAL_FDCAN_IsRestrictedOperationMode:
 7524              	.LFB406:
3367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
3369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Check if the FDCAN peripheral entered Restricted Operation Mode.
3370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
3371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
3372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval Status
3373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *          - 0 : Normal FDCAN operation.
3374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *          - 1 : Restricted Operation Mode active.
3375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
3376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** uint32_t HAL_FDCAN_IsRestrictedOperationMode(FDCAN_HandleTypeDef *hfdcan)
3377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 7525              		.loc 1 3377 1
 7526              		.cfi_startproc
 7527              		@ args = 0, pretend = 0, frame = 16
 7528              		@ frame_needed = 1, uses_anonymous_args = 0
 7529              		@ link register save eliminated.
 7530 0000 80B4     		push	{r7}
 7531              	.LCFI432:
 7532              		.cfi_def_cfa_offset 4
 7533              		.cfi_offset 7, -4
 7534 0002 85B0     		sub	sp, sp, #20
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 210


 7535              	.LCFI433:
 7536              		.cfi_def_cfa_offset 24
 7537 0004 00AF     		add	r7, sp, #0
 7538              	.LCFI434:
 7539              		.cfi_def_cfa_register 7
 7540 0006 7860     		str	r0, [r7, #4]
3378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t OperationMode;
3379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Get Operation Mode */
3381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   OperationMode = ((hfdcan->Instance->CCCR & FDCAN_CCCR_ASM) >> FDCAN_CCCR_ASM_Pos);
 7541              		.loc 1 3381 27
 7542 0008 7B68     		ldr	r3, [r7, #4]
 7543 000a 1B68     		ldr	r3, [r3]
 7544              		.loc 1 3381 37
 7545 000c 9B69     		ldr	r3, [r3, #24]
 7546              		.loc 1 3381 62
 7547 000e 9B08     		lsrs	r3, r3, #2
 7548              		.loc 1 3381 17
 7549 0010 03F00103 		and	r3, r3, #1
 7550 0014 FB60     		str	r3, [r7, #12]
3382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return OperationMode;
 7551              		.loc 1 3383 10
 7552 0016 FB68     		ldr	r3, [r7, #12]
3384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 7553              		.loc 1 3384 1
 7554 0018 1846     		mov	r0, r3
 7555 001a 1437     		adds	r7, r7, #20
 7556              	.LCFI435:
 7557              		.cfi_def_cfa_offset 4
 7558 001c BD46     		mov	sp, r7
 7559              	.LCFI436:
 7560              		.cfi_def_cfa_register 13
 7561              		@ sp needed
 7562 001e 5DF8047B 		ldr	r7, [sp], #4
 7563              	.LCFI437:
 7564              		.cfi_restore 7
 7565              		.cfi_def_cfa_offset 0
 7566 0022 7047     		bx	lr
 7567              		.cfi_endproc
 7568              	.LFE406:
 7570              		.section	.text.HAL_FDCAN_ExitRestrictedOperationMode,"ax",%progbits
 7571              		.align	1
 7572              		.global	HAL_FDCAN_ExitRestrictedOperationMode
 7573              		.syntax unified
 7574              		.thumb
 7575              		.thumb_func
 7577              	HAL_FDCAN_ExitRestrictedOperationMode:
 7578              	.LFB407:
3385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
3387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Exit Restricted Operation Mode.
3388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
3389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
3390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
3391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
3392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_ExitRestrictedOperationMode(FDCAN_HandleTypeDef *hfdcan)
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 211


3393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 7579              		.loc 1 3393 1
 7580              		.cfi_startproc
 7581              		@ args = 0, pretend = 0, frame = 16
 7582              		@ frame_needed = 1, uses_anonymous_args = 0
 7583              		@ link register save eliminated.
 7584 0000 80B4     		push	{r7}
 7585              	.LCFI438:
 7586              		.cfi_def_cfa_offset 4
 7587              		.cfi_offset 7, -4
 7588 0002 85B0     		sub	sp, sp, #20
 7589              	.LCFI439:
 7590              		.cfi_def_cfa_offset 24
 7591 0004 00AF     		add	r7, sp, #0
 7592              	.LCFI440:
 7593              		.cfi_def_cfa_register 7
 7594 0006 7860     		str	r0, [r7, #4]
3394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 7595              		.loc 1 3394 26
 7596 0008 7B68     		ldr	r3, [r7, #4]
 7597 000a 93F89830 		ldrb	r3, [r3, #152]
 7598 000e FB73     		strb	r3, [r7, #15]
3395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 7599              		.loc 1 3396 6
 7600 0010 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7601 0012 012B     		cmp	r3, #1
 7602 0014 02D0     		beq	.L410
 7603              		.loc 1 3396 40 discriminator 1
 7604 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7605 0018 022B     		cmp	r3, #2
 7606 001a 09D1     		bne	.L411
 7607              	.L410:
3397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Exit Restricted Operation mode */
3399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     CLEAR_BIT(hfdcan->Instance->CCCR, FDCAN_CCCR_ASM);
 7608              		.loc 1 3399 5
 7609 001c 7B68     		ldr	r3, [r7, #4]
 7610 001e 1B68     		ldr	r3, [r3]
 7611 0020 9A69     		ldr	r2, [r3, #24]
 7612 0022 7B68     		ldr	r3, [r7, #4]
 7613 0024 1B68     		ldr	r3, [r3]
 7614 0026 22F00402 		bic	r2, r2, #4
 7615 002a 9A61     		str	r2, [r3, #24]
3400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
3402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 7616              		.loc 1 3402 12
 7617 002c 0023     		movs	r3, #0
 7618 002e 08E0     		b	.L412
 7619              	.L411:
3403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
3405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
3407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 7620              		.loc 1 3407 23
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 212


 7621 0030 7B68     		ldr	r3, [r7, #4]
 7622 0032 D3F89C30 		ldr	r3, [r3, #156]
 7623 0036 43F00202 		orr	r2, r3, #2
 7624 003a 7B68     		ldr	r3, [r7, #4]
 7625 003c C3F89C20 		str	r2, [r3, #156]
3408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 7626              		.loc 1 3409 12
 7627 0040 0123     		movs	r3, #1
 7628              	.L412:
3410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 7629              		.loc 1 3411 1
 7630 0042 1846     		mov	r0, r3
 7631 0044 1437     		adds	r7, r7, #20
 7632              	.LCFI441:
 7633              		.cfi_def_cfa_offset 4
 7634 0046 BD46     		mov	sp, r7
 7635              	.LCFI442:
 7636              		.cfi_def_cfa_register 13
 7637              		@ sp needed
 7638 0048 5DF8047B 		ldr	r7, [sp], #4
 7639              	.LCFI443:
 7640              		.cfi_restore 7
 7641              		.cfi_def_cfa_offset 0
 7642 004c 7047     		bx	lr
 7643              		.cfi_endproc
 7644              	.LFE407:
 7646              		.section	.text.HAL_FDCAN_TT_ConfigOperation,"ax",%progbits
 7647              		.align	1
 7648              		.global	HAL_FDCAN_TT_ConfigOperation
 7649              		.syntax unified
 7650              		.thumb
 7651              		.thumb_func
 7653              	HAL_FDCAN_TT_ConfigOperation:
 7654              	.LFB408:
3412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
3414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @}
3415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
3416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /** @defgroup FDCAN_Exported_Functions_Group4 TT Configuration and control functions
3418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****  *  @brief    TT Configuration and control functions
3419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****  *
3420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** @verbatim
3421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ==============================================================================
3422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****               ##### TT Configuration and control functions #####
3423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ==============================================================================
3424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     [..]  This section provides functions allowing to:
3425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TT_ConfigOperation                  : Initialize TT operation parameters
3426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TT_ConfigReferenceMessage           : Configure the reference message
3427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TT_ConfigTrigger                    : Configure the FDCAN trigger
3428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TT_SetGlobalTime                    : Schedule global time adjustment
3429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TT_SetClockSynchronization          : Schedule TUR numerator update
3430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TT_ConfigStopWatch                  : Configure stop watch source and polarity
3431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TT_ConfigRegisterTimeMark           : Configure register time mark pulse genera
3432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         (+) HAL_FDCAN_TT_EnableRegisterTimeMarkPulse      : Enable register time mark pulse generat
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 213


3433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         (+) HAL_FDCAN_TT_DisableRegisterTimeMarkPulse     : Disable register time mark pulse genera
3434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TT_EnableTriggerTimeMarkPulse       : Enable trigger time mark pulse generation
3435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TT_DisableTriggerTimeMarkPulse      : Disable trigger time mark pulse generatio
3436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TT_EnableHardwareGapControl         : Enable gap control by input pin fdcan1_ev
3437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TT_DisableHardwareGapControl        : Disable gap control by input pin fdcan1_e
3438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TT_EnableTimeMarkGapControl         : Enable gap control (finish only) by regis
3439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TT_DisableTimeMarkGapControl        : Disable gap control by register time mark
3440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TT_SetNextIsGap                     : Transmit next reference message with Next
3441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TT_SetEndOfGap                      : Finish a Gap by requesting start of refer
3442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TT_ConfigExternalSyncPhase          : Configure target phase used for external 
3443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         (+) HAL_FDCAN_TT_EnableExternalSynchronization    : Synchronize the phase of the FDCAN sche
3444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         (+) HAL_FDCAN_TT_DisableExternalSynchronization   : Disable external schedule synchronizati
3445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TT_GetOperationStatus               : Get TT operation status
3446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** @endverbatim
3448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @{
3449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
3450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
3452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Initialize TT operation parameters.
3453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
3454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
3455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  pTTParams pointer to a FDCAN_TT_ConfigTypeDef structure.
3456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
3457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
3458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_TT_ConfigOperation(FDCAN_HandleTypeDef *hfdcan, FDCAN_TT_ConfigTypeDef 
3459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 7655              		.loc 1 3459 1
 7656              		.cfi_startproc
 7657              		@ args = 0, pretend = 0, frame = 24
 7658              		@ frame_needed = 1, uses_anonymous_args = 0
 7659 0000 80B5     		push	{r7, lr}
 7660              	.LCFI444:
 7661              		.cfi_def_cfa_offset 8
 7662              		.cfi_offset 7, -8
 7663              		.cfi_offset 14, -4
 7664 0002 86B0     		sub	sp, sp, #24
 7665              	.LCFI445:
 7666              		.cfi_def_cfa_offset 32
 7667 0004 00AF     		add	r7, sp, #0
 7668              	.LCFI446:
 7669              		.cfi_def_cfa_register 7
 7670 0006 7860     		str	r0, [r7, #4]
 7671 0008 3960     		str	r1, [r7]
3460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t tickstart;
3461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t RAMcounter;
3462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t StartAddress;
3463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
3465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_INSTANCE(hfdcan->Instance));
3466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_TUR_NUMERATOR(pTTParams->TURNumerator));
3467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_TUR_DENOMINATOR(pTTParams->TURDenominator));
3468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_TIME_MASTER(pTTParams->TimeMaster));
3469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_MAX_VALUE(pTTParams->SyncDevLimit, 7U));
3470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_MAX_VALUE(pTTParams->InitRefTrigOffset, 127U));
3471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_MAX_VALUE(pTTParams->TriggerMemoryNbr, 64U));
3472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_CYCLE_START_SYNC(pTTParams->CycleStartSync));
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 214


3473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_STOP_WATCH_TRIGGER(pTTParams->StopWatchTrigSel));
3474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_EVENT_TRIGGER(pTTParams->EventTrigSel));
3475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (pTTParams->TimeMaster == FDCAN_TT_POTENTIAL_MASTER)
3476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_TT_BASIC_CYCLES_NUMBER(pTTParams->BasicCyclesNbr));
3478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (pTTParams->OperationMode != FDCAN_TT_COMMUNICATION_LEVEL0)
3480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_TT_OPERATION(pTTParams->GapEnable));
3482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_MAX_VALUE(pTTParams->AppWdgLimit, 255U));
3483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_TT_EVENT_TRIGGER_POLARITY(pTTParams->EvtTrigPolarity));
3484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_TT_TX_ENABLE_WINDOW(pTTParams->TxEnableWindow));
3485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_MAX_VALUE(pTTParams->ExpTxTrigNbr, 4095U));
3486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (pTTParams->OperationMode != FDCAN_TT_COMMUNICATION_LEVEL1)
3488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_TT_TUR_LEVEL_0_2(pTTParams->TURNumerator, pTTParams->TURDenominator));
3490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_TT_EXTERNAL_CLK_SYNC(pTTParams->ExternalClkSync));
3491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_TT_GLOBAL_TIME_FILTERING(pTTParams->GlobalTimeFilter));
3492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_TT_AUTO_CLK_CALIBRATION(pTTParams->ClockCalibration));
3493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
3495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_TT_TUR_LEVEL_1(pTTParams->TURNumerator, pTTParams->TURDenominator));
3497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 7672              		.loc 1 3499 13
 7673 000a 7B68     		ldr	r3, [r7, #4]
 7674 000c 93F89830 		ldrb	r3, [r3, #152]
 7675 0010 DBB2     		uxtb	r3, r3
 7676              		.loc 1 3499 6
 7677 0012 012B     		cmp	r3, #1
 7678 0014 40F01081 		bne	.L414
3500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Stop local time in order to enable write access to the other bits of TURCF register */
3502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     CLEAR_BIT(hfdcan->ttcan->TURCF, FDCAN_TURCF_ELT);
 7679              		.loc 1 3502 5
 7680 0018 7B68     		ldr	r3, [r7, #4]
 7681 001a 5B68     		ldr	r3, [r3, #4]
 7682 001c 1A69     		ldr	r2, [r3, #16]
 7683 001e 7B68     		ldr	r3, [r7, #4]
 7684 0020 5B68     		ldr	r3, [r3, #4]
 7685 0022 22F00042 		bic	r2, r2, #-2147483648
 7686 0026 1A61     		str	r2, [r3, #16]
3503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Get tick */
3505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     tickstart = HAL_GetTick();
 7687              		.loc 1 3505 17
 7688 0028 FFF7FEFF 		bl	HAL_GetTick
 7689 002c 3861     		str	r0, [r7, #16]
3506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Wait until the ELT bit into TURCF register is reset */
3508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     while ((hfdcan->ttcan->TURCF & FDCAN_TURCF_ELT) != 0U)
 7690              		.loc 1 3508 11
 7691 002e 14E0     		b	.L415
 7692              	.L417:
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 215


3509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Check for the Timeout */
3511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if ((HAL_GetTick() - tickstart) > FDCAN_TIMEOUT_VALUE)
 7693              		.loc 1 3511 12
 7694 0030 FFF7FEFF 		bl	HAL_GetTick
 7695 0034 0246     		mov	r2, r0
 7696              		.loc 1 3511 26
 7697 0036 3B69     		ldr	r3, [r7, #16]
 7698 0038 D31A     		subs	r3, r2, r3
 7699              		.loc 1 3511 10
 7700 003a 0A2B     		cmp	r3, #10
 7701 003c 0DD9     		bls	.L415
3512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
3513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Update error code */
3514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
 7702              		.loc 1 3514 27
 7703 003e 7B68     		ldr	r3, [r7, #4]
 7704 0040 D3F89C30 		ldr	r3, [r3, #156]
 7705 0044 43F00102 		orr	r2, r3, #1
 7706 0048 7B68     		ldr	r3, [r7, #4]
 7707 004a C3F89C20 		str	r2, [r3, #156]
3515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Change FDCAN state */
3517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->State = HAL_FDCAN_STATE_ERROR;
 7708              		.loc 1 3517 23
 7709 004e 7B68     		ldr	r3, [r7, #4]
 7710 0050 0322     		movs	r2, #3
 7711 0052 83F89820 		strb	r2, [r3, #152]
3518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         return HAL_ERROR;
 7712              		.loc 1 3519 16
 7713 0056 0123     		movs	r3, #1
 7714 0058 F7E0     		b	.L416
 7715              	.L415:
3508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 7716              		.loc 1 3508 19
 7717 005a 7B68     		ldr	r3, [r7, #4]
 7718 005c 5B68     		ldr	r3, [r3, #4]
3508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 7719              		.loc 1 3508 26
 7720 005e 1B69     		ldr	r3, [r3, #16]
3508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 7721              		.loc 1 3508 11
 7722 0060 002B     		cmp	r3, #0
 7723 0062 E5DB     		blt	.L417
3520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
3521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Configure TUR (Time Unit Ratio) */
3524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     MODIFY_REG(hfdcan->ttcan->TURCF,
 7724              		.loc 1 3524 5
 7725 0064 7B68     		ldr	r3, [r7, #4]
 7726 0066 5B68     		ldr	r3, [r3, #4]
 7727 0068 1B69     		ldr	r3, [r3, #16]
 7728 006a 03F04041 		and	r1, r3, #-1073741824
 7729 006e 3B68     		ldr	r3, [r7]
 7730 0070 9B6B     		ldr	r3, [r3, #56]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 216


 7731 0072 A3F58032 		sub	r2, r3, #65536
 7732 0076 3B68     		ldr	r3, [r7]
 7733 0078 DB6B     		ldr	r3, [r3, #60]
 7734 007a 1B04     		lsls	r3, r3, #16
 7735 007c 1A43     		orrs	r2, r2, r3
 7736 007e 7B68     		ldr	r3, [r7, #4]
 7737 0080 5B68     		ldr	r3, [r3, #4]
 7738 0082 0A43     		orrs	r2, r2, r1
 7739 0084 1A61     		str	r2, [r3, #16]
3525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                (FDCAN_TURCF_NCL | FDCAN_TURCF_DC),
3526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                (((pTTParams->TURNumerator - 0x10000U) << FDCAN_TURCF_NCL_Pos) | (pTTParams->TURDeno
3527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Enable local time */
3529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     SET_BIT(hfdcan->ttcan->TURCF, FDCAN_TURCF_ELT);
 7740              		.loc 1 3529 5
 7741 0086 7B68     		ldr	r3, [r7, #4]
 7742 0088 5B68     		ldr	r3, [r3, #4]
 7743 008a 1A69     		ldr	r2, [r3, #16]
 7744 008c 7B68     		ldr	r3, [r7, #4]
 7745 008e 5B68     		ldr	r3, [r3, #4]
 7746 0090 42F00042 		orr	r2, r2, #-2147483648
 7747 0094 1A61     		str	r2, [r3, #16]
3530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Configure TT operation */
3532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     MODIFY_REG(hfdcan->ttcan->TTOCF,
 7748              		.loc 1 3532 5
 7749 0096 7B68     		ldr	r3, [r7, #4]
 7750 0098 5B68     		ldr	r3, [r3, #4]
 7751 009a 9A68     		ldr	r2, [r3, #8]
 7752 009c 6D4B     		ldr	r3, .L425
 7753 009e 1340     		ands	r3, r3, r2
 7754 00a0 3A68     		ldr	r2, [r7]
 7755 00a2 1168     		ldr	r1, [r2]
 7756 00a4 3A68     		ldr	r2, [r7]
 7757 00a6 9268     		ldr	r2, [r2, #8]
 7758 00a8 1143     		orrs	r1, r1, r2
 7759 00aa 3A68     		ldr	r2, [r7]
 7760 00ac D268     		ldr	r2, [r2, #12]
 7761 00ae 5201     		lsls	r2, r2, #5
 7762 00b0 1143     		orrs	r1, r1, r2
 7763 00b2 3A68     		ldr	r2, [r7]
 7764 00b4 1269     		ldr	r2, [r2, #16]
 7765 00b6 1202     		lsls	r2, r2, #8
 7766 00b8 1143     		orrs	r1, r1, r2
 7767 00ba 7A68     		ldr	r2, [r7, #4]
 7768 00bc 5268     		ldr	r2, [r2, #4]
 7769 00be 0B43     		orrs	r3, r3, r1
 7770 00c0 9360     		str	r3, [r2, #8]
3533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                (FDCAN_TTOCF_OM | FDCAN_TTOCF_TM | FDCAN_TTOCF_LDSDL | FDCAN_TTOCF_IRTO),
3534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                (pTTParams->OperationMode                           | \
3535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                 pTTParams->TimeMaster                              | \
3536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                 (pTTParams->SyncDevLimit << FDCAN_TTOCF_LDSDL_Pos) | \
3537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                 (pTTParams->InitRefTrigOffset << FDCAN_TTOCF_IRTO_Pos)));
3538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (pTTParams->OperationMode != FDCAN_TT_COMMUNICATION_LEVEL0)
 7771              		.loc 1 3538 18
 7772 00c2 3B68     		ldr	r3, [r7]
 7773 00c4 1B68     		ldr	r3, [r3]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 217


 7774              		.loc 1 3538 8
 7775 00c6 032B     		cmp	r3, #3
 7776 00c8 11D0     		beq	.L418
3539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       MODIFY_REG(hfdcan->ttcan->TTOCF,
 7777              		.loc 1 3540 7
 7778 00ca 7B68     		ldr	r3, [r7, #4]
 7779 00cc 5B68     		ldr	r3, [r3, #4]
 7780 00ce 9A68     		ldr	r2, [r3, #8]
 7781 00d0 614B     		ldr	r3, .L425+4
 7782 00d2 1340     		ands	r3, r3, r2
 7783 00d4 3A68     		ldr	r2, [r7]
 7784 00d6 5168     		ldr	r1, [r2, #4]
 7785 00d8 3A68     		ldr	r2, [r7]
 7786 00da 9269     		ldr	r2, [r2, #24]
 7787 00dc 1204     		lsls	r2, r2, #16
 7788 00de 1143     		orrs	r1, r1, r2
 7789 00e0 3A68     		ldr	r2, [r7]
 7790 00e2 526A     		ldr	r2, [r2, #36]
 7791 00e4 1143     		orrs	r1, r1, r2
 7792 00e6 7A68     		ldr	r2, [r7, #4]
 7793 00e8 5268     		ldr	r2, [r2, #4]
 7794 00ea 0B43     		orrs	r3, r3, r1
 7795 00ec 9360     		str	r3, [r2, #8]
 7796              	.L418:
3541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                  (FDCAN_TTOCF_GEN | FDCAN_TTOCF_AWL | FDCAN_TTOCF_EVTP),
3542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                  (pTTParams->GapEnable                            | \
3543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                   (pTTParams->AppWdgLimit << FDCAN_TTOCF_AWL_Pos) | \
3544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                   pTTParams->EvtTrigPolarity));
3545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (pTTParams->OperationMode != FDCAN_TT_COMMUNICATION_LEVEL1)
 7797              		.loc 1 3546 18
 7798 00ee 3B68     		ldr	r3, [r7]
 7799 00f0 1B68     		ldr	r3, [r3]
 7800              		.loc 1 3546 8
 7801 00f2 012B     		cmp	r3, #1
 7802 00f4 10D0     		beq	.L419
3547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       MODIFY_REG(hfdcan->ttcan->TTOCF,
 7803              		.loc 1 3548 7
 7804 00f6 7B68     		ldr	r3, [r7, #4]
 7805 00f8 5B68     		ldr	r3, [r3, #4]
 7806 00fa 9A68     		ldr	r2, [r3, #8]
 7807 00fc 574B     		ldr	r3, .L425+8
 7808 00fe 1340     		ands	r3, r3, r2
 7809 0100 3A68     		ldr	r2, [r7]
 7810 0102 5169     		ldr	r1, [r2, #20]
 7811 0104 3A68     		ldr	r2, [r7]
 7812 0106 D269     		ldr	r2, [r2, #28]
 7813 0108 1143     		orrs	r1, r1, r2
 7814 010a 3A68     		ldr	r2, [r7]
 7815 010c 126A     		ldr	r2, [r2, #32]
 7816 010e 1143     		orrs	r1, r1, r2
 7817 0110 7A68     		ldr	r2, [r7, #4]
 7818 0112 5268     		ldr	r2, [r2, #4]
 7819 0114 0B43     		orrs	r3, r3, r1
 7820 0116 9360     		str	r3, [r2, #8]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 218


 7821              	.L419:
3549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                  (FDCAN_TTOCF_EECS | FDCAN_TTOCF_EGTF | FDCAN_TTOCF_ECC),
3550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                  (pTTParams->ExternalClkSync  | \
3551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                   pTTParams->GlobalTimeFilter | \
3552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                   pTTParams->ClockCalibration));
3553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Configure system matrix limits */
3556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     MODIFY_REG(hfdcan->ttcan->TTMLM, FDCAN_TTMLM_CSS, pTTParams->CycleStartSync);
 7822              		.loc 1 3556 5
 7823 0118 7B68     		ldr	r3, [r7, #4]
 7824 011a 5B68     		ldr	r3, [r3, #4]
 7825 011c DB68     		ldr	r3, [r3, #12]
 7826 011e 23F0C001 		bic	r1, r3, #192
 7827 0122 3B68     		ldr	r3, [r7]
 7828 0124 DA6A     		ldr	r2, [r3, #44]
 7829 0126 7B68     		ldr	r3, [r7, #4]
 7830 0128 5B68     		ldr	r3, [r3, #4]
 7831 012a 0A43     		orrs	r2, r2, r1
 7832 012c DA60     		str	r2, [r3, #12]
3557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (pTTParams->OperationMode != FDCAN_TT_COMMUNICATION_LEVEL0)
 7833              		.loc 1 3557 18
 7834 012e 3B68     		ldr	r3, [r7]
 7835 0130 1B68     		ldr	r3, [r3]
 7836              		.loc 1 3557 8
 7837 0132 032B     		cmp	r3, #3
 7838 0134 10D0     		beq	.L420
3558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       MODIFY_REG(hfdcan->ttcan->TTMLM,
 7839              		.loc 1 3559 7
 7840 0136 7B68     		ldr	r3, [r7, #4]
 7841 0138 5B68     		ldr	r3, [r3, #4]
 7842 013a DA68     		ldr	r2, [r3, #12]
 7843 013c 484B     		ldr	r3, .L425+12
 7844 013e 1340     		ands	r3, r3, r2
 7845 0140 3A68     		ldr	r2, [r7]
 7846 0142 126B     		ldr	r2, [r2, #48]
 7847 0144 013A     		subs	r2, r2, #1
 7848 0146 1102     		lsls	r1, r2, #8
 7849 0148 3A68     		ldr	r2, [r7]
 7850 014a 526B     		ldr	r2, [r2, #52]
 7851 014c 1204     		lsls	r2, r2, #16
 7852 014e 1143     		orrs	r1, r1, r2
 7853 0150 7A68     		ldr	r2, [r7, #4]
 7854 0152 5268     		ldr	r2, [r2, #4]
 7855 0154 0B43     		orrs	r3, r3, r1
 7856 0156 D360     		str	r3, [r2, #12]
 7857              	.L420:
3560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                  (FDCAN_TTMLM_TXEW | FDCAN_TTMLM_ENTT),
3561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                  (((pTTParams->TxEnableWindow - 1U) << FDCAN_TTMLM_TXEW_Pos) | (pTTParams->ExpTxTri
3562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (pTTParams->TimeMaster == FDCAN_TT_POTENTIAL_MASTER)
 7858              		.loc 1 3563 18
 7859 0158 3B68     		ldr	r3, [r7]
 7860 015a 9B68     		ldr	r3, [r3, #8]
 7861              		.loc 1 3563 8
 7862 015c 102B     		cmp	r3, #16
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 219


 7863 015e 0AD1     		bne	.L421
3564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       MODIFY_REG(hfdcan->ttcan->TTMLM, FDCAN_TTMLM_CCM, pTTParams->BasicCyclesNbr);
 7864              		.loc 1 3565 7
 7865 0160 7B68     		ldr	r3, [r7, #4]
 7866 0162 5B68     		ldr	r3, [r3, #4]
 7867 0164 DB68     		ldr	r3, [r3, #12]
 7868 0166 23F03F01 		bic	r1, r3, #63
 7869 016a 3B68     		ldr	r3, [r7]
 7870 016c 9A6A     		ldr	r2, [r3, #40]
 7871 016e 7B68     		ldr	r3, [r7, #4]
 7872 0170 5B68     		ldr	r3, [r3, #4]
 7873 0172 0A43     		orrs	r2, r2, r1
 7874 0174 DA60     		str	r2, [r3, #12]
 7875              	.L421:
3566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Configure input triggers: Stop watch and Event */
3569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     MODIFY_REG(hfdcan->ttcan->TTTS,
 7876              		.loc 1 3569 5
 7877 0176 7B68     		ldr	r3, [r7, #4]
 7878 0178 5B68     		ldr	r3, [r3, #4]
 7879 017a D3F80032 		ldr	r3, [r3, #512]
 7880 017e 23F03301 		bic	r1, r3, #51
 7881 0182 3B68     		ldr	r3, [r7]
 7882 0184 5A6C     		ldr	r2, [r3, #68]
 7883 0186 3B68     		ldr	r3, [r7]
 7884 0188 9B6C     		ldr	r3, [r3, #72]
 7885 018a 1A43     		orrs	r2, r2, r3
 7886 018c 7B68     		ldr	r3, [r7, #4]
 7887 018e 5B68     		ldr	r3, [r3, #4]
 7888 0190 0A43     		orrs	r2, r2, r1
 7889 0192 C3F80022 		str	r2, [r3, #512]
3570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                (FDCAN_TTTS_SWTSEL | FDCAN_TTTS_EVTSEL),
3571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                (pTTParams->StopWatchTrigSel | pTTParams->EventTrigSel));
3572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Configure trigger memory start address */
3574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     StartAddress = (hfdcan->msgRam.EndAddress - SRAMCAN_BASE) / 4U;
 7890              		.loc 1 3574 35
 7891 0196 7B68     		ldr	r3, [r7, #4]
 7892 0198 D3F89020 		ldr	r2, [r3, #144]
 7893              		.loc 1 3574 47
 7894 019c 314B     		ldr	r3, .L425+16
 7895 019e 1344     		add	r3, r3, r2
 7896              		.loc 1 3574 18
 7897 01a0 9B08     		lsrs	r3, r3, #2
 7898 01a2 FB60     		str	r3, [r7, #12]
3575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     MODIFY_REG(hfdcan->ttcan->TTTMC, FDCAN_TTTMC_TMSA, (StartAddress << FDCAN_TTTMC_TMSA_Pos));
 7899              		.loc 1 3575 5
 7900 01a4 7B68     		ldr	r3, [r7, #4]
 7901 01a6 5B68     		ldr	r3, [r3, #4]
 7902 01a8 1A68     		ldr	r2, [r3]
 7903 01aa 2F4B     		ldr	r3, .L425+20
 7904 01ac 1340     		ands	r3, r3, r2
 7905 01ae FA68     		ldr	r2, [r7, #12]
 7906 01b0 9100     		lsls	r1, r2, #2
 7907 01b2 7A68     		ldr	r2, [r7, #4]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 220


 7908 01b4 5268     		ldr	r2, [r2, #4]
 7909 01b6 0B43     		orrs	r3, r3, r1
 7910 01b8 1360     		str	r3, [r2]
3576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Trigger memory elements number */
3578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     MODIFY_REG(hfdcan->ttcan->TTTMC, FDCAN_TTTMC_TME, (pTTParams->TriggerMemoryNbr << FDCAN_TTTMC_T
 7911              		.loc 1 3578 5
 7912 01ba 7B68     		ldr	r3, [r7, #4]
 7913 01bc 5B68     		ldr	r3, [r3, #4]
 7914 01be 1B68     		ldr	r3, [r3]
 7915 01c0 23F4FE01 		bic	r1, r3, #8323072
 7916 01c4 3B68     		ldr	r3, [r7]
 7917 01c6 1B6C     		ldr	r3, [r3, #64]
 7918 01c8 1A04     		lsls	r2, r3, #16
 7919 01ca 7B68     		ldr	r3, [r7, #4]
 7920 01cc 5B68     		ldr	r3, [r3, #4]
 7921 01ce 0A43     		orrs	r2, r2, r1
 7922 01d0 1A60     		str	r2, [r3]
3579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Recalculate End Address */
3581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->msgRam.TTMemorySA = hfdcan->msgRam.EndAddress;
 7923              		.loc 1 3581 47
 7924 01d2 7B68     		ldr	r3, [r7, #4]
 7925 01d4 D3F89020 		ldr	r2, [r3, #144]
 7926              		.loc 1 3581 31
 7927 01d8 7B68     		ldr	r3, [r7, #4]
 7928 01da C3F88C20 		str	r2, [r3, #140]
3582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->msgRam.EndAddress = hfdcan->msgRam.TTMemorySA + (pTTParams->TriggerMemoryNbr * 2U * 4U)
 7929              		.loc 1 3582 47
 7930 01de 7B68     		ldr	r3, [r7, #4]
 7931 01e0 D3F88C20 		ldr	r2, [r3, #140]
 7932              		.loc 1 3582 71
 7933 01e4 3B68     		ldr	r3, [r7]
 7934 01e6 1B6C     		ldr	r3, [r3, #64]
 7935              		.loc 1 3582 95
 7936 01e8 DB00     		lsls	r3, r3, #3
 7937              		.loc 1 3582 59
 7938 01ea 1A44     		add	r2, r2, r3
 7939              		.loc 1 3582 31
 7940 01ec 7B68     		ldr	r3, [r7, #4]
 7941 01ee C3F89020 		str	r2, [r3, #144]
3583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (hfdcan->msgRam.EndAddress > FDCAN_MESSAGE_RAM_END_ADDRESS) /* Last address of the Message R
 7942              		.loc 1 3584 23
 7943 01f2 7B68     		ldr	r3, [r7, #4]
 7944 01f4 D3F89030 		ldr	r3, [r3, #144]
 7945              		.loc 1 3584 8
 7946 01f8 1C4A     		ldr	r2, .L425+24
 7947 01fa 9342     		cmp	r3, r2
 7948 01fc 09D9     		bls	.L422
3585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code.
3587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****          Message RAM overflow */
3588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_PARAM;
 7949              		.loc 1 3588 25
 7950 01fe 7B68     		ldr	r3, [r7, #4]
 7951 0200 D3F89C30 		ldr	r3, [r3, #156]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 221


 7952 0204 43F02002 		orr	r2, r3, #32
 7953 0208 7B68     		ldr	r3, [r7, #4]
 7954 020a C3F89C20 		str	r2, [r3, #156]
3589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 7955              		.loc 1 3590 14
 7956 020e 0123     		movs	r3, #1
 7957 0210 1BE0     		b	.L416
 7958              	.L422:
3591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else
3593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Flush the allocated Message RAM area */
3595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       for (RAMcounter = hfdcan->msgRam.TTMemorySA; RAMcounter < hfdcan->msgRam.EndAddress; RAMcount
 7959              		.loc 1 3595 23
 7960 0212 7B68     		ldr	r3, [r7, #4]
 7961 0214 D3F88C30 		ldr	r3, [r3, #140]
 7962 0218 7B61     		str	r3, [r7, #20]
 7963              		.loc 1 3595 7
 7964 021a 05E0     		b	.L423
 7965              	.L424:
3596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
3597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         *(uint32_t *)(RAMcounter) = 0x00000000;
 7966              		.loc 1 3597 10 discriminator 3
 7967 021c 7B69     		ldr	r3, [r7, #20]
 7968              		.loc 1 3597 35 discriminator 3
 7969 021e 0022     		movs	r2, #0
 7970 0220 1A60     		str	r2, [r3]
3595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 7971              		.loc 1 3595 103 discriminator 3
 7972 0222 7B69     		ldr	r3, [r7, #20]
 7973 0224 0433     		adds	r3, r3, #4
 7974 0226 7B61     		str	r3, [r7, #20]
 7975              	.L423:
3595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 7976              		.loc 1 3595 79 discriminator 1
 7977 0228 7B68     		ldr	r3, [r7, #4]
 7978 022a D3F89030 		ldr	r3, [r3, #144]
3595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 7979              		.loc 1 3595 7 discriminator 1
 7980 022e 7A69     		ldr	r2, [r7, #20]
 7981 0230 9A42     		cmp	r2, r3
 7982 0232 F3D3     		bcc	.L424
3598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
3599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
3602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 7983              		.loc 1 3602 12
 7984 0234 0023     		movs	r3, #0
 7985 0236 08E0     		b	.L416
 7986              	.L414:
3603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
3605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
3607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 222


 7987              		.loc 1 3607 23
 7988 0238 7B68     		ldr	r3, [r7, #4]
 7989 023a D3F89C30 		ldr	r3, [r3, #156]
 7990 023e 43F00402 		orr	r2, r3, #4
 7991 0242 7B68     		ldr	r3, [r7, #4]
 7992 0244 C3F89C20 		str	r2, [r3, #156]
3608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 7993              		.loc 1 3609 12
 7994 0248 0123     		movs	r3, #1
 7995              	.L416:
3610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 7996              		.loc 1 3611 1
 7997 024a 1846     		mov	r0, r3
 7998 024c 1837     		adds	r7, r7, #24
 7999              	.LCFI447:
 8000              		.cfi_def_cfa_offset 8
 8001 024e BD46     		mov	sp, r7
 8002              	.LCFI448:
 8003              		.cfi_def_cfa_register 13
 8004              		@ sp needed
 8005 0250 80BD     		pop	{r7, pc}
 8006              	.L426:
 8007 0252 00BF     		.align	2
 8008              	.L425:
 8009 0254 0C80FFFF 		.word	-32756
 8010 0258 F7FF00FB 		.word	-83820553
 8011 025c FF7FFFFC 		.word	-50364417
 8012 0260 FFF000F0 		.word	-268373761
 8013 0264 0054FFBF 		.word	-1073785856
 8014 0268 0300FFFF 		.word	-65533
 8015 026c FCD30040 		.word	1073796092
 8016              		.cfi_endproc
 8017              	.LFE408:
 8019              		.section	.text.HAL_FDCAN_TT_ConfigReferenceMessage,"ax",%progbits
 8020              		.align	1
 8021              		.global	HAL_FDCAN_TT_ConfigReferenceMessage
 8022              		.syntax unified
 8023              		.thumb
 8024              		.thumb_func
 8026              	HAL_FDCAN_TT_ConfigReferenceMessage:
 8027              	.LFB409:
3612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
3614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Configure the reference message.
3615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
3616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
3617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  IdType Identifier Type.
3618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be a value of @arg FDCAN_id_type.
3619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  Identifier Reference Identifier.
3620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter must be a number between:
3621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           - 0 and 0x7FF, if IdType is FDCAN_STANDARD_ID
3622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           - 0 and 0x1FFFFFFF, if IdType is FDCAN_EXTENDED_ID
3623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  Payload Enable or disable the additional payload.
3624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be a value of @arg FDCAN_TT_Reference_Message_Payload.
3625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter is ignored in case of time slaves.
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 223


3626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         If this parameter is set to FDCAN_TT_REF_MESSAGE_ADD_PAYLOAD, the
3627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         following elements are taken from Tx Buffer 0:
3628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *          - MessageMarker
3629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *          - TxEventFifoControl
3630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *          - DataLength
3631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *          - Data Bytes (payload):
3632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *             - bytes 2-8, for Level 1
3633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *             - bytes 5-8, for Level 0 and Level 2
3634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
3635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
3636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_TT_ConfigReferenceMessage(FDCAN_HandleTypeDef *hfdcan, uint32_t IdType,
3637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 8028              		.loc 1 3637 1
 8029              		.cfi_startproc
 8030              		@ args = 0, pretend = 0, frame = 16
 8031              		@ frame_needed = 1, uses_anonymous_args = 0
 8032              		@ link register save eliminated.
 8033 0000 80B4     		push	{r7}
 8034              	.LCFI449:
 8035              		.cfi_def_cfa_offset 4
 8036              		.cfi_offset 7, -4
 8037 0002 85B0     		sub	sp, sp, #20
 8038              	.LCFI450:
 8039              		.cfi_def_cfa_offset 24
 8040 0004 00AF     		add	r7, sp, #0
 8041              	.LCFI451:
 8042              		.cfi_def_cfa_register 7
 8043 0006 F860     		str	r0, [r7, #12]
 8044 0008 B960     		str	r1, [r7, #8]
 8045 000a 7A60     		str	r2, [r7, #4]
 8046 000c 3B60     		str	r3, [r7]
3638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
3639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_INSTANCE(hfdcan->Instance));
3640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_ID_TYPE(IdType));
3641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (IdType == FDCAN_STANDARD_ID)
3642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_MAX_VALUE(Identifier, 0x7FFU));
3644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else /* IdType == FDCAN_EXTENDED_ID */
3646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_MAX_VALUE(Identifier, 0x1FFFFFFFU));
3648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_REFERENCE_MESSAGE_PAYLOAD(Payload));
3650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 8047              		.loc 1 3651 13
 8048 000e FB68     		ldr	r3, [r7, #12]
 8049 0010 93F89830 		ldrb	r3, [r3, #152]
 8050 0014 DBB2     		uxtb	r3, r3
 8051              		.loc 1 3651 6
 8052 0016 012B     		cmp	r3, #1
 8053 0018 23D1     		bne	.L428
3652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Configure reference message identifier type, identifier and payload */
3654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (IdType == FDCAN_EXTENDED_ID)
 8054              		.loc 1 3654 8
 8055 001a BB68     		ldr	r3, [r7, #8]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 224


 8056 001c B3F1804F 		cmp	r3, #1073741824
 8057 0020 0ED1     		bne	.L429
3655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       MODIFY_REG(hfdcan->ttcan->TTRMC, (FDCAN_TTRMC_RID | FDCAN_TTRMC_XTD | FDCAN_TTRMC_RMPS), (Pay
 8058              		.loc 1 3656 7
 8059 0022 FB68     		ldr	r3, [r7, #12]
 8060 0024 5B68     		ldr	r3, [r3, #4]
 8061 0026 5B68     		ldr	r3, [r3, #4]
 8062 0028 03F00051 		and	r1, r3, #536870912
 8063 002c 3A68     		ldr	r2, [r7]
 8064 002e BB68     		ldr	r3, [r7, #8]
 8065 0030 1A43     		orrs	r2, r2, r3
 8066 0032 7B68     		ldr	r3, [r7, #4]
 8067 0034 1A43     		orrs	r2, r2, r3
 8068 0036 FB68     		ldr	r3, [r7, #12]
 8069 0038 5B68     		ldr	r3, [r3, #4]
 8070 003a 0A43     		orrs	r2, r2, r1
 8071 003c 5A60     		str	r2, [r3, #4]
 8072 003e 0EE0     		b	.L430
 8073              	.L429:
3657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else /* IdType == FDCAN_STANDARD_ID */
3659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       MODIFY_REG(hfdcan->ttcan->TTRMC, (FDCAN_TTRMC_RID | FDCAN_TTRMC_XTD | FDCAN_TTRMC_RMPS), (Pay
 8074              		.loc 1 3660 7
 8075 0040 FB68     		ldr	r3, [r7, #12]
 8076 0042 5B68     		ldr	r3, [r3, #4]
 8077 0044 5B68     		ldr	r3, [r3, #4]
 8078 0046 03F00051 		and	r1, r3, #536870912
 8079 004a 3A68     		ldr	r2, [r7]
 8080 004c BB68     		ldr	r3, [r7, #8]
 8081 004e 1A43     		orrs	r2, r2, r3
 8082 0050 7B68     		ldr	r3, [r7, #4]
 8083 0052 9B04     		lsls	r3, r3, #18
 8084 0054 1A43     		orrs	r2, r2, r3
 8085 0056 FB68     		ldr	r3, [r7, #12]
 8086 0058 5B68     		ldr	r3, [r3, #4]
 8087 005a 0A43     		orrs	r2, r2, r1
 8088 005c 5A60     		str	r2, [r3, #4]
 8089              	.L430:
3661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
3664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 8090              		.loc 1 3664 12
 8091 005e 0023     		movs	r3, #0
 8092 0060 08E0     		b	.L431
 8093              	.L428:
3665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
3667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
3669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
 8094              		.loc 1 3669 23
 8095 0062 FB68     		ldr	r3, [r7, #12]
 8096 0064 D3F89C30 		ldr	r3, [r3, #156]
 8097 0068 43F00402 		orr	r2, r3, #4
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 225


 8098 006c FB68     		ldr	r3, [r7, #12]
 8099 006e C3F89C20 		str	r2, [r3, #156]
3670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 8100              		.loc 1 3671 12
 8101 0072 0123     		movs	r3, #1
 8102              	.L431:
3672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 8103              		.loc 1 3673 1
 8104 0074 1846     		mov	r0, r3
 8105 0076 1437     		adds	r7, r7, #20
 8106              	.LCFI452:
 8107              		.cfi_def_cfa_offset 4
 8108 0078 BD46     		mov	sp, r7
 8109              	.LCFI453:
 8110              		.cfi_def_cfa_register 13
 8111              		@ sp needed
 8112 007a 5DF8047B 		ldr	r7, [sp], #4
 8113              	.LCFI454:
 8114              		.cfi_restore 7
 8115              		.cfi_def_cfa_offset 0
 8116 007e 7047     		bx	lr
 8117              		.cfi_endproc
 8118              	.LFE409:
 8120              		.section	.text.HAL_FDCAN_TT_ConfigTrigger,"ax",%progbits
 8121              		.align	1
 8122              		.global	HAL_FDCAN_TT_ConfigTrigger
 8123              		.syntax unified
 8124              		.thumb
 8125              		.thumb_func
 8127              	HAL_FDCAN_TT_ConfigTrigger:
 8128              	.LFB410:
3674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
3676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Configure the FDCAN trigger according to the specified
3677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         parameters in the FDCAN_TriggerTypeDef structure.
3678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
3679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
3680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  sTriggerConfig pointer to an FDCAN_TriggerTypeDef structure that
3681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         contains the trigger configuration information
3682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
3683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
3684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_TT_ConfigTrigger(FDCAN_HandleTypeDef *hfdcan, FDCAN_TriggerTypeDef *sTr
3685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 8129              		.loc 1 3685 1
 8130              		.cfi_startproc
 8131              		@ args = 0, pretend = 0, frame = 40
 8132              		@ frame_needed = 1, uses_anonymous_args = 0
 8133              		@ link register save eliminated.
 8134 0000 80B4     		push	{r7}
 8135              	.LCFI455:
 8136              		.cfi_def_cfa_offset 4
 8137              		.cfi_offset 7, -4
 8138 0002 8BB0     		sub	sp, sp, #44
 8139              	.LCFI456:
 8140              		.cfi_def_cfa_offset 48
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 226


 8141 0004 00AF     		add	r7, sp, #0
 8142              	.LCFI457:
 8143              		.cfi_def_cfa_register 7
 8144 0006 7860     		str	r0, [r7, #4]
 8145 0008 3960     		str	r1, [r7]
3686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t CycleCode;
3687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t MessageNumber;
3688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t TriggerElementW1;
3689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t TriggerElementW2;
3690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t *TriggerAddress;
3691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
3693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_INSTANCE(hfdcan->Instance));
3694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_MAX_VALUE(sTriggerConfig->TriggerIndex, 63U));
3695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_MAX_VALUE(sTriggerConfig->TimeMark, 0xFFFFU));
3696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_REPEAT_FACTOR(sTriggerConfig->RepeatFactor));
3697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (sTriggerConfig->RepeatFactor != FDCAN_TT_REPEAT_EVERY_CYCLE)
3698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_MAX_VALUE(sTriggerConfig->StartCycle, (sTriggerConfig->RepeatFactor - 1U)
3700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_TM_EVENT_INTERNAL(sTriggerConfig->TmEventInt));
3702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_TM_EVENT_EXTERNAL(sTriggerConfig->TmEventExt));
3703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_TRIGGER_TYPE(sTriggerConfig->TriggerType));
3704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_ID_TYPE(sTriggerConfig->FilterType));
3705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((sTriggerConfig->TriggerType == FDCAN_TT_TX_TRIGGER_SINGLE) ||
 8146              		.loc 1 3705 22
 8147 000a 3B68     		ldr	r3, [r7]
 8148 000c 9B69     		ldr	r3, [r3, #24]
 8149              		.loc 1 3705 6
 8150 000e 022B     		cmp	r3, #2
 8151 0010 06D0     		beq	.L433
3706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (sTriggerConfig->TriggerType == FDCAN_TT_TX_TRIGGER_CONTINUOUS) ||
 8152              		.loc 1 3706 22 discriminator 1
 8153 0012 3B68     		ldr	r3, [r7]
 8154 0014 9B69     		ldr	r3, [r3, #24]
3705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (sTriggerConfig->TriggerType == FDCAN_TT_TX_TRIGGER_CONTINUOUS) ||
 8155              		.loc 1 3705 67 discriminator 1
 8156 0016 032B     		cmp	r3, #3
 8157 0018 02D0     		beq	.L433
3707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (sTriggerConfig->TriggerType == FDCAN_TT_TX_TRIGGER_ARBITRATION) ||
 8158              		.loc 1 3707 22
 8159 001a 3B68     		ldr	r3, [r7]
 8160 001c 9B69     		ldr	r3, [r3, #24]
3706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (sTriggerConfig->TriggerType == FDCAN_TT_TX_TRIGGER_CONTINUOUS) ||
 8161              		.loc 1 3706 71
 8162 001e 042B     		cmp	r3, #4
 8163              	.L433:
3708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (sTriggerConfig->TriggerType == FDCAN_TT_TX_TRIGGER_MERGED))
3709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_TX_LOCATION(sTriggerConfig->TxBufferIndex));
3711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (sTriggerConfig->TriggerType == FDCAN_TT_RX_TRIGGER)
 8164              		.loc 1 3712 21
 8165 0020 3B68     		ldr	r3, [r7]
 8166 0022 9B69     		ldr	r3, [r3, #24]
 8167              		.loc 1 3712 6
 8168 0024 082B     		cmp	r3, #8
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 227


3713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (sTriggerConfig->FilterType == FDCAN_STANDARD_ID)
3715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       assert_param(IS_FDCAN_MAX_VALUE(sTriggerConfig->FilterIndex, 63U));
3717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else /* sTriggerConfig->FilterType == FDCAN_EXTENDED_ID */
3719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       assert_param(IS_FDCAN_MAX_VALUE(sTriggerConfig->FilterIndex, 127U));
3721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->State == HAL_FDCAN_STATE_READY)
 8169              		.loc 1 3724 13
 8170 0026 7B68     		ldr	r3, [r7, #4]
 8171 0028 93F89830 		ldrb	r3, [r3, #152]
 8172 002c DBB2     		uxtb	r3, r3
 8173              		.loc 1 3724 6
 8174 002e 012B     		cmp	r3, #1
 8175 0030 64D1     		bne	.L435
3725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Calculate cycle code */
3727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (sTriggerConfig->RepeatFactor == FDCAN_TT_REPEAT_EVERY_CYCLE)
 8176              		.loc 1 3727 23
 8177 0032 3B68     		ldr	r3, [r7]
 8178 0034 9B68     		ldr	r3, [r3, #8]
 8179              		.loc 1 3727 8
 8180 0036 002B     		cmp	r3, #0
 8181 0038 02D1     		bne	.L436
3728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       CycleCode = FDCAN_TT_REPEAT_EVERY_CYCLE;
 8182              		.loc 1 3729 17
 8183 003a 0023     		movs	r3, #0
 8184 003c 7B62     		str	r3, [r7, #36]
 8185 003e 05E0     		b	.L437
 8186              	.L436:
3730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else /* sTriggerConfig->RepeatFactor != FDCAN_TT_REPEAT_EVERY_CYCLE */
3732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       CycleCode = sTriggerConfig->RepeatFactor + sTriggerConfig->StartCycle;
 8187              		.loc 1 3733 33
 8188 0040 3B68     		ldr	r3, [r7]
 8189 0042 9A68     		ldr	r2, [r3, #8]
 8190              		.loc 1 3733 64
 8191 0044 3B68     		ldr	r3, [r7]
 8192 0046 DB68     		ldr	r3, [r3, #12]
 8193              		.loc 1 3733 17
 8194 0048 1344     		add	r3, r3, r2
 8195 004a 7B62     		str	r3, [r7, #36]
 8196              	.L437:
3734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Build first word of trigger element */
3737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     TriggerElementW1 = ((sTriggerConfig->TimeMark << 16) | \
 8197              		.loc 1 3737 40
 8198 004c 3B68     		ldr	r3, [r7]
 8199 004e 5B68     		ldr	r3, [r3, #4]
 8200              		.loc 1 3737 51
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 228


 8201 0050 1A04     		lsls	r2, r3, #16
3738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                         (CycleCode << 8)                 | \
 8202              		.loc 1 3738 36
 8203 0052 7B6A     		ldr	r3, [r7, #36]
 8204 0054 1B02     		lsls	r3, r3, #8
3737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                         (CycleCode << 8)                 | \
 8205              		.loc 1 3737 58
 8206 0056 1A43     		orrs	r2, r2, r3
3739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                         sTriggerConfig->TmEventInt       | \
 8207              		.loc 1 3739 39
 8208 0058 3B68     		ldr	r3, [r7]
 8209 005a 1B69     		ldr	r3, [r3, #16]
3738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                         (CycleCode << 8)                 | \
 8210              		.loc 1 3738 58
 8211 005c 1A43     		orrs	r2, r2, r3
3740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                         sTriggerConfig->TmEventExt       | \
 8212              		.loc 1 3740 39
 8213 005e 3B68     		ldr	r3, [r7]
 8214 0060 5B69     		ldr	r3, [r3, #20]
3739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                         sTriggerConfig->TmEventInt       | \
 8215              		.loc 1 3739 58
 8216 0062 1A43     		orrs	r2, r2, r3
3741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                         sTriggerConfig->TriggerType);
 8217              		.loc 1 3741 39
 8218 0064 3B68     		ldr	r3, [r7]
 8219 0066 9B69     		ldr	r3, [r3, #24]
3737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                         (CycleCode << 8)                 | \
 8220              		.loc 1 3737 22
 8221 0068 1343     		orrs	r3, r3, r2
 8222 006a FB61     		str	r3, [r7, #28]
3742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Select message number depending on trigger type (transmission or reception) */
3744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (sTriggerConfig->TriggerType == FDCAN_TT_RX_TRIGGER)
 8223              		.loc 1 3744 23
 8224 006c 3B68     		ldr	r3, [r7]
 8225 006e 9B69     		ldr	r3, [r3, #24]
 8226              		.loc 1 3744 8
 8227 0070 082B     		cmp	r3, #8
 8228 0072 03D1     		bne	.L438
3745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       MessageNumber = sTriggerConfig->FilterIndex;
 8229              		.loc 1 3746 21
 8230 0074 3B68     		ldr	r3, [r7]
 8231 0076 5B6A     		ldr	r3, [r3, #36]
 8232 0078 3B62     		str	r3, [r7, #32]
 8233 007a 25E0     		b	.L439
 8234              	.L438:
3747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else if ((sTriggerConfig->TriggerType == FDCAN_TT_TX_TRIGGER_SINGLE) ||
 8235              		.loc 1 3748 29
 8236 007c 3B68     		ldr	r3, [r7]
 8237 007e 9B69     		ldr	r3, [r3, #24]
 8238              		.loc 1 3748 13
 8239 0080 022B     		cmp	r3, #2
 8240 0082 0BD0     		beq	.L440
3749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****              (sTriggerConfig->TriggerType == FDCAN_TT_TX_TRIGGER_CONTINUOUS) ||
 8241              		.loc 1 3749 29 discriminator 1
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 229


 8242 0084 3B68     		ldr	r3, [r7]
 8243 0086 9B69     		ldr	r3, [r3, #24]
3748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****              (sTriggerConfig->TriggerType == FDCAN_TT_TX_TRIGGER_CONTINUOUS) ||
 8244              		.loc 1 3748 74 discriminator 1
 8245 0088 032B     		cmp	r3, #3
 8246 008a 07D0     		beq	.L440
3750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****              (sTriggerConfig->TriggerType == FDCAN_TT_TX_TRIGGER_ARBITRATION) ||
 8247              		.loc 1 3750 29
 8248 008c 3B68     		ldr	r3, [r7]
 8249 008e 9B69     		ldr	r3, [r3, #24]
3749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****              (sTriggerConfig->TriggerType == FDCAN_TT_TX_TRIGGER_CONTINUOUS) ||
 8250              		.loc 1 3749 78
 8251 0090 042B     		cmp	r3, #4
 8252 0092 03D0     		beq	.L440
3751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****              (sTriggerConfig->TriggerType == FDCAN_TT_TX_TRIGGER_MERGED))
 8253              		.loc 1 3751 29
 8254 0094 3B68     		ldr	r3, [r7]
 8255 0096 9B69     		ldr	r3, [r3, #24]
3750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****              (sTriggerConfig->TriggerType == FDCAN_TT_TX_TRIGGER_ARBITRATION) ||
 8256              		.loc 1 3750 79
 8257 0098 052B     		cmp	r3, #5
 8258 009a 13D1     		bne	.L441
 8259              	.L440:
3752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       MessageNumber = POSITION_VAL(sTriggerConfig->TxBufferIndex);
 8260              		.loc 1 3753 23
 8261 009c 3B68     		ldr	r3, [r7]
 8262 009e 1B6A     		ldr	r3, [r3, #32]
 8263 00a0 FB60     		str	r3, [r7, #12]
 8264              	.LBB22:
 8265              	.LBB23:
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 8266              		.loc 2 1055 4
 8267 00a2 FB68     		ldr	r3, [r7, #12]
 8268              		.syntax unified
 8269              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8270 00a4 93FAA3F3 		rbit r3, r3
 8271              	@ 0 "" 2
 8272              		.thumb
 8273              		.syntax unified
 8274 00a8 BB60     		str	r3, [r7, #8]
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8275              		.loc 2 1068 10
 8276 00aa BB68     		ldr	r3, [r7, #8]
 8277 00ac 3B61     		str	r3, [r7, #16]
 8278              	.LBE23:
 8279              	.LBE22:
 8280              	.LBB24:
 8281              	.LBB25:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 8282              		.loc 2 1089 6
 8283 00ae 3B69     		ldr	r3, [r7, #16]
 8284 00b0 002B     		cmp	r3, #0
 8285 00b2 01D1     		bne	.L443
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 8286              		.loc 2 1091 12
 8287 00b4 2023     		movs	r3, #32
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 230


 8288 00b6 03E0     		b	.L444
 8289              	.L443:
 8290              		.loc 2 1093 10
 8291 00b8 3B69     		ldr	r3, [r7, #16]
 8292 00ba B3FA83F3 		clz	r3, r3
 8293 00be DBB2     		uxtb	r3, r3
 8294              	.L444:
 8295              	.LBE25:
 8296              	.LBE24:
 8297              		.loc 1 3753 21
 8298 00c0 3B62     		str	r3, [r7, #32]
 8299 00c2 01E0     		b	.L439
 8300              	.L441:
3754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else
3756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       MessageNumber = 0U;
 8301              		.loc 1 3757 21
 8302 00c4 0023     		movs	r3, #0
 8303 00c6 3B62     		str	r3, [r7, #32]
 8304              	.L439:
3758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Build second word of trigger element */
3761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     TriggerElementW2 = ((sTriggerConfig->FilterType >> 7) | (MessageNumber << 16));
 8305              		.loc 1 3761 40
 8306 00c8 3B68     		ldr	r3, [r7]
 8307 00ca DB69     		ldr	r3, [r3, #28]
 8308              		.loc 1 3761 53
 8309 00cc DA09     		lsrs	r2, r3, #7
 8310              		.loc 1 3761 76
 8311 00ce 3B6A     		ldr	r3, [r7, #32]
 8312 00d0 1B04     		lsls	r3, r3, #16
 8313              		.loc 1 3761 22
 8314 00d2 1343     		orrs	r3, r3, r2
 8315 00d4 BB61     		str	r3, [r7, #24]
3762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Calculate trigger address */
3764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     TriggerAddress = (uint32_t *)(hfdcan->msgRam.TTMemorySA + (sTriggerConfig->TriggerIndex * 4U * 
 8316              		.loc 1 3764 49
 8317 00d6 7B68     		ldr	r3, [r7, #4]
 8318 00d8 D3F88C20 		ldr	r2, [r3, #140]
 8319              		.loc 1 3764 78
 8320 00dc 3B68     		ldr	r3, [r7]
 8321 00de 1B68     		ldr	r3, [r3]
 8322              		.loc 1 3764 98
 8323 00e0 DB00     		lsls	r3, r3, #3
 8324              		.loc 1 3764 61
 8325 00e2 1344     		add	r3, r3, r2
 8326              		.loc 1 3764 20
 8327 00e4 7B61     		str	r3, [r7, #20]
3765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Write trigger element to the message RAM */
3767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     *TriggerAddress = TriggerElementW1;
 8328              		.loc 1 3767 21
 8329 00e6 7B69     		ldr	r3, [r7, #20]
 8330 00e8 FA69     		ldr	r2, [r7, #28]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 231


 8331 00ea 1A60     		str	r2, [r3]
3768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     TriggerAddress++;
 8332              		.loc 1 3768 19
 8333 00ec 7B69     		ldr	r3, [r7, #20]
 8334 00ee 0433     		adds	r3, r3, #4
 8335 00f0 7B61     		str	r3, [r7, #20]
3769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     *TriggerAddress = TriggerElementW2;
 8336              		.loc 1 3769 21
 8337 00f2 7B69     		ldr	r3, [r7, #20]
 8338 00f4 BA69     		ldr	r2, [r7, #24]
 8339 00f6 1A60     		str	r2, [r3]
3770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
3772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 8340              		.loc 1 3772 12
 8341 00f8 0023     		movs	r3, #0
 8342 00fa 08E0     		b	.L445
 8343              	.L435:
3773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
3775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
3777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_READY;
 8344              		.loc 1 3777 23
 8345 00fc 7B68     		ldr	r3, [r7, #4]
 8346 00fe D3F89C30 		ldr	r3, [r3, #156]
 8347 0102 43F00402 		orr	r2, r3, #4
 8348 0106 7B68     		ldr	r3, [r7, #4]
 8349 0108 C3F89C20 		str	r2, [r3, #156]
3778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 8350              		.loc 1 3779 12
 8351 010c 0123     		movs	r3, #1
 8352              	.L445:
3780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 8353              		.loc 1 3781 1
 8354 010e 1846     		mov	r0, r3
 8355 0110 2C37     		adds	r7, r7, #44
 8356              	.LCFI458:
 8357              		.cfi_def_cfa_offset 4
 8358 0112 BD46     		mov	sp, r7
 8359              	.LCFI459:
 8360              		.cfi_def_cfa_register 13
 8361              		@ sp needed
 8362 0114 5DF8047B 		ldr	r7, [sp], #4
 8363              	.LCFI460:
 8364              		.cfi_restore 7
 8365              		.cfi_def_cfa_offset 0
 8366 0118 7047     		bx	lr
 8367              		.cfi_endproc
 8368              	.LFE410:
 8370              		.section	.text.HAL_FDCAN_TT_SetGlobalTime,"ax",%progbits
 8371              		.align	1
 8372              		.global	HAL_FDCAN_TT_SetGlobalTime
 8373              		.syntax unified
 8374              		.thumb
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 232


 8375              		.thumb_func
 8377              	HAL_FDCAN_TT_SetGlobalTime:
 8378              	.LFB411:
3782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
3784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Schedule global time adjustment for the next reference message.
3785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
3786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
3787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  TimePreset time preset value.
3788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter must be a number between:
3789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           - 0x0000 and 0x7FFF, Next_Master_Ref_Mark = Current_Master_Ref_Mark + TimePreset
3790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           or
3791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           - 0x8001 and 0xFFFF, Next_Master_Ref_Mark = Current_Master_Ref_Mark - (0x10000 - Time
3792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
3793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
3794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_TT_SetGlobalTime(FDCAN_HandleTypeDef *hfdcan, uint32_t TimePreset)
3795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 8379              		.loc 1 3795 1
 8380              		.cfi_startproc
 8381              		@ args = 0, pretend = 0, frame = 16
 8382              		@ frame_needed = 1, uses_anonymous_args = 0
 8383              		@ link register save eliminated.
 8384 0000 80B4     		push	{r7}
 8385              	.LCFI461:
 8386              		.cfi_def_cfa_offset 4
 8387              		.cfi_offset 7, -4
 8388 0002 85B0     		sub	sp, sp, #20
 8389              	.LCFI462:
 8390              		.cfi_def_cfa_offset 24
 8391 0004 00AF     		add	r7, sp, #0
 8392              	.LCFI463:
 8393              		.cfi_def_cfa_register 7
 8394 0006 7860     		str	r0, [r7, #4]
 8395 0008 3960     		str	r1, [r7]
3796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t Counter = 0U;
 8396              		.loc 1 3796 12
 8397 000a 0023     		movs	r3, #0
 8398 000c FB60     		str	r3, [r7, #12]
3797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 8399              		.loc 1 3797 26
 8400 000e 7B68     		ldr	r3, [r7, #4]
 8401 0010 93F89830 		ldrb	r3, [r3, #152]
 8402 0014 FB72     		strb	r3, [r7, #11]
3798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
3800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_INSTANCE(hfdcan->Instance));
3801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_TIME_PRESET(TimePreset));
3802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 8403              		.loc 1 3803 6
 8404 0016 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 8405 0018 012B     		cmp	r3, #1
 8406 001a 02D0     		beq	.L447
 8407              		.loc 1 3803 40 discriminator 1
 8408 001c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 8409 001e 022B     		cmp	r3, #2
 8410 0020 53D1     		bne	.L448
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 233


 8411              	.L447:
3804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Check that the external clock synchronization is enabled */
3806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->ttcan->TTOCF & FDCAN_TTOCF_EECS) != FDCAN_TTOCF_EECS)
 8412              		.loc 1 3806 16
 8413 0022 7B68     		ldr	r3, [r7, #4]
 8414 0024 5B68     		ldr	r3, [r3, #4]
 8415              		.loc 1 3806 23
 8416 0026 9B68     		ldr	r3, [r3, #8]
 8417              		.loc 1 3806 31
 8418 0028 03F40043 		and	r3, r3, #32768
 8419              		.loc 1 3806 8
 8420 002c B3F5004F 		cmp	r3, #32768
 8421 0030 09D0     		beq	.L449
3807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code */
3809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_SUPPORTED;
 8422              		.loc 1 3809 25
 8423 0032 7B68     		ldr	r3, [r7, #4]
 8424 0034 D3F89C30 		ldr	r3, [r3, #156]
 8425 0038 43F01002 		orr	r2, r3, #16
 8426 003c 7B68     		ldr	r3, [r7, #4]
 8427 003e C3F89C20 		str	r2, [r3, #156]
3810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 8428              		.loc 1 3811 14
 8429 0042 0123     		movs	r3, #1
 8430 0044 4AE0     		b	.L450
 8431              	.L449:
3812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Check that no global time preset is pending */
3815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->ttcan->TTOST & FDCAN_TTOST_WGTD) == FDCAN_TTOST_WGTD)
 8432              		.loc 1 3815 16
 8433 0046 7B68     		ldr	r3, [r7, #4]
 8434 0048 5B68     		ldr	r3, [r3, #4]
 8435              		.loc 1 3815 23
 8436 004a DB6A     		ldr	r3, [r3, #44]
 8437              		.loc 1 3815 31
 8438 004c 03F48003 		and	r3, r3, #4194304
 8439              		.loc 1 3815 8
 8440 0050 B3F5800F 		cmp	r3, #4194304
 8441 0054 09D1     		bne	.L451
3816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code */
3818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_PENDING;
 8442              		.loc 1 3818 25
 8443 0056 7B68     		ldr	r3, [r7, #4]
 8444 0058 D3F89C30 		ldr	r3, [r3, #156]
 8445 005c 43F04002 		orr	r2, r3, #64
 8446 0060 7B68     		ldr	r3, [r7, #4]
 8447 0062 C3F89C20 		str	r2, [r3, #156]
3819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 8448              		.loc 1 3820 14
 8449 0066 0123     		movs	r3, #1
 8450 0068 38E0     		b	.L450
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 234


 8451              	.L451:
3821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Configure time preset */
3824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     MODIFY_REG(hfdcan->ttcan->TTGTP, FDCAN_TTGTP_TP, (TimePreset << FDCAN_TTGTP_TP_Pos));
 8452              		.loc 1 3824 5
 8453 006a 7B68     		ldr	r3, [r7, #4]
 8454 006c 5B68     		ldr	r3, [r3, #4]
 8455 006e 9A69     		ldr	r2, [r3, #24]
 8456 0070 1D4B     		ldr	r3, .L455
 8457 0072 1340     		ands	r3, r3, r2
 8458 0074 7A68     		ldr	r2, [r7, #4]
 8459 0076 5268     		ldr	r2, [r2, #4]
 8460 0078 3968     		ldr	r1, [r7]
 8461 007a 0B43     		orrs	r3, r3, r1
 8462 007c 9361     		str	r3, [r2, #24]
3825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Wait until the LCKC bit into TTOCN register is reset */
3827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     while ((hfdcan->ttcan->TTOCN & FDCAN_TTOCN_LCKC) != 0U)
 8463              		.loc 1 3827 11
 8464 007e 13E0     		b	.L452
 8465              	.L454:
3828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Check for the Timeout */
3830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if (Counter > FDCAN_TIMEOUT_COUNT)
 8466              		.loc 1 3830 10
 8467 0080 FB68     		ldr	r3, [r7, #12]
 8468 0082 322B     		cmp	r3, #50
 8469 0084 0DD9     		bls	.L453
3831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
3832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Update error code */
3833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
 8470              		.loc 1 3833 27
 8471 0086 7B68     		ldr	r3, [r7, #4]
 8472 0088 D3F89C30 		ldr	r3, [r3, #156]
 8473 008c 43F00102 		orr	r2, r3, #1
 8474 0090 7B68     		ldr	r3, [r7, #4]
 8475 0092 C3F89C20 		str	r2, [r3, #156]
3834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Change FDCAN state */
3836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->State = HAL_FDCAN_STATE_ERROR;
 8476              		.loc 1 3836 23
 8477 0096 7B68     		ldr	r3, [r7, #4]
 8478 0098 0322     		movs	r2, #3
 8479 009a 83F89820 		strb	r2, [r3, #152]
3837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         return HAL_ERROR;
 8480              		.loc 1 3838 16
 8481 009e 0123     		movs	r3, #1
 8482 00a0 1CE0     		b	.L450
 8483              	.L453:
3839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
3840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Increment counter */
3842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       Counter++;
 8484              		.loc 1 3842 14
 8485 00a2 FB68     		ldr	r3, [r7, #12]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 235


 8486 00a4 0133     		adds	r3, r3, #1
 8487 00a6 FB60     		str	r3, [r7, #12]
 8488              	.L452:
3827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 8489              		.loc 1 3827 19
 8490 00a8 7B68     		ldr	r3, [r7, #4]
 8491 00aa 5B68     		ldr	r3, [r3, #4]
3827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 8492              		.loc 1 3827 26
 8493 00ac 5B69     		ldr	r3, [r3, #20]
3827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 8494              		.loc 1 3827 34
 8495 00ae 03F40043 		and	r3, r3, #32768
3827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 8496              		.loc 1 3827 11
 8497 00b2 002B     		cmp	r3, #0
 8498 00b4 E4D1     		bne	.L454
3843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Schedule time preset to take effect by the next reference message */
3846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     SET_BIT(hfdcan->ttcan->TTOCN, FDCAN_TTOCN_SGT);
 8499              		.loc 1 3846 5
 8500 00b6 7B68     		ldr	r3, [r7, #4]
 8501 00b8 5B68     		ldr	r3, [r3, #4]
 8502 00ba 5A69     		ldr	r2, [r3, #20]
 8503 00bc 7B68     		ldr	r3, [r7, #4]
 8504 00be 5B68     		ldr	r3, [r3, #4]
 8505 00c0 42F00102 		orr	r2, r2, #1
 8506 00c4 5A61     		str	r2, [r3, #20]
3847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
3849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 8507              		.loc 1 3849 12
 8508 00c6 0023     		movs	r3, #0
 8509 00c8 08E0     		b	.L450
 8510              	.L448:
3850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
3852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
3854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 8511              		.loc 1 3854 23
 8512 00ca 7B68     		ldr	r3, [r7, #4]
 8513 00cc D3F89C30 		ldr	r3, [r3, #156]
 8514 00d0 43F00202 		orr	r2, r3, #2
 8515 00d4 7B68     		ldr	r3, [r7, #4]
 8516 00d6 C3F89C20 		str	r2, [r3, #156]
3855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 8517              		.loc 1 3856 12
 8518 00da 0123     		movs	r3, #1
 8519              	.L450:
3857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 8520              		.loc 1 3858 1
 8521 00dc 1846     		mov	r0, r3
 8522 00de 1437     		adds	r7, r7, #20
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 236


 8523              	.LCFI464:
 8524              		.cfi_def_cfa_offset 4
 8525 00e0 BD46     		mov	sp, r7
 8526              	.LCFI465:
 8527              		.cfi_def_cfa_register 13
 8528              		@ sp needed
 8529 00e2 5DF8047B 		ldr	r7, [sp], #4
 8530              	.LCFI466:
 8531              		.cfi_restore 7
 8532              		.cfi_def_cfa_offset 0
 8533 00e6 7047     		bx	lr
 8534              	.L456:
 8535              		.align	2
 8536              	.L455:
 8537 00e8 0000FFFF 		.word	-65536
 8538              		.cfi_endproc
 8539              	.LFE411:
 8541              		.section	.text.HAL_FDCAN_TT_SetClockSynchronization,"ax",%progbits
 8542              		.align	1
 8543              		.global	HAL_FDCAN_TT_SetClockSynchronization
 8544              		.syntax unified
 8545              		.thumb
 8546              		.thumb_func
 8548              	HAL_FDCAN_TT_SetClockSynchronization:
 8549              	.LFB412:
3859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
3861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Schedule TUR numerator update for the next reference message.
3862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
3863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
3864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  NewTURNumerator new value of the TUR numerator.
3865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter must be a number between 0x10000 and 0x1FFFF.
3866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
3867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
3868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_TT_SetClockSynchronization(FDCAN_HandleTypeDef *hfdcan, uint32_t NewTUR
3869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 8550              		.loc 1 3869 1
 8551              		.cfi_startproc
 8552              		@ args = 0, pretend = 0, frame = 16
 8553              		@ frame_needed = 1, uses_anonymous_args = 0
 8554              		@ link register save eliminated.
 8555 0000 80B4     		push	{r7}
 8556              	.LCFI467:
 8557              		.cfi_def_cfa_offset 4
 8558              		.cfi_offset 7, -4
 8559 0002 85B0     		sub	sp, sp, #20
 8560              	.LCFI468:
 8561              		.cfi_def_cfa_offset 24
 8562 0004 00AF     		add	r7, sp, #0
 8563              	.LCFI469:
 8564              		.cfi_def_cfa_register 7
 8565 0006 7860     		str	r0, [r7, #4]
 8566 0008 3960     		str	r1, [r7]
3870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t Counter = 0U;
 8567              		.loc 1 3870 12
 8568 000a 0023     		movs	r3, #0
 8569 000c FB60     		str	r3, [r7, #12]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 237


3871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 8570              		.loc 1 3871 26
 8571 000e 7B68     		ldr	r3, [r7, #4]
 8572 0010 93F89830 		ldrb	r3, [r3, #152]
 8573 0014 FB72     		strb	r3, [r7, #11]
3872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
3874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_INSTANCE(hfdcan->Instance));
3875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_TUR_NUMERATOR(NewTURNumerator));
3876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 8574              		.loc 1 3877 6
 8575 0016 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 8576 0018 012B     		cmp	r3, #1
 8577 001a 02D0     		beq	.L458
 8578              		.loc 1 3877 40 discriminator 1
 8579 001c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 8580 001e 022B     		cmp	r3, #2
 8581 0020 55D1     		bne	.L459
 8582              	.L458:
3878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Check that the external clock synchronization is enabled */
3880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->ttcan->TTOCF & FDCAN_TTOCF_EECS) != FDCAN_TTOCF_EECS)
 8583              		.loc 1 3880 16
 8584 0022 7B68     		ldr	r3, [r7, #4]
 8585 0024 5B68     		ldr	r3, [r3, #4]
 8586              		.loc 1 3880 23
 8587 0026 9B68     		ldr	r3, [r3, #8]
 8588              		.loc 1 3880 31
 8589 0028 03F40043 		and	r3, r3, #32768
 8590              		.loc 1 3880 8
 8591 002c B3F5004F 		cmp	r3, #32768
 8592 0030 09D0     		beq	.L460
3881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code */
3883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_SUPPORTED;
 8593              		.loc 1 3883 25
 8594 0032 7B68     		ldr	r3, [r7, #4]
 8595 0034 D3F89C30 		ldr	r3, [r3, #156]
 8596 0038 43F01002 		orr	r2, r3, #16
 8597 003c 7B68     		ldr	r3, [r7, #4]
 8598 003e C3F89C20 		str	r2, [r3, #156]
3884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 8599              		.loc 1 3885 14
 8600 0042 0123     		movs	r3, #1
 8601 0044 4CE0     		b	.L461
 8602              	.L460:
3886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Check that no external clock synchronization is pending */
3889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->ttcan->TTOST & FDCAN_TTOST_WECS) == FDCAN_TTOST_WECS)
 8603              		.loc 1 3889 16
 8604 0046 7B68     		ldr	r3, [r7, #4]
 8605 0048 5B68     		ldr	r3, [r3, #4]
 8606              		.loc 1 3889 23
 8607 004a DB6A     		ldr	r3, [r3, #44]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 238


 8608              		.loc 1 3889 31
 8609 004c 03F08043 		and	r3, r3, #1073741824
 8610              		.loc 1 3889 8
 8611 0050 B3F1804F 		cmp	r3, #1073741824
 8612 0054 09D1     		bne	.L462
3890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code */
3892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_PENDING;
 8613              		.loc 1 3892 25
 8614 0056 7B68     		ldr	r3, [r7, #4]
 8615 0058 D3F89C30 		ldr	r3, [r3, #156]
 8616 005c 43F04002 		orr	r2, r3, #64
 8617 0060 7B68     		ldr	r3, [r7, #4]
 8618 0062 C3F89C20 		str	r2, [r3, #156]
3893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 8619              		.loc 1 3894 14
 8620 0066 0123     		movs	r3, #1
 8621 0068 3AE0     		b	.L461
 8622              	.L462:
3895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Configure new TUR numerator */
3898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     MODIFY_REG(hfdcan->ttcan->TURCF, FDCAN_TURCF_NCL, (NewTURNumerator - 0x10000U));
 8623              		.loc 1 3898 5
 8624 006a 7B68     		ldr	r3, [r7, #4]
 8625 006c 5B68     		ldr	r3, [r3, #4]
 8626 006e 1A69     		ldr	r2, [r3, #16]
 8627 0070 1E4B     		ldr	r3, .L466
 8628 0072 1340     		ands	r3, r3, r2
 8629 0074 3A68     		ldr	r2, [r7]
 8630 0076 A2F58031 		sub	r1, r2, #65536
 8631 007a 7A68     		ldr	r2, [r7, #4]
 8632 007c 5268     		ldr	r2, [r2, #4]
 8633 007e 0B43     		orrs	r3, r3, r1
 8634 0080 1361     		str	r3, [r2, #16]
3899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Wait until the LCKC bit into TTOCN register is reset */
3901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     while ((hfdcan->ttcan->TTOCN & FDCAN_TTOCN_LCKC) != 0U)
 8635              		.loc 1 3901 11
 8636 0082 13E0     		b	.L463
 8637              	.L465:
3902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Check for the Timeout */
3904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if (Counter > FDCAN_TIMEOUT_COUNT)
 8638              		.loc 1 3904 10
 8639 0084 FB68     		ldr	r3, [r7, #12]
 8640 0086 322B     		cmp	r3, #50
 8641 0088 0DD9     		bls	.L464
3905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
3906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Update error code */
3907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
 8642              		.loc 1 3907 27
 8643 008a 7B68     		ldr	r3, [r7, #4]
 8644 008c D3F89C30 		ldr	r3, [r3, #156]
 8645 0090 43F00102 		orr	r2, r3, #1
 8646 0094 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 239


 8647 0096 C3F89C20 		str	r2, [r3, #156]
3908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Change FDCAN state */
3910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->State = HAL_FDCAN_STATE_ERROR;
 8648              		.loc 1 3910 23
 8649 009a 7B68     		ldr	r3, [r7, #4]
 8650 009c 0322     		movs	r2, #3
 8651 009e 83F89820 		strb	r2, [r3, #152]
3911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         return HAL_ERROR;
 8652              		.loc 1 3912 16
 8653 00a2 0123     		movs	r3, #1
 8654 00a4 1CE0     		b	.L461
 8655              	.L464:
3913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
3914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Increment counter */
3916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       Counter++;
 8656              		.loc 1 3916 14
 8657 00a6 FB68     		ldr	r3, [r7, #12]
 8658 00a8 0133     		adds	r3, r3, #1
 8659 00aa FB60     		str	r3, [r7, #12]
 8660              	.L463:
3901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 8661              		.loc 1 3901 19
 8662 00ac 7B68     		ldr	r3, [r7, #4]
 8663 00ae 5B68     		ldr	r3, [r3, #4]
3901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 8664              		.loc 1 3901 26
 8665 00b0 5B69     		ldr	r3, [r3, #20]
3901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 8666              		.loc 1 3901 34
 8667 00b2 03F40043 		and	r3, r3, #32768
3901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 8668              		.loc 1 3901 11
 8669 00b6 002B     		cmp	r3, #0
 8670 00b8 E4D1     		bne	.L465
3917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Schedule TUR numerator update by the next reference message */
3920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     SET_BIT(hfdcan->ttcan->TTOCN, FDCAN_TTOCN_ECS);
 8671              		.loc 1 3920 5
 8672 00ba 7B68     		ldr	r3, [r7, #4]
 8673 00bc 5B68     		ldr	r3, [r3, #4]
 8674 00be 5A69     		ldr	r2, [r3, #20]
 8675 00c0 7B68     		ldr	r3, [r7, #4]
 8676 00c2 5B68     		ldr	r3, [r3, #4]
 8677 00c4 42F00202 		orr	r2, r2, #2
 8678 00c8 5A61     		str	r2, [r3, #20]
3921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
3923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 8679              		.loc 1 3923 12
 8680 00ca 0023     		movs	r3, #0
 8681 00cc 08E0     		b	.L461
 8682              	.L459:
3924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 240


3925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
3926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
3928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 8683              		.loc 1 3928 23
 8684 00ce 7B68     		ldr	r3, [r7, #4]
 8685 00d0 D3F89C30 		ldr	r3, [r3, #156]
 8686 00d4 43F00202 		orr	r2, r3, #2
 8687 00d8 7B68     		ldr	r3, [r7, #4]
 8688 00da C3F89C20 		str	r2, [r3, #156]
3929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 8689              		.loc 1 3930 12
 8690 00de 0123     		movs	r3, #1
 8691              	.L461:
3931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 8692              		.loc 1 3932 1
 8693 00e0 1846     		mov	r0, r3
 8694 00e2 1437     		adds	r7, r7, #20
 8695              	.LCFI470:
 8696              		.cfi_def_cfa_offset 4
 8697 00e4 BD46     		mov	sp, r7
 8698              	.LCFI471:
 8699              		.cfi_def_cfa_register 13
 8700              		@ sp needed
 8701 00e6 5DF8047B 		ldr	r7, [sp], #4
 8702              	.LCFI472:
 8703              		.cfi_restore 7
 8704              		.cfi_def_cfa_offset 0
 8705 00ea 7047     		bx	lr
 8706              	.L467:
 8707              		.align	2
 8708              	.L466:
 8709 00ec 0000FFFF 		.word	-65536
 8710              		.cfi_endproc
 8711              	.LFE412:
 8713              		.section	.text.HAL_FDCAN_TT_ConfigStopWatch,"ax",%progbits
 8714              		.align	1
 8715              		.global	HAL_FDCAN_TT_ConfigStopWatch
 8716              		.syntax unified
 8717              		.thumb
 8718              		.thumb_func
 8720              	HAL_FDCAN_TT_ConfigStopWatch:
 8721              	.LFB413:
3933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
3935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Configure stop watch source and polarity.
3936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
3937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
3938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  Source stop watch source.
3939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be a value of @arg FDCAN_TT_stop_watch_source.
3940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  Polarity stop watch polarity.
3941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be a value of @arg FDCAN_TT_stop_watch_polarity.
3942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
3943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
3944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_TT_ConfigStopWatch(FDCAN_HandleTypeDef *hfdcan, uint32_t Source, uint32
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 241


3945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 8722              		.loc 1 3945 1
 8723              		.cfi_startproc
 8724              		@ args = 0, pretend = 0, frame = 24
 8725              		@ frame_needed = 1, uses_anonymous_args = 0
 8726              		@ link register save eliminated.
 8727 0000 80B4     		push	{r7}
 8728              	.LCFI473:
 8729              		.cfi_def_cfa_offset 4
 8730              		.cfi_offset 7, -4
 8731 0002 87B0     		sub	sp, sp, #28
 8732              	.LCFI474:
 8733              		.cfi_def_cfa_offset 32
 8734 0004 00AF     		add	r7, sp, #0
 8735              	.LCFI475:
 8736              		.cfi_def_cfa_register 7
 8737 0006 F860     		str	r0, [r7, #12]
 8738 0008 B960     		str	r1, [r7, #8]
 8739 000a 7A60     		str	r2, [r7, #4]
3946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t Counter = 0U;
 8740              		.loc 1 3946 12
 8741 000c 0023     		movs	r3, #0
 8742 000e 7B61     		str	r3, [r7, #20]
3947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 8743              		.loc 1 3947 26
 8744 0010 FB68     		ldr	r3, [r7, #12]
 8745 0012 93F89830 		ldrb	r3, [r3, #152]
 8746 0016 FB74     		strb	r3, [r7, #19]
3948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
3950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_INSTANCE(hfdcan->Instance));
3951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_STOP_WATCH_SOURCE(Source));
3952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_STOP_WATCH_POLARITY(Polarity));
3953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 8747              		.loc 1 3954 6
 8748 0018 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 8749 001a 012B     		cmp	r3, #1
 8750 001c 17D0     		beq	.L471
 8751              		.loc 1 3954 40 discriminator 1
 8752 001e FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 8753 0020 022B     		cmp	r3, #2
 8754 0022 29D1     		bne	.L470
3955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Wait until the LCKC bit into TTOCN register is reset */
3957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     while ((hfdcan->ttcan->TTOCN & FDCAN_TTOCN_LCKC) != 0U)
 8755              		.loc 1 3957 11
 8756 0024 13E0     		b	.L471
 8757              	.L474:
3958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
3959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Check for the Timeout */
3960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if (Counter > FDCAN_TIMEOUT_COUNT)
 8758              		.loc 1 3960 10
 8759 0026 7B69     		ldr	r3, [r7, #20]
 8760 0028 322B     		cmp	r3, #50
 8761 002a 0DD9     		bls	.L472
3961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 242


3962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Update error code */
3963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
 8762              		.loc 1 3963 27
 8763 002c FB68     		ldr	r3, [r7, #12]
 8764 002e D3F89C30 		ldr	r3, [r3, #156]
 8765 0032 43F00102 		orr	r2, r3, #1
 8766 0036 FB68     		ldr	r3, [r7, #12]
 8767 0038 C3F89C20 		str	r2, [r3, #156]
3964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Change FDCAN state */
3966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->State = HAL_FDCAN_STATE_ERROR;
 8768              		.loc 1 3966 23
 8769 003c FB68     		ldr	r3, [r7, #12]
 8770 003e 0322     		movs	r2, #3
 8771 0040 83F89820 		strb	r2, [r3, #152]
3967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         return HAL_ERROR;
 8772              		.loc 1 3968 16
 8773 0044 0123     		movs	r3, #1
 8774 0046 20E0     		b	.L473
 8775              	.L472:
3969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
3970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Increment counter */
3972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       Counter++;
 8776              		.loc 1 3972 14
 8777 0048 7B69     		ldr	r3, [r7, #20]
 8778 004a 0133     		adds	r3, r3, #1
 8779 004c 7B61     		str	r3, [r7, #20]
 8780              	.L471:
3957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 8781              		.loc 1 3957 19
 8782 004e FB68     		ldr	r3, [r7, #12]
 8783 0050 5B68     		ldr	r3, [r3, #4]
3957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 8784              		.loc 1 3957 26
 8785 0052 5B69     		ldr	r3, [r3, #20]
3957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 8786              		.loc 1 3957 34
 8787 0054 03F40043 		and	r3, r3, #32768
3957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 8788              		.loc 1 3957 11
 8789 0058 002B     		cmp	r3, #0
 8790 005a E4D1     		bne	.L474
3973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
3974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Select stop watch source and polarity */
3976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     MODIFY_REG(hfdcan->ttcan->TTOCN, (FDCAN_TTOCN_SWS | FDCAN_TTOCN_SWP), (Source | Polarity));
 8791              		.loc 1 3976 5
 8792 005c FB68     		ldr	r3, [r7, #12]
 8793 005e 5B68     		ldr	r3, [r3, #4]
 8794 0060 5B69     		ldr	r3, [r3, #20]
 8795 0062 23F01C01 		bic	r1, r3, #28
 8796 0066 BA68     		ldr	r2, [r7, #8]
 8797 0068 7B68     		ldr	r3, [r7, #4]
 8798 006a 1A43     		orrs	r2, r2, r3
 8799 006c FB68     		ldr	r3, [r7, #12]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 243


 8800 006e 5B68     		ldr	r3, [r3, #4]
 8801 0070 0A43     		orrs	r2, r2, r1
 8802 0072 5A61     		str	r2, [r3, #20]
3977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
3979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 8803              		.loc 1 3979 12
 8804 0074 0023     		movs	r3, #0
 8805 0076 08E0     		b	.L473
 8806              	.L470:
3980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
3982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
3983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
3984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 8807              		.loc 1 3984 23
 8808 0078 FB68     		ldr	r3, [r7, #12]
 8809 007a D3F89C30 		ldr	r3, [r3, #156]
 8810 007e 43F00202 		orr	r2, r3, #2
 8811 0082 FB68     		ldr	r3, [r7, #12]
 8812 0084 C3F89C20 		str	r2, [r3, #156]
3985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 8813              		.loc 1 3986 12
 8814 0088 0123     		movs	r3, #1
 8815              	.L473:
3987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
3988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 8816              		.loc 1 3988 1
 8817 008a 1846     		mov	r0, r3
 8818 008c 1C37     		adds	r7, r7, #28
 8819              	.LCFI476:
 8820              		.cfi_def_cfa_offset 4
 8821 008e BD46     		mov	sp, r7
 8822              	.LCFI477:
 8823              		.cfi_def_cfa_register 13
 8824              		@ sp needed
 8825 0090 5DF8047B 		ldr	r7, [sp], #4
 8826              	.LCFI478:
 8827              		.cfi_restore 7
 8828              		.cfi_def_cfa_offset 0
 8829 0094 7047     		bx	lr
 8830              		.cfi_endproc
 8831              	.LFE413:
 8833              		.section	.text.HAL_FDCAN_TT_ConfigRegisterTimeMark,"ax",%progbits
 8834              		.align	1
 8835              		.global	HAL_FDCAN_TT_ConfigRegisterTimeMark
 8836              		.syntax unified
 8837              		.thumb
 8838              		.thumb_func
 8840              	HAL_FDCAN_TT_ConfigRegisterTimeMark:
 8841              	.LFB414:
3989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
3990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
3991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Configure register time mark pulse generation.
3992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
3993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 244


3994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  TimeMarkSource time mark source.
3995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be a value of @arg FDCAN_TT_time_mark_source.
3996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  TimeMarkValue time mark value (reference).
3997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter must be a number between 0 and 0xFFFF.
3998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  RepeatFactor repeat factor of the cycle for which the time mark is valid.
3999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be a value of @arg FDCAN_TT_Repeat_Factor.
4000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  StartCycle index of the first cycle in which the time mark becomes valid.
4001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter is ignored if RepeatFactor is set to FDCAN_TT_REPEAT_EVERY_CYCLE.
4002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter must be a number between 0 and RepeatFactor.
4003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
4004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
4005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_TT_ConfigRegisterTimeMark(FDCAN_HandleTypeDef *hfdcan,
4006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                                                       uint32_t TimeMarkSource, uint32_t TimeMarkVal
4007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                                                       uint32_t RepeatFactor, uint32_t StartCycle)
4008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 8842              		.loc 1 4008 1
 8843              		.cfi_startproc
 8844              		@ args = 4, pretend = 0, frame = 32
 8845              		@ frame_needed = 1, uses_anonymous_args = 0
 8846              		@ link register save eliminated.
 8847 0000 80B4     		push	{r7}
 8848              	.LCFI479:
 8849              		.cfi_def_cfa_offset 4
 8850              		.cfi_offset 7, -4
 8851 0002 89B0     		sub	sp, sp, #36
 8852              	.LCFI480:
 8853              		.cfi_def_cfa_offset 40
 8854 0004 00AF     		add	r7, sp, #0
 8855              	.LCFI481:
 8856              		.cfi_def_cfa_register 7
 8857 0006 F860     		str	r0, [r7, #12]
 8858 0008 B960     		str	r1, [r7, #8]
 8859 000a 7A60     		str	r2, [r7, #4]
 8860 000c 3B60     		str	r3, [r7]
4009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t Counter = 0U;
 8861              		.loc 1 4009 12
 8862 000e 0023     		movs	r3, #0
 8863 0010 FB61     		str	r3, [r7, #28]
4010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t CycleCode;
4011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 8864              		.loc 1 4011 26
 8865 0012 FB68     		ldr	r3, [r7, #12]
 8866 0014 93F89830 		ldrb	r3, [r3, #152]
 8867 0018 FB75     		strb	r3, [r7, #23]
4012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
4014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_INSTANCE(hfdcan->Instance));
4015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_REGISTER_TIME_MARK_SOURCE(TimeMarkSource));
4016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_MAX_VALUE(TimeMarkValue, 0xFFFFU));
4017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_REPEAT_FACTOR(RepeatFactor));
4018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (RepeatFactor != FDCAN_TT_REPEAT_EVERY_CYCLE)
4019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     assert_param(IS_FDCAN_MAX_VALUE(StartCycle, (RepeatFactor - 1U)));
4021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 8868              		.loc 1 4023 6
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 245


 8869 001a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 8870 001c 012B     		cmp	r3, #1
 8871 001e 17D0     		beq	.L478
 8872              		.loc 1 4023 40 discriminator 1
 8873 0020 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 8874 0022 022B     		cmp	r3, #2
 8875 0024 7DD1     		bne	.L477
4024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Wait until the LCKC bit into TTOCN register is reset */
4026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     while ((hfdcan->ttcan->TTOCN & FDCAN_TTOCN_LCKC) != 0U)
 8876              		.loc 1 4026 11
 8877 0026 13E0     		b	.L478
 8878              	.L481:
4027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Check for the Timeout */
4029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if (Counter > FDCAN_TIMEOUT_COUNT)
 8879              		.loc 1 4029 10
 8880 0028 FB69     		ldr	r3, [r7, #28]
 8881 002a 322B     		cmp	r3, #50
 8882 002c 0DD9     		bls	.L479
4030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
4031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Update error code */
4032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
 8883              		.loc 1 4032 27
 8884 002e FB68     		ldr	r3, [r7, #12]
 8885 0030 D3F89C30 		ldr	r3, [r3, #156]
 8886 0034 43F00102 		orr	r2, r3, #1
 8887 0038 FB68     		ldr	r3, [r7, #12]
 8888 003a C3F89C20 		str	r2, [r3, #156]
4033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Change FDCAN state */
4035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->State = HAL_FDCAN_STATE_ERROR;
 8889              		.loc 1 4035 23
 8890 003e FB68     		ldr	r3, [r7, #12]
 8891 0040 0322     		movs	r2, #3
 8892 0042 83F89820 		strb	r2, [r3, #152]
4036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         return HAL_ERROR;
 8893              		.loc 1 4037 16
 8894 0046 0123     		movs	r3, #1
 8895 0048 74E0     		b	.L480
 8896              	.L479:
4038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
4039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Increment counter */
4041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       Counter++;
 8897              		.loc 1 4041 14
 8898 004a FB69     		ldr	r3, [r7, #28]
 8899 004c 0133     		adds	r3, r3, #1
 8900 004e FB61     		str	r3, [r7, #28]
 8901              	.L478:
4026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 8902              		.loc 1 4026 19
 8903 0050 FB68     		ldr	r3, [r7, #12]
 8904 0052 5B68     		ldr	r3, [r3, #4]
4026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 8905              		.loc 1 4026 26
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 246


 8906 0054 5B69     		ldr	r3, [r3, #20]
4026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 8907              		.loc 1 4026 34
 8908 0056 03F40043 		and	r3, r3, #32768
4026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 8909              		.loc 1 4026 11
 8910 005a 002B     		cmp	r3, #0
 8911 005c E4D1     		bne	.L481
4042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Disable the time mark compare function */
4045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     CLEAR_BIT(hfdcan->ttcan->TTOCN, FDCAN_TTOCN_TMC);
 8912              		.loc 1 4045 5
 8913 005e FB68     		ldr	r3, [r7, #12]
 8914 0060 5B68     		ldr	r3, [r3, #4]
 8915 0062 5A69     		ldr	r2, [r3, #20]
 8916 0064 FB68     		ldr	r3, [r7, #12]
 8917 0066 5B68     		ldr	r3, [r3, #4]
 8918 0068 22F0C002 		bic	r2, r2, #192
 8919 006c 5A61     		str	r2, [r3, #20]
4046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (TimeMarkSource != FDCAN_TT_REG_TIMEMARK_DIABLED)
 8920              		.loc 1 4047 8
 8921 006e BB68     		ldr	r3, [r7, #8]
 8922 0070 002B     		cmp	r3, #0
 8923 0072 54D0     		beq	.L482
4048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Calculate cycle code */
4050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if (RepeatFactor == FDCAN_TT_REPEAT_EVERY_CYCLE)
 8924              		.loc 1 4050 10
 8925 0074 3B68     		ldr	r3, [r7]
 8926 0076 002B     		cmp	r3, #0
 8927 0078 02D1     		bne	.L483
4051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
4052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         CycleCode = FDCAN_TT_REPEAT_EVERY_CYCLE;
 8928              		.loc 1 4052 19
 8929 007a 0023     		movs	r3, #0
 8930 007c BB61     		str	r3, [r7, #24]
 8931 007e 03E0     		b	.L484
 8932              	.L483:
4053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
4054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       else /* RepeatFactor != FDCAN_TT_REPEAT_EVERY_CYCLE */
4055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
4056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         CycleCode = RepeatFactor + StartCycle;
 8933              		.loc 1 4056 19
 8934 0080 3A68     		ldr	r2, [r7]
 8935 0082 BB6A     		ldr	r3, [r7, #40]
 8936 0084 1344     		add	r3, r3, r2
 8937 0086 BB61     		str	r3, [r7, #24]
 8938              	.L484:
4057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
4058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       Counter = 0U;
 8939              		.loc 1 4059 15
 8940 0088 0023     		movs	r3, #0
 8941 008a FB61     		str	r3, [r7, #28]
4060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 247


4061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Wait until the LCKM bit into TTTMK register is reset */
4062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       while ((hfdcan->ttcan->TTTMK & FDCAN_TTTMK_LCKM) != 0U)
 8942              		.loc 1 4062 13
 8943 008c 13E0     		b	.L485
 8944              	.L487:
4063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
4064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Check for the Timeout */
4065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         if (Counter > FDCAN_TIMEOUT_COUNT)
 8945              		.loc 1 4065 12
 8946 008e FB69     		ldr	r3, [r7, #28]
 8947 0090 322B     		cmp	r3, #50
 8948 0092 0DD9     		bls	.L486
4066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         {
4067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           /* Update error code */
4068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
 8949              		.loc 1 4068 29
 8950 0094 FB68     		ldr	r3, [r7, #12]
 8951 0096 D3F89C30 		ldr	r3, [r3, #156]
 8952 009a 43F00102 		orr	r2, r3, #1
 8953 009e FB68     		ldr	r3, [r7, #12]
 8954 00a0 C3F89C20 		str	r2, [r3, #156]
4069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           /* Change FDCAN state */
4071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           hfdcan->State = HAL_FDCAN_STATE_ERROR;
 8955              		.loc 1 4071 25
 8956 00a4 FB68     		ldr	r3, [r7, #12]
 8957 00a6 0322     		movs	r2, #3
 8958 00a8 83F89820 		strb	r2, [r3, #152]
4072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           return HAL_ERROR;
 8959              		.loc 1 4073 18
 8960 00ac 0123     		movs	r3, #1
 8961 00ae 41E0     		b	.L480
 8962              	.L486:
4074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         }
4075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Increment counter */
4077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         Counter++;
 8963              		.loc 1 4077 16
 8964 00b0 FB69     		ldr	r3, [r7, #28]
 8965 00b2 0133     		adds	r3, r3, #1
 8966 00b4 FB61     		str	r3, [r7, #28]
 8967              	.L485:
4062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 8968              		.loc 1 4062 21
 8969 00b6 FB68     		ldr	r3, [r7, #12]
 8970 00b8 5B68     		ldr	r3, [r3, #4]
4062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 8971              		.loc 1 4062 28
 8972 00ba DB69     		ldr	r3, [r3, #28]
4062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 8973              		.loc 1 4062 13
 8974 00bc 002B     		cmp	r3, #0
 8975 00be E6DB     		blt	.L487
4078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
4079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Configure time mark value and cycle code */
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 248


4081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ttcan->TTTMK = ((TimeMarkValue << FDCAN_TTTMK_TM_Pos) | (CycleCode << FDCAN_TTTMK_TIC
 8976              		.loc 1 4081 82
 8977 00c0 BB69     		ldr	r3, [r7, #24]
 8978 00c2 1904     		lsls	r1, r3, #16
 8979              		.loc 1 4081 13
 8980 00c4 FB68     		ldr	r3, [r7, #12]
 8981 00c6 5B68     		ldr	r3, [r3, #4]
 8982              		.loc 1 4081 69
 8983 00c8 7A68     		ldr	r2, [r7, #4]
 8984 00ca 0A43     		orrs	r2, r2, r1
 8985              		.loc 1 4081 28
 8986 00cc DA61     		str	r2, [r3, #28]
4082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       Counter = 0U;
 8987              		.loc 1 4083 15
 8988 00ce 0023     		movs	r3, #0
 8989 00d0 FB61     		str	r3, [r7, #28]
4084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Wait until the LCKC bit into TTOCN register is reset */
4086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       while ((hfdcan->ttcan->TTOCN & FDCAN_TTOCN_LCKC) != 0U)
 8990              		.loc 1 4086 13
 8991 00d2 13E0     		b	.L488
 8992              	.L490:
4087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
4088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Check for the Timeout */
4089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         if (Counter > FDCAN_TIMEOUT_COUNT)
 8993              		.loc 1 4089 12
 8994 00d4 FB69     		ldr	r3, [r7, #28]
 8995 00d6 322B     		cmp	r3, #50
 8996 00d8 0DD9     		bls	.L489
4090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         {
4091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           /* Update error code */
4092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
 8997              		.loc 1 4092 29
 8998 00da FB68     		ldr	r3, [r7, #12]
 8999 00dc D3F89C30 		ldr	r3, [r3, #156]
 9000 00e0 43F00102 		orr	r2, r3, #1
 9001 00e4 FB68     		ldr	r3, [r7, #12]
 9002 00e6 C3F89C20 		str	r2, [r3, #156]
4093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           /* Change FDCAN state */
4095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           hfdcan->State = HAL_FDCAN_STATE_ERROR;
 9003              		.loc 1 4095 25
 9004 00ea FB68     		ldr	r3, [r7, #12]
 9005 00ec 0322     		movs	r2, #3
 9006 00ee 83F89820 		strb	r2, [r3, #152]
4096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           return HAL_ERROR;
 9007              		.loc 1 4097 18
 9008 00f2 0123     		movs	r3, #1
 9009 00f4 1EE0     		b	.L480
 9010              	.L489:
4098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         }
4099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Increment counter */
4101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         Counter++;
 9011              		.loc 1 4101 16
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 249


 9012 00f6 FB69     		ldr	r3, [r7, #28]
 9013 00f8 0133     		adds	r3, r3, #1
 9014 00fa FB61     		str	r3, [r7, #28]
 9015              	.L488:
4086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 9016              		.loc 1 4086 21
 9017 00fc FB68     		ldr	r3, [r7, #12]
 9018 00fe 5B68     		ldr	r3, [r3, #4]
4086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 9019              		.loc 1 4086 28
 9020 0100 5B69     		ldr	r3, [r3, #20]
4086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 9021              		.loc 1 4086 36
 9022 0102 03F40043 		and	r3, r3, #32768
4086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 9023              		.loc 1 4086 13
 9024 0106 002B     		cmp	r3, #0
 9025 0108 E4D1     		bne	.L490
4102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
4103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update the register time mark compare source */
4105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       MODIFY_REG(hfdcan->ttcan->TTOCN, FDCAN_TTOCN_TMC, TimeMarkSource);
 9026              		.loc 1 4105 7
 9027 010a FB68     		ldr	r3, [r7, #12]
 9028 010c 5B68     		ldr	r3, [r3, #4]
 9029 010e 5B69     		ldr	r3, [r3, #20]
 9030 0110 23F0C001 		bic	r1, r3, #192
 9031 0114 FB68     		ldr	r3, [r7, #12]
 9032 0116 5B68     		ldr	r3, [r3, #4]
 9033 0118 BA68     		ldr	r2, [r7, #8]
 9034 011a 0A43     		orrs	r2, r2, r1
 9035 011c 5A61     		str	r2, [r3, #20]
 9036              	.L482:
4106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
4109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 9037              		.loc 1 4109 12
 9038 011e 0023     		movs	r3, #0
 9039 0120 08E0     		b	.L480
 9040              	.L477:
4110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
4112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
4114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 9041              		.loc 1 4114 23
 9042 0122 FB68     		ldr	r3, [r7, #12]
 9043 0124 D3F89C30 		ldr	r3, [r3, #156]
 9044 0128 43F00202 		orr	r2, r3, #2
 9045 012c FB68     		ldr	r3, [r7, #12]
 9046 012e C3F89C20 		str	r2, [r3, #156]
4115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 9047              		.loc 1 4116 12
 9048 0132 0123     		movs	r3, #1
 9049              	.L480:
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 250


4117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 9050              		.loc 1 4118 1
 9051 0134 1846     		mov	r0, r3
 9052 0136 2437     		adds	r7, r7, #36
 9053              	.LCFI482:
 9054              		.cfi_def_cfa_offset 4
 9055 0138 BD46     		mov	sp, r7
 9056              	.LCFI483:
 9057              		.cfi_def_cfa_register 13
 9058              		@ sp needed
 9059 013a 5DF8047B 		ldr	r7, [sp], #4
 9060              	.LCFI484:
 9061              		.cfi_restore 7
 9062              		.cfi_def_cfa_offset 0
 9063 013e 7047     		bx	lr
 9064              		.cfi_endproc
 9065              	.LFE414:
 9067              		.section	.text.HAL_FDCAN_TT_EnableRegisterTimeMarkPulse,"ax",%progbits
 9068              		.align	1
 9069              		.global	HAL_FDCAN_TT_EnableRegisterTimeMarkPulse
 9070              		.syntax unified
 9071              		.thumb
 9072              		.thumb_func
 9074              	HAL_FDCAN_TT_EnableRegisterTimeMarkPulse:
 9075              	.LFB415:
4119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
4121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Enable register time mark pulse generation.
4122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
4123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
4124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
4125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
4126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_TT_EnableRegisterTimeMarkPulse(FDCAN_HandleTypeDef *hfdcan)
4127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 9076              		.loc 1 4127 1
 9077              		.cfi_startproc
 9078              		@ args = 0, pretend = 0, frame = 16
 9079              		@ frame_needed = 1, uses_anonymous_args = 0
 9080              		@ link register save eliminated.
 9081 0000 80B4     		push	{r7}
 9082              	.LCFI485:
 9083              		.cfi_def_cfa_offset 4
 9084              		.cfi_offset 7, -4
 9085 0002 85B0     		sub	sp, sp, #20
 9086              	.LCFI486:
 9087              		.cfi_def_cfa_offset 24
 9088 0004 00AF     		add	r7, sp, #0
 9089              	.LCFI487:
 9090              		.cfi_def_cfa_register 7
 9091 0006 7860     		str	r0, [r7, #4]
4128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t Counter = 0U;
 9092              		.loc 1 4128 12
 9093 0008 0023     		movs	r3, #0
 9094 000a FB60     		str	r3, [r7, #12]
4129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 9095              		.loc 1 4129 26
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 251


 9096 000c 7B68     		ldr	r3, [r7, #4]
 9097 000e 93F89830 		ldrb	r3, [r3, #152]
 9098 0012 FB72     		strb	r3, [r7, #11]
4130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
4132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_INSTANCE(hfdcan->Instance));
4133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 9099              		.loc 1 4134 6
 9100 0014 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 9101 0016 012B     		cmp	r3, #1
 9102 0018 17D0     		beq	.L494
 9103              		.loc 1 4134 40 discriminator 1
 9104 001a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 9105 001c 022B     		cmp	r3, #2
 9106 001e 25D1     		bne	.L493
4135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Wait until the LCKC bit into TTOCN register is reset */
4137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     while ((hfdcan->ttcan->TTOCN & FDCAN_TTOCN_LCKC) != 0U)
 9107              		.loc 1 4137 11
 9108 0020 13E0     		b	.L494
 9109              	.L497:
4138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Check for the Timeout */
4140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if (Counter > FDCAN_TIMEOUT_COUNT)
 9110              		.loc 1 4140 10
 9111 0022 FB68     		ldr	r3, [r7, #12]
 9112 0024 322B     		cmp	r3, #50
 9113 0026 0DD9     		bls	.L495
4141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
4142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Update error code */
4143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
 9114              		.loc 1 4143 27
 9115 0028 7B68     		ldr	r3, [r7, #4]
 9116 002a D3F89C30 		ldr	r3, [r3, #156]
 9117 002e 43F00102 		orr	r2, r3, #1
 9118 0032 7B68     		ldr	r3, [r7, #4]
 9119 0034 C3F89C20 		str	r2, [r3, #156]
4144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Change FDCAN state */
4146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->State = HAL_FDCAN_STATE_ERROR;
 9120              		.loc 1 4146 23
 9121 0038 7B68     		ldr	r3, [r7, #4]
 9122 003a 0322     		movs	r2, #3
 9123 003c 83F89820 		strb	r2, [r3, #152]
4147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         return HAL_ERROR;
 9124              		.loc 1 4148 16
 9125 0040 0123     		movs	r3, #1
 9126 0042 1CE0     		b	.L496
 9127              	.L495:
4149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
4150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Increment counter */
4152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       Counter++;
 9128              		.loc 1 4152 14
 9129 0044 FB68     		ldr	r3, [r7, #12]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 252


 9130 0046 0133     		adds	r3, r3, #1
 9131 0048 FB60     		str	r3, [r7, #12]
 9132              	.L494:
4137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 9133              		.loc 1 4137 19
 9134 004a 7B68     		ldr	r3, [r7, #4]
 9135 004c 5B68     		ldr	r3, [r3, #4]
4137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 9136              		.loc 1 4137 26
 9137 004e 5B69     		ldr	r3, [r3, #20]
4137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 9138              		.loc 1 4137 34
 9139 0050 03F40043 		and	r3, r3, #32768
4137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 9140              		.loc 1 4137 11
 9141 0054 002B     		cmp	r3, #0
 9142 0056 E4D1     		bne	.L497
4153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Enable Register Time Mark Interrupt output on fdcan1_rtp */
4156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     SET_BIT(hfdcan->ttcan->TTOCN, FDCAN_TTOCN_RTIE);
 9143              		.loc 1 4156 5
 9144 0058 7B68     		ldr	r3, [r7, #4]
 9145 005a 5B68     		ldr	r3, [r3, #4]
 9146 005c 5A69     		ldr	r2, [r3, #20]
 9147 005e 7B68     		ldr	r3, [r7, #4]
 9148 0060 5B68     		ldr	r3, [r3, #4]
 9149 0062 42F02002 		orr	r2, r2, #32
 9150 0066 5A61     		str	r2, [r3, #20]
4157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
4159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 9151              		.loc 1 4159 12
 9152 0068 0023     		movs	r3, #0
 9153 006a 08E0     		b	.L496
 9154              	.L493:
4160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
4162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
4164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 9155              		.loc 1 4164 23
 9156 006c 7B68     		ldr	r3, [r7, #4]
 9157 006e D3F89C30 		ldr	r3, [r3, #156]
 9158 0072 43F00202 		orr	r2, r3, #2
 9159 0076 7B68     		ldr	r3, [r7, #4]
 9160 0078 C3F89C20 		str	r2, [r3, #156]
4165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 9161              		.loc 1 4166 12
 9162 007c 0123     		movs	r3, #1
 9163              	.L496:
4167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 9164              		.loc 1 4168 1
 9165 007e 1846     		mov	r0, r3
 9166 0080 1437     		adds	r7, r7, #20
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 253


 9167              	.LCFI488:
 9168              		.cfi_def_cfa_offset 4
 9169 0082 BD46     		mov	sp, r7
 9170              	.LCFI489:
 9171              		.cfi_def_cfa_register 13
 9172              		@ sp needed
 9173 0084 5DF8047B 		ldr	r7, [sp], #4
 9174              	.LCFI490:
 9175              		.cfi_restore 7
 9176              		.cfi_def_cfa_offset 0
 9177 0088 7047     		bx	lr
 9178              		.cfi_endproc
 9179              	.LFE415:
 9181              		.section	.text.HAL_FDCAN_TT_DisableRegisterTimeMarkPulse,"ax",%progbits
 9182              		.align	1
 9183              		.global	HAL_FDCAN_TT_DisableRegisterTimeMarkPulse
 9184              		.syntax unified
 9185              		.thumb
 9186              		.thumb_func
 9188              	HAL_FDCAN_TT_DisableRegisterTimeMarkPulse:
 9189              	.LFB416:
4169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
4171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Disable register time mark pulse generation.
4172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
4173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
4174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
4175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
4176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_TT_DisableRegisterTimeMarkPulse(FDCAN_HandleTypeDef *hfdcan)
4177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 9190              		.loc 1 4177 1
 9191              		.cfi_startproc
 9192              		@ args = 0, pretend = 0, frame = 16
 9193              		@ frame_needed = 1, uses_anonymous_args = 0
 9194              		@ link register save eliminated.
 9195 0000 80B4     		push	{r7}
 9196              	.LCFI491:
 9197              		.cfi_def_cfa_offset 4
 9198              		.cfi_offset 7, -4
 9199 0002 85B0     		sub	sp, sp, #20
 9200              	.LCFI492:
 9201              		.cfi_def_cfa_offset 24
 9202 0004 00AF     		add	r7, sp, #0
 9203              	.LCFI493:
 9204              		.cfi_def_cfa_register 7
 9205 0006 7860     		str	r0, [r7, #4]
4178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t Counter = 0U;
 9206              		.loc 1 4178 12
 9207 0008 0023     		movs	r3, #0
 9208 000a FB60     		str	r3, [r7, #12]
4179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 9209              		.loc 1 4179 26
 9210 000c 7B68     		ldr	r3, [r7, #4]
 9211 000e 93F89830 		ldrb	r3, [r3, #152]
 9212 0012 FB72     		strb	r3, [r7, #11]
4180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 254


4182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_INSTANCE(hfdcan->Instance));
4183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 9213              		.loc 1 4184 6
 9214 0014 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 9215 0016 012B     		cmp	r3, #1
 9216 0018 17D0     		beq	.L501
 9217              		.loc 1 4184 40 discriminator 1
 9218 001a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 9219 001c 022B     		cmp	r3, #2
 9220 001e 25D1     		bne	.L500
4185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Wait until the LCKC bit into TTOCN register is reset */
4187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     while ((hfdcan->ttcan->TTOCN & FDCAN_TTOCN_LCKC) != 0U)
 9221              		.loc 1 4187 11
 9222 0020 13E0     		b	.L501
 9223              	.L504:
4188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Check for the Timeout */
4190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if (Counter > FDCAN_TIMEOUT_COUNT)
 9224              		.loc 1 4190 10
 9225 0022 FB68     		ldr	r3, [r7, #12]
 9226 0024 322B     		cmp	r3, #50
 9227 0026 0DD9     		bls	.L502
4191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
4192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Update error code */
4193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
 9228              		.loc 1 4193 27
 9229 0028 7B68     		ldr	r3, [r7, #4]
 9230 002a D3F89C30 		ldr	r3, [r3, #156]
 9231 002e 43F00102 		orr	r2, r3, #1
 9232 0032 7B68     		ldr	r3, [r7, #4]
 9233 0034 C3F89C20 		str	r2, [r3, #156]
4194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Change FDCAN state */
4196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->State = HAL_FDCAN_STATE_ERROR;
 9234              		.loc 1 4196 23
 9235 0038 7B68     		ldr	r3, [r7, #4]
 9236 003a 0322     		movs	r2, #3
 9237 003c 83F89820 		strb	r2, [r3, #152]
4197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         return HAL_ERROR;
 9238              		.loc 1 4198 16
 9239 0040 0123     		movs	r3, #1
 9240 0042 1CE0     		b	.L503
 9241              	.L502:
4199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
4200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Increment counter */
4202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       Counter++;
 9242              		.loc 1 4202 14
 9243 0044 FB68     		ldr	r3, [r7, #12]
 9244 0046 0133     		adds	r3, r3, #1
 9245 0048 FB60     		str	r3, [r7, #12]
 9246              	.L501:
4187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 9247              		.loc 1 4187 19
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 255


 9248 004a 7B68     		ldr	r3, [r7, #4]
 9249 004c 5B68     		ldr	r3, [r3, #4]
4187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 9250              		.loc 1 4187 26
 9251 004e 5B69     		ldr	r3, [r3, #20]
4187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 9252              		.loc 1 4187 34
 9253 0050 03F40043 		and	r3, r3, #32768
4187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 9254              		.loc 1 4187 11
 9255 0054 002B     		cmp	r3, #0
 9256 0056 E4D1     		bne	.L504
4203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Disable Register Time Mark Interrupt output on fdcan1_rtp */
4206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     CLEAR_BIT(hfdcan->ttcan->TTOCN, FDCAN_TTOCN_RTIE);
 9257              		.loc 1 4206 5
 9258 0058 7B68     		ldr	r3, [r7, #4]
 9259 005a 5B68     		ldr	r3, [r3, #4]
 9260 005c 5A69     		ldr	r2, [r3, #20]
 9261 005e 7B68     		ldr	r3, [r7, #4]
 9262 0060 5B68     		ldr	r3, [r3, #4]
 9263 0062 22F02002 		bic	r2, r2, #32
 9264 0066 5A61     		str	r2, [r3, #20]
4207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
4209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 9265              		.loc 1 4209 12
 9266 0068 0023     		movs	r3, #0
 9267 006a 08E0     		b	.L503
 9268              	.L500:
4210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
4212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
4214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 9269              		.loc 1 4214 23
 9270 006c 7B68     		ldr	r3, [r7, #4]
 9271 006e D3F89C30 		ldr	r3, [r3, #156]
 9272 0072 43F00202 		orr	r2, r3, #2
 9273 0076 7B68     		ldr	r3, [r7, #4]
 9274 0078 C3F89C20 		str	r2, [r3, #156]
4215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 9275              		.loc 1 4216 12
 9276 007c 0123     		movs	r3, #1
 9277              	.L503:
4217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 9278              		.loc 1 4218 1
 9279 007e 1846     		mov	r0, r3
 9280 0080 1437     		adds	r7, r7, #20
 9281              	.LCFI494:
 9282              		.cfi_def_cfa_offset 4
 9283 0082 BD46     		mov	sp, r7
 9284              	.LCFI495:
 9285              		.cfi_def_cfa_register 13
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 256


 9286              		@ sp needed
 9287 0084 5DF8047B 		ldr	r7, [sp], #4
 9288              	.LCFI496:
 9289              		.cfi_restore 7
 9290              		.cfi_def_cfa_offset 0
 9291 0088 7047     		bx	lr
 9292              		.cfi_endproc
 9293              	.LFE416:
 9295              		.section	.text.HAL_FDCAN_TT_EnableTriggerTimeMarkPulse,"ax",%progbits
 9296              		.align	1
 9297              		.global	HAL_FDCAN_TT_EnableTriggerTimeMarkPulse
 9298              		.syntax unified
 9299              		.thumb
 9300              		.thumb_func
 9302              	HAL_FDCAN_TT_EnableTriggerTimeMarkPulse:
 9303              	.LFB417:
4219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
4221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Enable trigger time mark pulse generation.
4222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
4223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
4224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
4225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
4226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_TT_EnableTriggerTimeMarkPulse(FDCAN_HandleTypeDef *hfdcan)
4227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 9304              		.loc 1 4227 1
 9305              		.cfi_startproc
 9306              		@ args = 0, pretend = 0, frame = 16
 9307              		@ frame_needed = 1, uses_anonymous_args = 0
 9308              		@ link register save eliminated.
 9309 0000 80B4     		push	{r7}
 9310              	.LCFI497:
 9311              		.cfi_def_cfa_offset 4
 9312              		.cfi_offset 7, -4
 9313 0002 85B0     		sub	sp, sp, #20
 9314              	.LCFI498:
 9315              		.cfi_def_cfa_offset 24
 9316 0004 00AF     		add	r7, sp, #0
 9317              	.LCFI499:
 9318              		.cfi_def_cfa_register 7
 9319 0006 7860     		str	r0, [r7, #4]
4228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t Counter = 0U;
 9320              		.loc 1 4228 12
 9321 0008 0023     		movs	r3, #0
 9322 000a FB60     		str	r3, [r7, #12]
4229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 9323              		.loc 1 4229 26
 9324 000c 7B68     		ldr	r3, [r7, #4]
 9325 000e 93F89830 		ldrb	r3, [r3, #152]
 9326 0012 FB72     		strb	r3, [r7, #11]
4230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
4232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_INSTANCE(hfdcan->Instance));
4233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 9327              		.loc 1 4234 6
 9328 0014 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 257


 9329 0016 012B     		cmp	r3, #1
 9330 0018 02D0     		beq	.L506
 9331              		.loc 1 4234 40 discriminator 1
 9332 001a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 9333 001c 022B     		cmp	r3, #2
 9334 001e 36D1     		bne	.L507
 9335              	.L506:
4235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->ttcan->TTOCF & FDCAN_TTOCF_OM) != FDCAN_TT_COMMUNICATION_LEVEL0)
 9336              		.loc 1 4236 16
 9337 0020 7B68     		ldr	r3, [r7, #4]
 9338 0022 5B68     		ldr	r3, [r3, #4]
 9339              		.loc 1 4236 23
 9340 0024 9B68     		ldr	r3, [r3, #8]
 9341              		.loc 1 4236 31
 9342 0026 03F00303 		and	r3, r3, #3
 9343              		.loc 1 4236 8
 9344 002a 032B     		cmp	r3, #3
 9345 002c 25D0     		beq	.L508
4237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Wait until the LCKC bit into TTOCN register is reset */
4239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       while ((hfdcan->ttcan->TTOCN & FDCAN_TTOCN_LCKC) != 0U)
 9346              		.loc 1 4239 13
 9347 002e 13E0     		b	.L509
 9348              	.L512:
4240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
4241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Check for the Timeout */
4242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         if (Counter > FDCAN_TIMEOUT_COUNT)
 9349              		.loc 1 4242 12
 9350 0030 FB68     		ldr	r3, [r7, #12]
 9351 0032 322B     		cmp	r3, #50
 9352 0034 0DD9     		bls	.L510
4243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         {
4244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           /* Update error code */
4245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
 9353              		.loc 1 4245 29
 9354 0036 7B68     		ldr	r3, [r7, #4]
 9355 0038 D3F89C30 		ldr	r3, [r3, #156]
 9356 003c 43F00102 		orr	r2, r3, #1
 9357 0040 7B68     		ldr	r3, [r7, #4]
 9358 0042 C3F89C20 		str	r2, [r3, #156]
4246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           /* Change FDCAN state */
4248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           hfdcan->State = HAL_FDCAN_STATE_ERROR;
 9359              		.loc 1 4248 25
 9360 0046 7B68     		ldr	r3, [r7, #4]
 9361 0048 0322     		movs	r2, #3
 9362 004a 83F89820 		strb	r2, [r3, #152]
4249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           return HAL_ERROR;
 9363              		.loc 1 4250 18
 9364 004e 0123     		movs	r3, #1
 9365 0050 26E0     		b	.L511
 9366              	.L510:
4251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         }
4252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Increment counter */
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 258


4254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         Counter++;
 9367              		.loc 1 4254 16
 9368 0052 FB68     		ldr	r3, [r7, #12]
 9369 0054 0133     		adds	r3, r3, #1
 9370 0056 FB60     		str	r3, [r7, #12]
 9371              	.L509:
4239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 9372              		.loc 1 4239 21
 9373 0058 7B68     		ldr	r3, [r7, #4]
 9374 005a 5B68     		ldr	r3, [r3, #4]
4239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 9375              		.loc 1 4239 28
 9376 005c 5B69     		ldr	r3, [r3, #20]
4239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 9377              		.loc 1 4239 36
 9378 005e 03F40043 		and	r3, r3, #32768
4239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 9379              		.loc 1 4239 13
 9380 0062 002B     		cmp	r3, #0
 9381 0064 E4D1     		bne	.L512
4255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
4256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Enable Trigger Time Mark Interrupt output on fdcan1_tmp */
4258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       SET_BIT(hfdcan->ttcan->TTOCN, FDCAN_TTOCN_TTIE);
 9382              		.loc 1 4258 7
 9383 0066 7B68     		ldr	r3, [r7, #4]
 9384 0068 5B68     		ldr	r3, [r3, #4]
 9385 006a 5A69     		ldr	r2, [r3, #20]
 9386 006c 7B68     		ldr	r3, [r7, #4]
 9387 006e 5B68     		ldr	r3, [r3, #4]
 9388 0070 42F48072 		orr	r2, r2, #256
 9389 0074 5A61     		str	r2, [r3, #20]
4259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Return function status */
4261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_OK;
 9390              		.loc 1 4261 14
 9391 0076 0023     		movs	r3, #0
 9392 0078 12E0     		b	.L511
 9393              	.L508:
4262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else
4264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code.
4266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****          Feature not supported for TT Level 0 */
4267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_SUPPORTED;
 9394              		.loc 1 4267 25
 9395 007a 7B68     		ldr	r3, [r7, #4]
 9396 007c D3F89C30 		ldr	r3, [r3, #156]
 9397 0080 43F01002 		orr	r2, r3, #16
 9398 0084 7B68     		ldr	r3, [r7, #4]
 9399 0086 C3F89C20 		str	r2, [r3, #156]
4268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 9400              		.loc 1 4269 14
 9401 008a 0123     		movs	r3, #1
 9402 008c 08E0     		b	.L511
 9403              	.L507:
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 259


4270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
4273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
4275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 9404              		.loc 1 4275 23
 9405 008e 7B68     		ldr	r3, [r7, #4]
 9406 0090 D3F89C30 		ldr	r3, [r3, #156]
 9407 0094 43F00202 		orr	r2, r3, #2
 9408 0098 7B68     		ldr	r3, [r7, #4]
 9409 009a C3F89C20 		str	r2, [r3, #156]
4276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 9410              		.loc 1 4277 12
 9411 009e 0123     		movs	r3, #1
 9412              	.L511:
4278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 9413              		.loc 1 4279 1
 9414 00a0 1846     		mov	r0, r3
 9415 00a2 1437     		adds	r7, r7, #20
 9416              	.LCFI500:
 9417              		.cfi_def_cfa_offset 4
 9418 00a4 BD46     		mov	sp, r7
 9419              	.LCFI501:
 9420              		.cfi_def_cfa_register 13
 9421              		@ sp needed
 9422 00a6 5DF8047B 		ldr	r7, [sp], #4
 9423              	.LCFI502:
 9424              		.cfi_restore 7
 9425              		.cfi_def_cfa_offset 0
 9426 00aa 7047     		bx	lr
 9427              		.cfi_endproc
 9428              	.LFE417:
 9430              		.section	.text.HAL_FDCAN_TT_DisableTriggerTimeMarkPulse,"ax",%progbits
 9431              		.align	1
 9432              		.global	HAL_FDCAN_TT_DisableTriggerTimeMarkPulse
 9433              		.syntax unified
 9434              		.thumb
 9435              		.thumb_func
 9437              	HAL_FDCAN_TT_DisableTriggerTimeMarkPulse:
 9438              	.LFB418:
4280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
4282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Disable trigger time mark pulse generation.
4283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
4284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
4285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
4286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
4287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_TT_DisableTriggerTimeMarkPulse(FDCAN_HandleTypeDef *hfdcan)
4288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 9439              		.loc 1 4288 1
 9440              		.cfi_startproc
 9441              		@ args = 0, pretend = 0, frame = 16
 9442              		@ frame_needed = 1, uses_anonymous_args = 0
 9443              		@ link register save eliminated.
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 260


 9444 0000 80B4     		push	{r7}
 9445              	.LCFI503:
 9446              		.cfi_def_cfa_offset 4
 9447              		.cfi_offset 7, -4
 9448 0002 85B0     		sub	sp, sp, #20
 9449              	.LCFI504:
 9450              		.cfi_def_cfa_offset 24
 9451 0004 00AF     		add	r7, sp, #0
 9452              	.LCFI505:
 9453              		.cfi_def_cfa_register 7
 9454 0006 7860     		str	r0, [r7, #4]
4289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t Counter = 0U;
 9455              		.loc 1 4289 12
 9456 0008 0023     		movs	r3, #0
 9457 000a FB60     		str	r3, [r7, #12]
4290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 9458              		.loc 1 4290 26
 9459 000c 7B68     		ldr	r3, [r7, #4]
 9460 000e 93F89830 		ldrb	r3, [r3, #152]
 9461 0012 FB72     		strb	r3, [r7, #11]
4291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
4293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_INSTANCE(hfdcan->Instance));
4294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 9462              		.loc 1 4295 6
 9463 0014 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 9464 0016 012B     		cmp	r3, #1
 9465 0018 02D0     		beq	.L514
 9466              		.loc 1 4295 40 discriminator 1
 9467 001a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 9468 001c 022B     		cmp	r3, #2
 9469 001e 36D1     		bne	.L515
 9470              	.L514:
4296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->ttcan->TTOCF & FDCAN_TTOCF_OM) != FDCAN_TT_COMMUNICATION_LEVEL0)
 9471              		.loc 1 4297 16
 9472 0020 7B68     		ldr	r3, [r7, #4]
 9473 0022 5B68     		ldr	r3, [r3, #4]
 9474              		.loc 1 4297 23
 9475 0024 9B68     		ldr	r3, [r3, #8]
 9476              		.loc 1 4297 31
 9477 0026 03F00303 		and	r3, r3, #3
 9478              		.loc 1 4297 8
 9479 002a 032B     		cmp	r3, #3
 9480 002c 25D0     		beq	.L516
4298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Wait until the LCKC bit into TTOCN register is reset */
4300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       while ((hfdcan->ttcan->TTOCN & FDCAN_TTOCN_LCKC) != 0U)
 9481              		.loc 1 4300 13
 9482 002e 13E0     		b	.L517
 9483              	.L520:
4301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
4302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Check for the Timeout */
4303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         if (Counter > FDCAN_TIMEOUT_COUNT)
 9484              		.loc 1 4303 12
 9485 0030 FB68     		ldr	r3, [r7, #12]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 261


 9486 0032 322B     		cmp	r3, #50
 9487 0034 0DD9     		bls	.L518
4304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         {
4305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           /* Update error code */
4306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
 9488              		.loc 1 4306 29
 9489 0036 7B68     		ldr	r3, [r7, #4]
 9490 0038 D3F89C30 		ldr	r3, [r3, #156]
 9491 003c 43F00102 		orr	r2, r3, #1
 9492 0040 7B68     		ldr	r3, [r7, #4]
 9493 0042 C3F89C20 		str	r2, [r3, #156]
4307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           /* Change FDCAN state */
4309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           hfdcan->State = HAL_FDCAN_STATE_ERROR;
 9494              		.loc 1 4309 25
 9495 0046 7B68     		ldr	r3, [r7, #4]
 9496 0048 0322     		movs	r2, #3
 9497 004a 83F89820 		strb	r2, [r3, #152]
4310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           return HAL_ERROR;
 9498              		.loc 1 4311 18
 9499 004e 0123     		movs	r3, #1
 9500 0050 26E0     		b	.L519
 9501              	.L518:
4312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         }
4313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Increment counter */
4315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         Counter++;
 9502              		.loc 1 4315 16
 9503 0052 FB68     		ldr	r3, [r7, #12]
 9504 0054 0133     		adds	r3, r3, #1
 9505 0056 FB60     		str	r3, [r7, #12]
 9506              	.L517:
4300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 9507              		.loc 1 4300 21
 9508 0058 7B68     		ldr	r3, [r7, #4]
 9509 005a 5B68     		ldr	r3, [r3, #4]
4300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 9510              		.loc 1 4300 28
 9511 005c 5B69     		ldr	r3, [r3, #20]
4300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 9512              		.loc 1 4300 36
 9513 005e 03F40043 		and	r3, r3, #32768
4300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 9514              		.loc 1 4300 13
 9515 0062 002B     		cmp	r3, #0
 9516 0064 E4D1     		bne	.L520
4316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
4317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Disable Trigger Time Mark Interrupt output on fdcan1_rtp */
4319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       CLEAR_BIT(hfdcan->ttcan->TTOCN, FDCAN_TTOCN_TTIE);
 9517              		.loc 1 4319 7
 9518 0066 7B68     		ldr	r3, [r7, #4]
 9519 0068 5B68     		ldr	r3, [r3, #4]
 9520 006a 5A69     		ldr	r2, [r3, #20]
 9521 006c 7B68     		ldr	r3, [r7, #4]
 9522 006e 5B68     		ldr	r3, [r3, #4]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 262


 9523 0070 22F48072 		bic	r2, r2, #256
 9524 0074 5A61     		str	r2, [r3, #20]
4320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Return function status */
4322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_OK;
 9525              		.loc 1 4322 14
 9526 0076 0023     		movs	r3, #0
 9527 0078 12E0     		b	.L519
 9528              	.L516:
4323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else
4325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code.
4327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****          Feature not supported for TT Level 0 */
4328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_SUPPORTED;
 9529              		.loc 1 4328 25
 9530 007a 7B68     		ldr	r3, [r7, #4]
 9531 007c D3F89C30 		ldr	r3, [r3, #156]
 9532 0080 43F01002 		orr	r2, r3, #16
 9533 0084 7B68     		ldr	r3, [r7, #4]
 9534 0086 C3F89C20 		str	r2, [r3, #156]
4329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 9535              		.loc 1 4330 14
 9536 008a 0123     		movs	r3, #1
 9537 008c 08E0     		b	.L519
 9538              	.L515:
4331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
4334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
4336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 9539              		.loc 1 4336 23
 9540 008e 7B68     		ldr	r3, [r7, #4]
 9541 0090 D3F89C30 		ldr	r3, [r3, #156]
 9542 0094 43F00202 		orr	r2, r3, #2
 9543 0098 7B68     		ldr	r3, [r7, #4]
 9544 009a C3F89C20 		str	r2, [r3, #156]
4337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 9545              		.loc 1 4338 12
 9546 009e 0123     		movs	r3, #1
 9547              	.L519:
4339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 9548              		.loc 1 4340 1
 9549 00a0 1846     		mov	r0, r3
 9550 00a2 1437     		adds	r7, r7, #20
 9551              	.LCFI506:
 9552              		.cfi_def_cfa_offset 4
 9553 00a4 BD46     		mov	sp, r7
 9554              	.LCFI507:
 9555              		.cfi_def_cfa_register 13
 9556              		@ sp needed
 9557 00a6 5DF8047B 		ldr	r7, [sp], #4
 9558              	.LCFI508:
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 263


 9559              		.cfi_restore 7
 9560              		.cfi_def_cfa_offset 0
 9561 00aa 7047     		bx	lr
 9562              		.cfi_endproc
 9563              	.LFE418:
 9565              		.section	.text.HAL_FDCAN_TT_EnableHardwareGapControl,"ax",%progbits
 9566              		.align	1
 9567              		.global	HAL_FDCAN_TT_EnableHardwareGapControl
 9568              		.syntax unified
 9569              		.thumb
 9570              		.thumb_func
 9572              	HAL_FDCAN_TT_EnableHardwareGapControl:
 9573              	.LFB419:
4341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
4343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Enable gap control by input pin fdcan1_evt.
4344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
4345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
4346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
4347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
4348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_TT_EnableHardwareGapControl(FDCAN_HandleTypeDef *hfdcan)
4349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 9574              		.loc 1 4349 1
 9575              		.cfi_startproc
 9576              		@ args = 0, pretend = 0, frame = 16
 9577              		@ frame_needed = 1, uses_anonymous_args = 0
 9578              		@ link register save eliminated.
 9579 0000 80B4     		push	{r7}
 9580              	.LCFI509:
 9581              		.cfi_def_cfa_offset 4
 9582              		.cfi_offset 7, -4
 9583 0002 85B0     		sub	sp, sp, #20
 9584              	.LCFI510:
 9585              		.cfi_def_cfa_offset 24
 9586 0004 00AF     		add	r7, sp, #0
 9587              	.LCFI511:
 9588              		.cfi_def_cfa_register 7
 9589 0006 7860     		str	r0, [r7, #4]
4350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t Counter = 0U;
 9590              		.loc 1 4350 12
 9591 0008 0023     		movs	r3, #0
 9592 000a FB60     		str	r3, [r7, #12]
4351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 9593              		.loc 1 4351 26
 9594 000c 7B68     		ldr	r3, [r7, #4]
 9595 000e 93F89830 		ldrb	r3, [r3, #152]
 9596 0012 FB72     		strb	r3, [r7, #11]
4352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
4354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_INSTANCE(hfdcan->Instance));
4355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 9597              		.loc 1 4356 6
 9598 0014 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 9599 0016 012B     		cmp	r3, #1
 9600 0018 02D0     		beq	.L522
 9601              		.loc 1 4356 40 discriminator 1
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 264


 9602 001a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 9603 001c 022B     		cmp	r3, #2
 9604 001e 36D1     		bne	.L523
 9605              	.L522:
4357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->ttcan->TTOCF & FDCAN_TTOCF_OM) != FDCAN_TT_COMMUNICATION_LEVEL0)
 9606              		.loc 1 4358 16
 9607 0020 7B68     		ldr	r3, [r7, #4]
 9608 0022 5B68     		ldr	r3, [r3, #4]
 9609              		.loc 1 4358 23
 9610 0024 9B68     		ldr	r3, [r3, #8]
 9611              		.loc 1 4358 31
 9612 0026 03F00303 		and	r3, r3, #3
 9613              		.loc 1 4358 8
 9614 002a 032B     		cmp	r3, #3
 9615 002c 25D0     		beq	.L524
4359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Wait until the LCKC bit into TTOCN register is reset */
4361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       while ((hfdcan->ttcan->TTOCN & FDCAN_TTOCN_LCKC) != 0U)
 9616              		.loc 1 4361 13
 9617 002e 13E0     		b	.L525
 9618              	.L528:
4362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
4363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Check for the Timeout */
4364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         if (Counter > FDCAN_TIMEOUT_COUNT)
 9619              		.loc 1 4364 12
 9620 0030 FB68     		ldr	r3, [r7, #12]
 9621 0032 322B     		cmp	r3, #50
 9622 0034 0DD9     		bls	.L526
4365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         {
4366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           /* Update error code */
4367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
 9623              		.loc 1 4367 29
 9624 0036 7B68     		ldr	r3, [r7, #4]
 9625 0038 D3F89C30 		ldr	r3, [r3, #156]
 9626 003c 43F00102 		orr	r2, r3, #1
 9627 0040 7B68     		ldr	r3, [r7, #4]
 9628 0042 C3F89C20 		str	r2, [r3, #156]
4368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           /* Change FDCAN state */
4370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           hfdcan->State = HAL_FDCAN_STATE_ERROR;
 9629              		.loc 1 4370 25
 9630 0046 7B68     		ldr	r3, [r7, #4]
 9631 0048 0322     		movs	r2, #3
 9632 004a 83F89820 		strb	r2, [r3, #152]
4371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           return HAL_ERROR;
 9633              		.loc 1 4372 18
 9634 004e 0123     		movs	r3, #1
 9635 0050 26E0     		b	.L527
 9636              	.L526:
4373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         }
4374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Increment counter */
4376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         Counter++;
 9637              		.loc 1 4376 16
 9638 0052 FB68     		ldr	r3, [r7, #12]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 265


 9639 0054 0133     		adds	r3, r3, #1
 9640 0056 FB60     		str	r3, [r7, #12]
 9641              	.L525:
4361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 9642              		.loc 1 4361 21
 9643 0058 7B68     		ldr	r3, [r7, #4]
 9644 005a 5B68     		ldr	r3, [r3, #4]
4361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 9645              		.loc 1 4361 28
 9646 005c 5B69     		ldr	r3, [r3, #20]
4361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 9647              		.loc 1 4361 36
 9648 005e 03F40043 		and	r3, r3, #32768
4361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 9649              		.loc 1 4361 13
 9650 0062 002B     		cmp	r3, #0
 9651 0064 E4D1     		bne	.L528
4377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
4378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Enable gap control by pin fdcan1_evt */
4380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       SET_BIT(hfdcan->ttcan->TTOCN, FDCAN_TTOCN_GCS);
 9652              		.loc 1 4380 7
 9653 0066 7B68     		ldr	r3, [r7, #4]
 9654 0068 5B68     		ldr	r3, [r3, #4]
 9655 006a 5A69     		ldr	r2, [r3, #20]
 9656 006c 7B68     		ldr	r3, [r7, #4]
 9657 006e 5B68     		ldr	r3, [r3, #4]
 9658 0070 42F40072 		orr	r2, r2, #512
 9659 0074 5A61     		str	r2, [r3, #20]
4381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Return function status */
4383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_OK;
 9660              		.loc 1 4383 14
 9661 0076 0023     		movs	r3, #0
 9662 0078 12E0     		b	.L527
 9663              	.L524:
4384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else
4386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code.
4388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****          Feature not supported for TT Level 0 */
4389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_SUPPORTED;
 9664              		.loc 1 4389 25
 9665 007a 7B68     		ldr	r3, [r7, #4]
 9666 007c D3F89C30 		ldr	r3, [r3, #156]
 9667 0080 43F01002 		orr	r2, r3, #16
 9668 0084 7B68     		ldr	r3, [r7, #4]
 9669 0086 C3F89C20 		str	r2, [r3, #156]
4390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 9670              		.loc 1 4391 14
 9671 008a 0123     		movs	r3, #1
 9672 008c 08E0     		b	.L527
 9673              	.L523:
4392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 266


4395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
4397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 9674              		.loc 1 4397 23
 9675 008e 7B68     		ldr	r3, [r7, #4]
 9676 0090 D3F89C30 		ldr	r3, [r3, #156]
 9677 0094 43F00202 		orr	r2, r3, #2
 9678 0098 7B68     		ldr	r3, [r7, #4]
 9679 009a C3F89C20 		str	r2, [r3, #156]
4398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 9680              		.loc 1 4399 12
 9681 009e 0123     		movs	r3, #1
 9682              	.L527:
4400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 9683              		.loc 1 4401 1
 9684 00a0 1846     		mov	r0, r3
 9685 00a2 1437     		adds	r7, r7, #20
 9686              	.LCFI512:
 9687              		.cfi_def_cfa_offset 4
 9688 00a4 BD46     		mov	sp, r7
 9689              	.LCFI513:
 9690              		.cfi_def_cfa_register 13
 9691              		@ sp needed
 9692 00a6 5DF8047B 		ldr	r7, [sp], #4
 9693              	.LCFI514:
 9694              		.cfi_restore 7
 9695              		.cfi_def_cfa_offset 0
 9696 00aa 7047     		bx	lr
 9697              		.cfi_endproc
 9698              	.LFE419:
 9700              		.section	.text.HAL_FDCAN_TT_DisableHardwareGapControl,"ax",%progbits
 9701              		.align	1
 9702              		.global	HAL_FDCAN_TT_DisableHardwareGapControl
 9703              		.syntax unified
 9704              		.thumb
 9705              		.thumb_func
 9707              	HAL_FDCAN_TT_DisableHardwareGapControl:
 9708              	.LFB420:
4402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
4404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Disable gap control by input pin fdcan1_evt.
4405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
4406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
4407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
4408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
4409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_TT_DisableHardwareGapControl(FDCAN_HandleTypeDef *hfdcan)
4410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 9709              		.loc 1 4410 1
 9710              		.cfi_startproc
 9711              		@ args = 0, pretend = 0, frame = 16
 9712              		@ frame_needed = 1, uses_anonymous_args = 0
 9713              		@ link register save eliminated.
 9714 0000 80B4     		push	{r7}
 9715              	.LCFI515:
 9716              		.cfi_def_cfa_offset 4
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 267


 9717              		.cfi_offset 7, -4
 9718 0002 85B0     		sub	sp, sp, #20
 9719              	.LCFI516:
 9720              		.cfi_def_cfa_offset 24
 9721 0004 00AF     		add	r7, sp, #0
 9722              	.LCFI517:
 9723              		.cfi_def_cfa_register 7
 9724 0006 7860     		str	r0, [r7, #4]
4411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t Counter = 0U;
 9725              		.loc 1 4411 12
 9726 0008 0023     		movs	r3, #0
 9727 000a FB60     		str	r3, [r7, #12]
4412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 9728              		.loc 1 4412 26
 9729 000c 7B68     		ldr	r3, [r7, #4]
 9730 000e 93F89830 		ldrb	r3, [r3, #152]
 9731 0012 FB72     		strb	r3, [r7, #11]
4413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
4415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_INSTANCE(hfdcan->Instance));
4416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 9732              		.loc 1 4417 6
 9733 0014 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 9734 0016 012B     		cmp	r3, #1
 9735 0018 02D0     		beq	.L530
 9736              		.loc 1 4417 40 discriminator 1
 9737 001a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 9738 001c 022B     		cmp	r3, #2
 9739 001e 36D1     		bne	.L531
 9740              	.L530:
4418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->ttcan->TTOCF & FDCAN_TTOCF_OM) != FDCAN_TT_COMMUNICATION_LEVEL0)
 9741              		.loc 1 4419 16
 9742 0020 7B68     		ldr	r3, [r7, #4]
 9743 0022 5B68     		ldr	r3, [r3, #4]
 9744              		.loc 1 4419 23
 9745 0024 9B68     		ldr	r3, [r3, #8]
 9746              		.loc 1 4419 31
 9747 0026 03F00303 		and	r3, r3, #3
 9748              		.loc 1 4419 8
 9749 002a 032B     		cmp	r3, #3
 9750 002c 25D0     		beq	.L532
4420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Wait until the LCKC bit into TTOCN register is reset */
4422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       while ((hfdcan->ttcan->TTOCN & FDCAN_TTOCN_LCKC) != 0U)
 9751              		.loc 1 4422 13
 9752 002e 13E0     		b	.L533
 9753              	.L536:
4423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
4424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Check for the Timeout */
4425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         if (Counter > FDCAN_TIMEOUT_COUNT)
 9754              		.loc 1 4425 12
 9755 0030 FB68     		ldr	r3, [r7, #12]
 9756 0032 322B     		cmp	r3, #50
 9757 0034 0DD9     		bls	.L534
4426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         {
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 268


4427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           /* Update error code */
4428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
 9758              		.loc 1 4428 29
 9759 0036 7B68     		ldr	r3, [r7, #4]
 9760 0038 D3F89C30 		ldr	r3, [r3, #156]
 9761 003c 43F00102 		orr	r2, r3, #1
 9762 0040 7B68     		ldr	r3, [r7, #4]
 9763 0042 C3F89C20 		str	r2, [r3, #156]
4429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           /* Change FDCAN state */
4431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           hfdcan->State = HAL_FDCAN_STATE_ERROR;
 9764              		.loc 1 4431 25
 9765 0046 7B68     		ldr	r3, [r7, #4]
 9766 0048 0322     		movs	r2, #3
 9767 004a 83F89820 		strb	r2, [r3, #152]
4432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           return HAL_ERROR;
 9768              		.loc 1 4433 18
 9769 004e 0123     		movs	r3, #1
 9770 0050 26E0     		b	.L535
 9771              	.L534:
4434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         }
4435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Increment counter */
4437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         Counter++;
 9772              		.loc 1 4437 16
 9773 0052 FB68     		ldr	r3, [r7, #12]
 9774 0054 0133     		adds	r3, r3, #1
 9775 0056 FB60     		str	r3, [r7, #12]
 9776              	.L533:
4422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 9777              		.loc 1 4422 21
 9778 0058 7B68     		ldr	r3, [r7, #4]
 9779 005a 5B68     		ldr	r3, [r3, #4]
4422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 9780              		.loc 1 4422 28
 9781 005c 5B69     		ldr	r3, [r3, #20]
4422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 9782              		.loc 1 4422 36
 9783 005e 03F40043 		and	r3, r3, #32768
4422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 9784              		.loc 1 4422 13
 9785 0062 002B     		cmp	r3, #0
 9786 0064 E4D1     		bne	.L536
4438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
4439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Disable gap control by pin fdcan1_evt */
4441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       CLEAR_BIT(hfdcan->ttcan->TTOCN, FDCAN_TTOCN_GCS);
 9787              		.loc 1 4441 7
 9788 0066 7B68     		ldr	r3, [r7, #4]
 9789 0068 5B68     		ldr	r3, [r3, #4]
 9790 006a 5A69     		ldr	r2, [r3, #20]
 9791 006c 7B68     		ldr	r3, [r7, #4]
 9792 006e 5B68     		ldr	r3, [r3, #4]
 9793 0070 22F40072 		bic	r2, r2, #512
 9794 0074 5A61     		str	r2, [r3, #20]
4442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 269


4443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Return function status */
4444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_OK;
 9795              		.loc 1 4444 14
 9796 0076 0023     		movs	r3, #0
 9797 0078 12E0     		b	.L535
 9798              	.L532:
4445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else
4447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code.
4449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****          Feature not supported for TT Level 0 */
4450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_SUPPORTED;
 9799              		.loc 1 4450 25
 9800 007a 7B68     		ldr	r3, [r7, #4]
 9801 007c D3F89C30 		ldr	r3, [r3, #156]
 9802 0080 43F01002 		orr	r2, r3, #16
 9803 0084 7B68     		ldr	r3, [r7, #4]
 9804 0086 C3F89C20 		str	r2, [r3, #156]
4451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 9805              		.loc 1 4452 14
 9806 008a 0123     		movs	r3, #1
 9807 008c 08E0     		b	.L535
 9808              	.L531:
4453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
4456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
4458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 9809              		.loc 1 4458 23
 9810 008e 7B68     		ldr	r3, [r7, #4]
 9811 0090 D3F89C30 		ldr	r3, [r3, #156]
 9812 0094 43F00202 		orr	r2, r3, #2
 9813 0098 7B68     		ldr	r3, [r7, #4]
 9814 009a C3F89C20 		str	r2, [r3, #156]
4459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 9815              		.loc 1 4460 12
 9816 009e 0123     		movs	r3, #1
 9817              	.L535:
4461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 9818              		.loc 1 4462 1
 9819 00a0 1846     		mov	r0, r3
 9820 00a2 1437     		adds	r7, r7, #20
 9821              	.LCFI518:
 9822              		.cfi_def_cfa_offset 4
 9823 00a4 BD46     		mov	sp, r7
 9824              	.LCFI519:
 9825              		.cfi_def_cfa_register 13
 9826              		@ sp needed
 9827 00a6 5DF8047B 		ldr	r7, [sp], #4
 9828              	.LCFI520:
 9829              		.cfi_restore 7
 9830              		.cfi_def_cfa_offset 0
 9831 00aa 7047     		bx	lr
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 270


 9832              		.cfi_endproc
 9833              	.LFE420:
 9835              		.section	.text.HAL_FDCAN_TT_EnableTimeMarkGapControl,"ax",%progbits
 9836              		.align	1
 9837              		.global	HAL_FDCAN_TT_EnableTimeMarkGapControl
 9838              		.syntax unified
 9839              		.thumb
 9840              		.thumb_func
 9842              	HAL_FDCAN_TT_EnableTimeMarkGapControl:
 9843              	.LFB421:
4463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
4465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Enable gap control (finish only) by register time mark interrupt.
4466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         The next register time mark interrupt (TTIR.RTMI = "1") will finish
4467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the Gap and start the reference message.
4468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
4469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
4470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
4471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
4472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_TT_EnableTimeMarkGapControl(FDCAN_HandleTypeDef *hfdcan)
4473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 9844              		.loc 1 4473 1
 9845              		.cfi_startproc
 9846              		@ args = 0, pretend = 0, frame = 16
 9847              		@ frame_needed = 1, uses_anonymous_args = 0
 9848              		@ link register save eliminated.
 9849 0000 80B4     		push	{r7}
 9850              	.LCFI521:
 9851              		.cfi_def_cfa_offset 4
 9852              		.cfi_offset 7, -4
 9853 0002 85B0     		sub	sp, sp, #20
 9854              	.LCFI522:
 9855              		.cfi_def_cfa_offset 24
 9856 0004 00AF     		add	r7, sp, #0
 9857              	.LCFI523:
 9858              		.cfi_def_cfa_register 7
 9859 0006 7860     		str	r0, [r7, #4]
4474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t Counter = 0U;
 9860              		.loc 1 4474 12
 9861 0008 0023     		movs	r3, #0
 9862 000a FB60     		str	r3, [r7, #12]
4475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 9863              		.loc 1 4475 26
 9864 000c 7B68     		ldr	r3, [r7, #4]
 9865 000e 93F89830 		ldrb	r3, [r3, #152]
 9866 0012 FB72     		strb	r3, [r7, #11]
4476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
4478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_INSTANCE(hfdcan->Instance));
4479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 9867              		.loc 1 4480 6
 9868 0014 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 9869 0016 012B     		cmp	r3, #1
 9870 0018 02D0     		beq	.L538
 9871              		.loc 1 4480 40 discriminator 1
 9872 001a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 271


 9873 001c 022B     		cmp	r3, #2
 9874 001e 36D1     		bne	.L539
 9875              	.L538:
4481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->ttcan->TTOCF & FDCAN_TTOCF_OM) != FDCAN_TT_COMMUNICATION_LEVEL0)
 9876              		.loc 1 4482 16
 9877 0020 7B68     		ldr	r3, [r7, #4]
 9878 0022 5B68     		ldr	r3, [r3, #4]
 9879              		.loc 1 4482 23
 9880 0024 9B68     		ldr	r3, [r3, #8]
 9881              		.loc 1 4482 31
 9882 0026 03F00303 		and	r3, r3, #3
 9883              		.loc 1 4482 8
 9884 002a 032B     		cmp	r3, #3
 9885 002c 25D0     		beq	.L540
4483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Wait until the LCKC bit into TTOCN register is reset */
4485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       while ((hfdcan->ttcan->TTOCN & FDCAN_TTOCN_LCKC) != 0U)
 9886              		.loc 1 4485 13
 9887 002e 13E0     		b	.L541
 9888              	.L544:
4486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
4487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Check for the Timeout */
4488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         if (Counter > FDCAN_TIMEOUT_COUNT)
 9889              		.loc 1 4488 12
 9890 0030 FB68     		ldr	r3, [r7, #12]
 9891 0032 322B     		cmp	r3, #50
 9892 0034 0DD9     		bls	.L542
4489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         {
4490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           /* Update error code */
4491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
 9893              		.loc 1 4491 29
 9894 0036 7B68     		ldr	r3, [r7, #4]
 9895 0038 D3F89C30 		ldr	r3, [r3, #156]
 9896 003c 43F00102 		orr	r2, r3, #1
 9897 0040 7B68     		ldr	r3, [r7, #4]
 9898 0042 C3F89C20 		str	r2, [r3, #156]
4492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           /* Change FDCAN state */
4494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           hfdcan->State = HAL_FDCAN_STATE_ERROR;
 9899              		.loc 1 4494 25
 9900 0046 7B68     		ldr	r3, [r7, #4]
 9901 0048 0322     		movs	r2, #3
 9902 004a 83F89820 		strb	r2, [r3, #152]
4495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           return HAL_ERROR;
 9903              		.loc 1 4496 18
 9904 004e 0123     		movs	r3, #1
 9905 0050 26E0     		b	.L543
 9906              	.L542:
4497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         }
4498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Increment counter */
4500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         Counter++;
 9907              		.loc 1 4500 16
 9908 0052 FB68     		ldr	r3, [r7, #12]
 9909 0054 0133     		adds	r3, r3, #1
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 272


 9910 0056 FB60     		str	r3, [r7, #12]
 9911              	.L541:
4485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 9912              		.loc 1 4485 21
 9913 0058 7B68     		ldr	r3, [r7, #4]
 9914 005a 5B68     		ldr	r3, [r3, #4]
4485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 9915              		.loc 1 4485 28
 9916 005c 5B69     		ldr	r3, [r3, #20]
4485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 9917              		.loc 1 4485 36
 9918 005e 03F40043 		and	r3, r3, #32768
4485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 9919              		.loc 1 4485 13
 9920 0062 002B     		cmp	r3, #0
 9921 0064 E4D1     		bne	.L544
4501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
4502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Enable gap control by register time mark interrupt */
4504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       SET_BIT(hfdcan->ttcan->TTOCN, FDCAN_TTOCN_TMG);
 9922              		.loc 1 4504 7
 9923 0066 7B68     		ldr	r3, [r7, #4]
 9924 0068 5B68     		ldr	r3, [r3, #4]
 9925 006a 5A69     		ldr	r2, [r3, #20]
 9926 006c 7B68     		ldr	r3, [r7, #4]
 9927 006e 5B68     		ldr	r3, [r3, #4]
 9928 0070 42F40062 		orr	r2, r2, #2048
 9929 0074 5A61     		str	r2, [r3, #20]
4505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Return function status */
4507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_OK;
 9930              		.loc 1 4507 14
 9931 0076 0023     		movs	r3, #0
 9932 0078 12E0     		b	.L543
 9933              	.L540:
4508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else
4510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code.
4512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****          Feature not supported for TT Level 0 */
4513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_SUPPORTED;
 9934              		.loc 1 4513 25
 9935 007a 7B68     		ldr	r3, [r7, #4]
 9936 007c D3F89C30 		ldr	r3, [r3, #156]
 9937 0080 43F01002 		orr	r2, r3, #16
 9938 0084 7B68     		ldr	r3, [r7, #4]
 9939 0086 C3F89C20 		str	r2, [r3, #156]
4514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 9940              		.loc 1 4515 14
 9941 008a 0123     		movs	r3, #1
 9942 008c 08E0     		b	.L543
 9943              	.L539:
4516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
4519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 273


4520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
4521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 9944              		.loc 1 4521 23
 9945 008e 7B68     		ldr	r3, [r7, #4]
 9946 0090 D3F89C30 		ldr	r3, [r3, #156]
 9947 0094 43F00202 		orr	r2, r3, #2
 9948 0098 7B68     		ldr	r3, [r7, #4]
 9949 009a C3F89C20 		str	r2, [r3, #156]
4522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 9950              		.loc 1 4523 12
 9951 009e 0123     		movs	r3, #1
 9952              	.L543:
4524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 9953              		.loc 1 4525 1
 9954 00a0 1846     		mov	r0, r3
 9955 00a2 1437     		adds	r7, r7, #20
 9956              	.LCFI524:
 9957              		.cfi_def_cfa_offset 4
 9958 00a4 BD46     		mov	sp, r7
 9959              	.LCFI525:
 9960              		.cfi_def_cfa_register 13
 9961              		@ sp needed
 9962 00a6 5DF8047B 		ldr	r7, [sp], #4
 9963              	.LCFI526:
 9964              		.cfi_restore 7
 9965              		.cfi_def_cfa_offset 0
 9966 00aa 7047     		bx	lr
 9967              		.cfi_endproc
 9968              	.LFE421:
 9970              		.section	.text.HAL_FDCAN_TT_DisableTimeMarkGapControl,"ax",%progbits
 9971              		.align	1
 9972              		.global	HAL_FDCAN_TT_DisableTimeMarkGapControl
 9973              		.syntax unified
 9974              		.thumb
 9975              		.thumb_func
 9977              	HAL_FDCAN_TT_DisableTimeMarkGapControl:
 9978              	.LFB422:
4526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
4528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Disable gap control by register time mark interrupt.
4529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
4530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
4531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
4532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
4533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_TT_DisableTimeMarkGapControl(FDCAN_HandleTypeDef *hfdcan)
4534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 9979              		.loc 1 4534 1
 9980              		.cfi_startproc
 9981              		@ args = 0, pretend = 0, frame = 16
 9982              		@ frame_needed = 1, uses_anonymous_args = 0
 9983              		@ link register save eliminated.
 9984 0000 80B4     		push	{r7}
 9985              	.LCFI527:
 9986              		.cfi_def_cfa_offset 4
 9987              		.cfi_offset 7, -4
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 274


 9988 0002 85B0     		sub	sp, sp, #20
 9989              	.LCFI528:
 9990              		.cfi_def_cfa_offset 24
 9991 0004 00AF     		add	r7, sp, #0
 9992              	.LCFI529:
 9993              		.cfi_def_cfa_register 7
 9994 0006 7860     		str	r0, [r7, #4]
4535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t Counter = 0U;
 9995              		.loc 1 4535 12
 9996 0008 0023     		movs	r3, #0
 9997 000a FB60     		str	r3, [r7, #12]
4536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 9998              		.loc 1 4536 26
 9999 000c 7B68     		ldr	r3, [r7, #4]
 10000 000e 93F89830 		ldrb	r3, [r3, #152]
 10001 0012 FB72     		strb	r3, [r7, #11]
4537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
4539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_INSTANCE(hfdcan->Instance));
4540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 10002              		.loc 1 4541 6
 10003 0014 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 10004 0016 012B     		cmp	r3, #1
 10005 0018 02D0     		beq	.L546
 10006              		.loc 1 4541 40 discriminator 1
 10007 001a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 10008 001c 022B     		cmp	r3, #2
 10009 001e 36D1     		bne	.L547
 10010              	.L546:
4542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->ttcan->TTOCF & FDCAN_TTOCF_OM) != FDCAN_TT_COMMUNICATION_LEVEL0)
 10011              		.loc 1 4543 16
 10012 0020 7B68     		ldr	r3, [r7, #4]
 10013 0022 5B68     		ldr	r3, [r3, #4]
 10014              		.loc 1 4543 23
 10015 0024 9B68     		ldr	r3, [r3, #8]
 10016              		.loc 1 4543 31
 10017 0026 03F00303 		and	r3, r3, #3
 10018              		.loc 1 4543 8
 10019 002a 032B     		cmp	r3, #3
 10020 002c 25D0     		beq	.L548
4544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Wait until the LCKC bit into TTOCN register is reset */
4546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       while ((hfdcan->ttcan->TTOCN & FDCAN_TTOCN_LCKC) != 0U)
 10021              		.loc 1 4546 13
 10022 002e 13E0     		b	.L549
 10023              	.L552:
4547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
4548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Check for the Timeout */
4549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         if (Counter > FDCAN_TIMEOUT_COUNT)
 10024              		.loc 1 4549 12
 10025 0030 FB68     		ldr	r3, [r7, #12]
 10026 0032 322B     		cmp	r3, #50
 10027 0034 0DD9     		bls	.L550
4550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         {
4551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           /* Update error code */
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 275


4552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
 10028              		.loc 1 4552 29
 10029 0036 7B68     		ldr	r3, [r7, #4]
 10030 0038 D3F89C30 		ldr	r3, [r3, #156]
 10031 003c 43F00102 		orr	r2, r3, #1
 10032 0040 7B68     		ldr	r3, [r7, #4]
 10033 0042 C3F89C20 		str	r2, [r3, #156]
4553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           /* Change FDCAN state */
4555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           hfdcan->State = HAL_FDCAN_STATE_ERROR;
 10034              		.loc 1 4555 25
 10035 0046 7B68     		ldr	r3, [r7, #4]
 10036 0048 0322     		movs	r2, #3
 10037 004a 83F89820 		strb	r2, [r3, #152]
4556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           return HAL_ERROR;
 10038              		.loc 1 4557 18
 10039 004e 0123     		movs	r3, #1
 10040 0050 26E0     		b	.L551
 10041              	.L550:
4558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         }
4559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Increment counter */
4561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         Counter++;
 10042              		.loc 1 4561 16
 10043 0052 FB68     		ldr	r3, [r7, #12]
 10044 0054 0133     		adds	r3, r3, #1
 10045 0056 FB60     		str	r3, [r7, #12]
 10046              	.L549:
4546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 10047              		.loc 1 4546 21
 10048 0058 7B68     		ldr	r3, [r7, #4]
 10049 005a 5B68     		ldr	r3, [r3, #4]
4546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 10050              		.loc 1 4546 28
 10051 005c 5B69     		ldr	r3, [r3, #20]
4546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 10052              		.loc 1 4546 36
 10053 005e 03F40043 		and	r3, r3, #32768
4546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 10054              		.loc 1 4546 13
 10055 0062 002B     		cmp	r3, #0
 10056 0064 E4D1     		bne	.L552
4562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
4563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Disable gap control by register time mark interrupt */
4565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       CLEAR_BIT(hfdcan->ttcan->TTOCN, FDCAN_TTOCN_TMG);
 10057              		.loc 1 4565 7
 10058 0066 7B68     		ldr	r3, [r7, #4]
 10059 0068 5B68     		ldr	r3, [r3, #4]
 10060 006a 5A69     		ldr	r2, [r3, #20]
 10061 006c 7B68     		ldr	r3, [r7, #4]
 10062 006e 5B68     		ldr	r3, [r3, #4]
 10063 0070 22F40062 		bic	r2, r2, #2048
 10064 0074 5A61     		str	r2, [r3, #20]
4566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Return function status */
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 276


4568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_OK;
 10065              		.loc 1 4568 14
 10066 0076 0023     		movs	r3, #0
 10067 0078 12E0     		b	.L551
 10068              	.L548:
4569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else
4571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code.
4573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****          Feature not supported for TT Level 0 */
4574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_SUPPORTED;
 10069              		.loc 1 4574 25
 10070 007a 7B68     		ldr	r3, [r7, #4]
 10071 007c D3F89C30 		ldr	r3, [r3, #156]
 10072 0080 43F01002 		orr	r2, r3, #16
 10073 0084 7B68     		ldr	r3, [r7, #4]
 10074 0086 C3F89C20 		str	r2, [r3, #156]
4575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 10075              		.loc 1 4576 14
 10076 008a 0123     		movs	r3, #1
 10077 008c 08E0     		b	.L551
 10078              	.L547:
4577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
4580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
4582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 10079              		.loc 1 4582 23
 10080 008e 7B68     		ldr	r3, [r7, #4]
 10081 0090 D3F89C30 		ldr	r3, [r3, #156]
 10082 0094 43F00202 		orr	r2, r3, #2
 10083 0098 7B68     		ldr	r3, [r7, #4]
 10084 009a C3F89C20 		str	r2, [r3, #156]
4583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 10085              		.loc 1 4584 12
 10086 009e 0123     		movs	r3, #1
 10087              	.L551:
4585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 10088              		.loc 1 4586 1
 10089 00a0 1846     		mov	r0, r3
 10090 00a2 1437     		adds	r7, r7, #20
 10091              	.LCFI530:
 10092              		.cfi_def_cfa_offset 4
 10093 00a4 BD46     		mov	sp, r7
 10094              	.LCFI531:
 10095              		.cfi_def_cfa_register 13
 10096              		@ sp needed
 10097 00a6 5DF8047B 		ldr	r7, [sp], #4
 10098              	.LCFI532:
 10099              		.cfi_restore 7
 10100              		.cfi_def_cfa_offset 0
 10101 00aa 7047     		bx	lr
 10102              		.cfi_endproc
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 277


 10103              	.LFE422:
 10105              		.section	.text.HAL_FDCAN_TT_SetNextIsGap,"ax",%progbits
 10106              		.align	1
 10107              		.global	HAL_FDCAN_TT_SetNextIsGap
 10108              		.syntax unified
 10109              		.thumb
 10110              		.thumb_func
 10112              	HAL_FDCAN_TT_SetNextIsGap:
 10113              	.LFB423:
4587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
4589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Transmit next reference message with Next_is_Gap = "1".
4590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
4591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
4592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
4593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
4594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_TT_SetNextIsGap(FDCAN_HandleTypeDef *hfdcan)
4595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 10114              		.loc 1 4595 1
 10115              		.cfi_startproc
 10116              		@ args = 0, pretend = 0, frame = 16
 10117              		@ frame_needed = 1, uses_anonymous_args = 0
 10118              		@ link register save eliminated.
 10119 0000 80B4     		push	{r7}
 10120              	.LCFI533:
 10121              		.cfi_def_cfa_offset 4
 10122              		.cfi_offset 7, -4
 10123 0002 85B0     		sub	sp, sp, #20
 10124              	.LCFI534:
 10125              		.cfi_def_cfa_offset 24
 10126 0004 00AF     		add	r7, sp, #0
 10127              	.LCFI535:
 10128              		.cfi_def_cfa_register 7
 10129 0006 7860     		str	r0, [r7, #4]
4596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t Counter = 0U;
 10130              		.loc 1 4596 12
 10131 0008 0023     		movs	r3, #0
 10132 000a FB60     		str	r3, [r7, #12]
4597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 10133              		.loc 1 4597 26
 10134 000c 7B68     		ldr	r3, [r7, #4]
 10135 000e 93F89830 		ldrb	r3, [r3, #152]
 10136 0012 FB72     		strb	r3, [r7, #11]
4598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
4600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_INSTANCE(hfdcan->Instance));
4601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 10137              		.loc 1 4602 6
 10138 0014 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 10139 0016 012B     		cmp	r3, #1
 10140 0018 02D0     		beq	.L554
 10141              		.loc 1 4602 40 discriminator 1
 10142 001a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 10143 001c 022B     		cmp	r3, #2
 10144 001e 47D1     		bne	.L555
 10145              	.L554:
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 278


4603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Check that the node is configured for external event-synchronized TT operation */
4605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->ttcan->TTOCF & FDCAN_TTOCF_GEN) != FDCAN_TTOCF_GEN)
 10146              		.loc 1 4605 16
 10147 0020 7B68     		ldr	r3, [r7, #4]
 10148 0022 5B68     		ldr	r3, [r3, #4]
 10149              		.loc 1 4605 23
 10150 0024 9B68     		ldr	r3, [r3, #8]
 10151              		.loc 1 4605 31
 10152 0026 03F00803 		and	r3, r3, #8
 10153              		.loc 1 4605 8
 10154 002a 082B     		cmp	r3, #8
 10155 002c 09D0     		beq	.L556
4606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code */
4608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_SUPPORTED;
 10156              		.loc 1 4608 25
 10157 002e 7B68     		ldr	r3, [r7, #4]
 10158 0030 D3F89C30 		ldr	r3, [r3, #156]
 10159 0034 43F01002 		orr	r2, r3, #16
 10160 0038 7B68     		ldr	r3, [r7, #4]
 10161 003a C3F89C20 		str	r2, [r3, #156]
4609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 10162              		.loc 1 4610 14
 10163 003e 0123     		movs	r3, #1
 10164 0040 3FE0     		b	.L557
 10165              	.L556:
4611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->ttcan->TTOCF & FDCAN_TTOCF_OM) != FDCAN_TT_COMMUNICATION_LEVEL0)
 10166              		.loc 1 4613 16
 10167 0042 7B68     		ldr	r3, [r7, #4]
 10168 0044 5B68     		ldr	r3, [r3, #4]
 10169              		.loc 1 4613 23
 10170 0046 9B68     		ldr	r3, [r3, #8]
 10171              		.loc 1 4613 31
 10172 0048 03F00303 		and	r3, r3, #3
 10173              		.loc 1 4613 8
 10174 004c 032B     		cmp	r3, #3
 10175 004e 25D0     		beq	.L558
4614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Wait until the LCKC bit into TTOCN register is reset */
4616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       while ((hfdcan->ttcan->TTOCN & FDCAN_TTOCN_LCKC) != 0U)
 10176              		.loc 1 4616 13
 10177 0050 13E0     		b	.L559
 10178              	.L561:
4617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
4618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Check for the Timeout */
4619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         if (Counter > FDCAN_TIMEOUT_COUNT)
 10179              		.loc 1 4619 12
 10180 0052 FB68     		ldr	r3, [r7, #12]
 10181 0054 322B     		cmp	r3, #50
 10182 0056 0DD9     		bls	.L560
4620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         {
4621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           /* Update error code */
4622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 279


 10183              		.loc 1 4622 29
 10184 0058 7B68     		ldr	r3, [r7, #4]
 10185 005a D3F89C30 		ldr	r3, [r3, #156]
 10186 005e 43F00102 		orr	r2, r3, #1
 10187 0062 7B68     		ldr	r3, [r7, #4]
 10188 0064 C3F89C20 		str	r2, [r3, #156]
4623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           /* Change FDCAN state */
4625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           hfdcan->State = HAL_FDCAN_STATE_ERROR;
 10189              		.loc 1 4625 25
 10190 0068 7B68     		ldr	r3, [r7, #4]
 10191 006a 0322     		movs	r2, #3
 10192 006c 83F89820 		strb	r2, [r3, #152]
4626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           return HAL_ERROR;
 10193              		.loc 1 4627 18
 10194 0070 0123     		movs	r3, #1
 10195 0072 26E0     		b	.L557
 10196              	.L560:
4628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         }
4629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Increment counter */
4631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         Counter++;
 10197              		.loc 1 4631 16
 10198 0074 FB68     		ldr	r3, [r7, #12]
 10199 0076 0133     		adds	r3, r3, #1
 10200 0078 FB60     		str	r3, [r7, #12]
 10201              	.L559:
4616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 10202              		.loc 1 4616 21
 10203 007a 7B68     		ldr	r3, [r7, #4]
 10204 007c 5B68     		ldr	r3, [r3, #4]
4616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 10205              		.loc 1 4616 28
 10206 007e 5B69     		ldr	r3, [r3, #20]
4616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 10207              		.loc 1 4616 36
 10208 0080 03F40043 		and	r3, r3, #32768
4616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 10209              		.loc 1 4616 13
 10210 0084 002B     		cmp	r3, #0
 10211 0086 E4D1     		bne	.L561
4632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
4633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Set Next is Gap */
4635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       SET_BIT(hfdcan->ttcan->TTOCN, FDCAN_TTOCN_NIG);
 10212              		.loc 1 4635 7
 10213 0088 7B68     		ldr	r3, [r7, #4]
 10214 008a 5B68     		ldr	r3, [r3, #4]
 10215 008c 5A69     		ldr	r2, [r3, #20]
 10216 008e 7B68     		ldr	r3, [r7, #4]
 10217 0090 5B68     		ldr	r3, [r3, #4]
 10218 0092 42F48052 		orr	r2, r2, #4096
 10219 0096 5A61     		str	r2, [r3, #20]
4636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Return function status */
4638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_OK;
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 280


 10220              		.loc 1 4638 14
 10221 0098 0023     		movs	r3, #0
 10222 009a 12E0     		b	.L557
 10223              	.L558:
4639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else
4641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code.
4643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****          Feature not supported for TT Level 0 */
4644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_SUPPORTED;
 10224              		.loc 1 4644 25
 10225 009c 7B68     		ldr	r3, [r7, #4]
 10226 009e D3F89C30 		ldr	r3, [r3, #156]
 10227 00a2 43F01002 		orr	r2, r3, #16
 10228 00a6 7B68     		ldr	r3, [r7, #4]
 10229 00a8 C3F89C20 		str	r2, [r3, #156]
4645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 10230              		.loc 1 4646 14
 10231 00ac 0123     		movs	r3, #1
 10232 00ae 08E0     		b	.L557
 10233              	.L555:
4647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
4650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
4652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 10234              		.loc 1 4652 23
 10235 00b0 7B68     		ldr	r3, [r7, #4]
 10236 00b2 D3F89C30 		ldr	r3, [r3, #156]
 10237 00b6 43F00202 		orr	r2, r3, #2
 10238 00ba 7B68     		ldr	r3, [r7, #4]
 10239 00bc C3F89C20 		str	r2, [r3, #156]
4653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 10240              		.loc 1 4654 12
 10241 00c0 0123     		movs	r3, #1
 10242              	.L557:
4655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 10243              		.loc 1 4656 1
 10244 00c2 1846     		mov	r0, r3
 10245 00c4 1437     		adds	r7, r7, #20
 10246              	.LCFI536:
 10247              		.cfi_def_cfa_offset 4
 10248 00c6 BD46     		mov	sp, r7
 10249              	.LCFI537:
 10250              		.cfi_def_cfa_register 13
 10251              		@ sp needed
 10252 00c8 5DF8047B 		ldr	r7, [sp], #4
 10253              	.LCFI538:
 10254              		.cfi_restore 7
 10255              		.cfi_def_cfa_offset 0
 10256 00cc 7047     		bx	lr
 10257              		.cfi_endproc
 10258              	.LFE423:
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 281


 10260              		.section	.text.HAL_FDCAN_TT_SetEndOfGap,"ax",%progbits
 10261              		.align	1
 10262              		.global	HAL_FDCAN_TT_SetEndOfGap
 10263              		.syntax unified
 10264              		.thumb
 10265              		.thumb_func
 10267              	HAL_FDCAN_TT_SetEndOfGap:
 10268              	.LFB424:
4657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
4659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Finish a Gap by requesting start of reference message.
4660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
4661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
4662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
4663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
4664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_TT_SetEndOfGap(FDCAN_HandleTypeDef *hfdcan)
4665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 10269              		.loc 1 4665 1
 10270              		.cfi_startproc
 10271              		@ args = 0, pretend = 0, frame = 16
 10272              		@ frame_needed = 1, uses_anonymous_args = 0
 10273              		@ link register save eliminated.
 10274 0000 80B4     		push	{r7}
 10275              	.LCFI539:
 10276              		.cfi_def_cfa_offset 4
 10277              		.cfi_offset 7, -4
 10278 0002 85B0     		sub	sp, sp, #20
 10279              	.LCFI540:
 10280              		.cfi_def_cfa_offset 24
 10281 0004 00AF     		add	r7, sp, #0
 10282              	.LCFI541:
 10283              		.cfi_def_cfa_register 7
 10284 0006 7860     		str	r0, [r7, #4]
4666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t Counter = 0U;
 10285              		.loc 1 4666 12
 10286 0008 0023     		movs	r3, #0
 10287 000a FB60     		str	r3, [r7, #12]
4667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 10288              		.loc 1 4667 26
 10289 000c 7B68     		ldr	r3, [r7, #4]
 10290 000e 93F89830 		ldrb	r3, [r3, #152]
 10291 0012 FB72     		strb	r3, [r7, #11]
4668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
4670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_INSTANCE(hfdcan->Instance));
4671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 10292              		.loc 1 4672 6
 10293 0014 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 10294 0016 012B     		cmp	r3, #1
 10295 0018 02D0     		beq	.L563
 10296              		.loc 1 4672 40 discriminator 1
 10297 001a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 10298 001c 022B     		cmp	r3, #2
 10299 001e 47D1     		bne	.L564
 10300              	.L563:
4673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 282


4674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Check that the node is configured for external event-synchronized TT operation */
4675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->ttcan->TTOCF & FDCAN_TTOCF_GEN) != FDCAN_TTOCF_GEN)
 10301              		.loc 1 4675 16
 10302 0020 7B68     		ldr	r3, [r7, #4]
 10303 0022 5B68     		ldr	r3, [r3, #4]
 10304              		.loc 1 4675 23
 10305 0024 9B68     		ldr	r3, [r3, #8]
 10306              		.loc 1 4675 31
 10307 0026 03F00803 		and	r3, r3, #8
 10308              		.loc 1 4675 8
 10309 002a 082B     		cmp	r3, #8
 10310 002c 09D0     		beq	.L565
4676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code */
4678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_SUPPORTED;
 10311              		.loc 1 4678 25
 10312 002e 7B68     		ldr	r3, [r7, #4]
 10313 0030 D3F89C30 		ldr	r3, [r3, #156]
 10314 0034 43F01002 		orr	r2, r3, #16
 10315 0038 7B68     		ldr	r3, [r7, #4]
 10316 003a C3F89C20 		str	r2, [r3, #156]
4679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 10317              		.loc 1 4680 14
 10318 003e 0123     		movs	r3, #1
 10319 0040 3FE0     		b	.L566
 10320              	.L565:
4681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->ttcan->TTOCF & FDCAN_TTOCF_OM) != FDCAN_TT_COMMUNICATION_LEVEL0)
 10321              		.loc 1 4683 16
 10322 0042 7B68     		ldr	r3, [r7, #4]
 10323 0044 5B68     		ldr	r3, [r3, #4]
 10324              		.loc 1 4683 23
 10325 0046 9B68     		ldr	r3, [r3, #8]
 10326              		.loc 1 4683 31
 10327 0048 03F00303 		and	r3, r3, #3
 10328              		.loc 1 4683 8
 10329 004c 032B     		cmp	r3, #3
 10330 004e 25D0     		beq	.L567
4684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Wait until the LCKC bit into TTOCN register is reset */
4686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       while ((hfdcan->ttcan->TTOCN & FDCAN_TTOCN_LCKC) != 0U)
 10331              		.loc 1 4686 13
 10332 0050 13E0     		b	.L568
 10333              	.L570:
4687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
4688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Check for the Timeout */
4689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         if (Counter > FDCAN_TIMEOUT_COUNT)
 10334              		.loc 1 4689 12
 10335 0052 FB68     		ldr	r3, [r7, #12]
 10336 0054 322B     		cmp	r3, #50
 10337 0056 0DD9     		bls	.L569
4690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         {
4691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           /* Update error code */
4692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
 10338              		.loc 1 4692 29
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 283


 10339 0058 7B68     		ldr	r3, [r7, #4]
 10340 005a D3F89C30 		ldr	r3, [r3, #156]
 10341 005e 43F00102 		orr	r2, r3, #1
 10342 0062 7B68     		ldr	r3, [r7, #4]
 10343 0064 C3F89C20 		str	r2, [r3, #156]
4693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           /* Change FDCAN state */
4695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           hfdcan->State = HAL_FDCAN_STATE_ERROR;
 10344              		.loc 1 4695 25
 10345 0068 7B68     		ldr	r3, [r7, #4]
 10346 006a 0322     		movs	r2, #3
 10347 006c 83F89820 		strb	r2, [r3, #152]
4696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           return HAL_ERROR;
 10348              		.loc 1 4697 18
 10349 0070 0123     		movs	r3, #1
 10350 0072 26E0     		b	.L566
 10351              	.L569:
4698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         }
4699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Increment counter */
4701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         Counter++;
 10352              		.loc 1 4701 16
 10353 0074 FB68     		ldr	r3, [r7, #12]
 10354 0076 0133     		adds	r3, r3, #1
 10355 0078 FB60     		str	r3, [r7, #12]
 10356              	.L568:
4686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 10357              		.loc 1 4686 21
 10358 007a 7B68     		ldr	r3, [r7, #4]
 10359 007c 5B68     		ldr	r3, [r3, #4]
4686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 10360              		.loc 1 4686 28
 10361 007e 5B69     		ldr	r3, [r3, #20]
4686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 10362              		.loc 1 4686 36
 10363 0080 03F40043 		and	r3, r3, #32768
4686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
 10364              		.loc 1 4686 13
 10365 0084 002B     		cmp	r3, #0
 10366 0086 E4D1     		bne	.L570
4702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
4703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Set Finish Gap */
4705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       SET_BIT(hfdcan->ttcan->TTOCN, FDCAN_TTOCN_FGP);
 10367              		.loc 1 4705 7
 10368 0088 7B68     		ldr	r3, [r7, #4]
 10369 008a 5B68     		ldr	r3, [r3, #4]
 10370 008c 5A69     		ldr	r2, [r3, #20]
 10371 008e 7B68     		ldr	r3, [r7, #4]
 10372 0090 5B68     		ldr	r3, [r3, #4]
 10373 0092 42F48062 		orr	r2, r2, #1024
 10374 0096 5A61     		str	r2, [r3, #20]
4706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Return function status */
4708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_OK;
 10375              		.loc 1 4708 14
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 284


 10376 0098 0023     		movs	r3, #0
 10377 009a 12E0     		b	.L566
 10378              	.L567:
4709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else
4711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code.
4713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****          Feature not supported for TT Level 0 */
4714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_SUPPORTED;
 10379              		.loc 1 4714 25
 10380 009c 7B68     		ldr	r3, [r7, #4]
 10381 009e D3F89C30 		ldr	r3, [r3, #156]
 10382 00a2 43F01002 		orr	r2, r3, #16
 10383 00a6 7B68     		ldr	r3, [r7, #4]
 10384 00a8 C3F89C20 		str	r2, [r3, #156]
4715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 10385              		.loc 1 4716 14
 10386 00ac 0123     		movs	r3, #1
 10387 00ae 08E0     		b	.L566
 10388              	.L564:
4717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
4720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
4722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 10389              		.loc 1 4722 23
 10390 00b0 7B68     		ldr	r3, [r7, #4]
 10391 00b2 D3F89C30 		ldr	r3, [r3, #156]
 10392 00b6 43F00202 		orr	r2, r3, #2
 10393 00ba 7B68     		ldr	r3, [r7, #4]
 10394 00bc C3F89C20 		str	r2, [r3, #156]
4723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 10395              		.loc 1 4724 12
 10396 00c0 0123     		movs	r3, #1
 10397              	.L566:
4725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 10398              		.loc 1 4726 1
 10399 00c2 1846     		mov	r0, r3
 10400 00c4 1437     		adds	r7, r7, #20
 10401              	.LCFI542:
 10402              		.cfi_def_cfa_offset 4
 10403 00c6 BD46     		mov	sp, r7
 10404              	.LCFI543:
 10405              		.cfi_def_cfa_register 13
 10406              		@ sp needed
 10407 00c8 5DF8047B 		ldr	r7, [sp], #4
 10408              	.LCFI544:
 10409              		.cfi_restore 7
 10410              		.cfi_def_cfa_offset 0
 10411 00cc 7047     		bx	lr
 10412              		.cfi_endproc
 10413              	.LFE424:
 10415              		.section	.text.HAL_FDCAN_TT_ConfigExternalSyncPhase,"ax",%progbits
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 285


 10416              		.align	1
 10417              		.global	HAL_FDCAN_TT_ConfigExternalSyncPhase
 10418              		.syntax unified
 10419              		.thumb
 10420              		.thumb_func
 10422              	HAL_FDCAN_TT_ConfigExternalSyncPhase:
 10423              	.LFB425:
4727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
4729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Configure target phase used for external synchronization by event
4730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         trigger input pin fdcan1_evt.
4731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
4732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
4733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  TargetPhase defines target value of cycle time when a rising edge
4734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         of fdcan1_evt is expected.
4735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter must be a number between 0 and 0xFFFF.
4736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
4737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
4738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_TT_ConfigExternalSyncPhase(FDCAN_HandleTypeDef *hfdcan, uint32_t Target
4739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 10424              		.loc 1 4739 1
 10425              		.cfi_startproc
 10426              		@ args = 0, pretend = 0, frame = 16
 10427              		@ frame_needed = 1, uses_anonymous_args = 0
 10428              		@ link register save eliminated.
 10429 0000 80B4     		push	{r7}
 10430              	.LCFI545:
 10431              		.cfi_def_cfa_offset 4
 10432              		.cfi_offset 7, -4
 10433 0002 85B0     		sub	sp, sp, #20
 10434              	.LCFI546:
 10435              		.cfi_def_cfa_offset 24
 10436 0004 00AF     		add	r7, sp, #0
 10437              	.LCFI547:
 10438              		.cfi_def_cfa_register 7
 10439 0006 7860     		str	r0, [r7, #4]
 10440 0008 3960     		str	r1, [r7]
4740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 10441              		.loc 1 4740 26
 10442 000a 7B68     		ldr	r3, [r7, #4]
 10443 000c 93F89830 		ldrb	r3, [r3, #152]
 10444 0010 FB73     		strb	r3, [r7, #15]
4741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
4743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_INSTANCE(hfdcan->Instance));
4744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_MAX_VALUE(TargetPhase, 0xFFFFU));
4745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 10445              		.loc 1 4746 6
 10446 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 10447 0014 012B     		cmp	r3, #1
 10448 0016 02D0     		beq	.L572
 10449              		.loc 1 4746 40 discriminator 1
 10450 0018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 10451 001a 022B     		cmp	r3, #2
 10452 001c 1DD1     		bne	.L573
 10453              	.L572:
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 286


4747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Check that no external schedule synchronization is pending */
4749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->ttcan->TTOCN & FDCAN_TTOCN_ESCN) == FDCAN_TTOCN_ESCN)
 10454              		.loc 1 4749 16
 10455 001e 7B68     		ldr	r3, [r7, #4]
 10456 0020 5B68     		ldr	r3, [r3, #4]
 10457              		.loc 1 4749 23
 10458 0022 5B69     		ldr	r3, [r3, #20]
 10459              		.loc 1 4749 31
 10460 0024 03F40053 		and	r3, r3, #8192
 10461              		.loc 1 4749 8
 10462 0028 B3F5005F 		cmp	r3, #8192
 10463 002c 09D1     		bne	.L574
4750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code */
4752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_PENDING;
 10464              		.loc 1 4752 25
 10465 002e 7B68     		ldr	r3, [r7, #4]
 10466 0030 D3F89C30 		ldr	r3, [r3, #156]
 10467 0034 43F04002 		orr	r2, r3, #64
 10468 0038 7B68     		ldr	r3, [r7, #4]
 10469 003a C3F89C20 		str	r2, [r3, #156]
4753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       return HAL_ERROR;
 10470              		.loc 1 4754 14
 10471 003e 0123     		movs	r3, #1
 10472 0040 14E0     		b	.L575
 10473              	.L574:
4755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Configure cycle time target phase */
4758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     MODIFY_REG(hfdcan->ttcan->TTGTP, FDCAN_TTGTP_CTP, (TargetPhase << FDCAN_TTGTP_CTP_Pos));
 10474              		.loc 1 4758 5
 10475 0042 7B68     		ldr	r3, [r7, #4]
 10476 0044 5B68     		ldr	r3, [r3, #4]
 10477 0046 9B69     		ldr	r3, [r3, #24]
 10478 0048 99B2     		uxth	r1, r3
 10479 004a 3B68     		ldr	r3, [r7]
 10480 004c 1A04     		lsls	r2, r3, #16
 10481 004e 7B68     		ldr	r3, [r7, #4]
 10482 0050 5B68     		ldr	r3, [r3, #4]
 10483 0052 0A43     		orrs	r2, r2, r1
 10484 0054 9A61     		str	r2, [r3, #24]
4759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
4761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 10485              		.loc 1 4761 12
 10486 0056 0023     		movs	r3, #0
 10487 0058 08E0     		b	.L575
 10488              	.L573:
4762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
4764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
4766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 10489              		.loc 1 4766 23
 10490 005a 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 287


 10491 005c D3F89C30 		ldr	r3, [r3, #156]
 10492 0060 43F00202 		orr	r2, r3, #2
 10493 0064 7B68     		ldr	r3, [r7, #4]
 10494 0066 C3F89C20 		str	r2, [r3, #156]
4767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 10495              		.loc 1 4768 12
 10496 006a 0123     		movs	r3, #1
 10497              	.L575:
4769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 10498              		.loc 1 4770 1
 10499 006c 1846     		mov	r0, r3
 10500 006e 1437     		adds	r7, r7, #20
 10501              	.LCFI548:
 10502              		.cfi_def_cfa_offset 4
 10503 0070 BD46     		mov	sp, r7
 10504              	.LCFI549:
 10505              		.cfi_def_cfa_register 13
 10506              		@ sp needed
 10507 0072 5DF8047B 		ldr	r7, [sp], #4
 10508              	.LCFI550:
 10509              		.cfi_restore 7
 10510              		.cfi_def_cfa_offset 0
 10511 0076 7047     		bx	lr
 10512              		.cfi_endproc
 10513              	.LFE425:
 10515              		.section	.text.HAL_FDCAN_TT_EnableExternalSynchronization,"ax",%progbits
 10516              		.align	1
 10517              		.global	HAL_FDCAN_TT_EnableExternalSynchronization
 10518              		.syntax unified
 10519              		.thumb
 10520              		.thumb_func
 10522              	HAL_FDCAN_TT_EnableExternalSynchronization:
 10523              	.LFB426:
4771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
4773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Synchronize the phase of the FDCAN schedule to an external schedule
4774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         using event trigger input pin fdcan1_evt.
4775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
4776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
4777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
4778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
4779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_TT_EnableExternalSynchronization(FDCAN_HandleTypeDef *hfdcan)
4780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 10524              		.loc 1 4780 1
 10525              		.cfi_startproc
 10526              		@ args = 0, pretend = 0, frame = 16
 10527              		@ frame_needed = 1, uses_anonymous_args = 0
 10528              		@ link register save eliminated.
 10529 0000 80B4     		push	{r7}
 10530              	.LCFI551:
 10531              		.cfi_def_cfa_offset 4
 10532              		.cfi_offset 7, -4
 10533 0002 85B0     		sub	sp, sp, #20
 10534              	.LCFI552:
 10535              		.cfi_def_cfa_offset 24
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 288


 10536 0004 00AF     		add	r7, sp, #0
 10537              	.LCFI553:
 10538              		.cfi_def_cfa_register 7
 10539 0006 7860     		str	r0, [r7, #4]
4781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t Counter = 0U;
 10540              		.loc 1 4781 12
 10541 0008 0023     		movs	r3, #0
 10542 000a FB60     		str	r3, [r7, #12]
4782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 10543              		.loc 1 4782 26
 10544 000c 7B68     		ldr	r3, [r7, #4]
 10545 000e 93F89830 		ldrb	r3, [r3, #152]
 10546 0012 FB72     		strb	r3, [r7, #11]
4783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
4785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_INSTANCE(hfdcan->Instance));
4786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 10547              		.loc 1 4787 6
 10548 0014 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 10549 0016 012B     		cmp	r3, #1
 10550 0018 17D0     		beq	.L579
 10551              		.loc 1 4787 40 discriminator 1
 10552 001a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 10553 001c 022B     		cmp	r3, #2
 10554 001e 25D1     		bne	.L578
4788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Wait until the LCKC bit into TTOCN register is reset */
4790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     while ((hfdcan->ttcan->TTOCN & FDCAN_TTOCN_LCKC) != 0U)
 10555              		.loc 1 4790 11
 10556 0020 13E0     		b	.L579
 10557              	.L582:
4791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Check for the Timeout */
4793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if (Counter > FDCAN_TIMEOUT_COUNT)
 10558              		.loc 1 4793 10
 10559 0022 FB68     		ldr	r3, [r7, #12]
 10560 0024 322B     		cmp	r3, #50
 10561 0026 0DD9     		bls	.L580
4794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
4795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Update error code */
4796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
 10562              		.loc 1 4796 27
 10563 0028 7B68     		ldr	r3, [r7, #4]
 10564 002a D3F89C30 		ldr	r3, [r3, #156]
 10565 002e 43F00102 		orr	r2, r3, #1
 10566 0032 7B68     		ldr	r3, [r7, #4]
 10567 0034 C3F89C20 		str	r2, [r3, #156]
4797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Change FDCAN state */
4799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->State = HAL_FDCAN_STATE_ERROR;
 10568              		.loc 1 4799 23
 10569 0038 7B68     		ldr	r3, [r7, #4]
 10570 003a 0322     		movs	r2, #3
 10571 003c 83F89820 		strb	r2, [r3, #152]
4800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         return HAL_ERROR;
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 289


 10572              		.loc 1 4801 16
 10573 0040 0123     		movs	r3, #1
 10574 0042 1CE0     		b	.L581
 10575              	.L580:
4802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
4803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Increment counter */
4805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       Counter++;
 10576              		.loc 1 4805 14
 10577 0044 FB68     		ldr	r3, [r7, #12]
 10578 0046 0133     		adds	r3, r3, #1
 10579 0048 FB60     		str	r3, [r7, #12]
 10580              	.L579:
4790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 10581              		.loc 1 4790 19
 10582 004a 7B68     		ldr	r3, [r7, #4]
 10583 004c 5B68     		ldr	r3, [r3, #4]
4790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 10584              		.loc 1 4790 26
 10585 004e 5B69     		ldr	r3, [r3, #20]
4790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 10586              		.loc 1 4790 34
 10587 0050 03F40043 		and	r3, r3, #32768
4790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 10588              		.loc 1 4790 11
 10589 0054 002B     		cmp	r3, #0
 10590 0056 E4D1     		bne	.L582
4806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Enable external synchronization */
4809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     SET_BIT(hfdcan->ttcan->TTOCN, FDCAN_TTOCN_ESCN);
 10591              		.loc 1 4809 5
 10592 0058 7B68     		ldr	r3, [r7, #4]
 10593 005a 5B68     		ldr	r3, [r3, #4]
 10594 005c 5A69     		ldr	r2, [r3, #20]
 10595 005e 7B68     		ldr	r3, [r7, #4]
 10596 0060 5B68     		ldr	r3, [r3, #4]
 10597 0062 42F40052 		orr	r2, r2, #8192
 10598 0066 5A61     		str	r2, [r3, #20]
4810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
4812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 10599              		.loc 1 4812 12
 10600 0068 0023     		movs	r3, #0
 10601 006a 08E0     		b	.L581
 10602              	.L578:
4813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
4815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
4817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 10603              		.loc 1 4817 23
 10604 006c 7B68     		ldr	r3, [r7, #4]
 10605 006e D3F89C30 		ldr	r3, [r3, #156]
 10606 0072 43F00202 		orr	r2, r3, #2
 10607 0076 7B68     		ldr	r3, [r7, #4]
 10608 0078 C3F89C20 		str	r2, [r3, #156]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 290


4818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 10609              		.loc 1 4819 12
 10610 007c 0123     		movs	r3, #1
 10611              	.L581:
4820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 10612              		.loc 1 4821 1
 10613 007e 1846     		mov	r0, r3
 10614 0080 1437     		adds	r7, r7, #20
 10615              	.LCFI554:
 10616              		.cfi_def_cfa_offset 4
 10617 0082 BD46     		mov	sp, r7
 10618              	.LCFI555:
 10619              		.cfi_def_cfa_register 13
 10620              		@ sp needed
 10621 0084 5DF8047B 		ldr	r7, [sp], #4
 10622              	.LCFI556:
 10623              		.cfi_restore 7
 10624              		.cfi_def_cfa_offset 0
 10625 0088 7047     		bx	lr
 10626              		.cfi_endproc
 10627              	.LFE426:
 10629              		.section	.text.HAL_FDCAN_TT_DisableExternalSynchronization,"ax",%progbits
 10630              		.align	1
 10631              		.global	HAL_FDCAN_TT_DisableExternalSynchronization
 10632              		.syntax unified
 10633              		.thumb
 10634              		.thumb_func
 10636              	HAL_FDCAN_TT_DisableExternalSynchronization:
 10637              	.LFB427:
4822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
4824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Disable external schedule synchronization.
4825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
4826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
4827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
4828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
4829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_TT_DisableExternalSynchronization(FDCAN_HandleTypeDef *hfdcan)
4830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 10638              		.loc 1 4830 1
 10639              		.cfi_startproc
 10640              		@ args = 0, pretend = 0, frame = 16
 10641              		@ frame_needed = 1, uses_anonymous_args = 0
 10642              		@ link register save eliminated.
 10643 0000 80B4     		push	{r7}
 10644              	.LCFI557:
 10645              		.cfi_def_cfa_offset 4
 10646              		.cfi_offset 7, -4
 10647 0002 85B0     		sub	sp, sp, #20
 10648              	.LCFI558:
 10649              		.cfi_def_cfa_offset 24
 10650 0004 00AF     		add	r7, sp, #0
 10651              	.LCFI559:
 10652              		.cfi_def_cfa_register 7
 10653 0006 7860     		str	r0, [r7, #4]
4831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t Counter = 0U;
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 291


 10654              		.loc 1 4831 12
 10655 0008 0023     		movs	r3, #0
 10656 000a FB60     		str	r3, [r7, #12]
4832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 10657              		.loc 1 4832 26
 10658 000c 7B68     		ldr	r3, [r7, #4]
 10659 000e 93F89830 		ldrb	r3, [r3, #152]
 10660 0012 FB72     		strb	r3, [r7, #11]
4833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
4835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_INSTANCE(hfdcan->Instance));
4836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 10661              		.loc 1 4837 6
 10662 0014 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 10663 0016 012B     		cmp	r3, #1
 10664 0018 17D0     		beq	.L586
 10665              		.loc 1 4837 40 discriminator 1
 10666 001a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 10667 001c 022B     		cmp	r3, #2
 10668 001e 25D1     		bne	.L585
4838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Wait until the LCKC bit into TTOCN register is reset */
4840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     while ((hfdcan->ttcan->TTOCN & FDCAN_TTOCN_LCKC) != 0U)
 10669              		.loc 1 4840 11
 10670 0020 13E0     		b	.L586
 10671              	.L589:
4841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Check for the Timeout */
4843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if (Counter > FDCAN_TIMEOUT_COUNT)
 10672              		.loc 1 4843 10
 10673 0022 FB68     		ldr	r3, [r7, #12]
 10674 0024 322B     		cmp	r3, #50
 10675 0026 0DD9     		bls	.L587
4844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
4845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Update error code */
4846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->ErrorCode |= HAL_FDCAN_ERROR_TIMEOUT;
 10676              		.loc 1 4846 27
 10677 0028 7B68     		ldr	r3, [r7, #4]
 10678 002a D3F89C30 		ldr	r3, [r3, #156]
 10679 002e 43F00102 		orr	r2, r3, #1
 10680 0032 7B68     		ldr	r3, [r7, #4]
 10681 0034 C3F89C20 		str	r2, [r3, #156]
4847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Change FDCAN state */
4849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->State = HAL_FDCAN_STATE_ERROR;
 10682              		.loc 1 4849 23
 10683 0038 7B68     		ldr	r3, [r7, #4]
 10684 003a 0322     		movs	r2, #3
 10685 003c 83F89820 		strb	r2, [r3, #152]
4850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         return HAL_ERROR;
 10686              		.loc 1 4851 16
 10687 0040 0123     		movs	r3, #1
 10688 0042 1CE0     		b	.L588
 10689              	.L587:
4852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 292


4853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Increment counter */
4855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       Counter++;
 10690              		.loc 1 4855 14
 10691 0044 FB68     		ldr	r3, [r7, #12]
 10692 0046 0133     		adds	r3, r3, #1
 10693 0048 FB60     		str	r3, [r7, #12]
 10694              	.L586:
4840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 10695              		.loc 1 4840 19
 10696 004a 7B68     		ldr	r3, [r7, #4]
 10697 004c 5B68     		ldr	r3, [r3, #4]
4840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 10698              		.loc 1 4840 26
 10699 004e 5B69     		ldr	r3, [r3, #20]
4840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 10700              		.loc 1 4840 34
 10701 0050 03F40043 		and	r3, r3, #32768
4840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 10702              		.loc 1 4840 11
 10703 0054 002B     		cmp	r3, #0
 10704 0056 E4D1     		bne	.L589
4856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Disable external synchronization */
4859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     CLEAR_BIT(hfdcan->ttcan->TTOCN, FDCAN_TTOCN_ESCN);
 10705              		.loc 1 4859 5
 10706 0058 7B68     		ldr	r3, [r7, #4]
 10707 005a 5B68     		ldr	r3, [r3, #4]
 10708 005c 5A69     		ldr	r2, [r3, #20]
 10709 005e 7B68     		ldr	r3, [r7, #4]
 10710 0060 5B68     		ldr	r3, [r3, #4]
 10711 0062 22F40052 		bic	r2, r2, #8192
 10712 0066 5A61     		str	r2, [r3, #20]
4860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
4862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 10713              		.loc 1 4862 12
 10714 0068 0023     		movs	r3, #0
 10715 006a 08E0     		b	.L588
 10716              	.L585:
4863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
4865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
4867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 10717              		.loc 1 4867 23
 10718 006c 7B68     		ldr	r3, [r7, #4]
 10719 006e D3F89C30 		ldr	r3, [r3, #156]
 10720 0072 43F00202 		orr	r2, r3, #2
 10721 0076 7B68     		ldr	r3, [r7, #4]
 10722 0078 C3F89C20 		str	r2, [r3, #156]
4868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 10723              		.loc 1 4869 12
 10724 007c 0123     		movs	r3, #1
 10725              	.L588:
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 293


4870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 10726              		.loc 1 4871 1
 10727 007e 1846     		mov	r0, r3
 10728 0080 1437     		adds	r7, r7, #20
 10729              	.LCFI560:
 10730              		.cfi_def_cfa_offset 4
 10731 0082 BD46     		mov	sp, r7
 10732              	.LCFI561:
 10733              		.cfi_def_cfa_register 13
 10734              		@ sp needed
 10735 0084 5DF8047B 		ldr	r7, [sp], #4
 10736              	.LCFI562:
 10737              		.cfi_restore 7
 10738              		.cfi_def_cfa_offset 0
 10739 0088 7047     		bx	lr
 10740              		.cfi_endproc
 10741              	.LFE427:
 10743              		.section	.text.HAL_FDCAN_TT_GetOperationStatus,"ax",%progbits
 10744              		.align	1
 10745              		.global	HAL_FDCAN_TT_GetOperationStatus
 10746              		.syntax unified
 10747              		.thumb
 10748              		.thumb_func
 10750              	HAL_FDCAN_TT_GetOperationStatus:
 10751              	.LFB428:
4872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
4874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Get TT operation status.
4875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
4876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
4877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  TTOpStatus pointer to an FDCAN_TTOperationStatusTypeDef structure.
4878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
4879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
4880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_TT_GetOperationStatus(FDCAN_HandleTypeDef *hfdcan, FDCAN_TTOperationSta
4881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 10752              		.loc 1 4881 1
 10753              		.cfi_startproc
 10754              		@ args = 0, pretend = 0, frame = 16
 10755              		@ frame_needed = 1, uses_anonymous_args = 0
 10756              		@ link register save eliminated.
 10757 0000 80B4     		push	{r7}
 10758              	.LCFI563:
 10759              		.cfi_def_cfa_offset 4
 10760              		.cfi_offset 7, -4
 10761 0002 85B0     		sub	sp, sp, #20
 10762              	.LCFI564:
 10763              		.cfi_def_cfa_offset 24
 10764 0004 00AF     		add	r7, sp, #0
 10765              	.LCFI565:
 10766              		.cfi_def_cfa_register 7
 10767 0006 7860     		str	r0, [r7, #4]
 10768 0008 3960     		str	r1, [r7]
4882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t TTStatusReg;
4883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
4885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_INSTANCE(hfdcan->Instance));
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 294


4886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Read the TT operation status register */
4888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   TTStatusReg = READ_REG(hfdcan->ttcan->TTOST);
 10769              		.loc 1 4888 17
 10770 000a 7B68     		ldr	r3, [r7, #4]
 10771 000c 5B68     		ldr	r3, [r3, #4]
 10772              		.loc 1 4888 15
 10773 000e DB6A     		ldr	r3, [r3, #44]
 10774 0010 FB60     		str	r3, [r7, #12]
4889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Fill the TT operation status structure */
4891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   TTOpStatus->ErrorLevel = (TTStatusReg & FDCAN_TTOST_EL);
 10775              		.loc 1 4891 41
 10776 0012 FB68     		ldr	r3, [r7, #12]
 10777 0014 03F00302 		and	r2, r3, #3
 10778              		.loc 1 4891 26
 10779 0018 3B68     		ldr	r3, [r7]
 10780 001a 1A60     		str	r2, [r3]
4892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   TTOpStatus->MasterState = (TTStatusReg & FDCAN_TTOST_MS);
 10781              		.loc 1 4892 42
 10782 001c FB68     		ldr	r3, [r7, #12]
 10783 001e 03F00C02 		and	r2, r3, #12
 10784              		.loc 1 4892 27
 10785 0022 3B68     		ldr	r3, [r7]
 10786 0024 5A60     		str	r2, [r3, #4]
4893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   TTOpStatus->SyncState = (TTStatusReg & FDCAN_TTOST_SYS);
 10787              		.loc 1 4893 40
 10788 0026 FB68     		ldr	r3, [r7, #12]
 10789 0028 03F03002 		and	r2, r3, #48
 10790              		.loc 1 4893 25
 10791 002c 3B68     		ldr	r3, [r7]
 10792 002e 9A60     		str	r2, [r3, #8]
4894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   TTOpStatus->GTimeQuality = ((TTStatusReg & FDCAN_TTOST_QGTP) >> FDCAN_TTOST_QGTP_Pos);
 10793              		.loc 1 4894 64
 10794 0030 FB68     		ldr	r3, [r7, #12]
 10795 0032 9B09     		lsrs	r3, r3, #6
 10796 0034 03F00102 		and	r2, r3, #1
 10797              		.loc 1 4894 28
 10798 0038 3B68     		ldr	r3, [r7]
 10799 003a DA60     		str	r2, [r3, #12]
4895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   TTOpStatus->ClockQuality = ((TTStatusReg & FDCAN_TTOST_QCS) >> FDCAN_TTOST_QCS_Pos);
 10800              		.loc 1 4895 63
 10801 003c FB68     		ldr	r3, [r7, #12]
 10802 003e DB09     		lsrs	r3, r3, #7
 10803 0040 03F00102 		and	r2, r3, #1
 10804              		.loc 1 4895 28
 10805 0044 3B68     		ldr	r3, [r7]
 10806 0046 1A61     		str	r2, [r3, #16]
4896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   TTOpStatus->RefTrigOffset = ((TTStatusReg & FDCAN_TTOST_RTO) >> FDCAN_TTOST_RTO_Pos);
 10807              		.loc 1 4896 64
 10808 0048 FB68     		ldr	r3, [r7, #12]
 10809 004a 1B0A     		lsrs	r3, r3, #8
 10810 004c DAB2     		uxtb	r2, r3
 10811              		.loc 1 4896 29
 10812 004e 3B68     		ldr	r3, [r7]
 10813 0050 5A61     		str	r2, [r3, #20]
4897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   TTOpStatus->GTimeDiscPending = ((TTStatusReg & FDCAN_TTOST_WGTD) >> FDCAN_TTOST_WGTD_Pos);
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 295


 10814              		.loc 1 4897 68
 10815 0052 FB68     		ldr	r3, [r7, #12]
 10816 0054 9B0D     		lsrs	r3, r3, #22
 10817 0056 03F00102 		and	r2, r3, #1
 10818              		.loc 1 4897 32
 10819 005a 3B68     		ldr	r3, [r7]
 10820 005c 9A61     		str	r2, [r3, #24]
4898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   TTOpStatus->GapFinished = ((TTStatusReg & FDCAN_TTOST_GFI) >> FDCAN_TTOST_GFI_Pos);
 10821              		.loc 1 4898 62
 10822 005e FB68     		ldr	r3, [r7, #12]
 10823 0060 DB0D     		lsrs	r3, r3, #23
 10824 0062 03F00102 		and	r2, r3, #1
 10825              		.loc 1 4898 27
 10826 0066 3B68     		ldr	r3, [r7]
 10827 0068 DA61     		str	r2, [r3, #28]
4899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   TTOpStatus->MasterPriority = ((TTStatusReg & FDCAN_TTOST_TMP) >> FDCAN_TTOST_TMP_Pos);
 10828              		.loc 1 4899 65
 10829 006a FB68     		ldr	r3, [r7, #12]
 10830 006c 1B0E     		lsrs	r3, r3, #24
 10831 006e 03F00702 		and	r2, r3, #7
 10832              		.loc 1 4899 30
 10833 0072 3B68     		ldr	r3, [r7]
 10834 0074 1A62     		str	r2, [r3, #32]
4900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   TTOpStatus->GapStarted = ((TTStatusReg & FDCAN_TTOST_GSI) >> FDCAN_TTOST_GSI_Pos);
 10835              		.loc 1 4900 61
 10836 0076 FB68     		ldr	r3, [r7, #12]
 10837 0078 DB0E     		lsrs	r3, r3, #27
 10838 007a 03F00102 		and	r2, r3, #1
 10839              		.loc 1 4900 26
 10840 007e 3B68     		ldr	r3, [r7]
 10841 0080 5A62     		str	r2, [r3, #36]
4901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   TTOpStatus->WaitForEvt = ((TTStatusReg & FDCAN_TTOST_WFE) >> FDCAN_TTOST_WFE_Pos);
 10842              		.loc 1 4901 61
 10843 0082 FB68     		ldr	r3, [r7, #12]
 10844 0084 1B0F     		lsrs	r3, r3, #28
 10845 0086 03F00102 		and	r2, r3, #1
 10846              		.loc 1 4901 26
 10847 008a 3B68     		ldr	r3, [r7]
 10848 008c 9A62     		str	r2, [r3, #40]
4902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   TTOpStatus->AppWdgEvt = ((TTStatusReg & FDCAN_TTOST_AWE) >> FDCAN_TTOST_AWE_Pos);
 10849              		.loc 1 4902 60
 10850 008e FB68     		ldr	r3, [r7, #12]
 10851 0090 5B0F     		lsrs	r3, r3, #29
 10852 0092 03F00102 		and	r2, r3, #1
 10853              		.loc 1 4902 25
 10854 0096 3B68     		ldr	r3, [r7]
 10855 0098 DA62     		str	r2, [r3, #44]
4903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   TTOpStatus->ECSPending = ((TTStatusReg & FDCAN_TTOST_WECS) >> FDCAN_TTOST_WECS_Pos);
 10856              		.loc 1 4903 62
 10857 009a FB68     		ldr	r3, [r7, #12]
 10858 009c 9B0F     		lsrs	r3, r3, #30
 10859 009e 03F00102 		and	r2, r3, #1
 10860              		.loc 1 4903 26
 10861 00a2 3B68     		ldr	r3, [r7]
 10862 00a4 1A63     		str	r2, [r3, #48]
4904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   TTOpStatus->PhaseLock = ((TTStatusReg & FDCAN_TTOST_SPL) >> FDCAN_TTOST_SPL_Pos);
 10863              		.loc 1 4904 60
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 296


 10864 00a6 FB68     		ldr	r3, [r7, #12]
 10865 00a8 DA0F     		lsrs	r2, r3, #31
 10866              		.loc 1 4904 25
 10867 00aa 3B68     		ldr	r3, [r7]
 10868 00ac 5A63     		str	r2, [r3, #52]
4905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Return function status */
4907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return HAL_OK;
 10869              		.loc 1 4907 10
 10870 00ae 0023     		movs	r3, #0
4908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 10871              		.loc 1 4908 1
 10872 00b0 1846     		mov	r0, r3
 10873 00b2 1437     		adds	r7, r7, #20
 10874              	.LCFI566:
 10875              		.cfi_def_cfa_offset 4
 10876 00b4 BD46     		mov	sp, r7
 10877              	.LCFI567:
 10878              		.cfi_def_cfa_register 13
 10879              		@ sp needed
 10880 00b6 5DF8047B 		ldr	r7, [sp], #4
 10881              	.LCFI568:
 10882              		.cfi_restore 7
 10883              		.cfi_def_cfa_offset 0
 10884 00ba 7047     		bx	lr
 10885              		.cfi_endproc
 10886              	.LFE428:
 10888              		.section	.text.HAL_FDCAN_ConfigInterruptLines,"ax",%progbits
 10889              		.align	1
 10890              		.global	HAL_FDCAN_ConfigInterruptLines
 10891              		.syntax unified
 10892              		.thumb
 10893              		.thumb_func
 10895              	HAL_FDCAN_ConfigInterruptLines:
 10896              	.LFB429:
4909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
4911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @}
4912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
4913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /** @defgroup FDCAN_Exported_Functions_Group5 Interrupts management
4915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****  *  @brief    Interrupts management
4916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****  *
4917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** @verbatim
4918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ==============================================================================
4919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                        ##### Interrupts management #####
4920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ==============================================================================
4921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     [..]  This section provides functions allowing to:
4922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_ConfigInterruptLines      : Assign interrupts to either Interrupt line 0 or 1
4923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TT_ConfigInterruptLines   : Assign TT interrupts to either Interrupt line 0 or 
4924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_ActivateNotification      : Enable interrupts
4925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_DeactivateNotification    : Disable interrupts
4926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TT_ActivateNotification   : Enable TT interrupts
4927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TT_DeactivateNotification : Disable TT interrupts
4928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_IRQHandler                : Handles FDCAN interrupt request
4929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** @endverbatim
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 297


4931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @{
4932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
4933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
4935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Assign interrupts to either Interrupt line 0 or 1.
4936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
4937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
4938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  ITList indicates which interrupts will be assigned to the selected interrupt line.
4939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be any combination of @arg FDCAN_Interrupts.
4940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  InterruptLine Interrupt line.
4941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be a value of @arg FDCAN_Interrupt_Line.
4942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
4943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
4944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_ConfigInterruptLines(FDCAN_HandleTypeDef *hfdcan, uint32_t ITList, uint
4945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 10897              		.loc 1 4945 1
 10898              		.cfi_startproc
 10899              		@ args = 0, pretend = 0, frame = 24
 10900              		@ frame_needed = 1, uses_anonymous_args = 0
 10901              		@ link register save eliminated.
 10902 0000 80B4     		push	{r7}
 10903              	.LCFI569:
 10904              		.cfi_def_cfa_offset 4
 10905              		.cfi_offset 7, -4
 10906 0002 87B0     		sub	sp, sp, #28
 10907              	.LCFI570:
 10908              		.cfi_def_cfa_offset 32
 10909 0004 00AF     		add	r7, sp, #0
 10910              	.LCFI571:
 10911              		.cfi_def_cfa_register 7
 10912 0006 F860     		str	r0, [r7, #12]
 10913 0008 B960     		str	r1, [r7, #8]
 10914 000a 7A60     		str	r2, [r7, #4]
4946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 10915              		.loc 1 4946 26
 10916 000c FB68     		ldr	r3, [r7, #12]
 10917 000e 93F89830 		ldrb	r3, [r3, #152]
 10918 0012 FB75     		strb	r3, [r7, #23]
4947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
4949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_IT(ITList));
4950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_IT_LINE(InterruptLine));
4951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 10919              		.loc 1 4952 6
 10920 0014 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10921 0016 012B     		cmp	r3, #1
 10922 0018 02D0     		beq	.L593
 10923              		.loc 1 4952 40 discriminator 1
 10924 001a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10925 001c 022B     		cmp	r3, #2
 10926 001e 16D1     		bne	.L594
 10927              	.L593:
4953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Assign list of interrupts to the selected line */
4955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (InterruptLine == FDCAN_INTERRUPT_LINE0)
 10928              		.loc 1 4955 8
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 298


 10929 0020 7B68     		ldr	r3, [r7, #4]
 10930 0022 012B     		cmp	r3, #1
 10931 0024 09D1     		bne	.L595
4956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       CLEAR_BIT(hfdcan->Instance->ILS, ITList);
 10932              		.loc 1 4957 7
 10933 0026 FB68     		ldr	r3, [r7, #12]
 10934 0028 1B68     		ldr	r3, [r3]
 10935 002a 996D     		ldr	r1, [r3, #88]
 10936 002c BB68     		ldr	r3, [r7, #8]
 10937 002e DA43     		mvns	r2, r3
 10938 0030 FB68     		ldr	r3, [r7, #12]
 10939 0032 1B68     		ldr	r3, [r3]
 10940 0034 0A40     		ands	r2, r2, r1
 10941 0036 9A65     		str	r2, [r3, #88]
 10942 0038 07E0     		b	.L596
 10943              	.L595:
4958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else /* InterruptLine == FDCAN_INTERRUPT_LINE1 */
4960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
4961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       SET_BIT(hfdcan->Instance->ILS, ITList);
 10944              		.loc 1 4961 7
 10945 003a FB68     		ldr	r3, [r7, #12]
 10946 003c 1B68     		ldr	r3, [r3]
 10947 003e 996D     		ldr	r1, [r3, #88]
 10948 0040 FB68     		ldr	r3, [r7, #12]
 10949 0042 1B68     		ldr	r3, [r3]
 10950 0044 BA68     		ldr	r2, [r7, #8]
 10951 0046 0A43     		orrs	r2, r2, r1
 10952 0048 9A65     		str	r2, [r3, #88]
 10953              	.L596:
4962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
4963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
4965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 10954              		.loc 1 4965 12
 10955 004a 0023     		movs	r3, #0
 10956 004c 08E0     		b	.L597
 10957              	.L594:
4966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
4968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
4970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 10958              		.loc 1 4970 23
 10959 004e FB68     		ldr	r3, [r7, #12]
 10960 0050 D3F89C30 		ldr	r3, [r3, #156]
 10961 0054 43F00202 		orr	r2, r3, #2
 10962 0058 FB68     		ldr	r3, [r7, #12]
 10963 005a C3F89C20 		str	r2, [r3, #156]
4971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 10964              		.loc 1 4972 12
 10965 005e 0123     		movs	r3, #1
 10966              	.L597:
4973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
4974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 299


 10967              		.loc 1 4974 1
 10968 0060 1846     		mov	r0, r3
 10969 0062 1C37     		adds	r7, r7, #28
 10970              	.LCFI572:
 10971              		.cfi_def_cfa_offset 4
 10972 0064 BD46     		mov	sp, r7
 10973              	.LCFI573:
 10974              		.cfi_def_cfa_register 13
 10975              		@ sp needed
 10976 0066 5DF8047B 		ldr	r7, [sp], #4
 10977              	.LCFI574:
 10978              		.cfi_restore 7
 10979              		.cfi_def_cfa_offset 0
 10980 006a 7047     		bx	lr
 10981              		.cfi_endproc
 10982              	.LFE429:
 10984              		.section	.text.HAL_FDCAN_TT_ConfigInterruptLines,"ax",%progbits
 10985              		.align	1
 10986              		.global	HAL_FDCAN_TT_ConfigInterruptLines
 10987              		.syntax unified
 10988              		.thumb
 10989              		.thumb_func
 10991              	HAL_FDCAN_TT_ConfigInterruptLines:
 10992              	.LFB430:
4975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
4977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Assign TT interrupts to either Interrupt line 0 or 1.
4978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
4979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
4980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  TTITList indicates which interrupts will be assigned to the selected interrupt line.
4981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be any combination of @arg FDCAN_TTInterrupts.
4982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  InterruptLine Interrupt line.
4983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be a value of @arg FDCAN_Interrupt_Line.
4984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
4985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
4986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_TT_ConfigInterruptLines(FDCAN_HandleTypeDef *hfdcan, uint32_t TTITList,
4987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 10993              		.loc 1 4987 1
 10994              		.cfi_startproc
 10995              		@ args = 0, pretend = 0, frame = 24
 10996              		@ frame_needed = 1, uses_anonymous_args = 0
 10997              		@ link register save eliminated.
 10998 0000 80B4     		push	{r7}
 10999              	.LCFI575:
 11000              		.cfi_def_cfa_offset 4
 11001              		.cfi_offset 7, -4
 11002 0002 87B0     		sub	sp, sp, #28
 11003              	.LCFI576:
 11004              		.cfi_def_cfa_offset 32
 11005 0004 00AF     		add	r7, sp, #0
 11006              	.LCFI577:
 11007              		.cfi_def_cfa_register 7
 11008 0006 F860     		str	r0, [r7, #12]
 11009 0008 B960     		str	r1, [r7, #8]
 11010 000a 7A60     		str	r2, [r7, #4]
4988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 11011              		.loc 1 4988 26
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 300


 11012 000c FB68     		ldr	r3, [r7, #12]
 11013 000e 93F89830 		ldrb	r3, [r3, #152]
 11014 0012 FB75     		strb	r3, [r7, #23]
4989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
4991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_INSTANCE(hfdcan->Instance));
4992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_IT(TTITList));
4993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_IT_LINE(InterruptLine));
4994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
4995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 11015              		.loc 1 4995 6
 11016 0014 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11017 0016 012B     		cmp	r3, #1
 11018 0018 02D0     		beq	.L599
 11019              		.loc 1 4995 40 discriminator 1
 11020 001a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11021 001c 022B     		cmp	r3, #2
 11022 001e 16D1     		bne	.L600
 11023              	.L599:
4996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
4997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Assign list of interrupts to the selected line */
4998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (InterruptLine == FDCAN_INTERRUPT_LINE0)
 11024              		.loc 1 4998 8
 11025 0020 7B68     		ldr	r3, [r7, #4]
 11026 0022 012B     		cmp	r3, #1
 11027 0024 09D1     		bne	.L601
4999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       CLEAR_BIT(hfdcan->ttcan->TTILS, TTITList);
 11028              		.loc 1 5000 7
 11029 0026 FB68     		ldr	r3, [r7, #12]
 11030 0028 5B68     		ldr	r3, [r3, #4]
 11031 002a 996A     		ldr	r1, [r3, #40]
 11032 002c BB68     		ldr	r3, [r7, #8]
 11033 002e DA43     		mvns	r2, r3
 11034 0030 FB68     		ldr	r3, [r7, #12]
 11035 0032 5B68     		ldr	r3, [r3, #4]
 11036 0034 0A40     		ands	r2, r2, r1
 11037 0036 9A62     		str	r2, [r3, #40]
 11038 0038 07E0     		b	.L602
 11039              	.L601:
5001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else /* InterruptLine == FDCAN_INTERRUPT_LINE1 */
5003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       SET_BIT(hfdcan->ttcan->TTILS, TTITList);
 11040              		.loc 1 5004 7
 11041 003a FB68     		ldr	r3, [r7, #12]
 11042 003c 5B68     		ldr	r3, [r3, #4]
 11043 003e 996A     		ldr	r1, [r3, #40]
 11044 0040 FB68     		ldr	r3, [r7, #12]
 11045 0042 5B68     		ldr	r3, [r3, #4]
 11046 0044 BA68     		ldr	r2, [r7, #8]
 11047 0046 0A43     		orrs	r2, r2, r1
 11048 0048 9A62     		str	r2, [r3, #40]
 11049              	.L602:
5005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 301


5008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 11050              		.loc 1 5008 12
 11051 004a 0023     		movs	r3, #0
 11052 004c 08E0     		b	.L603
 11053              	.L600:
5009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
5011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
5013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 11054              		.loc 1 5013 23
 11055 004e FB68     		ldr	r3, [r7, #12]
 11056 0050 D3F89C30 		ldr	r3, [r3, #156]
 11057 0054 43F00202 		orr	r2, r3, #2
 11058 0058 FB68     		ldr	r3, [r7, #12]
 11059 005a C3F89C20 		str	r2, [r3, #156]
5014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 11060              		.loc 1 5015 12
 11061 005e 0123     		movs	r3, #1
 11062              	.L603:
5016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 11063              		.loc 1 5017 1
 11064 0060 1846     		mov	r0, r3
 11065 0062 1C37     		adds	r7, r7, #28
 11066              	.LCFI578:
 11067              		.cfi_def_cfa_offset 4
 11068 0064 BD46     		mov	sp, r7
 11069              	.LCFI579:
 11070              		.cfi_def_cfa_register 13
 11071              		@ sp needed
 11072 0066 5DF8047B 		ldr	r7, [sp], #4
 11073              	.LCFI580:
 11074              		.cfi_restore 7
 11075              		.cfi_def_cfa_offset 0
 11076 006a 7047     		bx	lr
 11077              		.cfi_endproc
 11078              	.LFE430:
 11080              		.section	.text.HAL_FDCAN_ActivateNotification,"ax",%progbits
 11081              		.align	1
 11082              		.global	HAL_FDCAN_ActivateNotification
 11083              		.syntax unified
 11084              		.thumb
 11085              		.thumb_func
 11087              	HAL_FDCAN_ActivateNotification:
 11088              	.LFB431:
5018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
5020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Enable interrupts.
5021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
5022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
5023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  ActiveITs indicates which interrupts will be enabled.
5024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be any combination of @arg FDCAN_Interrupts.
5025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  BufferIndexes Tx Buffer Indexes.
5026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be any combination of @arg FDCAN_Tx_location.
5027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter is ignored if ActiveITs does not include one of the following:
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 302


5028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           - FDCAN_IT_TX_COMPLETE
5029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *           - FDCAN_IT_TX_ABORT_COMPLETE
5030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
5031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
5032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_ActivateNotification(FDCAN_HandleTypeDef *hfdcan, uint32_t ActiveITs, u
5033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 11089              		.loc 1 5033 1
 11090              		.cfi_startproc
 11091              		@ args = 0, pretend = 0, frame = 24
 11092              		@ frame_needed = 1, uses_anonymous_args = 0
 11093              		@ link register save eliminated.
 11094 0000 80B4     		push	{r7}
 11095              	.LCFI581:
 11096              		.cfi_def_cfa_offset 4
 11097              		.cfi_offset 7, -4
 11098 0002 87B0     		sub	sp, sp, #28
 11099              	.LCFI582:
 11100              		.cfi_def_cfa_offset 32
 11101 0004 00AF     		add	r7, sp, #0
 11102              	.LCFI583:
 11103              		.cfi_def_cfa_register 7
 11104 0006 F860     		str	r0, [r7, #12]
 11105 0008 B960     		str	r1, [r7, #8]
 11106 000a 7A60     		str	r2, [r7, #4]
5034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 11107              		.loc 1 5034 26
 11108 000c FB68     		ldr	r3, [r7, #12]
 11109 000e 93F89830 		ldrb	r3, [r3, #152]
 11110 0012 FB75     		strb	r3, [r7, #23]
5035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
5037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_IT(ActiveITs));
5038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 11111              		.loc 1 5039 6
 11112 0014 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11113 0016 012B     		cmp	r3, #1
 11114 0018 02D0     		beq	.L605
 11115              		.loc 1 5039 40 discriminator 1
 11116 001a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11117 001c 022B     		cmp	r3, #2
 11118 001e 55D1     		bne	.L606
 11119              	.L605:
5040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Enable Interrupt lines */
5042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((ActiveITs & hfdcan->Instance->ILS) == 0U)
 11120              		.loc 1 5042 28
 11121 0020 FB68     		ldr	r3, [r7, #12]
 11122 0022 1B68     		ldr	r3, [r3]
 11123              		.loc 1 5042 38
 11124 0024 9A6D     		ldr	r2, [r3, #88]
 11125              		.loc 1 5042 20
 11126 0026 BB68     		ldr	r3, [r7, #8]
 11127 0028 1340     		ands	r3, r3, r2
 11128              		.loc 1 5042 8
 11129 002a 002B     		cmp	r3, #0
 11130 002c 08D1     		bne	.L607
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 303


5043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Enable Interrupt line 0 */
5045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       SET_BIT(hfdcan->Instance->ILE, FDCAN_INTERRUPT_LINE0);
 11131              		.loc 1 5045 7
 11132 002e FB68     		ldr	r3, [r7, #12]
 11133 0030 1B68     		ldr	r3, [r3]
 11134 0032 DA6D     		ldr	r2, [r3, #92]
 11135 0034 FB68     		ldr	r3, [r7, #12]
 11136 0036 1B68     		ldr	r3, [r3]
 11137 0038 42F00102 		orr	r2, r2, #1
 11138 003c DA65     		str	r2, [r3, #92]
 11139 003e 14E0     		b	.L608
 11140              	.L607:
5046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else if ((ActiveITs & hfdcan->Instance->ILS) == ActiveITs)
 11141              		.loc 1 5047 33
 11142 0040 FB68     		ldr	r3, [r7, #12]
 11143 0042 1B68     		ldr	r3, [r3]
 11144              		.loc 1 5047 43
 11145 0044 9A6D     		ldr	r2, [r3, #88]
 11146              		.loc 1 5047 25
 11147 0046 BB68     		ldr	r3, [r7, #8]
 11148 0048 1340     		ands	r3, r3, r2
 11149              		.loc 1 5047 13
 11150 004a BA68     		ldr	r2, [r7, #8]
 11151 004c 9A42     		cmp	r2, r3
 11152 004e 08D1     		bne	.L609
5048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Enable Interrupt line 1 */
5050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       SET_BIT(hfdcan->Instance->ILE, FDCAN_INTERRUPT_LINE1);
 11153              		.loc 1 5050 7
 11154 0050 FB68     		ldr	r3, [r7, #12]
 11155 0052 1B68     		ldr	r3, [r3]
 11156 0054 DA6D     		ldr	r2, [r3, #92]
 11157 0056 FB68     		ldr	r3, [r7, #12]
 11158 0058 1B68     		ldr	r3, [r3]
 11159 005a 42F00202 		orr	r2, r2, #2
 11160 005e DA65     		str	r2, [r3, #92]
 11161 0060 03E0     		b	.L608
 11162              	.L609:
5051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else
5053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Enable Interrupt lines 0 and 1 */
5055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->Instance->ILE = (FDCAN_INTERRUPT_LINE0 | FDCAN_INTERRUPT_LINE1);
 11163              		.loc 1 5055 13
 11164 0062 FB68     		ldr	r3, [r7, #12]
 11165 0064 1B68     		ldr	r3, [r3]
 11166              		.loc 1 5055 29
 11167 0066 0322     		movs	r2, #3
 11168 0068 DA65     		str	r2, [r3, #92]
 11169              	.L608:
5056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((ActiveITs & FDCAN_IT_TX_COMPLETE) != 0U)
 11170              		.loc 1 5058 20
 11171 006a BB68     		ldr	r3, [r7, #8]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 304


 11172 006c 03F40073 		and	r3, r3, #512
 11173              		.loc 1 5058 8
 11174 0070 002B     		cmp	r3, #0
 11175 0072 09D0     		beq	.L610
5059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Enable Tx Buffer Transmission Interrupt to set TC flag in IR register,
5061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****          but interrupt will only occur if TC is enabled in IE register */
5062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       SET_BIT(hfdcan->Instance->TXBTIE, BufferIndexes);
 11176              		.loc 1 5062 7
 11177 0074 FB68     		ldr	r3, [r7, #12]
 11178 0076 1B68     		ldr	r3, [r3]
 11179 0078 D3F8E010 		ldr	r1, [r3, #224]
 11180 007c FB68     		ldr	r3, [r7, #12]
 11181 007e 1B68     		ldr	r3, [r3]
 11182 0080 7A68     		ldr	r2, [r7, #4]
 11183 0082 0A43     		orrs	r2, r2, r1
 11184 0084 C3F8E020 		str	r2, [r3, #224]
 11185              	.L610:
5063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((ActiveITs & FDCAN_IT_TX_ABORT_COMPLETE) != 0U)
 11186              		.loc 1 5065 20
 11187 0088 BB68     		ldr	r3, [r7, #8]
 11188 008a 03F48063 		and	r3, r3, #1024
 11189              		.loc 1 5065 8
 11190 008e 002B     		cmp	r3, #0
 11191 0090 09D0     		beq	.L611
5066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Enable Tx Buffer Cancellation Finished Interrupt to set TCF flag in IR register,
5068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****          but interrupt will only occur if TCF is enabled in IE register */
5069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       SET_BIT(hfdcan->Instance->TXBCIE, BufferIndexes);
 11192              		.loc 1 5069 7
 11193 0092 FB68     		ldr	r3, [r7, #12]
 11194 0094 1B68     		ldr	r3, [r3]
 11195 0096 D3F8E410 		ldr	r1, [r3, #228]
 11196 009a FB68     		ldr	r3, [r7, #12]
 11197 009c 1B68     		ldr	r3, [r3]
 11198 009e 7A68     		ldr	r2, [r7, #4]
 11199 00a0 0A43     		orrs	r2, r2, r1
 11200 00a2 C3F8E420 		str	r2, [r3, #228]
 11201              	.L611:
5070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Enable the selected interrupts */
5073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     __HAL_FDCAN_ENABLE_IT(hfdcan, ActiveITs);
 11202              		.loc 1 5073 5
 11203 00a6 FB68     		ldr	r3, [r7, #12]
 11204 00a8 1B68     		ldr	r3, [r3]
 11205 00aa 596D     		ldr	r1, [r3, #84]
 11206 00ac BA68     		ldr	r2, [r7, #8]
 11207 00ae 0F4B     		ldr	r3, .L613
 11208 00b0 1340     		ands	r3, r3, r2
 11209 00b2 FA68     		ldr	r2, [r7, #12]
 11210 00b4 1268     		ldr	r2, [r2]
 11211 00b6 0B43     		orrs	r3, r3, r1
 11212 00b8 5365     		str	r3, [r2, #84]
 11213 00ba 0D4B     		ldr	r3, .L613+4
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 305


 11214 00bc 5A69     		ldr	r2, [r3, #20]
 11215 00be BB68     		ldr	r3, [r7, #8]
 11216 00c0 9B0F     		lsrs	r3, r3, #30
 11217 00c2 0B49     		ldr	r1, .L613+4
 11218 00c4 1343     		orrs	r3, r3, r2
 11219 00c6 4B61     		str	r3, [r1, #20]
5074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
5076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 11220              		.loc 1 5076 12
 11221 00c8 0023     		movs	r3, #0
 11222 00ca 08E0     		b	.L612
 11223              	.L606:
5077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
5079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
5081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 11224              		.loc 1 5081 23
 11225 00cc FB68     		ldr	r3, [r7, #12]
 11226 00ce D3F89C30 		ldr	r3, [r3, #156]
 11227 00d2 43F00202 		orr	r2, r3, #2
 11228 00d6 FB68     		ldr	r3, [r7, #12]
 11229 00d8 C3F89C20 		str	r2, [r3, #156]
5082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 11230              		.loc 1 5083 12
 11231 00dc 0123     		movs	r3, #1
 11232              	.L612:
5084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 11233              		.loc 1 5085 1
 11234 00de 1846     		mov	r0, r3
 11235 00e0 1C37     		adds	r7, r7, #28
 11236              	.LCFI584:
 11237              		.cfi_def_cfa_offset 4
 11238 00e2 BD46     		mov	sp, r7
 11239              	.LCFI585:
 11240              		.cfi_def_cfa_register 13
 11241              		@ sp needed
 11242 00e4 5DF8047B 		ldr	r7, [sp], #4
 11243              	.LCFI586:
 11244              		.cfi_restore 7
 11245              		.cfi_def_cfa_offset 0
 11246 00e8 7047     		bx	lr
 11247              	.L614:
 11248 00ea 00BF     		.align	2
 11249              	.L613:
 11250 00ec FFFFCF3F 		.word	1070596095
 11251 00f0 00A80040 		.word	1073784832
 11252              		.cfi_endproc
 11253              	.LFE431:
 11255              		.section	.text.HAL_FDCAN_DeactivateNotification,"ax",%progbits
 11256              		.align	1
 11257              		.global	HAL_FDCAN_DeactivateNotification
 11258              		.syntax unified
 11259              		.thumb
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 306


 11260              		.thumb_func
 11262              	HAL_FDCAN_DeactivateNotification:
 11263              	.LFB432:
5086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
5088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Disable interrupts.
5089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
5090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
5091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  InactiveITs indicates which interrupts will be disabled.
5092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be any combination of @arg FDCAN_Interrupts.
5093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
5094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
5095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_DeactivateNotification(FDCAN_HandleTypeDef *hfdcan, uint32_t InactiveIT
5096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 11264              		.loc 1 5096 1
 11265              		.cfi_startproc
 11266              		@ args = 0, pretend = 0, frame = 16
 11267              		@ frame_needed = 1, uses_anonymous_args = 0
 11268              		@ link register save eliminated.
 11269 0000 80B4     		push	{r7}
 11270              	.LCFI587:
 11271              		.cfi_def_cfa_offset 4
 11272              		.cfi_offset 7, -4
 11273 0002 85B0     		sub	sp, sp, #20
 11274              	.LCFI588:
 11275              		.cfi_def_cfa_offset 24
 11276 0004 00AF     		add	r7, sp, #0
 11277              	.LCFI589:
 11278              		.cfi_def_cfa_register 7
 11279 0006 7860     		str	r0, [r7, #4]
 11280 0008 3960     		str	r1, [r7]
5097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t ITLineSelection;
5098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 11281              		.loc 1 5098 26
 11282 000a 7B68     		ldr	r3, [r7, #4]
 11283 000c 93F89830 		ldrb	r3, [r3, #152]
 11284 0010 FB73     		strb	r3, [r7, #15]
5099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
5101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_IT(InactiveITs));
5102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 11285              		.loc 1 5103 6
 11286 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 11287 0014 012B     		cmp	r3, #1
 11288 0016 02D0     		beq	.L616
 11289              		.loc 1 5103 40 discriminator 1
 11290 0018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 11291 001a 022B     		cmp	r3, #2
 11292 001c 4BD1     		bne	.L617
 11293              	.L616:
5104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Disable the selected interrupts */
5106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     __HAL_FDCAN_DISABLE_IT(hfdcan, InactiveITs);
 11294              		.loc 1 5106 5
 11295 001e 7B68     		ldr	r3, [r7, #4]
 11296 0020 1B68     		ldr	r3, [r3]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 307


 11297 0022 596D     		ldr	r1, [r3, #84]
 11298 0024 3A68     		ldr	r2, [r7]
 11299 0026 2B4B     		ldr	r3, .L623
 11300 0028 1340     		ands	r3, r3, r2
 11301 002a DA43     		mvns	r2, r3
 11302 002c 7B68     		ldr	r3, [r7, #4]
 11303 002e 1B68     		ldr	r3, [r3]
 11304 0030 0A40     		ands	r2, r2, r1
 11305 0032 5A65     		str	r2, [r3, #84]
 11306 0034 284B     		ldr	r3, .L623+4
 11307 0036 5A69     		ldr	r2, [r3, #20]
 11308 0038 3B68     		ldr	r3, [r7]
 11309 003a 9B0F     		lsrs	r3, r3, #30
 11310 003c DB43     		mvns	r3, r3
 11311 003e 2649     		ldr	r1, .L623+4
 11312 0040 1340     		ands	r3, r3, r2
 11313 0042 4B61     		str	r3, [r1, #20]
5107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((InactiveITs & FDCAN_IT_TX_COMPLETE) != 0U)
 11314              		.loc 1 5108 22
 11315 0044 3B68     		ldr	r3, [r7]
 11316 0046 03F40073 		and	r3, r3, #512
 11317              		.loc 1 5108 8
 11318 004a 002B     		cmp	r3, #0
 11319 004c 04D0     		beq	.L618
5109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Disable Tx Buffer Transmission Interrupts */
5111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       CLEAR_REG(hfdcan->Instance->TXBTIE);
 11320              		.loc 1 5111 7
 11321 004e 7B68     		ldr	r3, [r7, #4]
 11322 0050 1B68     		ldr	r3, [r3]
 11323 0052 0022     		movs	r2, #0
 11324 0054 C3F8E020 		str	r2, [r3, #224]
 11325              	.L618:
5112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((InactiveITs & FDCAN_IT_TX_ABORT_COMPLETE) != 0U)
 11326              		.loc 1 5114 22
 11327 0058 3B68     		ldr	r3, [r7]
 11328 005a 03F48063 		and	r3, r3, #1024
 11329              		.loc 1 5114 8
 11330 005e 002B     		cmp	r3, #0
 11331 0060 04D0     		beq	.L619
5115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Disable Tx Buffer Cancellation Finished Interrupt */
5117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       CLEAR_REG(hfdcan->Instance->TXBCIE);
 11332              		.loc 1 5117 7
 11333 0062 7B68     		ldr	r3, [r7, #4]
 11334 0064 1B68     		ldr	r3, [r3]
 11335 0066 0022     		movs	r2, #0
 11336 0068 C3F8E420 		str	r2, [r3, #228]
 11337              	.L619:
5118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     ITLineSelection = hfdcan->Instance->ILS;
 11338              		.loc 1 5120 29
 11339 006c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 308


 11340 006e 1B68     		ldr	r3, [r3]
 11341              		.loc 1 5120 21
 11342 0070 9B6D     		ldr	r3, [r3, #88]
 11343 0072 BB60     		str	r3, [r7, #8]
5121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->Instance->IE | ITLineSelection) == ITLineSelection)
 11344              		.loc 1 5122 16
 11345 0074 7B68     		ldr	r3, [r7, #4]
 11346 0076 1B68     		ldr	r3, [r3]
 11347              		.loc 1 5122 26
 11348 0078 5A6D     		ldr	r2, [r3, #84]
 11349              		.loc 1 5122 31
 11350 007a BB68     		ldr	r3, [r7, #8]
 11351 007c 1343     		orrs	r3, r3, r2
 11352              		.loc 1 5122 8
 11353 007e BA68     		ldr	r2, [r7, #8]
 11354 0080 9A42     		cmp	r2, r3
 11355 0082 07D1     		bne	.L620
5123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Disable Interrupt line 0 */
5125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       CLEAR_BIT(hfdcan->Instance->ILE, FDCAN_INTERRUPT_LINE0);
 11356              		.loc 1 5125 7
 11357 0084 7B68     		ldr	r3, [r7, #4]
 11358 0086 1B68     		ldr	r3, [r3]
 11359 0088 DA6D     		ldr	r2, [r3, #92]
 11360 008a 7B68     		ldr	r3, [r7, #4]
 11361 008c 1B68     		ldr	r3, [r3]
 11362 008e 22F00102 		bic	r2, r2, #1
 11363 0092 DA65     		str	r2, [r3, #92]
 11364              	.L620:
5126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->Instance->IE & ITLineSelection) == 0U)
 11365              		.loc 1 5128 16
 11366 0094 7B68     		ldr	r3, [r7, #4]
 11367 0096 1B68     		ldr	r3, [r3]
 11368              		.loc 1 5128 26
 11369 0098 5A6D     		ldr	r2, [r3, #84]
 11370              		.loc 1 5128 31
 11371 009a BB68     		ldr	r3, [r7, #8]
 11372 009c 1340     		ands	r3, r3, r2
 11373              		.loc 1 5128 8
 11374 009e 002B     		cmp	r3, #0
 11375 00a0 07D1     		bne	.L621
5129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Disable Interrupt line 1 */
5131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       CLEAR_BIT(hfdcan->Instance->ILE, FDCAN_INTERRUPT_LINE1);
 11376              		.loc 1 5131 7
 11377 00a2 7B68     		ldr	r3, [r7, #4]
 11378 00a4 1B68     		ldr	r3, [r3]
 11379 00a6 DA6D     		ldr	r2, [r3, #92]
 11380 00a8 7B68     		ldr	r3, [r7, #4]
 11381 00aa 1B68     		ldr	r3, [r3]
 11382 00ac 22F00202 		bic	r2, r2, #2
 11383 00b0 DA65     		str	r2, [r3, #92]
 11384              	.L621:
5132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 309


5133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
5135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 11385              		.loc 1 5135 12
 11386 00b2 0023     		movs	r3, #0
 11387 00b4 08E0     		b	.L622
 11388              	.L617:
5136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
5138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
5140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 11389              		.loc 1 5140 23
 11390 00b6 7B68     		ldr	r3, [r7, #4]
 11391 00b8 D3F89C30 		ldr	r3, [r3, #156]
 11392 00bc 43F00202 		orr	r2, r3, #2
 11393 00c0 7B68     		ldr	r3, [r7, #4]
 11394 00c2 C3F89C20 		str	r2, [r3, #156]
5141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 11395              		.loc 1 5142 12
 11396 00c6 0123     		movs	r3, #1
 11397              	.L622:
5143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 11398              		.loc 1 5144 1
 11399 00c8 1846     		mov	r0, r3
 11400 00ca 1437     		adds	r7, r7, #20
 11401              	.LCFI590:
 11402              		.cfi_def_cfa_offset 4
 11403 00cc BD46     		mov	sp, r7
 11404              	.LCFI591:
 11405              		.cfi_def_cfa_register 13
 11406              		@ sp needed
 11407 00ce 5DF8047B 		ldr	r7, [sp], #4
 11408              	.LCFI592:
 11409              		.cfi_restore 7
 11410              		.cfi_def_cfa_offset 0
 11411 00d2 7047     		bx	lr
 11412              	.L624:
 11413              		.align	2
 11414              	.L623:
 11415 00d4 FFFFCF3F 		.word	1070596095
 11416 00d8 00A80040 		.word	1073784832
 11417              		.cfi_endproc
 11418              	.LFE432:
 11420              		.section	.text.HAL_FDCAN_TT_ActivateNotification,"ax",%progbits
 11421              		.align	1
 11422              		.global	HAL_FDCAN_TT_ActivateNotification
 11423              		.syntax unified
 11424              		.thumb
 11425              		.thumb_func
 11427              	HAL_FDCAN_TT_ActivateNotification:
 11428              	.LFB433:
5145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
5147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Enable TT interrupts.
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 310


5148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
5149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
5150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  ActiveTTITs indicates which TT interrupts will be enabled.
5151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be any combination of @arg FDCAN_TTInterrupts.
5152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
5153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
5154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_TT_ActivateNotification(FDCAN_HandleTypeDef *hfdcan, uint32_t ActiveTTI
5155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 11429              		.loc 1 5155 1
 11430              		.cfi_startproc
 11431              		@ args = 0, pretend = 0, frame = 16
 11432              		@ frame_needed = 1, uses_anonymous_args = 0
 11433              		@ link register save eliminated.
 11434 0000 80B4     		push	{r7}
 11435              	.LCFI593:
 11436              		.cfi_def_cfa_offset 4
 11437              		.cfi_offset 7, -4
 11438 0002 85B0     		sub	sp, sp, #20
 11439              	.LCFI594:
 11440              		.cfi_def_cfa_offset 24
 11441 0004 00AF     		add	r7, sp, #0
 11442              	.LCFI595:
 11443              		.cfi_def_cfa_register 7
 11444 0006 7860     		str	r0, [r7, #4]
 11445 0008 3960     		str	r1, [r7]
5156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 11446              		.loc 1 5156 26
 11447 000a 7B68     		ldr	r3, [r7, #4]
 11448 000c 93F89830 		ldrb	r3, [r3, #152]
 11449 0010 FB73     		strb	r3, [r7, #15]
5157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
5159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_INSTANCE(hfdcan->Instance));
5160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_IT(ActiveTTITs));
5161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 11450              		.loc 1 5162 6
 11451 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 11452 0014 012B     		cmp	r3, #1
 11453 0016 02D0     		beq	.L626
 11454              		.loc 1 5162 40 discriminator 1
 11455 0018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 11456 001a 022B     		cmp	r3, #2
 11457 001c 2ED1     		bne	.L627
 11458              	.L626:
5163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Enable Interrupt lines */
5165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((ActiveTTITs & hfdcan->ttcan->TTILS) == 0U)
 11459              		.loc 1 5165 30
 11460 001e 7B68     		ldr	r3, [r7, #4]
 11461 0020 5B68     		ldr	r3, [r3, #4]
 11462              		.loc 1 5165 37
 11463 0022 9A6A     		ldr	r2, [r3, #40]
 11464              		.loc 1 5165 22
 11465 0024 3B68     		ldr	r3, [r7]
 11466 0026 1340     		ands	r3, r3, r2
 11467              		.loc 1 5165 8
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 311


 11468 0028 002B     		cmp	r3, #0
 11469 002a 08D1     		bne	.L628
5166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Enable Interrupt line 0 */
5168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       SET_BIT(hfdcan->Instance->ILE, FDCAN_INTERRUPT_LINE0);
 11470              		.loc 1 5168 7
 11471 002c 7B68     		ldr	r3, [r7, #4]
 11472 002e 1B68     		ldr	r3, [r3]
 11473 0030 DA6D     		ldr	r2, [r3, #92]
 11474 0032 7B68     		ldr	r3, [r7, #4]
 11475 0034 1B68     		ldr	r3, [r3]
 11476 0036 42F00102 		orr	r2, r2, #1
 11477 003a DA65     		str	r2, [r3, #92]
 11478 003c 14E0     		b	.L629
 11479              	.L628:
5169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else if ((ActiveTTITs & hfdcan->ttcan->TTILS) == ActiveTTITs)
 11480              		.loc 1 5170 35
 11481 003e 7B68     		ldr	r3, [r7, #4]
 11482 0040 5B68     		ldr	r3, [r3, #4]
 11483              		.loc 1 5170 42
 11484 0042 9A6A     		ldr	r2, [r3, #40]
 11485              		.loc 1 5170 27
 11486 0044 3B68     		ldr	r3, [r7]
 11487 0046 1340     		ands	r3, r3, r2
 11488              		.loc 1 5170 13
 11489 0048 3A68     		ldr	r2, [r7]
 11490 004a 9A42     		cmp	r2, r3
 11491 004c 08D1     		bne	.L630
5171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Enable Interrupt line 1 */
5173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       SET_BIT(hfdcan->Instance->ILE, FDCAN_INTERRUPT_LINE1);
 11492              		.loc 1 5173 7
 11493 004e 7B68     		ldr	r3, [r7, #4]
 11494 0050 1B68     		ldr	r3, [r3]
 11495 0052 DA6D     		ldr	r2, [r3, #92]
 11496 0054 7B68     		ldr	r3, [r7, #4]
 11497 0056 1B68     		ldr	r3, [r3]
 11498 0058 42F00202 		orr	r2, r2, #2
 11499 005c DA65     		str	r2, [r3, #92]
 11500 005e 03E0     		b	.L629
 11501              	.L630:
5174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     else
5176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Enable Interrupt lines 0 and 1 */
5178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->Instance->ILE = (FDCAN_INTERRUPT_LINE0 | FDCAN_INTERRUPT_LINE1);
 11502              		.loc 1 5178 13
 11503 0060 7B68     		ldr	r3, [r7, #4]
 11504 0062 1B68     		ldr	r3, [r3]
 11505              		.loc 1 5178 29
 11506 0064 0322     		movs	r2, #3
 11507 0066 DA65     		str	r2, [r3, #92]
 11508              	.L629:
5179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Enable the selected TT interrupts */
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 312


5182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     __HAL_FDCAN_TT_ENABLE_IT(hfdcan, ActiveTTITs);
 11509              		.loc 1 5182 5
 11510 0068 7B68     		ldr	r3, [r7, #4]
 11511 006a 5B68     		ldr	r3, [r3, #4]
 11512 006c 596A     		ldr	r1, [r3, #36]
 11513 006e 7B68     		ldr	r3, [r7, #4]
 11514 0070 5B68     		ldr	r3, [r3, #4]
 11515 0072 3A68     		ldr	r2, [r7]
 11516 0074 0A43     		orrs	r2, r2, r1
 11517 0076 5A62     		str	r2, [r3, #36]
5183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
5185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 11518              		.loc 1 5185 12
 11519 0078 0023     		movs	r3, #0
 11520 007a 08E0     		b	.L631
 11521              	.L627:
5186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
5188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
5190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 11522              		.loc 1 5190 23
 11523 007c 7B68     		ldr	r3, [r7, #4]
 11524 007e D3F89C30 		ldr	r3, [r3, #156]
 11525 0082 43F00202 		orr	r2, r3, #2
 11526 0086 7B68     		ldr	r3, [r7, #4]
 11527 0088 C3F89C20 		str	r2, [r3, #156]
5191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 11528              		.loc 1 5192 12
 11529 008c 0123     		movs	r3, #1
 11530              	.L631:
5193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 11531              		.loc 1 5194 1
 11532 008e 1846     		mov	r0, r3
 11533 0090 1437     		adds	r7, r7, #20
 11534              	.LCFI596:
 11535              		.cfi_def_cfa_offset 4
 11536 0092 BD46     		mov	sp, r7
 11537              	.LCFI597:
 11538              		.cfi_def_cfa_register 13
 11539              		@ sp needed
 11540 0094 5DF8047B 		ldr	r7, [sp], #4
 11541              	.LCFI598:
 11542              		.cfi_restore 7
 11543              		.cfi_def_cfa_offset 0
 11544 0098 7047     		bx	lr
 11545              		.cfi_endproc
 11546              	.LFE433:
 11548              		.section	.text.HAL_FDCAN_TT_DeactivateNotification,"ax",%progbits
 11549              		.align	1
 11550              		.global	HAL_FDCAN_TT_DeactivateNotification
 11551              		.syntax unified
 11552              		.thumb
 11553              		.thumb_func
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 313


 11555              	HAL_FDCAN_TT_DeactivateNotification:
 11556              	.LFB434:
5195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
5197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Disable TT interrupts.
5198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
5199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
5200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  InactiveTTITs indicates which TT interrupts will be disabled.
5201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be any combination of @arg FDCAN_TTInterrupts.
5202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
5203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
5204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_StatusTypeDef HAL_FDCAN_TT_DeactivateNotification(FDCAN_HandleTypeDef *hfdcan, uint32_t Inactiv
5205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 11557              		.loc 1 5205 1
 11558              		.cfi_startproc
 11559              		@ args = 0, pretend = 0, frame = 16
 11560              		@ frame_needed = 1, uses_anonymous_args = 0
 11561              		@ link register save eliminated.
 11562 0000 80B4     		push	{r7}
 11563              	.LCFI599:
 11564              		.cfi_def_cfa_offset 4
 11565              		.cfi_offset 7, -4
 11566 0002 85B0     		sub	sp, sp, #20
 11567              	.LCFI600:
 11568              		.cfi_def_cfa_offset 24
 11569 0004 00AF     		add	r7, sp, #0
 11570              	.LCFI601:
 11571              		.cfi_def_cfa_register 7
 11572 0006 7860     		str	r0, [r7, #4]
 11573 0008 3960     		str	r1, [r7]
5206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t ITLineSelection;
5207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   HAL_FDCAN_StateTypeDef state = hfdcan->State;
 11574              		.loc 1 5207 26
 11575 000a 7B68     		ldr	r3, [r7, #4]
 11576 000c 93F89830 		ldrb	r3, [r3, #152]
 11577 0010 FB73     		strb	r3, [r7, #15]
5208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Check function parameters */
5210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_INSTANCE(hfdcan->Instance));
5211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   assert_param(IS_FDCAN_TT_IT(InactiveTTITs));
5212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if ((state == HAL_FDCAN_STATE_READY) || (state == HAL_FDCAN_STATE_BUSY))
 11578              		.loc 1 5213 6
 11579 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 11580 0014 012B     		cmp	r3, #1
 11581 0016 02D0     		beq	.L633
 11582              		.loc 1 5213 40 discriminator 1
 11583 0018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 11584 001a 022B     		cmp	r3, #2
 11585 001c 2DD1     		bne	.L634
 11586              	.L633:
5214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Disable the selected TT interrupts */
5216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     __HAL_FDCAN_TT_DISABLE_IT(hfdcan, InactiveTTITs);
 11587              		.loc 1 5216 5
 11588 001e 7B68     		ldr	r3, [r7, #4]
 11589 0020 5B68     		ldr	r3, [r3, #4]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 314


 11590 0022 596A     		ldr	r1, [r3, #36]
 11591 0024 3B68     		ldr	r3, [r7]
 11592 0026 DA43     		mvns	r2, r3
 11593 0028 7B68     		ldr	r3, [r7, #4]
 11594 002a 5B68     		ldr	r3, [r3, #4]
 11595 002c 0A40     		ands	r2, r2, r1
 11596 002e 5A62     		str	r2, [r3, #36]
5217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     ITLineSelection = hfdcan->ttcan->TTILS;
 11597              		.loc 1 5218 29
 11598 0030 7B68     		ldr	r3, [r7, #4]
 11599 0032 5B68     		ldr	r3, [r3, #4]
 11600              		.loc 1 5218 21
 11601 0034 9B6A     		ldr	r3, [r3, #40]
 11602 0036 BB60     		str	r3, [r7, #8]
5219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->ttcan->TTIE | ITLineSelection) == ITLineSelection)
 11603              		.loc 1 5220 16
 11604 0038 7B68     		ldr	r3, [r7, #4]
 11605 003a 5B68     		ldr	r3, [r3, #4]
 11606              		.loc 1 5220 23
 11607 003c 5A6A     		ldr	r2, [r3, #36]
 11608              		.loc 1 5220 30
 11609 003e BB68     		ldr	r3, [r7, #8]
 11610 0040 1343     		orrs	r3, r3, r2
 11611              		.loc 1 5220 8
 11612 0042 BA68     		ldr	r2, [r7, #8]
 11613 0044 9A42     		cmp	r2, r3
 11614 0046 07D1     		bne	.L635
5221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Disable Interrupt line 0 */
5223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       CLEAR_BIT(hfdcan->Instance->ILE, FDCAN_INTERRUPT_LINE0);
 11615              		.loc 1 5223 7
 11616 0048 7B68     		ldr	r3, [r7, #4]
 11617 004a 1B68     		ldr	r3, [r3]
 11618 004c DA6D     		ldr	r2, [r3, #92]
 11619 004e 7B68     		ldr	r3, [r7, #4]
 11620 0050 1B68     		ldr	r3, [r3]
 11621 0052 22F00102 		bic	r2, r2, #1
 11622 0056 DA65     		str	r2, [r3, #92]
 11623              	.L635:
5224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->ttcan->TTIE & ITLineSelection) == 0U)
 11624              		.loc 1 5226 16
 11625 0058 7B68     		ldr	r3, [r7, #4]
 11626 005a 5B68     		ldr	r3, [r3, #4]
 11627              		.loc 1 5226 23
 11628 005c 5A6A     		ldr	r2, [r3, #36]
 11629              		.loc 1 5226 30
 11630 005e BB68     		ldr	r3, [r7, #8]
 11631 0060 1340     		ands	r3, r3, r2
 11632              		.loc 1 5226 8
 11633 0062 002B     		cmp	r3, #0
 11634 0064 07D1     		bne	.L636
5227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Disable Interrupt line 1 */
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 315


5229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       CLEAR_BIT(hfdcan->Instance->ILE, FDCAN_INTERRUPT_LINE1);
 11635              		.loc 1 5229 7
 11636 0066 7B68     		ldr	r3, [r7, #4]
 11637 0068 1B68     		ldr	r3, [r3]
 11638 006a DA6D     		ldr	r2, [r3, #92]
 11639 006c 7B68     		ldr	r3, [r7, #4]
 11640 006e 1B68     		ldr	r3, [r3]
 11641 0070 22F00202 		bic	r2, r2, #2
 11642 0074 DA65     		str	r2, [r3, #92]
 11643              	.L636:
5230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Return function status */
5233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_OK;
 11644              		.loc 1 5233 12
 11645 0076 0023     		movs	r3, #0
 11646 0078 08E0     		b	.L637
 11647              	.L634:
5234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
5236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
5238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_NOT_INITIALIZED;
 11648              		.loc 1 5238 23
 11649 007a 7B68     		ldr	r3, [r7, #4]
 11650 007c D3F89C30 		ldr	r3, [r3, #156]
 11651 0080 43F00202 		orr	r2, r3, #2
 11652 0084 7B68     		ldr	r3, [r7, #4]
 11653 0086 C3F89C20 		str	r2, [r3, #156]
5239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
 11654              		.loc 1 5240 12
 11655 008a 0123     		movs	r3, #1
 11656              	.L637:
5241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 11657              		.loc 1 5242 1
 11658 008c 1846     		mov	r0, r3
 11659 008e 1437     		adds	r7, r7, #20
 11660              	.LCFI602:
 11661              		.cfi_def_cfa_offset 4
 11662 0090 BD46     		mov	sp, r7
 11663              	.LCFI603:
 11664              		.cfi_def_cfa_register 13
 11665              		@ sp needed
 11666 0092 5DF8047B 		ldr	r7, [sp], #4
 11667              	.LCFI604:
 11668              		.cfi_restore 7
 11669              		.cfi_def_cfa_offset 0
 11670 0096 7047     		bx	lr
 11671              		.cfi_endproc
 11672              	.LFE434:
 11674              		.section	.text.HAL_FDCAN_IRQHandler,"ax",%progbits
 11675              		.align	1
 11676              		.global	HAL_FDCAN_IRQHandler
 11677              		.syntax unified
 11678              		.thumb
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 316


 11679              		.thumb_func
 11681              	HAL_FDCAN_IRQHandler:
 11682              	.LFB435:
5243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
5245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Handles FDCAN interrupt request.
5246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
5247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
5248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
5249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
5250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** void HAL_FDCAN_IRQHandler(FDCAN_HandleTypeDef *hfdcan)
5251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 11683              		.loc 1 5251 1
 11684              		.cfi_startproc
 11685              		@ args = 0, pretend = 0, frame = 88
 11686              		@ frame_needed = 1, uses_anonymous_args = 0
 11687 0000 80B5     		push	{r7, lr}
 11688              	.LCFI605:
 11689              		.cfi_def_cfa_offset 8
 11690              		.cfi_offset 7, -8
 11691              		.cfi_offset 14, -4
 11692 0002 96B0     		sub	sp, sp, #88
 11693              	.LCFI606:
 11694              		.cfi_def_cfa_offset 96
 11695 0004 00AF     		add	r7, sp, #0
 11696              	.LCFI607:
 11697              		.cfi_def_cfa_register 7
 11698 0006 7860     		str	r0, [r7, #4]
5252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t ClkCalibrationITs;
5253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t TxEventFifoITs;
5254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t RxFifo0ITs;
5255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t RxFifo1ITs;
5256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t Errors;
5257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t ErrorStatusITs;
5258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t TransmittedBuffers;
5259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t AbortedBuffers;
5260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t TTSchedSyncITs;
5261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t TTTimeMarkITs;
5262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t TTGlobTimeITs;
5263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t TTDistErrors;
5264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t TTFatalErrors;
5265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t SWTime;
5266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t SWCycleCount;
5267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t itsourceIE;
5268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t itsourceTTIE;
5269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t itflagIR;
5270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t itflagTTIR;
5271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ClkCalibrationITs = (FDCAN_CCU->IR << 30);
 11699              		.loc 1 5272 33
 11700 0008 974B     		ldr	r3, .L661
 11701 000a 1B69     		ldr	r3, [r3, #16]
 11702              		.loc 1 5272 21
 11703 000c 9B07     		lsls	r3, r3, #30
 11704 000e 7B65     		str	r3, [r7, #84]
5273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ClkCalibrationITs &= (FDCAN_CCU->IE << 30);
 11705              		.loc 1 5273 34
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 317


 11706 0010 954B     		ldr	r3, .L661
 11707 0012 5B69     		ldr	r3, [r3, #20]
 11708              		.loc 1 5273 39
 11709 0014 9B07     		lsls	r3, r3, #30
 11710              		.loc 1 5273 21
 11711 0016 7A6D     		ldr	r2, [r7, #84]
 11712 0018 1340     		ands	r3, r3, r2
 11713 001a 7B65     		str	r3, [r7, #84]
5274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   TxEventFifoITs = hfdcan->Instance->IR & FDCAN_TX_EVENT_FIFO_MASK;
 11714              		.loc 1 5274 26
 11715 001c 7B68     		ldr	r3, [r7, #4]
 11716 001e 1B68     		ldr	r3, [r3]
 11717              		.loc 1 5274 36
 11718 0020 1B6D     		ldr	r3, [r3, #80]
 11719              		.loc 1 5274 18
 11720 0022 03F47043 		and	r3, r3, #61440
 11721 0026 3B65     		str	r3, [r7, #80]
5275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   TxEventFifoITs &= hfdcan->Instance->IE;
 11722              		.loc 1 5275 27
 11723 0028 7B68     		ldr	r3, [r7, #4]
 11724 002a 1B68     		ldr	r3, [r3]
 11725              		.loc 1 5275 37
 11726 002c 5B6D     		ldr	r3, [r3, #84]
 11727              		.loc 1 5275 18
 11728 002e 3A6D     		ldr	r2, [r7, #80]
 11729 0030 1340     		ands	r3, r3, r2
 11730 0032 3B65     		str	r3, [r7, #80]
5276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   RxFifo0ITs = hfdcan->Instance->IR & FDCAN_RX_FIFO0_MASK;
 11731              		.loc 1 5276 22
 11732 0034 7B68     		ldr	r3, [r7, #4]
 11733 0036 1B68     		ldr	r3, [r3]
 11734              		.loc 1 5276 32
 11735 0038 1B6D     		ldr	r3, [r3, #80]
 11736              		.loc 1 5276 14
 11737 003a 03F00F03 		and	r3, r3, #15
 11738 003e FB64     		str	r3, [r7, #76]
5277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   RxFifo0ITs &= hfdcan->Instance->IE;
 11739              		.loc 1 5277 23
 11740 0040 7B68     		ldr	r3, [r7, #4]
 11741 0042 1B68     		ldr	r3, [r3]
 11742              		.loc 1 5277 33
 11743 0044 5B6D     		ldr	r3, [r3, #84]
 11744              		.loc 1 5277 14
 11745 0046 FA6C     		ldr	r2, [r7, #76]
 11746 0048 1340     		ands	r3, r3, r2
 11747 004a FB64     		str	r3, [r7, #76]
5278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   RxFifo1ITs = hfdcan->Instance->IR & FDCAN_RX_FIFO1_MASK;
 11748              		.loc 1 5278 22
 11749 004c 7B68     		ldr	r3, [r7, #4]
 11750 004e 1B68     		ldr	r3, [r3]
 11751              		.loc 1 5278 32
 11752 0050 1B6D     		ldr	r3, [r3, #80]
 11753              		.loc 1 5278 14
 11754 0052 03F0F003 		and	r3, r3, #240
 11755 0056 BB64     		str	r3, [r7, #72]
5279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   RxFifo1ITs &= hfdcan->Instance->IE;
 11756              		.loc 1 5279 23
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 318


 11757 0058 7B68     		ldr	r3, [r7, #4]
 11758 005a 1B68     		ldr	r3, [r3]
 11759              		.loc 1 5279 33
 11760 005c 5B6D     		ldr	r3, [r3, #84]
 11761              		.loc 1 5279 14
 11762 005e BA6C     		ldr	r2, [r7, #72]
 11763 0060 1340     		ands	r3, r3, r2
 11764 0062 BB64     		str	r3, [r7, #72]
5280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   Errors = hfdcan->Instance->IR & FDCAN_ERROR_MASK;
 11765              		.loc 1 5280 18
 11766 0064 7B68     		ldr	r3, [r7, #4]
 11767 0066 1B68     		ldr	r3, [r3]
 11768              		.loc 1 5280 28
 11769 0068 1B6D     		ldr	r3, [r3, #80]
 11770              		.loc 1 5280 10
 11771 006a 03F07153 		and	r3, r3, #1010827264
 11772 006e 7B64     		str	r3, [r7, #68]
5281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   Errors &= hfdcan->Instance->IE;
 11773              		.loc 1 5281 19
 11774 0070 7B68     		ldr	r3, [r7, #4]
 11775 0072 1B68     		ldr	r3, [r3]
 11776              		.loc 1 5281 29
 11777 0074 5B6D     		ldr	r3, [r3, #84]
 11778              		.loc 1 5281 10
 11779 0076 7A6C     		ldr	r2, [r7, #68]
 11780 0078 1340     		ands	r3, r3, r2
 11781 007a 7B64     		str	r3, [r7, #68]
5282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ErrorStatusITs = hfdcan->Instance->IR & FDCAN_ERROR_STATUS_MASK;
 11782              		.loc 1 5282 26
 11783 007c 7B68     		ldr	r3, [r7, #4]
 11784 007e 1B68     		ldr	r3, [r3]
 11785              		.loc 1 5282 36
 11786 0080 1B6D     		ldr	r3, [r3, #80]
 11787              		.loc 1 5282 18
 11788 0082 03F06073 		and	r3, r3, #58720256
 11789 0086 3B64     		str	r3, [r7, #64]
5283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ErrorStatusITs &= hfdcan->Instance->IE;
 11790              		.loc 1 5283 27
 11791 0088 7B68     		ldr	r3, [r7, #4]
 11792 008a 1B68     		ldr	r3, [r3]
 11793              		.loc 1 5283 37
 11794 008c 5B6D     		ldr	r3, [r3, #84]
 11795              		.loc 1 5283 18
 11796 008e 3A6C     		ldr	r2, [r7, #64]
 11797 0090 1340     		ands	r3, r3, r2
 11798 0092 3B64     		str	r3, [r7, #64]
5284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   itsourceIE = hfdcan->Instance->IE;
 11799              		.loc 1 5284 22
 11800 0094 7B68     		ldr	r3, [r7, #4]
 11801 0096 1B68     		ldr	r3, [r3]
 11802              		.loc 1 5284 14
 11803 0098 5B6D     		ldr	r3, [r3, #84]
 11804 009a FB63     		str	r3, [r7, #60]
5285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   itflagIR = hfdcan->Instance->IR;
 11805              		.loc 1 5285 20
 11806 009c 7B68     		ldr	r3, [r7, #4]
 11807 009e 1B68     		ldr	r3, [r3]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 319


 11808              		.loc 1 5285 12
 11809 00a0 1B6D     		ldr	r3, [r3, #80]
 11810 00a2 BB63     		str	r3, [r7, #56]
5286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* High Priority Message interrupt management *******************************/
5288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (FDCAN_CHECK_IT_SOURCE(itsourceIE, FDCAN_IT_RX_HIGH_PRIORITY_MSG) != RESET)
 11811              		.loc 1 5288 7
 11812 00a4 FB6B     		ldr	r3, [r7, #60]
 11813 00a6 1B0A     		lsrs	r3, r3, #8
 11814 00a8 03F00103 		and	r3, r3, #1
 11815              		.loc 1 5288 6
 11816 00ac 002B     		cmp	r3, #0
 11817 00ae 12D0     		beq	.L639
5289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (FDCAN_CHECK_FLAG(itflagIR, FDCAN_FLAG_RX_HIGH_PRIORITY_MSG) != RESET)
 11818              		.loc 1 5290 9
 11819 00b0 BB6B     		ldr	r3, [r7, #56]
 11820 00b2 1B0A     		lsrs	r3, r3, #8
 11821 00b4 03F00103 		and	r3, r3, #1
 11822              		.loc 1 5290 8
 11823 00b8 002B     		cmp	r3, #0
 11824 00ba 0CD0     		beq	.L639
5291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Clear the High Priority Message flag */
5293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_RX_HIGH_PRIORITY_MSG);
 11825              		.loc 1 5293 7
 11826 00bc 7B68     		ldr	r3, [r7, #4]
 11827 00be 1B68     		ldr	r3, [r3]
 11828 00c0 4FF48072 		mov	r2, #256
 11829 00c4 1A65     		str	r2, [r3, #80]
 11830 00c6 684B     		ldr	r3, .L661
 11831 00c8 0022     		movs	r2, #0
 11832 00ca 1A61     		str	r2, [r3, #16]
5294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #if USE_HAL_FDCAN_REGISTER_CALLBACKS == 1
5296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Call registered callback*/
5297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->HighPriorityMessageCallback(hfdcan);
 11833              		.loc 1 5297 13
 11834 00cc 7B68     		ldr	r3, [r7, #4]
 11835 00ce D3F8C030 		ldr	r3, [r3, #192]
 11836              		.loc 1 5297 7
 11837 00d2 7868     		ldr	r0, [r7, #4]
 11838 00d4 9847     		blx	r3
 11839              	.LVL2:
 11840              	.L639:
5298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #else
5299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* High Priority Message Callback */
5300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       HAL_FDCAN_HighPriorityMessageCallback(hfdcan);
5301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #endif /* USE_HAL_FDCAN_REGISTER_CALLBACKS */
5302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Transmission Abort interrupt management **********************************/
5306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (FDCAN_CHECK_IT_SOURCE(itsourceIE, FDCAN_IT_TX_ABORT_COMPLETE) != RESET)
 11841              		.loc 1 5306 7
 11842 00d6 FB6B     		ldr	r3, [r7, #60]
 11843 00d8 9B0A     		lsrs	r3, r3, #10
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 320


 11844 00da 03F00103 		and	r3, r3, #1
 11845              		.loc 1 5306 6
 11846 00de 002B     		cmp	r3, #0
 11847 00e0 1FD0     		beq	.L640
5307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (FDCAN_CHECK_FLAG(itflagIR, FDCAN_FLAG_TX_ABORT_COMPLETE) != RESET)
 11848              		.loc 1 5308 9
 11849 00e2 BB6B     		ldr	r3, [r7, #56]
 11850 00e4 9B0A     		lsrs	r3, r3, #10
 11851 00e6 03F00103 		and	r3, r3, #1
 11852              		.loc 1 5308 8
 11853 00ea 002B     		cmp	r3, #0
 11854 00ec 19D0     		beq	.L640
5309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* List of aborted monitored buffers */
5311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       AbortedBuffers = hfdcan->Instance->TXBCF;
 11855              		.loc 1 5311 30
 11856 00ee 7B68     		ldr	r3, [r7, #4]
 11857 00f0 1B68     		ldr	r3, [r3]
 11858              		.loc 1 5311 22
 11859 00f2 D3F8DC30 		ldr	r3, [r3, #220]
 11860 00f6 7B63     		str	r3, [r7, #52]
5312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       AbortedBuffers &= hfdcan->Instance->TXBCIE;
 11861              		.loc 1 5312 31
 11862 00f8 7B68     		ldr	r3, [r7, #4]
 11863 00fa 1B68     		ldr	r3, [r3]
 11864              		.loc 1 5312 41
 11865 00fc D3F8E430 		ldr	r3, [r3, #228]
 11866              		.loc 1 5312 22
 11867 0100 7A6B     		ldr	r2, [r7, #52]
 11868 0102 1340     		ands	r3, r3, r2
 11869 0104 7B63     		str	r3, [r7, #52]
5313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Clear the Transmission Cancellation flag */
5315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_TX_ABORT_COMPLETE);
 11870              		.loc 1 5315 7
 11871 0106 7B68     		ldr	r3, [r7, #4]
 11872 0108 1B68     		ldr	r3, [r3]
 11873 010a 4FF48062 		mov	r2, #1024
 11874 010e 1A65     		str	r2, [r3, #80]
 11875 0110 554B     		ldr	r3, .L661
 11876 0112 0022     		movs	r2, #0
 11877 0114 1A61     		str	r2, [r3, #16]
5316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #if USE_HAL_FDCAN_REGISTER_CALLBACKS == 1
5318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Call registered callback*/
5319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->TxBufferAbortCallback(hfdcan, AbortedBuffers);
 11878              		.loc 1 5319 13
 11879 0116 7B68     		ldr	r3, [r7, #4]
 11880 0118 D3F8B830 		ldr	r3, [r3, #184]
 11881              		.loc 1 5319 7
 11882 011c 796B     		ldr	r1, [r7, #52]
 11883 011e 7868     		ldr	r0, [r7, #4]
 11884 0120 9847     		blx	r3
 11885              	.LVL3:
 11886              	.L640:
5320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #else
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 321


5321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Transmission Cancellation Callback */
5322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       HAL_FDCAN_TxBufferAbortCallback(hfdcan, AbortedBuffers);
5323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #endif /* USE_HAL_FDCAN_REGISTER_CALLBACKS */
5324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Clock calibration unit interrupts management *****************************/
5328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (ClkCalibrationITs != 0U)
 11887              		.loc 1 5328 6
 11888 0122 7B6D     		ldr	r3, [r7, #84]
 11889 0124 002B     		cmp	r3, #0
 11890 0126 0FD0     		beq	.L641
5329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Clear the Clock Calibration flags */
5331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     __HAL_FDCAN_CLEAR_FLAG(hfdcan, ClkCalibrationITs);
 11891              		.loc 1 5331 5
 11892 0128 7B68     		ldr	r3, [r7, #4]
 11893 012a 1A68     		ldr	r2, [r3]
 11894 012c 796D     		ldr	r1, [r7, #84]
 11895 012e 4F4B     		ldr	r3, .L661+4
 11896 0130 0B40     		ands	r3, r3, r1
 11897 0132 1365     		str	r3, [r2, #80]
 11898 0134 4C4A     		ldr	r2, .L661
 11899 0136 7B6D     		ldr	r3, [r7, #84]
 11900 0138 9B0F     		lsrs	r3, r3, #30
 11901 013a 1361     		str	r3, [r2, #16]
5332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #if USE_HAL_FDCAN_REGISTER_CALLBACKS == 1
5334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Call registered callback*/
5335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ClockCalibrationCallback(hfdcan, ClkCalibrationITs);
 11902              		.loc 1 5335 11
 11903 013c 7B68     		ldr	r3, [r7, #4]
 11904 013e D3F8A030 		ldr	r3, [r3, #160]
 11905              		.loc 1 5335 5
 11906 0142 796D     		ldr	r1, [r7, #84]
 11907 0144 7868     		ldr	r0, [r7, #4]
 11908 0146 9847     		blx	r3
 11909              	.LVL4:
 11910              	.L641:
5336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #else
5337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Clock Calibration Callback */
5338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     HAL_FDCAN_ClockCalibrationCallback(hfdcan, ClkCalibrationITs);
5339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #endif /* USE_HAL_FDCAN_REGISTER_CALLBACKS */
5340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Tx event FIFO interrupts management **************************************/
5343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (TxEventFifoITs != 0U)
 11911              		.loc 1 5343 6
 11912 0148 3B6D     		ldr	r3, [r7, #80]
 11913 014a 002B     		cmp	r3, #0
 11914 014c 0FD0     		beq	.L642
5344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Clear the Tx Event FIFO flags */
5346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     __HAL_FDCAN_CLEAR_FLAG(hfdcan, TxEventFifoITs);
 11915              		.loc 1 5346 5
 11916 014e 7B68     		ldr	r3, [r7, #4]
 11917 0150 1A68     		ldr	r2, [r3]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 322


 11918 0152 396D     		ldr	r1, [r7, #80]
 11919 0154 454B     		ldr	r3, .L661+4
 11920 0156 0B40     		ands	r3, r3, r1
 11921 0158 1365     		str	r3, [r2, #80]
 11922 015a 434A     		ldr	r2, .L661
 11923 015c 3B6D     		ldr	r3, [r7, #80]
 11924 015e 9B0F     		lsrs	r3, r3, #30
 11925 0160 1361     		str	r3, [r2, #16]
5347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #if USE_HAL_FDCAN_REGISTER_CALLBACKS == 1
5349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Call registered callback*/
5350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->TxEventFifoCallback(hfdcan, TxEventFifoITs);
 11926              		.loc 1 5350 11
 11927 0162 7B68     		ldr	r3, [r7, #4]
 11928 0164 D3F8A430 		ldr	r3, [r3, #164]
 11929              		.loc 1 5350 5
 11930 0168 396D     		ldr	r1, [r7, #80]
 11931 016a 7868     		ldr	r0, [r7, #4]
 11932 016c 9847     		blx	r3
 11933              	.LVL5:
 11934              	.L642:
5351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #else
5352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Tx Event FIFO Callback */
5353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     HAL_FDCAN_TxEventFifoCallback(hfdcan, TxEventFifoITs);
5354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #endif /* USE_HAL_FDCAN_REGISTER_CALLBACKS */
5355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Rx FIFO 0 interrupts management ******************************************/
5358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (RxFifo0ITs != 0U)
 11935              		.loc 1 5358 6
 11936 016e FB6C     		ldr	r3, [r7, #76]
 11937 0170 002B     		cmp	r3, #0
 11938 0172 0FD0     		beq	.L643
5359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Clear the Rx FIFO 0 flags */
5361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     __HAL_FDCAN_CLEAR_FLAG(hfdcan, RxFifo0ITs);
 11939              		.loc 1 5361 5
 11940 0174 7B68     		ldr	r3, [r7, #4]
 11941 0176 1A68     		ldr	r2, [r3]
 11942 0178 F96C     		ldr	r1, [r7, #76]
 11943 017a 3C4B     		ldr	r3, .L661+4
 11944 017c 0B40     		ands	r3, r3, r1
 11945 017e 1365     		str	r3, [r2, #80]
 11946 0180 394A     		ldr	r2, .L661
 11947 0182 FB6C     		ldr	r3, [r7, #76]
 11948 0184 9B0F     		lsrs	r3, r3, #30
 11949 0186 1361     		str	r3, [r2, #16]
5362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #if USE_HAL_FDCAN_REGISTER_CALLBACKS == 1
5364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Call registered callback*/
5365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->RxFifo0Callback(hfdcan, RxFifo0ITs);
 11950              		.loc 1 5365 11
 11951 0188 7B68     		ldr	r3, [r7, #4]
 11952 018a D3F8A830 		ldr	r3, [r3, #168]
 11953              		.loc 1 5365 5
 11954 018e F96C     		ldr	r1, [r7, #76]
 11955 0190 7868     		ldr	r0, [r7, #4]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 323


 11956 0192 9847     		blx	r3
 11957              	.LVL6:
 11958              	.L643:
5366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #else
5367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Rx FIFO 0 Callback */
5368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     HAL_FDCAN_RxFifo0Callback(hfdcan, RxFifo0ITs);
5369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #endif /* USE_HAL_FDCAN_REGISTER_CALLBACKS */
5370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Rx FIFO 1 interrupts management ******************************************/
5373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (RxFifo1ITs != 0U)
 11959              		.loc 1 5373 6
 11960 0194 BB6C     		ldr	r3, [r7, #72]
 11961 0196 002B     		cmp	r3, #0
 11962 0198 0FD0     		beq	.L644
5374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Clear the Rx FIFO 1 flags */
5376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     __HAL_FDCAN_CLEAR_FLAG(hfdcan, RxFifo1ITs);
 11963              		.loc 1 5376 5
 11964 019a 7B68     		ldr	r3, [r7, #4]
 11965 019c 1A68     		ldr	r2, [r3]
 11966 019e B96C     		ldr	r1, [r7, #72]
 11967 01a0 324B     		ldr	r3, .L661+4
 11968 01a2 0B40     		ands	r3, r3, r1
 11969 01a4 1365     		str	r3, [r2, #80]
 11970 01a6 304A     		ldr	r2, .L661
 11971 01a8 BB6C     		ldr	r3, [r7, #72]
 11972 01aa 9B0F     		lsrs	r3, r3, #30
 11973 01ac 1361     		str	r3, [r2, #16]
5377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #if USE_HAL_FDCAN_REGISTER_CALLBACKS == 1
5379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Call registered callback*/
5380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->RxFifo1Callback(hfdcan, RxFifo1ITs);
 11974              		.loc 1 5380 11
 11975 01ae 7B68     		ldr	r3, [r7, #4]
 11976 01b0 D3F8AC30 		ldr	r3, [r3, #172]
 11977              		.loc 1 5380 5
 11978 01b4 B96C     		ldr	r1, [r7, #72]
 11979 01b6 7868     		ldr	r0, [r7, #4]
 11980 01b8 9847     		blx	r3
 11981              	.LVL7:
 11982              	.L644:
5381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #else
5382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Rx FIFO 1 Callback */
5383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     HAL_FDCAN_RxFifo1Callback(hfdcan, RxFifo1ITs);
5384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #endif /* USE_HAL_FDCAN_REGISTER_CALLBACKS */
5385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Tx FIFO empty interrupt management ***************************************/
5388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (FDCAN_CHECK_IT_SOURCE(itsourceIE, FDCAN_IT_TX_FIFO_EMPTY) != RESET)
 11983              		.loc 1 5388 7
 11984 01ba FB6B     		ldr	r3, [r7, #60]
 11985 01bc DB0A     		lsrs	r3, r3, #11
 11986 01be 03F00103 		and	r3, r3, #1
 11987              		.loc 1 5388 6
 11988 01c2 002B     		cmp	r3, #0
 11989 01c4 12D0     		beq	.L645
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 324


5389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (FDCAN_CHECK_FLAG(itflagIR, FDCAN_FLAG_TX_FIFO_EMPTY) != RESET)
 11990              		.loc 1 5390 9
 11991 01c6 BB6B     		ldr	r3, [r7, #56]
 11992 01c8 DB0A     		lsrs	r3, r3, #11
 11993 01ca 03F00103 		and	r3, r3, #1
 11994              		.loc 1 5390 8
 11995 01ce 002B     		cmp	r3, #0
 11996 01d0 0CD0     		beq	.L645
5391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Clear the Tx FIFO empty flag */
5393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_TX_FIFO_EMPTY);
 11997              		.loc 1 5393 7
 11998 01d2 7B68     		ldr	r3, [r7, #4]
 11999 01d4 1B68     		ldr	r3, [r3]
 12000 01d6 4FF40062 		mov	r2, #2048
 12001 01da 1A65     		str	r2, [r3, #80]
 12002 01dc 224B     		ldr	r3, .L661
 12003 01de 0022     		movs	r2, #0
 12004 01e0 1A61     		str	r2, [r3, #16]
5394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #if USE_HAL_FDCAN_REGISTER_CALLBACKS == 1
5396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Call registered callback*/
5397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->TxFifoEmptyCallback(hfdcan);
 12005              		.loc 1 5397 13
 12006 01e2 7B68     		ldr	r3, [r7, #4]
 12007 01e4 D3F8B030 		ldr	r3, [r3, #176]
 12008              		.loc 1 5397 7
 12009 01e8 7868     		ldr	r0, [r7, #4]
 12010 01ea 9847     		blx	r3
 12011              	.LVL8:
 12012              	.L645:
5398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #else
5399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Tx FIFO empty Callback */
5400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       HAL_FDCAN_TxFifoEmptyCallback(hfdcan);
5401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #endif /* USE_HAL_FDCAN_REGISTER_CALLBACKS */
5402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Transmission Complete interrupt management *******************************/
5406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (FDCAN_CHECK_IT_SOURCE(itsourceIE, FDCAN_IT_TX_COMPLETE) != RESET)
 12013              		.loc 1 5406 7
 12014 01ec FB6B     		ldr	r3, [r7, #60]
 12015 01ee 5B0A     		lsrs	r3, r3, #9
 12016 01f0 03F00103 		and	r3, r3, #1
 12017              		.loc 1 5406 6
 12018 01f4 002B     		cmp	r3, #0
 12019 01f6 1FD0     		beq	.L646
5407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (FDCAN_CHECK_FLAG(itflagIR, FDCAN_FLAG_TX_COMPLETE) != RESET)
 12020              		.loc 1 5408 9
 12021 01f8 BB6B     		ldr	r3, [r7, #56]
 12022 01fa 5B0A     		lsrs	r3, r3, #9
 12023 01fc 03F00103 		and	r3, r3, #1
 12024              		.loc 1 5408 8
 12025 0200 002B     		cmp	r3, #0
 12026 0202 19D0     		beq	.L646
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 325


5409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* List of transmitted monitored buffers */
5411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       TransmittedBuffers = hfdcan->Instance->TXBTO;
 12027              		.loc 1 5411 34
 12028 0204 7B68     		ldr	r3, [r7, #4]
 12029 0206 1B68     		ldr	r3, [r3]
 12030              		.loc 1 5411 26
 12031 0208 D3F8D830 		ldr	r3, [r3, #216]
 12032 020c 3B63     		str	r3, [r7, #48]
5412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       TransmittedBuffers &= hfdcan->Instance->TXBTIE;
 12033              		.loc 1 5412 35
 12034 020e 7B68     		ldr	r3, [r7, #4]
 12035 0210 1B68     		ldr	r3, [r3]
 12036              		.loc 1 5412 45
 12037 0212 D3F8E030 		ldr	r3, [r3, #224]
 12038              		.loc 1 5412 26
 12039 0216 3A6B     		ldr	r2, [r7, #48]
 12040 0218 1340     		ands	r3, r3, r2
 12041 021a 3B63     		str	r3, [r7, #48]
5413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Clear the Transmission Complete flag */
5415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_TX_COMPLETE);
 12042              		.loc 1 5415 7
 12043 021c 7B68     		ldr	r3, [r7, #4]
 12044 021e 1B68     		ldr	r3, [r3]
 12045 0220 4FF40072 		mov	r2, #512
 12046 0224 1A65     		str	r2, [r3, #80]
 12047 0226 104B     		ldr	r3, .L661
 12048 0228 0022     		movs	r2, #0
 12049 022a 1A61     		str	r2, [r3, #16]
5416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #if USE_HAL_FDCAN_REGISTER_CALLBACKS == 1
5418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Call registered callback*/
5419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->TxBufferCompleteCallback(hfdcan, TransmittedBuffers);
 12050              		.loc 1 5419 13
 12051 022c 7B68     		ldr	r3, [r7, #4]
 12052 022e D3F8B430 		ldr	r3, [r3, #180]
 12053              		.loc 1 5419 7
 12054 0232 396B     		ldr	r1, [r7, #48]
 12055 0234 7868     		ldr	r0, [r7, #4]
 12056 0236 9847     		blx	r3
 12057              	.LVL9:
 12058              	.L646:
5420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #else
5421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Transmission Complete Callback */
5422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       HAL_FDCAN_TxBufferCompleteCallback(hfdcan, TransmittedBuffers);
5423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #endif /* USE_HAL_FDCAN_REGISTER_CALLBACKS */
5424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Rx Buffer New Message interrupt management *******************************/
5428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (FDCAN_CHECK_IT_SOURCE(itsourceIE, FDCAN_IT_RX_BUFFER_NEW_MESSAGE) != RESET)
 12059              		.loc 1 5428 7
 12060 0238 FB6B     		ldr	r3, [r7, #60]
 12061 023a DB0C     		lsrs	r3, r3, #19
 12062 023c 03F00103 		and	r3, r3, #1
 12063              		.loc 1 5428 6
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 326


 12064 0240 002B     		cmp	r3, #0
 12065 0242 17D0     		beq	.L647
5429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (FDCAN_CHECK_FLAG(itflagIR, FDCAN_FLAG_RX_BUFFER_NEW_MESSAGE) != RESET)
 12066              		.loc 1 5430 9
 12067 0244 BB6B     		ldr	r3, [r7, #56]
 12068 0246 DB0C     		lsrs	r3, r3, #19
 12069 0248 03F00103 		and	r3, r3, #1
 12070              		.loc 1 5430 8
 12071 024c 002B     		cmp	r3, #0
 12072 024e 11D0     		beq	.L647
5431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Clear the Rx Buffer New Message flag */
5433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_RX_BUFFER_NEW_MESSAGE);
 12073              		.loc 1 5433 7
 12074 0250 7B68     		ldr	r3, [r7, #4]
 12075 0252 1B68     		ldr	r3, [r3]
 12076 0254 4FF40022 		mov	r2, #524288
 12077 0258 1A65     		str	r2, [r3, #80]
 12078 025a 034B     		ldr	r3, .L661
 12079 025c 0022     		movs	r2, #0
 12080 025e 1A61     		str	r2, [r3, #16]
5434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #if USE_HAL_FDCAN_REGISTER_CALLBACKS == 1
5436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Call registered callback*/
5437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->RxBufferNewMessageCallback(hfdcan);
 12081              		.loc 1 5437 13
 12082 0260 7B68     		ldr	r3, [r7, #4]
 12083 0262 D3F8BC30 		ldr	r3, [r3, #188]
 12084 0266 03E0     		b	.L662
 12085              	.L663:
 12086              		.align	2
 12087              	.L661:
 12088 0268 00A80040 		.word	1073784832
 12089 026c FFFFCF3F 		.word	1070596095
 12090              	.L662:
 12091              		.loc 1 5437 7
 12092 0270 7868     		ldr	r0, [r7, #4]
 12093 0272 9847     		blx	r3
 12094              	.LVL10:
 12095              	.L647:
5438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #else
5439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Rx Buffer New Message Callback */
5440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       HAL_FDCAN_RxBufferNewMessageCallback(hfdcan);
5441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #endif /* USE_HAL_FDCAN_REGISTER_CALLBACKS */
5442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Timestamp Wraparound interrupt management ********************************/
5446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (FDCAN_CHECK_IT_SOURCE(itsourceIE, FDCAN_IT_TIMESTAMP_WRAPAROUND) != RESET)
 12096              		.loc 1 5446 7
 12097 0274 FB6B     		ldr	r3, [r7, #60]
 12098 0276 1B0C     		lsrs	r3, r3, #16
 12099 0278 03F00103 		and	r3, r3, #1
 12100              		.loc 1 5446 6
 12101 027c 002B     		cmp	r3, #0
 12102 027e 12D0     		beq	.L648
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 327


5447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (FDCAN_CHECK_FLAG(itflagIR, FDCAN_FLAG_TIMESTAMP_WRAPAROUND) != RESET)
 12103              		.loc 1 5448 9
 12104 0280 BB6B     		ldr	r3, [r7, #56]
 12105 0282 1B0C     		lsrs	r3, r3, #16
 12106 0284 03F00103 		and	r3, r3, #1
 12107              		.loc 1 5448 8
 12108 0288 002B     		cmp	r3, #0
 12109 028a 0CD0     		beq	.L648
5449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Clear the Timestamp Wraparound flag */
5451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_TIMESTAMP_WRAPAROUND);
 12110              		.loc 1 5451 7
 12111 028c 7B68     		ldr	r3, [r7, #4]
 12112 028e 1B68     		ldr	r3, [r3]
 12113 0290 4FF48032 		mov	r2, #65536
 12114 0294 1A65     		str	r2, [r3, #80]
 12115 0296 964B     		ldr	r3, .L664
 12116 0298 0022     		movs	r2, #0
 12117 029a 1A61     		str	r2, [r3, #16]
5452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #if USE_HAL_FDCAN_REGISTER_CALLBACKS == 1
5454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Call registered callback*/
5455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->TimestampWraparoundCallback(hfdcan);
 12118              		.loc 1 5455 13
 12119 029c 7B68     		ldr	r3, [r7, #4]
 12120 029e D3F8C430 		ldr	r3, [r3, #196]
 12121              		.loc 1 5455 7
 12122 02a2 7868     		ldr	r0, [r7, #4]
 12123 02a4 9847     		blx	r3
 12124              	.LVL11:
 12125              	.L648:
5456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #else
5457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Timestamp Wraparound Callback */
5458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       HAL_FDCAN_TimestampWraparoundCallback(hfdcan);
5459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #endif /* USE_HAL_FDCAN_REGISTER_CALLBACKS */
5460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Timeout Occurred interrupt management ************************************/
5464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (FDCAN_CHECK_IT_SOURCE(itsourceIE, FDCAN_IT_TIMEOUT_OCCURRED) != RESET)
 12126              		.loc 1 5464 7
 12127 02a6 FB6B     		ldr	r3, [r7, #60]
 12128 02a8 9B0C     		lsrs	r3, r3, #18
 12129 02aa 03F00103 		and	r3, r3, #1
 12130              		.loc 1 5464 6
 12131 02ae 002B     		cmp	r3, #0
 12132 02b0 12D0     		beq	.L649
5465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (FDCAN_CHECK_FLAG(itflagIR, FDCAN_FLAG_TIMEOUT_OCCURRED) != RESET)
 12133              		.loc 1 5466 9
 12134 02b2 BB6B     		ldr	r3, [r7, #56]
 12135 02b4 9B0C     		lsrs	r3, r3, #18
 12136 02b6 03F00103 		and	r3, r3, #1
 12137              		.loc 1 5466 8
 12138 02ba 002B     		cmp	r3, #0
 12139 02bc 0CD0     		beq	.L649
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 328


5467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Clear the Timeout Occurred flag */
5469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_TIMEOUT_OCCURRED);
 12140              		.loc 1 5469 7
 12141 02be 7B68     		ldr	r3, [r7, #4]
 12142 02c0 1B68     		ldr	r3, [r3]
 12143 02c2 4FF48022 		mov	r2, #262144
 12144 02c6 1A65     		str	r2, [r3, #80]
 12145 02c8 894B     		ldr	r3, .L664
 12146 02ca 0022     		movs	r2, #0
 12147 02cc 1A61     		str	r2, [r3, #16]
5470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #if USE_HAL_FDCAN_REGISTER_CALLBACKS == 1
5472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Call registered callback*/
5473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->TimeoutOccurredCallback(hfdcan);
 12148              		.loc 1 5473 13
 12149 02ce 7B68     		ldr	r3, [r7, #4]
 12150 02d0 D3F8C830 		ldr	r3, [r3, #200]
 12151              		.loc 1 5473 7
 12152 02d4 7868     		ldr	r0, [r7, #4]
 12153 02d6 9847     		blx	r3
 12154              	.LVL12:
 12155              	.L649:
5474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #else
5475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Timeout Occurred Callback */
5476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       HAL_FDCAN_TimeoutOccurredCallback(hfdcan);
5477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #endif /* USE_HAL_FDCAN_REGISTER_CALLBACKS */
5478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Message RAM access failure interrupt management **************************/
5482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (FDCAN_CHECK_IT_SOURCE(itsourceIE, FDCAN_IT_RAM_ACCESS_FAILURE) != RESET)
 12156              		.loc 1 5482 7
 12157 02d8 FB6B     		ldr	r3, [r7, #60]
 12158 02da 5B0C     		lsrs	r3, r3, #17
 12159 02dc 03F00103 		and	r3, r3, #1
 12160              		.loc 1 5482 6
 12161 02e0 002B     		cmp	r3, #0
 12162 02e2 15D0     		beq	.L650
5483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if (FDCAN_CHECK_FLAG(itflagIR, FDCAN_FLAG_RAM_ACCESS_FAILURE) != RESET)
 12163              		.loc 1 5484 9
 12164 02e4 BB6B     		ldr	r3, [r7, #56]
 12165 02e6 5B0C     		lsrs	r3, r3, #17
 12166 02e8 03F00103 		and	r3, r3, #1
 12167              		.loc 1 5484 8
 12168 02ec 002B     		cmp	r3, #0
 12169 02ee 0FD0     		beq	.L650
5485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Clear the Message RAM access failure flag */
5487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       __HAL_FDCAN_CLEAR_FLAG(hfdcan, FDCAN_FLAG_RAM_ACCESS_FAILURE);
 12170              		.loc 1 5487 7
 12171 02f0 7B68     		ldr	r3, [r7, #4]
 12172 02f2 1B68     		ldr	r3, [r3]
 12173 02f4 4FF40032 		mov	r2, #131072
 12174 02f8 1A65     		str	r2, [r3, #80]
 12175 02fa 7D4B     		ldr	r3, .L664
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 329


 12176 02fc 0022     		movs	r2, #0
 12177 02fe 1A61     		str	r2, [r3, #16]
5488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* Update error code */
5490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       hfdcan->ErrorCode |= HAL_FDCAN_ERROR_RAM_ACCESS;
 12178              		.loc 1 5490 25
 12179 0300 7B68     		ldr	r3, [r7, #4]
 12180 0302 D3F89C30 		ldr	r3, [r3, #156]
 12181 0306 43F08002 		orr	r2, r3, #128
 12182 030a 7B68     		ldr	r3, [r7, #4]
 12183 030c C3F89C20 		str	r2, [r3, #156]
 12184              	.L650:
5491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Error Status interrupts management ***************************************/
5495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (ErrorStatusITs != 0U)
 12185              		.loc 1 5495 6
 12186 0310 3B6C     		ldr	r3, [r7, #64]
 12187 0312 002B     		cmp	r3, #0
 12188 0314 0FD0     		beq	.L651
5496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Clear the Error flags */
5498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     __HAL_FDCAN_CLEAR_FLAG(hfdcan, ErrorStatusITs);
 12189              		.loc 1 5498 5
 12190 0316 7B68     		ldr	r3, [r7, #4]
 12191 0318 1A68     		ldr	r2, [r3]
 12192 031a 396C     		ldr	r1, [r7, #64]
 12193 031c 754B     		ldr	r3, .L664+4
 12194 031e 0B40     		ands	r3, r3, r1
 12195 0320 1365     		str	r3, [r2, #80]
 12196 0322 734A     		ldr	r2, .L664
 12197 0324 3B6C     		ldr	r3, [r7, #64]
 12198 0326 9B0F     		lsrs	r3, r3, #30
 12199 0328 1361     		str	r3, [r2, #16]
5499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #if USE_HAL_FDCAN_REGISTER_CALLBACKS == 1
5501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Call registered callback*/
5502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorStatusCallback(hfdcan, ErrorStatusITs);
 12200              		.loc 1 5502 11
 12201 032a 7B68     		ldr	r3, [r7, #4]
 12202 032c D3F8D030 		ldr	r3, [r3, #208]
 12203              		.loc 1 5502 5
 12204 0330 396C     		ldr	r1, [r7, #64]
 12205 0332 7868     		ldr	r0, [r7, #4]
 12206 0334 9847     		blx	r3
 12207              	.LVL13:
 12208              	.L651:
5503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #else
5504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Error Status Callback */
5505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     HAL_FDCAN_ErrorStatusCallback(hfdcan, ErrorStatusITs);
5506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #endif /* USE_HAL_FDCAN_REGISTER_CALLBACKS */
5507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Error interrupts management **********************************************/
5510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (Errors != 0U)
 12209              		.loc 1 5510 6
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 330


 12210 0336 7B6C     		ldr	r3, [r7, #68]
 12211 0338 002B     		cmp	r3, #0
 12212 033a 11D0     		beq	.L652
5511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Clear the Error flags */
5513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     __HAL_FDCAN_CLEAR_FLAG(hfdcan, Errors);
 12213              		.loc 1 5513 5
 12214 033c 7B68     		ldr	r3, [r7, #4]
 12215 033e 1A68     		ldr	r2, [r3]
 12216 0340 796C     		ldr	r1, [r7, #68]
 12217 0342 6C4B     		ldr	r3, .L664+4
 12218 0344 0B40     		ands	r3, r3, r1
 12219 0346 1365     		str	r3, [r2, #80]
 12220 0348 694A     		ldr	r2, .L664
 12221 034a 7B6C     		ldr	r3, [r7, #68]
 12222 034c 9B0F     		lsrs	r3, r3, #30
 12223 034e 1361     		str	r3, [r2, #16]
5514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code */
5516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= Errors;
 12224              		.loc 1 5516 23
 12225 0350 7B68     		ldr	r3, [r7, #4]
 12226 0352 D3F89C20 		ldr	r2, [r3, #156]
 12227 0356 7B6C     		ldr	r3, [r7, #68]
 12228 0358 1A43     		orrs	r2, r2, r3
 12229 035a 7B68     		ldr	r3, [r7, #4]
 12230 035c C3F89C20 		str	r2, [r3, #156]
 12231              	.L652:
5517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->Instance == FDCAN1)
 12232              		.loc 1 5519 13
 12233 0360 7B68     		ldr	r3, [r7, #4]
 12234 0362 1B68     		ldr	r3, [r3]
 12235              		.loc 1 5519 6
 12236 0364 644A     		ldr	r2, .L664+8
 12237 0366 9342     		cmp	r3, r2
 12238 0368 40F0B480 		bne	.L653
5520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     if ((hfdcan->ttcan->TTOCF & FDCAN_TTOCF_OM) != 0U)
 12239              		.loc 1 5521 16
 12240 036c 7B68     		ldr	r3, [r7, #4]
 12241 036e 5B68     		ldr	r3, [r3, #4]
 12242              		.loc 1 5521 23
 12243 0370 9B68     		ldr	r3, [r3, #8]
 12244              		.loc 1 5521 31
 12245 0372 03F00303 		and	r3, r3, #3
 12246              		.loc 1 5521 8
 12247 0376 002B     		cmp	r3, #0
 12248 0378 00F0AC80 		beq	.L653
5522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
5523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       TTSchedSyncITs = hfdcan->ttcan->TTIR & FDCAN_TT_SCHEDULE_SYNC_MASK;
 12249              		.loc 1 5523 30
 12250 037c 7B68     		ldr	r3, [r7, #4]
 12251 037e 5B68     		ldr	r3, [r3, #4]
 12252              		.loc 1 5523 37
 12253 0380 1B6A     		ldr	r3, [r3, #32]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 331


 12254              		.loc 1 5523 22
 12255 0382 03F00F03 		and	r3, r3, #15
 12256 0386 FB62     		str	r3, [r7, #44]
5524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       TTSchedSyncITs &= hfdcan->ttcan->TTIE;
 12257              		.loc 1 5524 31
 12258 0388 7B68     		ldr	r3, [r7, #4]
 12259 038a 5B68     		ldr	r3, [r3, #4]
 12260              		.loc 1 5524 38
 12261 038c 5B6A     		ldr	r3, [r3, #36]
 12262              		.loc 1 5524 22
 12263 038e FA6A     		ldr	r2, [r7, #44]
 12264 0390 1340     		ands	r3, r3, r2
 12265 0392 FB62     		str	r3, [r7, #44]
5525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       TTTimeMarkITs = hfdcan->ttcan->TTIR & FDCAN_TT_TIME_MARK_MASK;
 12266              		.loc 1 5525 29
 12267 0394 7B68     		ldr	r3, [r7, #4]
 12268 0396 5B68     		ldr	r3, [r3, #4]
 12269              		.loc 1 5525 36
 12270 0398 1B6A     		ldr	r3, [r3, #32]
 12271              		.loc 1 5525 21
 12272 039a 03F03003 		and	r3, r3, #48
 12273 039e BB62     		str	r3, [r7, #40]
5526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       TTTimeMarkITs &= hfdcan->ttcan->TTIE;
 12274              		.loc 1 5526 30
 12275 03a0 7B68     		ldr	r3, [r7, #4]
 12276 03a2 5B68     		ldr	r3, [r3, #4]
 12277              		.loc 1 5526 37
 12278 03a4 5B6A     		ldr	r3, [r3, #36]
 12279              		.loc 1 5526 21
 12280 03a6 BA6A     		ldr	r2, [r7, #40]
 12281 03a8 1340     		ands	r3, r3, r2
 12282 03aa BB62     		str	r3, [r7, #40]
5527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       TTGlobTimeITs = hfdcan->ttcan->TTIR & FDCAN_TT_GLOBAL_TIME_MASK;
 12283              		.loc 1 5527 29
 12284 03ac 7B68     		ldr	r3, [r7, #4]
 12285 03ae 5B68     		ldr	r3, [r3, #4]
 12286              		.loc 1 5527 36
 12287 03b0 1B6A     		ldr	r3, [r3, #32]
 12288              		.loc 1 5527 21
 12289 03b2 03F4C073 		and	r3, r3, #384
 12290 03b6 7B62     		str	r3, [r7, #36]
5528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       TTGlobTimeITs &= hfdcan->ttcan->TTIE;
 12291              		.loc 1 5528 30
 12292 03b8 7B68     		ldr	r3, [r7, #4]
 12293 03ba 5B68     		ldr	r3, [r3, #4]
 12294              		.loc 1 5528 37
 12295 03bc 5B6A     		ldr	r3, [r3, #36]
 12296              		.loc 1 5528 21
 12297 03be 7A6A     		ldr	r2, [r7, #36]
 12298 03c0 1340     		ands	r3, r3, r2
 12299 03c2 7B62     		str	r3, [r7, #36]
5529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       TTDistErrors = hfdcan->ttcan->TTIR & FDCAN_TT_DISTURBING_ERROR_MASK;
 12300              		.loc 1 5529 28
 12301 03c4 7B68     		ldr	r3, [r7, #4]
 12302 03c6 5B68     		ldr	r3, [r3, #4]
 12303              		.loc 1 5529 35
 12304 03c8 1B6A     		ldr	r3, [r3, #32]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 332


 12305              		.loc 1 5529 20
 12306 03ca 03F4FC43 		and	r3, r3, #32256
 12307 03ce 3B62     		str	r3, [r7, #32]
5530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       TTDistErrors &= hfdcan->ttcan->TTIE;
 12308              		.loc 1 5530 29
 12309 03d0 7B68     		ldr	r3, [r7, #4]
 12310 03d2 5B68     		ldr	r3, [r3, #4]
 12311              		.loc 1 5530 36
 12312 03d4 5B6A     		ldr	r3, [r3, #36]
 12313              		.loc 1 5530 20
 12314 03d6 3A6A     		ldr	r2, [r7, #32]
 12315 03d8 1340     		ands	r3, r3, r2
 12316 03da 3B62     		str	r3, [r7, #32]
5531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       TTFatalErrors = hfdcan->ttcan->TTIR & FDCAN_TT_FATAL_ERROR_MASK;
 12317              		.loc 1 5531 29
 12318 03dc 7B68     		ldr	r3, [r7, #4]
 12319 03de 5B68     		ldr	r3, [r3, #4]
 12320              		.loc 1 5531 36
 12321 03e0 1B6A     		ldr	r3, [r3, #32]
 12322              		.loc 1 5531 21
 12323 03e2 03F4F023 		and	r3, r3, #491520
 12324 03e6 FB61     		str	r3, [r7, #28]
5532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       TTFatalErrors &= hfdcan->ttcan->TTIE;
 12325              		.loc 1 5532 30
 12326 03e8 7B68     		ldr	r3, [r7, #4]
 12327 03ea 5B68     		ldr	r3, [r3, #4]
 12328              		.loc 1 5532 37
 12329 03ec 5B6A     		ldr	r3, [r3, #36]
 12330              		.loc 1 5532 21
 12331 03ee FA69     		ldr	r2, [r7, #28]
 12332 03f0 1340     		ands	r3, r3, r2
 12333 03f2 FB61     		str	r3, [r7, #28]
5533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       itsourceTTIE = hfdcan->ttcan->TTIE;
 12334              		.loc 1 5533 28
 12335 03f4 7B68     		ldr	r3, [r7, #4]
 12336 03f6 5B68     		ldr	r3, [r3, #4]
 12337              		.loc 1 5533 20
 12338 03f8 5B6A     		ldr	r3, [r3, #36]
 12339 03fa BB61     		str	r3, [r7, #24]
5534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       itflagTTIR = hfdcan->ttcan->TTIR;
 12340              		.loc 1 5534 26
 12341 03fc 7B68     		ldr	r3, [r7, #4]
 12342 03fe 5B68     		ldr	r3, [r3, #4]
 12343              		.loc 1 5534 18
 12344 0400 1B6A     		ldr	r3, [r3, #32]
 12345 0402 7B61     		str	r3, [r7, #20]
5535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* TT Schedule Synchronization interrupts management **********************/
5537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if (TTSchedSyncITs != 0U)
 12346              		.loc 1 5537 10
 12347 0404 FB6A     		ldr	r3, [r7, #44]
 12348 0406 002B     		cmp	r3, #0
 12349 0408 09D0     		beq	.L654
5538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
5539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Clear the TT Schedule Synchronization flags */
5540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         __HAL_FDCAN_TT_CLEAR_FLAG(hfdcan, TTSchedSyncITs);
 12350              		.loc 1 5540 9
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 333


 12351 040a 7B68     		ldr	r3, [r7, #4]
 12352 040c 5B68     		ldr	r3, [r3, #4]
 12353 040e FA6A     		ldr	r2, [r7, #44]
 12354 0410 1A62     		str	r2, [r3, #32]
5541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #if USE_HAL_FDCAN_REGISTER_CALLBACKS == 1
5543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Call registered callback*/
5544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->TT_ScheduleSyncCallback(hfdcan, TTSchedSyncITs);
 12355              		.loc 1 5544 15
 12356 0412 7B68     		ldr	r3, [r7, #4]
 12357 0414 D3F8D430 		ldr	r3, [r3, #212]
 12358              		.loc 1 5544 9
 12359 0418 F96A     		ldr	r1, [r7, #44]
 12360 041a 7868     		ldr	r0, [r7, #4]
 12361 041c 9847     		blx	r3
 12362              	.LVL14:
 12363              	.L654:
5545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #else
5546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* TT Schedule Synchronization Callback */
5547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         HAL_FDCAN_TT_ScheduleSyncCallback(hfdcan, TTSchedSyncITs);
5548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #endif /* USE_HAL_FDCAN_REGISTER_CALLBACKS */
5549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
5550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* TT Time Mark interrupts management *************************************/
5552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if (TTTimeMarkITs != 0U)
 12364              		.loc 1 5552 10
 12365 041e BB6A     		ldr	r3, [r7, #40]
 12366 0420 002B     		cmp	r3, #0
 12367 0422 09D0     		beq	.L655
5553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
5554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Clear the TT Time Mark flags */
5555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         __HAL_FDCAN_TT_CLEAR_FLAG(hfdcan, TTTimeMarkITs);
 12368              		.loc 1 5555 9
 12369 0424 7B68     		ldr	r3, [r7, #4]
 12370 0426 5B68     		ldr	r3, [r3, #4]
 12371 0428 BA6A     		ldr	r2, [r7, #40]
 12372 042a 1A62     		str	r2, [r3, #32]
5556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #if USE_HAL_FDCAN_REGISTER_CALLBACKS == 1
5558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Call registered callback*/
5559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->TT_TimeMarkCallback(hfdcan, TTTimeMarkITs);
 12373              		.loc 1 5559 15
 12374 042c 7B68     		ldr	r3, [r7, #4]
 12375 042e D3F8D830 		ldr	r3, [r3, #216]
 12376              		.loc 1 5559 9
 12377 0432 B96A     		ldr	r1, [r7, #40]
 12378 0434 7868     		ldr	r0, [r7, #4]
 12379 0436 9847     		blx	r3
 12380              	.LVL15:
 12381              	.L655:
5560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #else
5561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* TT Time Mark Callback */
5562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         HAL_FDCAN_TT_TimeMarkCallback(hfdcan, TTTimeMarkITs);
5563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #endif /* USE_HAL_FDCAN_REGISTER_CALLBACKS */
5564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
5565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* TT Stop Watch interrupt management *************************************/
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 334


5567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if (FDCAN_CHECK_IT_SOURCE(itsourceTTIE, FDCAN_TT_IT_STOP_WATCH) != RESET)
 12382              		.loc 1 5567 11
 12383 0438 BB69     		ldr	r3, [r7, #24]
 12384 043a 9B09     		lsrs	r3, r3, #6
 12385 043c 03F00103 		and	r3, r3, #1
 12386              		.loc 1 5567 10
 12387 0440 002B     		cmp	r3, #0
 12388 0442 1CD0     		beq	.L656
5568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
5569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         if (FDCAN_CHECK_FLAG(itflagTTIR, FDCAN_TT_FLAG_STOP_WATCH) != RESET)
 12389              		.loc 1 5569 13
 12390 0444 7B69     		ldr	r3, [r7, #20]
 12391 0446 9B09     		lsrs	r3, r3, #6
 12392 0448 03F00103 		and	r3, r3, #1
 12393              		.loc 1 5569 12
 12394 044c 002B     		cmp	r3, #0
 12395 044e 16D0     		beq	.L656
5570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         {
5571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           /* Retrieve Stop watch Time and Cycle count */
5572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           SWTime = ((hfdcan->ttcan->TTCPT & FDCAN_TTCPT_SWV) >> FDCAN_TTCPT_SWV_Pos);
 12396              		.loc 1 5572 28
 12397 0450 7B68     		ldr	r3, [r7, #4]
 12398 0452 5B68     		ldr	r3, [r3, #4]
 12399              		.loc 1 5572 35
 12400 0454 DB6B     		ldr	r3, [r3, #60]
 12401              		.loc 1 5572 62
 12402 0456 1B0C     		lsrs	r3, r3, #16
 12403              		.loc 1 5572 18
 12404 0458 9BB2     		uxth	r3, r3
 12405 045a 3B61     		str	r3, [r7, #16]
5573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           SWCycleCount = ((hfdcan->ttcan->TTCPT & FDCAN_TTCPT_CCV) >> FDCAN_TTCPT_CCV_Pos);
 12406              		.loc 1 5573 34
 12407 045c 7B68     		ldr	r3, [r7, #4]
 12408 045e 5B68     		ldr	r3, [r3, #4]
 12409              		.loc 1 5573 41
 12410 0460 DB6B     		ldr	r3, [r3, #60]
 12411              		.loc 1 5573 24
 12412 0462 03F03F03 		and	r3, r3, #63
 12413 0466 FB60     		str	r3, [r7, #12]
5574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           /* Clear the TT Stop Watch flag */
5576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           __HAL_FDCAN_TT_CLEAR_FLAG(hfdcan, FDCAN_TT_FLAG_STOP_WATCH);
 12414              		.loc 1 5576 11
 12415 0468 7B68     		ldr	r3, [r7, #4]
 12416 046a 5B68     		ldr	r3, [r3, #4]
 12417 046c 4022     		movs	r2, #64
 12418 046e 1A62     		str	r2, [r3, #32]
5577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #if USE_HAL_FDCAN_REGISTER_CALLBACKS == 1
5579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           /* Call registered callback*/
5580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           hfdcan->TT_StopWatchCallback(hfdcan, SWTime, SWCycleCount);
 12419              		.loc 1 5580 17
 12420 0470 7B68     		ldr	r3, [r7, #4]
 12421 0472 D3F8DC30 		ldr	r3, [r3, #220]
 12422              		.loc 1 5580 11
 12423 0476 FA68     		ldr	r2, [r7, #12]
 12424 0478 3969     		ldr	r1, [r7, #16]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 335


 12425 047a 7868     		ldr	r0, [r7, #4]
 12426 047c 9847     		blx	r3
 12427              	.LVL16:
 12428              	.L656:
5581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #else
5582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           /* TT Stop Watch Callback */
5583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****           HAL_FDCAN_TT_StopWatchCallback(hfdcan, SWTime, SWCycleCount);
5584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #endif /* USE_HAL_FDCAN_REGISTER_CALLBACKS */
5585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         }
5586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
5587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* TT Global Time interrupts management ***********************************/
5589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if (TTGlobTimeITs != 0U)
 12429              		.loc 1 5589 10
 12430 047e 7B6A     		ldr	r3, [r7, #36]
 12431 0480 002B     		cmp	r3, #0
 12432 0482 09D0     		beq	.L657
5590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
5591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Clear the TT Global Time flags */
5592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         __HAL_FDCAN_TT_CLEAR_FLAG(hfdcan, TTGlobTimeITs);
 12433              		.loc 1 5592 9
 12434 0484 7B68     		ldr	r3, [r7, #4]
 12435 0486 5B68     		ldr	r3, [r3, #4]
 12436 0488 7A6A     		ldr	r2, [r7, #36]
 12437 048a 1A62     		str	r2, [r3, #32]
5593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #if USE_HAL_FDCAN_REGISTER_CALLBACKS == 1
5595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Call registered callback*/
5596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->TT_GlobalTimeCallback(hfdcan, TTGlobTimeITs);
 12438              		.loc 1 5596 15
 12439 048c 7B68     		ldr	r3, [r7, #4]
 12440 048e D3F8E030 		ldr	r3, [r3, #224]
 12441              		.loc 1 5596 9
 12442 0492 796A     		ldr	r1, [r7, #36]
 12443 0494 7868     		ldr	r0, [r7, #4]
 12444 0496 9847     		blx	r3
 12445              	.LVL17:
 12446              	.L657:
5597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #else
5598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* TT Global Time Callback */
5599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         HAL_FDCAN_TT_GlobalTimeCallback(hfdcan, TTGlobTimeITs);
5600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #endif /* USE_HAL_FDCAN_REGISTER_CALLBACKS */
5601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
5602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* TT Disturbing Error interrupts management ******************************/
5604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if (TTDistErrors != 0U)
 12447              		.loc 1 5604 10
 12448 0498 3B6A     		ldr	r3, [r7, #32]
 12449 049a 002B     		cmp	r3, #0
 12450 049c 0BD0     		beq	.L658
5605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
5606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Clear the TT Disturbing Error flags */
5607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         __HAL_FDCAN_TT_CLEAR_FLAG(hfdcan, TTDistErrors);
 12451              		.loc 1 5607 9
 12452 049e 7B68     		ldr	r3, [r7, #4]
 12453 04a0 5B68     		ldr	r3, [r3, #4]
 12454 04a2 3A6A     		ldr	r2, [r7, #32]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 336


 12455 04a4 1A62     		str	r2, [r3, #32]
5608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Update error code */
5610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->ErrorCode |= TTDistErrors;
 12456              		.loc 1 5610 27
 12457 04a6 7B68     		ldr	r3, [r7, #4]
 12458 04a8 D3F89C20 		ldr	r2, [r3, #156]
 12459 04ac 3B6A     		ldr	r3, [r7, #32]
 12460 04ae 1A43     		orrs	r2, r2, r3
 12461 04b0 7B68     		ldr	r3, [r7, #4]
 12462 04b2 C3F89C20 		str	r2, [r3, #156]
 12463              	.L658:
5611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
5612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       /* TT Fatal Error interrupts management ***********************************/
5614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       if (TTFatalErrors != 0U)
 12464              		.loc 1 5614 10
 12465 04b6 FB69     		ldr	r3, [r7, #28]
 12466 04b8 002B     		cmp	r3, #0
 12467 04ba 0BD0     		beq	.L653
5615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       {
5616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Clear the TT Fatal Error flags */
5617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         __HAL_FDCAN_TT_CLEAR_FLAG(hfdcan, TTFatalErrors);
 12468              		.loc 1 5617 9
 12469 04bc 7B68     		ldr	r3, [r7, #4]
 12470 04be 5B68     		ldr	r3, [r3, #4]
 12471 04c0 FA69     		ldr	r2, [r7, #28]
 12472 04c2 1A62     		str	r2, [r3, #32]
5618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         /* Update error code */
5620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****         hfdcan->ErrorCode |= TTFatalErrors;
 12473              		.loc 1 5620 27
 12474 04c4 7B68     		ldr	r3, [r7, #4]
 12475 04c6 D3F89C20 		ldr	r2, [r3, #156]
 12476 04ca FB69     		ldr	r3, [r7, #28]
 12477 04cc 1A43     		orrs	r2, r2, r3
 12478 04ce 7B68     		ldr	r3, [r7, #4]
 12479 04d0 C3F89C20 		str	r2, [r3, #156]
 12480              	.L653:
5621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       }
5622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
5623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->ErrorCode != HAL_FDCAN_ERROR_NONE)
 12481              		.loc 1 5625 13
 12482 04d4 7B68     		ldr	r3, [r7, #4]
 12483 04d6 D3F89C30 		ldr	r3, [r3, #156]
 12484              		.loc 1 5625 6
 12485 04da 002B     		cmp	r3, #0
 12486 04dc 04D0     		beq	.L660
5626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
5627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #if USE_HAL_FDCAN_REGISTER_CALLBACKS == 1
5628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Call registered callback*/
5629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCallback(hfdcan);
 12487              		.loc 1 5629 11
 12488 04de 7B68     		ldr	r3, [r7, #4]
 12489 04e0 D3F8CC30 		ldr	r3, [r3, #204]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 337


 12490              		.loc 1 5629 5
 12491 04e4 7868     		ldr	r0, [r7, #4]
 12492 04e6 9847     		blx	r3
 12493              	.LVL18:
 12494              	.L660:
5630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #else
5631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Error Callback */
5632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     HAL_FDCAN_ErrorCallback(hfdcan);
5633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** #endif /* USE_HAL_FDCAN_REGISTER_CALLBACKS */
5634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
5635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 12495              		.loc 1 5635 1
 12496 04e8 00BF     		nop
 12497 04ea 5837     		adds	r7, r7, #88
 12498              	.LCFI608:
 12499              		.cfi_def_cfa_offset 8
 12500 04ec BD46     		mov	sp, r7
 12501              	.LCFI609:
 12502              		.cfi_def_cfa_register 13
 12503              		@ sp needed
 12504 04ee 80BD     		pop	{r7, pc}
 12505              	.L665:
 12506              		.align	2
 12507              	.L664:
 12508 04f0 00A80040 		.word	1073784832
 12509 04f4 FFFFCF3F 		.word	1070596095
 12510 04f8 00A00040 		.word	1073782784
 12511              		.cfi_endproc
 12512              	.LFE435:
 12514              		.section	.text.HAL_FDCAN_ClockCalibrationCallback,"ax",%progbits
 12515              		.align	1
 12516              		.weak	HAL_FDCAN_ClockCalibrationCallback
 12517              		.syntax unified
 12518              		.thumb
 12519              		.thumb_func
 12521              	HAL_FDCAN_ClockCalibrationCallback:
 12522              	.LFB436:
5636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
5638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @}
5639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
5640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /** @defgroup FDCAN_Exported_Functions_Group6 Callback functions
5642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****  *  @brief   FDCAN Callback functions
5643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****  *
5644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** @verbatim
5645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ==============================================================================
5646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                           ##### Callback functions #####
5647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ==============================================================================
5648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     [..]
5649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     This subsection provides the following callback functions:
5650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_ClockCalibrationCallback
5651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TxEventFifoCallback
5652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_RxFifo0Callback
5653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_RxFifo1Callback
5654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TxFifoEmptyCallback
5655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TxBufferCompleteCallback
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 338


5656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TxBufferAbortCallback
5657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_RxBufferNewMessageCallback
5658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_HighPriorityMessageCallback
5659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TimestampWraparoundCallback
5660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TimeoutOccurredCallback
5661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_ErrorCallback
5662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_ErrorStatusCallback
5663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TT_ScheduleSyncCallback
5664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TT_TimeMarkCallback
5665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TT_StopWatchCallback
5666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_TT_GlobalTimeCallback
5667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** @endverbatim
5669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @{
5670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
5671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
5673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Clock Calibration callback.
5674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
5675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
5676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  ClkCalibrationITs indicates which Clock Calibration interrupts are signaled.
5677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be any combination of @arg FDCAN_Clock_Calibration_Interrupts.
5678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval None
5679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
5680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** __weak void HAL_FDCAN_ClockCalibrationCallback(FDCAN_HandleTypeDef *hfdcan, uint32_t ClkCalibration
5681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 12523              		.loc 1 5681 1
 12524              		.cfi_startproc
 12525              		@ args = 0, pretend = 0, frame = 8
 12526              		@ frame_needed = 1, uses_anonymous_args = 0
 12527              		@ link register save eliminated.
 12528 0000 80B4     		push	{r7}
 12529              	.LCFI610:
 12530              		.cfi_def_cfa_offset 4
 12531              		.cfi_offset 7, -4
 12532 0002 83B0     		sub	sp, sp, #12
 12533              	.LCFI611:
 12534              		.cfi_def_cfa_offset 16
 12535 0004 00AF     		add	r7, sp, #0
 12536              	.LCFI612:
 12537              		.cfi_def_cfa_register 7
 12538 0006 7860     		str	r0, [r7, #4]
 12539 0008 3960     		str	r1, [r7]
5682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Prevent unused argument(s) compilation warning */
5683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(hfdcan);
5684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(ClkCalibrationITs);
5685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
5687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             the HAL_FDCAN_ClockCalibrationCallback could be implemented in the user file
5688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****    */
5689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 12540              		.loc 1 5689 1
 12541 000a 00BF     		nop
 12542 000c 0C37     		adds	r7, r7, #12
 12543              	.LCFI613:
 12544              		.cfi_def_cfa_offset 4
 12545 000e BD46     		mov	sp, r7
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 339


 12546              	.LCFI614:
 12547              		.cfi_def_cfa_register 13
 12548              		@ sp needed
 12549 0010 5DF8047B 		ldr	r7, [sp], #4
 12550              	.LCFI615:
 12551              		.cfi_restore 7
 12552              		.cfi_def_cfa_offset 0
 12553 0014 7047     		bx	lr
 12554              		.cfi_endproc
 12555              	.LFE436:
 12557              		.section	.text.HAL_FDCAN_TxEventFifoCallback,"ax",%progbits
 12558              		.align	1
 12559              		.weak	HAL_FDCAN_TxEventFifoCallback
 12560              		.syntax unified
 12561              		.thumb
 12562              		.thumb_func
 12564              	HAL_FDCAN_TxEventFifoCallback:
 12565              	.LFB437:
5690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
5692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Tx Event callback.
5693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
5694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
5695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  TxEventFifoITs indicates which Tx Event FIFO interrupts are signaled.
5696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be any combination of @arg FDCAN_Tx_Event_Fifo_Interrupts.
5697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval None
5698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
5699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** __weak void HAL_FDCAN_TxEventFifoCallback(FDCAN_HandleTypeDef *hfdcan, uint32_t TxEventFifoITs)
5700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 12566              		.loc 1 5700 1
 12567              		.cfi_startproc
 12568              		@ args = 0, pretend = 0, frame = 8
 12569              		@ frame_needed = 1, uses_anonymous_args = 0
 12570              		@ link register save eliminated.
 12571 0000 80B4     		push	{r7}
 12572              	.LCFI616:
 12573              		.cfi_def_cfa_offset 4
 12574              		.cfi_offset 7, -4
 12575 0002 83B0     		sub	sp, sp, #12
 12576              	.LCFI617:
 12577              		.cfi_def_cfa_offset 16
 12578 0004 00AF     		add	r7, sp, #0
 12579              	.LCFI618:
 12580              		.cfi_def_cfa_register 7
 12581 0006 7860     		str	r0, [r7, #4]
 12582 0008 3960     		str	r1, [r7]
5701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Prevent unused argument(s) compilation warning */
5702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(hfdcan);
5703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(TxEventFifoITs);
5704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
5706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             the HAL_FDCAN_TxEventFifoCallback could be implemented in the user file
5707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****    */
5708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 12583              		.loc 1 5708 1
 12584 000a 00BF     		nop
 12585 000c 0C37     		adds	r7, r7, #12
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 340


 12586              	.LCFI619:
 12587              		.cfi_def_cfa_offset 4
 12588 000e BD46     		mov	sp, r7
 12589              	.LCFI620:
 12590              		.cfi_def_cfa_register 13
 12591              		@ sp needed
 12592 0010 5DF8047B 		ldr	r7, [sp], #4
 12593              	.LCFI621:
 12594              		.cfi_restore 7
 12595              		.cfi_def_cfa_offset 0
 12596 0014 7047     		bx	lr
 12597              		.cfi_endproc
 12598              	.LFE437:
 12600              		.section	.text.HAL_FDCAN_RxFifo0Callback,"ax",%progbits
 12601              		.align	1
 12602              		.weak	HAL_FDCAN_RxFifo0Callback
 12603              		.syntax unified
 12604              		.thumb
 12605              		.thumb_func
 12607              	HAL_FDCAN_RxFifo0Callback:
 12608              	.LFB438:
5709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
5711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Rx FIFO 0 callback.
5712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
5713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
5714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  RxFifo0ITs indicates which Rx FIFO 0 interrupts are signaled.
5715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be any combination of @arg FDCAN_Rx_Fifo0_Interrupts.
5716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval None
5717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
5718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** __weak void HAL_FDCAN_RxFifo0Callback(FDCAN_HandleTypeDef *hfdcan, uint32_t RxFifo0ITs)
5719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 12609              		.loc 1 5719 1
 12610              		.cfi_startproc
 12611              		@ args = 0, pretend = 0, frame = 8
 12612              		@ frame_needed = 1, uses_anonymous_args = 0
 12613              		@ link register save eliminated.
 12614 0000 80B4     		push	{r7}
 12615              	.LCFI622:
 12616              		.cfi_def_cfa_offset 4
 12617              		.cfi_offset 7, -4
 12618 0002 83B0     		sub	sp, sp, #12
 12619              	.LCFI623:
 12620              		.cfi_def_cfa_offset 16
 12621 0004 00AF     		add	r7, sp, #0
 12622              	.LCFI624:
 12623              		.cfi_def_cfa_register 7
 12624 0006 7860     		str	r0, [r7, #4]
 12625 0008 3960     		str	r1, [r7]
5720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Prevent unused argument(s) compilation warning */
5721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(hfdcan);
5722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(RxFifo0ITs);
5723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
5725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             the HAL_FDCAN_RxFifo0Callback could be implemented in the user file
5726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****    */
5727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 341


 12626              		.loc 1 5727 1
 12627 000a 00BF     		nop
 12628 000c 0C37     		adds	r7, r7, #12
 12629              	.LCFI625:
 12630              		.cfi_def_cfa_offset 4
 12631 000e BD46     		mov	sp, r7
 12632              	.LCFI626:
 12633              		.cfi_def_cfa_register 13
 12634              		@ sp needed
 12635 0010 5DF8047B 		ldr	r7, [sp], #4
 12636              	.LCFI627:
 12637              		.cfi_restore 7
 12638              		.cfi_def_cfa_offset 0
 12639 0014 7047     		bx	lr
 12640              		.cfi_endproc
 12641              	.LFE438:
 12643              		.section	.text.HAL_FDCAN_RxFifo1Callback,"ax",%progbits
 12644              		.align	1
 12645              		.weak	HAL_FDCAN_RxFifo1Callback
 12646              		.syntax unified
 12647              		.thumb
 12648              		.thumb_func
 12650              	HAL_FDCAN_RxFifo1Callback:
 12651              	.LFB439:
5728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
5730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Rx FIFO 1 callback.
5731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
5732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
5733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  RxFifo1ITs indicates which Rx FIFO 1 interrupts are signaled.
5734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be any combination of @arg FDCAN_Rx_Fifo1_Interrupts.
5735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval None
5736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
5737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** __weak void HAL_FDCAN_RxFifo1Callback(FDCAN_HandleTypeDef *hfdcan, uint32_t RxFifo1ITs)
5738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 12652              		.loc 1 5738 1
 12653              		.cfi_startproc
 12654              		@ args = 0, pretend = 0, frame = 8
 12655              		@ frame_needed = 1, uses_anonymous_args = 0
 12656              		@ link register save eliminated.
 12657 0000 80B4     		push	{r7}
 12658              	.LCFI628:
 12659              		.cfi_def_cfa_offset 4
 12660              		.cfi_offset 7, -4
 12661 0002 83B0     		sub	sp, sp, #12
 12662              	.LCFI629:
 12663              		.cfi_def_cfa_offset 16
 12664 0004 00AF     		add	r7, sp, #0
 12665              	.LCFI630:
 12666              		.cfi_def_cfa_register 7
 12667 0006 7860     		str	r0, [r7, #4]
 12668 0008 3960     		str	r1, [r7]
5739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Prevent unused argument(s) compilation warning */
5740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(hfdcan);
5741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(RxFifo1ITs);
5742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 342


5744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             the HAL_FDCAN_RxFifo1Callback could be implemented in the user file
5745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****    */
5746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 12669              		.loc 1 5746 1
 12670 000a 00BF     		nop
 12671 000c 0C37     		adds	r7, r7, #12
 12672              	.LCFI631:
 12673              		.cfi_def_cfa_offset 4
 12674 000e BD46     		mov	sp, r7
 12675              	.LCFI632:
 12676              		.cfi_def_cfa_register 13
 12677              		@ sp needed
 12678 0010 5DF8047B 		ldr	r7, [sp], #4
 12679              	.LCFI633:
 12680              		.cfi_restore 7
 12681              		.cfi_def_cfa_offset 0
 12682 0014 7047     		bx	lr
 12683              		.cfi_endproc
 12684              	.LFE439:
 12686              		.section	.text.HAL_FDCAN_TxFifoEmptyCallback,"ax",%progbits
 12687              		.align	1
 12688              		.weak	HAL_FDCAN_TxFifoEmptyCallback
 12689              		.syntax unified
 12690              		.thumb
 12691              		.thumb_func
 12693              	HAL_FDCAN_TxFifoEmptyCallback:
 12694              	.LFB440:
5747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
5749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Tx FIFO Empty callback.
5750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
5751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
5752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval None
5753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
5754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** __weak void HAL_FDCAN_TxFifoEmptyCallback(FDCAN_HandleTypeDef *hfdcan)
5755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 12695              		.loc 1 5755 1
 12696              		.cfi_startproc
 12697              		@ args = 0, pretend = 0, frame = 8
 12698              		@ frame_needed = 1, uses_anonymous_args = 0
 12699              		@ link register save eliminated.
 12700 0000 80B4     		push	{r7}
 12701              	.LCFI634:
 12702              		.cfi_def_cfa_offset 4
 12703              		.cfi_offset 7, -4
 12704 0002 83B0     		sub	sp, sp, #12
 12705              	.LCFI635:
 12706              		.cfi_def_cfa_offset 16
 12707 0004 00AF     		add	r7, sp, #0
 12708              	.LCFI636:
 12709              		.cfi_def_cfa_register 7
 12710 0006 7860     		str	r0, [r7, #4]
5756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Prevent unused argument(s) compilation warning */
5757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(hfdcan);
5758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
5760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             the HAL_FDCAN_TxFifoEmptyCallback could be implemented in the user file
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 343


5761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****    */
5762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 12711              		.loc 1 5762 1
 12712 0008 00BF     		nop
 12713 000a 0C37     		adds	r7, r7, #12
 12714              	.LCFI637:
 12715              		.cfi_def_cfa_offset 4
 12716 000c BD46     		mov	sp, r7
 12717              	.LCFI638:
 12718              		.cfi_def_cfa_register 13
 12719              		@ sp needed
 12720 000e 5DF8047B 		ldr	r7, [sp], #4
 12721              	.LCFI639:
 12722              		.cfi_restore 7
 12723              		.cfi_def_cfa_offset 0
 12724 0012 7047     		bx	lr
 12725              		.cfi_endproc
 12726              	.LFE440:
 12728              		.section	.text.HAL_FDCAN_TxBufferCompleteCallback,"ax",%progbits
 12729              		.align	1
 12730              		.weak	HAL_FDCAN_TxBufferCompleteCallback
 12731              		.syntax unified
 12732              		.thumb
 12733              		.thumb_func
 12735              	HAL_FDCAN_TxBufferCompleteCallback:
 12736              	.LFB441:
5763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
5765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Transmission Complete callback.
5766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
5767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
5768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  BufferIndexes Indexes of the transmitted buffers.
5769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be any combination of @arg FDCAN_Tx_location.
5770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval None
5771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
5772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** __weak void HAL_FDCAN_TxBufferCompleteCallback(FDCAN_HandleTypeDef *hfdcan, uint32_t BufferIndexes)
5773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 12737              		.loc 1 5773 1
 12738              		.cfi_startproc
 12739              		@ args = 0, pretend = 0, frame = 8
 12740              		@ frame_needed = 1, uses_anonymous_args = 0
 12741              		@ link register save eliminated.
 12742 0000 80B4     		push	{r7}
 12743              	.LCFI640:
 12744              		.cfi_def_cfa_offset 4
 12745              		.cfi_offset 7, -4
 12746 0002 83B0     		sub	sp, sp, #12
 12747              	.LCFI641:
 12748              		.cfi_def_cfa_offset 16
 12749 0004 00AF     		add	r7, sp, #0
 12750              	.LCFI642:
 12751              		.cfi_def_cfa_register 7
 12752 0006 7860     		str	r0, [r7, #4]
 12753 0008 3960     		str	r1, [r7]
5774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Prevent unused argument(s) compilation warning */
5775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(hfdcan);
5776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(BufferIndexes);
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 344


5777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
5779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             the HAL_FDCAN_TxBufferCompleteCallback could be implemented in the user file
5780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****    */
5781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 12754              		.loc 1 5781 1
 12755 000a 00BF     		nop
 12756 000c 0C37     		adds	r7, r7, #12
 12757              	.LCFI643:
 12758              		.cfi_def_cfa_offset 4
 12759 000e BD46     		mov	sp, r7
 12760              	.LCFI644:
 12761              		.cfi_def_cfa_register 13
 12762              		@ sp needed
 12763 0010 5DF8047B 		ldr	r7, [sp], #4
 12764              	.LCFI645:
 12765              		.cfi_restore 7
 12766              		.cfi_def_cfa_offset 0
 12767 0014 7047     		bx	lr
 12768              		.cfi_endproc
 12769              	.LFE441:
 12771              		.section	.text.HAL_FDCAN_TxBufferAbortCallback,"ax",%progbits
 12772              		.align	1
 12773              		.weak	HAL_FDCAN_TxBufferAbortCallback
 12774              		.syntax unified
 12775              		.thumb
 12776              		.thumb_func
 12778              	HAL_FDCAN_TxBufferAbortCallback:
 12779              	.LFB442:
5782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
5784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Transmission Cancellation callback.
5785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
5786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
5787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  BufferIndexes Indexes of the aborted buffers.
5788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be any combination of @arg FDCAN_Tx_location.
5789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval None
5790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
5791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** __weak void HAL_FDCAN_TxBufferAbortCallback(FDCAN_HandleTypeDef *hfdcan, uint32_t BufferIndexes)
5792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 12780              		.loc 1 5792 1
 12781              		.cfi_startproc
 12782              		@ args = 0, pretend = 0, frame = 8
 12783              		@ frame_needed = 1, uses_anonymous_args = 0
 12784              		@ link register save eliminated.
 12785 0000 80B4     		push	{r7}
 12786              	.LCFI646:
 12787              		.cfi_def_cfa_offset 4
 12788              		.cfi_offset 7, -4
 12789 0002 83B0     		sub	sp, sp, #12
 12790              	.LCFI647:
 12791              		.cfi_def_cfa_offset 16
 12792 0004 00AF     		add	r7, sp, #0
 12793              	.LCFI648:
 12794              		.cfi_def_cfa_register 7
 12795 0006 7860     		str	r0, [r7, #4]
 12796 0008 3960     		str	r1, [r7]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 345


5793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Prevent unused argument(s) compilation warning */
5794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(hfdcan);
5795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(BufferIndexes);
5796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
5798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             the HAL_FDCAN_TxBufferAbortCallback could be implemented in the user file
5799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****    */
5800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 12797              		.loc 1 5800 1
 12798 000a 00BF     		nop
 12799 000c 0C37     		adds	r7, r7, #12
 12800              	.LCFI649:
 12801              		.cfi_def_cfa_offset 4
 12802 000e BD46     		mov	sp, r7
 12803              	.LCFI650:
 12804              		.cfi_def_cfa_register 13
 12805              		@ sp needed
 12806 0010 5DF8047B 		ldr	r7, [sp], #4
 12807              	.LCFI651:
 12808              		.cfi_restore 7
 12809              		.cfi_def_cfa_offset 0
 12810 0014 7047     		bx	lr
 12811              		.cfi_endproc
 12812              	.LFE442:
 12814              		.section	.text.HAL_FDCAN_RxBufferNewMessageCallback,"ax",%progbits
 12815              		.align	1
 12816              		.weak	HAL_FDCAN_RxBufferNewMessageCallback
 12817              		.syntax unified
 12818              		.thumb
 12819              		.thumb_func
 12821              	HAL_FDCAN_RxBufferNewMessageCallback:
 12822              	.LFB443:
5801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
5803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Rx Buffer New Message callback.
5804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
5805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
5806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval None
5807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
5808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** __weak void HAL_FDCAN_RxBufferNewMessageCallback(FDCAN_HandleTypeDef *hfdcan)
5809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 12823              		.loc 1 5809 1
 12824              		.cfi_startproc
 12825              		@ args = 0, pretend = 0, frame = 8
 12826              		@ frame_needed = 1, uses_anonymous_args = 0
 12827              		@ link register save eliminated.
 12828 0000 80B4     		push	{r7}
 12829              	.LCFI652:
 12830              		.cfi_def_cfa_offset 4
 12831              		.cfi_offset 7, -4
 12832 0002 83B0     		sub	sp, sp, #12
 12833              	.LCFI653:
 12834              		.cfi_def_cfa_offset 16
 12835 0004 00AF     		add	r7, sp, #0
 12836              	.LCFI654:
 12837              		.cfi_def_cfa_register 7
 12838 0006 7860     		str	r0, [r7, #4]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 346


5810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Prevent unused argument(s) compilation warning */
5811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(hfdcan);
5812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
5814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             the HAL_FDCAN_RxBufferNewMessageCallback could be implemented in the user file
5815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****    */
5816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 12839              		.loc 1 5816 1
 12840 0008 00BF     		nop
 12841 000a 0C37     		adds	r7, r7, #12
 12842              	.LCFI655:
 12843              		.cfi_def_cfa_offset 4
 12844 000c BD46     		mov	sp, r7
 12845              	.LCFI656:
 12846              		.cfi_def_cfa_register 13
 12847              		@ sp needed
 12848 000e 5DF8047B 		ldr	r7, [sp], #4
 12849              	.LCFI657:
 12850              		.cfi_restore 7
 12851              		.cfi_def_cfa_offset 0
 12852 0012 7047     		bx	lr
 12853              		.cfi_endproc
 12854              	.LFE443:
 12856              		.section	.text.HAL_FDCAN_TimestampWraparoundCallback,"ax",%progbits
 12857              		.align	1
 12858              		.weak	HAL_FDCAN_TimestampWraparoundCallback
 12859              		.syntax unified
 12860              		.thumb
 12861              		.thumb_func
 12863              	HAL_FDCAN_TimestampWraparoundCallback:
 12864              	.LFB444:
5817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
5819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Timestamp Wraparound callback.
5820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
5821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
5822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval None
5823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
5824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** __weak void HAL_FDCAN_TimestampWraparoundCallback(FDCAN_HandleTypeDef *hfdcan)
5825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 12865              		.loc 1 5825 1
 12866              		.cfi_startproc
 12867              		@ args = 0, pretend = 0, frame = 8
 12868              		@ frame_needed = 1, uses_anonymous_args = 0
 12869              		@ link register save eliminated.
 12870 0000 80B4     		push	{r7}
 12871              	.LCFI658:
 12872              		.cfi_def_cfa_offset 4
 12873              		.cfi_offset 7, -4
 12874 0002 83B0     		sub	sp, sp, #12
 12875              	.LCFI659:
 12876              		.cfi_def_cfa_offset 16
 12877 0004 00AF     		add	r7, sp, #0
 12878              	.LCFI660:
 12879              		.cfi_def_cfa_register 7
 12880 0006 7860     		str	r0, [r7, #4]
5826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 347


5827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(hfdcan);
5828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
5830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             the HAL_FDCAN_TimestampWraparoundCallback could be implemented in the user file
5831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****    */
5832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 12881              		.loc 1 5832 1
 12882 0008 00BF     		nop
 12883 000a 0C37     		adds	r7, r7, #12
 12884              	.LCFI661:
 12885              		.cfi_def_cfa_offset 4
 12886 000c BD46     		mov	sp, r7
 12887              	.LCFI662:
 12888              		.cfi_def_cfa_register 13
 12889              		@ sp needed
 12890 000e 5DF8047B 		ldr	r7, [sp], #4
 12891              	.LCFI663:
 12892              		.cfi_restore 7
 12893              		.cfi_def_cfa_offset 0
 12894 0012 7047     		bx	lr
 12895              		.cfi_endproc
 12896              	.LFE444:
 12898              		.section	.text.HAL_FDCAN_TimeoutOccurredCallback,"ax",%progbits
 12899              		.align	1
 12900              		.weak	HAL_FDCAN_TimeoutOccurredCallback
 12901              		.syntax unified
 12902              		.thumb
 12903              		.thumb_func
 12905              	HAL_FDCAN_TimeoutOccurredCallback:
 12906              	.LFB445:
5833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
5835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Timeout Occurred callback.
5836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
5837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
5838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval None
5839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
5840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** __weak void HAL_FDCAN_TimeoutOccurredCallback(FDCAN_HandleTypeDef *hfdcan)
5841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 12907              		.loc 1 5841 1
 12908              		.cfi_startproc
 12909              		@ args = 0, pretend = 0, frame = 8
 12910              		@ frame_needed = 1, uses_anonymous_args = 0
 12911              		@ link register save eliminated.
 12912 0000 80B4     		push	{r7}
 12913              	.LCFI664:
 12914              		.cfi_def_cfa_offset 4
 12915              		.cfi_offset 7, -4
 12916 0002 83B0     		sub	sp, sp, #12
 12917              	.LCFI665:
 12918              		.cfi_def_cfa_offset 16
 12919 0004 00AF     		add	r7, sp, #0
 12920              	.LCFI666:
 12921              		.cfi_def_cfa_register 7
 12922 0006 7860     		str	r0, [r7, #4]
5842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Prevent unused argument(s) compilation warning */
5843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(hfdcan);
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 348


5844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
5846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             the HAL_FDCAN_TimeoutOccurredCallback could be implemented in the user file
5847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****    */
5848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 12923              		.loc 1 5848 1
 12924 0008 00BF     		nop
 12925 000a 0C37     		adds	r7, r7, #12
 12926              	.LCFI667:
 12927              		.cfi_def_cfa_offset 4
 12928 000c BD46     		mov	sp, r7
 12929              	.LCFI668:
 12930              		.cfi_def_cfa_register 13
 12931              		@ sp needed
 12932 000e 5DF8047B 		ldr	r7, [sp], #4
 12933              	.LCFI669:
 12934              		.cfi_restore 7
 12935              		.cfi_def_cfa_offset 0
 12936 0012 7047     		bx	lr
 12937              		.cfi_endproc
 12938              	.LFE445:
 12940              		.section	.text.HAL_FDCAN_HighPriorityMessageCallback,"ax",%progbits
 12941              		.align	1
 12942              		.weak	HAL_FDCAN_HighPriorityMessageCallback
 12943              		.syntax unified
 12944              		.thumb
 12945              		.thumb_func
 12947              	HAL_FDCAN_HighPriorityMessageCallback:
 12948              	.LFB446:
5849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
5851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  High Priority Message callback.
5852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
5853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
5854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval None
5855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
5856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** __weak void HAL_FDCAN_HighPriorityMessageCallback(FDCAN_HandleTypeDef *hfdcan)
5857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 12949              		.loc 1 5857 1
 12950              		.cfi_startproc
 12951              		@ args = 0, pretend = 0, frame = 8
 12952              		@ frame_needed = 1, uses_anonymous_args = 0
 12953              		@ link register save eliminated.
 12954 0000 80B4     		push	{r7}
 12955              	.LCFI670:
 12956              		.cfi_def_cfa_offset 4
 12957              		.cfi_offset 7, -4
 12958 0002 83B0     		sub	sp, sp, #12
 12959              	.LCFI671:
 12960              		.cfi_def_cfa_offset 16
 12961 0004 00AF     		add	r7, sp, #0
 12962              	.LCFI672:
 12963              		.cfi_def_cfa_register 7
 12964 0006 7860     		str	r0, [r7, #4]
5858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Prevent unused argument(s) compilation warning */
5859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(hfdcan);
5860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 349


5861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
5862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             the HAL_FDCAN_HighPriorityMessageCallback could be implemented in the user file
5863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****    */
5864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 12965              		.loc 1 5864 1
 12966 0008 00BF     		nop
 12967 000a 0C37     		adds	r7, r7, #12
 12968              	.LCFI673:
 12969              		.cfi_def_cfa_offset 4
 12970 000c BD46     		mov	sp, r7
 12971              	.LCFI674:
 12972              		.cfi_def_cfa_register 13
 12973              		@ sp needed
 12974 000e 5DF8047B 		ldr	r7, [sp], #4
 12975              	.LCFI675:
 12976              		.cfi_restore 7
 12977              		.cfi_def_cfa_offset 0
 12978 0012 7047     		bx	lr
 12979              		.cfi_endproc
 12980              	.LFE446:
 12982              		.section	.text.HAL_FDCAN_ErrorCallback,"ax",%progbits
 12983              		.align	1
 12984              		.weak	HAL_FDCAN_ErrorCallback
 12985              		.syntax unified
 12986              		.thumb
 12987              		.thumb_func
 12989              	HAL_FDCAN_ErrorCallback:
 12990              	.LFB447:
5865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
5867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Error callback.
5868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
5869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
5870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval None
5871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
5872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** __weak void HAL_FDCAN_ErrorCallback(FDCAN_HandleTypeDef *hfdcan)
5873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 12991              		.loc 1 5873 1
 12992              		.cfi_startproc
 12993              		@ args = 0, pretend = 0, frame = 8
 12994              		@ frame_needed = 1, uses_anonymous_args = 0
 12995              		@ link register save eliminated.
 12996 0000 80B4     		push	{r7}
 12997              	.LCFI676:
 12998              		.cfi_def_cfa_offset 4
 12999              		.cfi_offset 7, -4
 13000 0002 83B0     		sub	sp, sp, #12
 13001              	.LCFI677:
 13002              		.cfi_def_cfa_offset 16
 13003 0004 00AF     		add	r7, sp, #0
 13004              	.LCFI678:
 13005              		.cfi_def_cfa_register 7
 13006 0006 7860     		str	r0, [r7, #4]
5874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Prevent unused argument(s) compilation warning */
5875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(hfdcan);
5876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 350


5878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             the HAL_FDCAN_ErrorCallback could be implemented in the user file
5879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****    */
5880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 13007              		.loc 1 5880 1
 13008 0008 00BF     		nop
 13009 000a 0C37     		adds	r7, r7, #12
 13010              	.LCFI679:
 13011              		.cfi_def_cfa_offset 4
 13012 000c BD46     		mov	sp, r7
 13013              	.LCFI680:
 13014              		.cfi_def_cfa_register 13
 13015              		@ sp needed
 13016 000e 5DF8047B 		ldr	r7, [sp], #4
 13017              	.LCFI681:
 13018              		.cfi_restore 7
 13019              		.cfi_def_cfa_offset 0
 13020 0012 7047     		bx	lr
 13021              		.cfi_endproc
 13022              	.LFE447:
 13024              		.section	.text.HAL_FDCAN_ErrorStatusCallback,"ax",%progbits
 13025              		.align	1
 13026              		.weak	HAL_FDCAN_ErrorStatusCallback
 13027              		.syntax unified
 13028              		.thumb
 13029              		.thumb_func
 13031              	HAL_FDCAN_ErrorStatusCallback:
 13032              	.LFB448:
5881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
5883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Error status callback.
5884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
5885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
5886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  ErrorStatusITs indicates which Error Status interrupts are signaled.
5887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be any combination of @arg FDCAN_Error_Status_Interrupts.
5888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval None
5889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
5890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** __weak void HAL_FDCAN_ErrorStatusCallback(FDCAN_HandleTypeDef *hfdcan, uint32_t ErrorStatusITs)
5891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 13033              		.loc 1 5891 1
 13034              		.cfi_startproc
 13035              		@ args = 0, pretend = 0, frame = 8
 13036              		@ frame_needed = 1, uses_anonymous_args = 0
 13037              		@ link register save eliminated.
 13038 0000 80B4     		push	{r7}
 13039              	.LCFI682:
 13040              		.cfi_def_cfa_offset 4
 13041              		.cfi_offset 7, -4
 13042 0002 83B0     		sub	sp, sp, #12
 13043              	.LCFI683:
 13044              		.cfi_def_cfa_offset 16
 13045 0004 00AF     		add	r7, sp, #0
 13046              	.LCFI684:
 13047              		.cfi_def_cfa_register 7
 13048 0006 7860     		str	r0, [r7, #4]
 13049 0008 3960     		str	r1, [r7]
5892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Prevent unused argument(s) compilation warning */
5893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(hfdcan);
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 351


5894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(ErrorStatusITs);
5895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
5897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             the HAL_FDCAN_ErrorStatusCallback could be implemented in the user file
5898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****    */
5899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 13050              		.loc 1 5899 1
 13051 000a 00BF     		nop
 13052 000c 0C37     		adds	r7, r7, #12
 13053              	.LCFI685:
 13054              		.cfi_def_cfa_offset 4
 13055 000e BD46     		mov	sp, r7
 13056              	.LCFI686:
 13057              		.cfi_def_cfa_register 13
 13058              		@ sp needed
 13059 0010 5DF8047B 		ldr	r7, [sp], #4
 13060              	.LCFI687:
 13061              		.cfi_restore 7
 13062              		.cfi_def_cfa_offset 0
 13063 0014 7047     		bx	lr
 13064              		.cfi_endproc
 13065              	.LFE448:
 13067              		.section	.text.HAL_FDCAN_TT_ScheduleSyncCallback,"ax",%progbits
 13068              		.align	1
 13069              		.weak	HAL_FDCAN_TT_ScheduleSyncCallback
 13070              		.syntax unified
 13071              		.thumb
 13072              		.thumb_func
 13074              	HAL_FDCAN_TT_ScheduleSyncCallback:
 13075              	.LFB449:
5900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
5902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  TT Schedule Synchronization callback.
5903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
5904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
5905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  TTSchedSyncITs indicates which TT Schedule Synchronization interrupts are signaled.
5906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be any combination of @arg FDCAN_TTScheduleSynchronization_Interrupt
5907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval None
5908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
5909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** __weak void HAL_FDCAN_TT_ScheduleSyncCallback(FDCAN_HandleTypeDef *hfdcan, uint32_t TTSchedSyncITs)
5910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 13076              		.loc 1 5910 1
 13077              		.cfi_startproc
 13078              		@ args = 0, pretend = 0, frame = 8
 13079              		@ frame_needed = 1, uses_anonymous_args = 0
 13080              		@ link register save eliminated.
 13081 0000 80B4     		push	{r7}
 13082              	.LCFI688:
 13083              		.cfi_def_cfa_offset 4
 13084              		.cfi_offset 7, -4
 13085 0002 83B0     		sub	sp, sp, #12
 13086              	.LCFI689:
 13087              		.cfi_def_cfa_offset 16
 13088 0004 00AF     		add	r7, sp, #0
 13089              	.LCFI690:
 13090              		.cfi_def_cfa_register 7
 13091 0006 7860     		str	r0, [r7, #4]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 352


 13092 0008 3960     		str	r1, [r7]
5911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Prevent unused argument(s) compilation warning */
5912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(hfdcan);
5913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(TTSchedSyncITs);
5914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
5916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             the HAL_FDCAN_TT_ScheduleSyncCallback could be implemented in the user file
5917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****    */
5918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 13093              		.loc 1 5918 1
 13094 000a 00BF     		nop
 13095 000c 0C37     		adds	r7, r7, #12
 13096              	.LCFI691:
 13097              		.cfi_def_cfa_offset 4
 13098 000e BD46     		mov	sp, r7
 13099              	.LCFI692:
 13100              		.cfi_def_cfa_register 13
 13101              		@ sp needed
 13102 0010 5DF8047B 		ldr	r7, [sp], #4
 13103              	.LCFI693:
 13104              		.cfi_restore 7
 13105              		.cfi_def_cfa_offset 0
 13106 0014 7047     		bx	lr
 13107              		.cfi_endproc
 13108              	.LFE449:
 13110              		.section	.text.HAL_FDCAN_TT_TimeMarkCallback,"ax",%progbits
 13111              		.align	1
 13112              		.weak	HAL_FDCAN_TT_TimeMarkCallback
 13113              		.syntax unified
 13114              		.thumb
 13115              		.thumb_func
 13117              	HAL_FDCAN_TT_TimeMarkCallback:
 13118              	.LFB450:
5919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
5921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  TT Time Mark callback.
5922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
5923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
5924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  TTTimeMarkITs indicates which TT Schedule Synchronization interrupts are signaled.
5925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be any combination of @arg FDCAN_TTTimeMark_Interrupts.
5926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval None
5927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
5928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** __weak void HAL_FDCAN_TT_TimeMarkCallback(FDCAN_HandleTypeDef *hfdcan, uint32_t TTTimeMarkITs)
5929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 13119              		.loc 1 5929 1
 13120              		.cfi_startproc
 13121              		@ args = 0, pretend = 0, frame = 8
 13122              		@ frame_needed = 1, uses_anonymous_args = 0
 13123              		@ link register save eliminated.
 13124 0000 80B4     		push	{r7}
 13125              	.LCFI694:
 13126              		.cfi_def_cfa_offset 4
 13127              		.cfi_offset 7, -4
 13128 0002 83B0     		sub	sp, sp, #12
 13129              	.LCFI695:
 13130              		.cfi_def_cfa_offset 16
 13131 0004 00AF     		add	r7, sp, #0
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 353


 13132              	.LCFI696:
 13133              		.cfi_def_cfa_register 7
 13134 0006 7860     		str	r0, [r7, #4]
 13135 0008 3960     		str	r1, [r7]
5930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Prevent unused argument(s) compilation warning */
5931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(hfdcan);
5932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(TTTimeMarkITs);
5933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
5935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             the HAL_FDCAN_TT_TimeMarkCallback could be implemented in the user file
5936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****    */
5937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 13136              		.loc 1 5937 1
 13137 000a 00BF     		nop
 13138 000c 0C37     		adds	r7, r7, #12
 13139              	.LCFI697:
 13140              		.cfi_def_cfa_offset 4
 13141 000e BD46     		mov	sp, r7
 13142              	.LCFI698:
 13143              		.cfi_def_cfa_register 13
 13144              		@ sp needed
 13145 0010 5DF8047B 		ldr	r7, [sp], #4
 13146              	.LCFI699:
 13147              		.cfi_restore 7
 13148              		.cfi_def_cfa_offset 0
 13149 0014 7047     		bx	lr
 13150              		.cfi_endproc
 13151              	.LFE450:
 13153              		.section	.text.HAL_FDCAN_TT_StopWatchCallback,"ax",%progbits
 13154              		.align	1
 13155              		.weak	HAL_FDCAN_TT_StopWatchCallback
 13156              		.syntax unified
 13157              		.thumb
 13158              		.thumb_func
 13160              	HAL_FDCAN_TT_StopWatchCallback:
 13161              	.LFB451:
5938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
5940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  TT Stop Watch callback.
5941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
5942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
5943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  SWTime Time Value captured at the Stop Watch Trigger pin (fdcan1_swt) falling/rising
5944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         edge (as configured via HAL_FDCAN_TTConfigStopWatch).
5945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter is a number between 0 and 0xFFFF.
5946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  SWCycleCount Cycle count value captured together with SWTime.
5947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter is a number between 0 and 0x3F.
5948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval None
5949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
5950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** __weak void HAL_FDCAN_TT_StopWatchCallback(FDCAN_HandleTypeDef *hfdcan, uint32_t SWTime, uint32_t S
5951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 13162              		.loc 1 5951 1
 13163              		.cfi_startproc
 13164              		@ args = 0, pretend = 0, frame = 16
 13165              		@ frame_needed = 1, uses_anonymous_args = 0
 13166              		@ link register save eliminated.
 13167 0000 80B4     		push	{r7}
 13168              	.LCFI700:
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 354


 13169              		.cfi_def_cfa_offset 4
 13170              		.cfi_offset 7, -4
 13171 0002 85B0     		sub	sp, sp, #20
 13172              	.LCFI701:
 13173              		.cfi_def_cfa_offset 24
 13174 0004 00AF     		add	r7, sp, #0
 13175              	.LCFI702:
 13176              		.cfi_def_cfa_register 7
 13177 0006 F860     		str	r0, [r7, #12]
 13178 0008 B960     		str	r1, [r7, #8]
 13179 000a 7A60     		str	r2, [r7, #4]
5952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Prevent unused argument(s) compilation warning */
5953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(hfdcan);
5954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(SWTime);
5955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(SWCycleCount);
5956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
5958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             the HAL_FDCAN_TT_StopWatchCallback could be implemented in the user file
5959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****    */
5960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 13180              		.loc 1 5960 1
 13181 000c 00BF     		nop
 13182 000e 1437     		adds	r7, r7, #20
 13183              	.LCFI703:
 13184              		.cfi_def_cfa_offset 4
 13185 0010 BD46     		mov	sp, r7
 13186              	.LCFI704:
 13187              		.cfi_def_cfa_register 13
 13188              		@ sp needed
 13189 0012 5DF8047B 		ldr	r7, [sp], #4
 13190              	.LCFI705:
 13191              		.cfi_restore 7
 13192              		.cfi_def_cfa_offset 0
 13193 0016 7047     		bx	lr
 13194              		.cfi_endproc
 13195              	.LFE451:
 13197              		.section	.text.HAL_FDCAN_TT_GlobalTimeCallback,"ax",%progbits
 13198              		.align	1
 13199              		.weak	HAL_FDCAN_TT_GlobalTimeCallback
 13200              		.syntax unified
 13201              		.thumb
 13202              		.thumb_func
 13204              	HAL_FDCAN_TT_GlobalTimeCallback:
 13205              	.LFB452:
5961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
5963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  TT Global Time callback.
5964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
5965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
5966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  TTGlobTimeITs indicates which TT Global Time interrupts are signaled.
5967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         This parameter can be any combination of @arg FDCAN_TTGlobalTime_Interrupts.
5968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval None
5969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
5970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** __weak void HAL_FDCAN_TT_GlobalTimeCallback(FDCAN_HandleTypeDef *hfdcan, uint32_t TTGlobTimeITs)
5971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 13206              		.loc 1 5971 1
 13207              		.cfi_startproc
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 355


 13208              		@ args = 0, pretend = 0, frame = 8
 13209              		@ frame_needed = 1, uses_anonymous_args = 0
 13210              		@ link register save eliminated.
 13211 0000 80B4     		push	{r7}
 13212              	.LCFI706:
 13213              		.cfi_def_cfa_offset 4
 13214              		.cfi_offset 7, -4
 13215 0002 83B0     		sub	sp, sp, #12
 13216              	.LCFI707:
 13217              		.cfi_def_cfa_offset 16
 13218 0004 00AF     		add	r7, sp, #0
 13219              	.LCFI708:
 13220              		.cfi_def_cfa_register 7
 13221 0006 7860     		str	r0, [r7, #4]
 13222 0008 3960     		str	r1, [r7]
5972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Prevent unused argument(s) compilation warning */
5973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(hfdcan);
5974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   UNUSED(TTGlobTimeITs);
5975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
5977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****             the HAL_FDCAN_TT_GlobalTimeCallback could be implemented in the user file
5978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****    */
5979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 13223              		.loc 1 5979 1
 13224 000a 00BF     		nop
 13225 000c 0C37     		adds	r7, r7, #12
 13226              	.LCFI709:
 13227              		.cfi_def_cfa_offset 4
 13228 000e BD46     		mov	sp, r7
 13229              	.LCFI710:
 13230              		.cfi_def_cfa_register 13
 13231              		@ sp needed
 13232 0010 5DF8047B 		ldr	r7, [sp], #4
 13233              	.LCFI711:
 13234              		.cfi_restore 7
 13235              		.cfi_def_cfa_offset 0
 13236 0014 7047     		bx	lr
 13237              		.cfi_endproc
 13238              	.LFE452:
 13240              		.section	.text.HAL_FDCAN_GetState,"ax",%progbits
 13241              		.align	1
 13242              		.global	HAL_FDCAN_GetState
 13243              		.syntax unified
 13244              		.thumb
 13245              		.thumb_func
 13247              	HAL_FDCAN_GetState:
 13248              	.LFB453:
5980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
5982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @}
5983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
5984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /** @defgroup FDCAN_Exported_Functions_Group7 Peripheral State functions
5986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****  *  @brief   FDCAN Peripheral State functions
5987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****  *
5988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** @verbatim
5989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ==============================================================================
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 356


5990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                       ##### Peripheral State functions #####
5991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   ==============================================================================
5992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     [..]
5993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     This subsection provides functions allowing to :
5994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_GetState()  : Return the FDCAN state.
5995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       (+) HAL_FDCAN_GetError()  : Return the FDCAN error code if any.
5996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
5997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** @endverbatim
5998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @{
5999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
6000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
6001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Return the FDCAN state
6002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
6003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
6004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL state
6005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
6006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** HAL_FDCAN_StateTypeDef HAL_FDCAN_GetState(FDCAN_HandleTypeDef *hfdcan)
6007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 13249              		.loc 1 6007 1
 13250              		.cfi_startproc
 13251              		@ args = 0, pretend = 0, frame = 8
 13252              		@ frame_needed = 1, uses_anonymous_args = 0
 13253              		@ link register save eliminated.
 13254 0000 80B4     		push	{r7}
 13255              	.LCFI712:
 13256              		.cfi_def_cfa_offset 4
 13257              		.cfi_offset 7, -4
 13258 0002 83B0     		sub	sp, sp, #12
 13259              	.LCFI713:
 13260              		.cfi_def_cfa_offset 16
 13261 0004 00AF     		add	r7, sp, #0
 13262              	.LCFI714:
 13263              		.cfi_def_cfa_register 7
 13264 0006 7860     		str	r0, [r7, #4]
6008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Return FDCAN state */
6009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return hfdcan->State;
 13265              		.loc 1 6009 16
 13266 0008 7B68     		ldr	r3, [r7, #4]
 13267 000a 93F89830 		ldrb	r3, [r3, #152]
 13268 000e DBB2     		uxtb	r3, r3
6010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 13269              		.loc 1 6010 1
 13270 0010 1846     		mov	r0, r3
 13271 0012 0C37     		adds	r7, r7, #12
 13272              	.LCFI715:
 13273              		.cfi_def_cfa_offset 4
 13274 0014 BD46     		mov	sp, r7
 13275              	.LCFI716:
 13276              		.cfi_def_cfa_register 13
 13277              		@ sp needed
 13278 0016 5DF8047B 		ldr	r7, [sp], #4
 13279              	.LCFI717:
 13280              		.cfi_restore 7
 13281              		.cfi_def_cfa_offset 0
 13282 001a 7047     		bx	lr
 13283              		.cfi_endproc
 13284              	.LFE453:
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 357


 13286              		.section	.text.HAL_FDCAN_GetError,"ax",%progbits
 13287              		.align	1
 13288              		.global	HAL_FDCAN_GetError
 13289              		.syntax unified
 13290              		.thumb
 13291              		.thumb_func
 13293              	HAL_FDCAN_GetError:
 13294              	.LFB454:
6011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
6013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Return the FDCAN error code
6014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
6015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
6016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval FDCAN Error Code
6017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
6018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** uint32_t HAL_FDCAN_GetError(FDCAN_HandleTypeDef *hfdcan)
6019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 13295              		.loc 1 6019 1
 13296              		.cfi_startproc
 13297              		@ args = 0, pretend = 0, frame = 8
 13298              		@ frame_needed = 1, uses_anonymous_args = 0
 13299              		@ link register save eliminated.
 13300 0000 80B4     		push	{r7}
 13301              	.LCFI718:
 13302              		.cfi_def_cfa_offset 4
 13303              		.cfi_offset 7, -4
 13304 0002 83B0     		sub	sp, sp, #12
 13305              	.LCFI719:
 13306              		.cfi_def_cfa_offset 16
 13307 0004 00AF     		add	r7, sp, #0
 13308              	.LCFI720:
 13309              		.cfi_def_cfa_register 7
 13310 0006 7860     		str	r0, [r7, #4]
6020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Return FDCAN error code */
6021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return hfdcan->ErrorCode;
 13311              		.loc 1 6021 16
 13312 0008 7B68     		ldr	r3, [r7, #4]
 13313 000a D3F89C30 		ldr	r3, [r3, #156]
6022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 13314              		.loc 1 6022 1
 13315 000e 1846     		mov	r0, r3
 13316 0010 0C37     		adds	r7, r7, #12
 13317              	.LCFI721:
 13318              		.cfi_def_cfa_offset 4
 13319 0012 BD46     		mov	sp, r7
 13320              	.LCFI722:
 13321              		.cfi_def_cfa_register 13
 13322              		@ sp needed
 13323 0014 5DF8047B 		ldr	r7, [sp], #4
 13324              	.LCFI723:
 13325              		.cfi_restore 7
 13326              		.cfi_def_cfa_offset 0
 13327 0018 7047     		bx	lr
 13328              		.cfi_endproc
 13329              	.LFE454:
 13331              		.section	.text.FDCAN_CalcultateRamBlockAddresses,"ax",%progbits
 13332              		.align	1
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 358


 13333              		.syntax unified
 13334              		.thumb
 13335              		.thumb_func
 13337              	FDCAN_CalcultateRamBlockAddresses:
 13338              	.LFB455:
6023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
6025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @}
6026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
6027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
6029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @}
6030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
6031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /** @addtogroup FDCAN_Private_Functions
6033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @{
6034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   */
6035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
6037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Calculate each RAM block start address and size
6038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
6039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
6040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
6041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****  */
6042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** static HAL_StatusTypeDef FDCAN_CalcultateRamBlockAddresses(FDCAN_HandleTypeDef *hfdcan)
6043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 13339              		.loc 1 6043 1
 13340              		.cfi_startproc
 13341              		@ args = 0, pretend = 0, frame = 16
 13342              		@ frame_needed = 1, uses_anonymous_args = 0
 13343              		@ link register save eliminated.
 13344 0000 80B4     		push	{r7}
 13345              	.LCFI724:
 13346              		.cfi_def_cfa_offset 4
 13347              		.cfi_offset 7, -4
 13348 0002 85B0     		sub	sp, sp, #20
 13349              	.LCFI725:
 13350              		.cfi_def_cfa_offset 24
 13351 0004 00AF     		add	r7, sp, #0
 13352              	.LCFI726:
 13353              		.cfi_def_cfa_register 7
 13354 0006 7860     		str	r0, [r7, #4]
6044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t RAMcounter;
6045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t StartAddress;
6046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   StartAddress = hfdcan->Init.MessageRAMOffset;
 13355              		.loc 1 6047 16
 13356 0008 7B68     		ldr	r3, [r7, #4]
 13357 000a 5B6B     		ldr	r3, [r3, #52]
 13358 000c BB60     		str	r3, [r7, #8]
6048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Standard filter list start address */
6050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   MODIFY_REG(hfdcan->Instance->SIDFC, FDCAN_SIDFC_FLSSA, (StartAddress << FDCAN_SIDFC_FLSSA_Pos));
 13359              		.loc 1 6050 3
 13360 000e 7B68     		ldr	r3, [r7, #4]
 13361 0010 1B68     		ldr	r3, [r3]
 13362 0012 D3F88420 		ldr	r2, [r3, #132]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 359


 13363 0016 A74B     		ldr	r3, .L692
 13364 0018 1340     		ands	r3, r3, r2
 13365 001a BA68     		ldr	r2, [r7, #8]
 13366 001c 9100     		lsls	r1, r2, #2
 13367 001e 7A68     		ldr	r2, [r7, #4]
 13368 0020 1268     		ldr	r2, [r2]
 13369 0022 0B43     		orrs	r3, r3, r1
 13370 0024 C2F88430 		str	r3, [r2, #132]
6051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Standard filter elements number */
6053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   MODIFY_REG(hfdcan->Instance->SIDFC, FDCAN_SIDFC_LSS, (hfdcan->Init.StdFiltersNbr << FDCAN_SIDFC_L
 13371              		.loc 1 6053 3
 13372 0028 7B68     		ldr	r3, [r7, #4]
 13373 002a 1B68     		ldr	r3, [r3]
 13374 002c D3F88430 		ldr	r3, [r3, #132]
 13375 0030 23F47F01 		bic	r1, r3, #16711680
 13376 0034 7B68     		ldr	r3, [r7, #4]
 13377 0036 9B6B     		ldr	r3, [r3, #56]
 13378 0038 1A04     		lsls	r2, r3, #16
 13379 003a 7B68     		ldr	r3, [r7, #4]
 13380 003c 1B68     		ldr	r3, [r3]
 13381 003e 0A43     		orrs	r2, r2, r1
 13382 0040 C3F88420 		str	r2, [r3, #132]
6054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Extended filter list start address */
6056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   StartAddress += hfdcan->Init.StdFiltersNbr;
 13383              		.loc 1 6056 31
 13384 0044 7B68     		ldr	r3, [r7, #4]
 13385 0046 9B6B     		ldr	r3, [r3, #56]
 13386              		.loc 1 6056 16
 13387 0048 BA68     		ldr	r2, [r7, #8]
 13388 004a 1344     		add	r3, r3, r2
 13389 004c BB60     		str	r3, [r7, #8]
6057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   MODIFY_REG(hfdcan->Instance->XIDFC, FDCAN_XIDFC_FLESA, (StartAddress << FDCAN_XIDFC_FLESA_Pos));
 13390              		.loc 1 6057 3
 13391 004e 7B68     		ldr	r3, [r7, #4]
 13392 0050 1B68     		ldr	r3, [r3]
 13393 0052 D3F88820 		ldr	r2, [r3, #136]
 13394 0056 974B     		ldr	r3, .L692
 13395 0058 1340     		ands	r3, r3, r2
 13396 005a BA68     		ldr	r2, [r7, #8]
 13397 005c 9100     		lsls	r1, r2, #2
 13398 005e 7A68     		ldr	r2, [r7, #4]
 13399 0060 1268     		ldr	r2, [r2]
 13400 0062 0B43     		orrs	r3, r3, r1
 13401 0064 C2F88830 		str	r3, [r2, #136]
6058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Extended filter elements number */
6060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   MODIFY_REG(hfdcan->Instance->XIDFC, FDCAN_XIDFC_LSE, (hfdcan->Init.ExtFiltersNbr << FDCAN_XIDFC_L
 13402              		.loc 1 6060 3
 13403 0068 7B68     		ldr	r3, [r7, #4]
 13404 006a 1B68     		ldr	r3, [r3]
 13405 006c D3F88830 		ldr	r3, [r3, #136]
 13406 0070 23F4FE01 		bic	r1, r3, #8323072
 13407 0074 7B68     		ldr	r3, [r7, #4]
 13408 0076 DB6B     		ldr	r3, [r3, #60]
 13409 0078 1A04     		lsls	r2, r3, #16
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 360


 13410 007a 7B68     		ldr	r3, [r7, #4]
 13411 007c 1B68     		ldr	r3, [r3]
 13412 007e 0A43     		orrs	r2, r2, r1
 13413 0080 C3F88820 		str	r2, [r3, #136]
6061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Rx FIFO 0 start address */
6063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   StartAddress += (hfdcan->Init.ExtFiltersNbr * 2U);
 13414              		.loc 1 6063 32
 13415 0084 7B68     		ldr	r3, [r7, #4]
 13416 0086 DB6B     		ldr	r3, [r3, #60]
 13417              		.loc 1 6063 47
 13418 0088 5B00     		lsls	r3, r3, #1
 13419              		.loc 1 6063 16
 13420 008a BA68     		ldr	r2, [r7, #8]
 13421 008c 1344     		add	r3, r3, r2
 13422 008e BB60     		str	r3, [r7, #8]
6064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   MODIFY_REG(hfdcan->Instance->RXF0C, FDCAN_RXF0C_F0SA, (StartAddress << FDCAN_RXF0C_F0SA_Pos));
 13423              		.loc 1 6064 3
 13424 0090 7B68     		ldr	r3, [r7, #4]
 13425 0092 1B68     		ldr	r3, [r3]
 13426 0094 D3F8A020 		ldr	r2, [r3, #160]
 13427 0098 864B     		ldr	r3, .L692
 13428 009a 1340     		ands	r3, r3, r2
 13429 009c BA68     		ldr	r2, [r7, #8]
 13430 009e 9100     		lsls	r1, r2, #2
 13431 00a0 7A68     		ldr	r2, [r7, #4]
 13432 00a2 1268     		ldr	r2, [r2]
 13433 00a4 0B43     		orrs	r3, r3, r1
 13434 00a6 C2F8A030 		str	r3, [r2, #160]
6065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Rx FIFO 0 elements number */
6067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   MODIFY_REG(hfdcan->Instance->RXF0C, FDCAN_RXF0C_F0S, (hfdcan->Init.RxFifo0ElmtsNbr << FDCAN_RXF0C
 13435              		.loc 1 6067 3
 13436 00aa 7B68     		ldr	r3, [r7, #4]
 13437 00ac 1B68     		ldr	r3, [r3]
 13438 00ae D3F8A030 		ldr	r3, [r3, #160]
 13439 00b2 23F4FE01 		bic	r1, r3, #8323072
 13440 00b6 7B68     		ldr	r3, [r7, #4]
 13441 00b8 1B6C     		ldr	r3, [r3, #64]
 13442 00ba 1A04     		lsls	r2, r3, #16
 13443 00bc 7B68     		ldr	r3, [r7, #4]
 13444 00be 1B68     		ldr	r3, [r3]
 13445 00c0 0A43     		orrs	r2, r2, r1
 13446 00c2 C3F8A020 		str	r2, [r3, #160]
6068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Rx FIFO 1 start address */
6070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   StartAddress += (hfdcan->Init.RxFifo0ElmtsNbr * hfdcan->Init.RxFifo0ElmtSize);
 13447              		.loc 1 6070 32
 13448 00c6 7B68     		ldr	r3, [r7, #4]
 13449 00c8 1B6C     		ldr	r3, [r3, #64]
 13450              		.loc 1 6070 63
 13451 00ca 7A68     		ldr	r2, [r7, #4]
 13452 00cc 526C     		ldr	r2, [r2, #68]
 13453              		.loc 1 6070 49
 13454 00ce 02FB03F3 		mul	r3, r2, r3
 13455              		.loc 1 6070 16
 13456 00d2 BA68     		ldr	r2, [r7, #8]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 361


 13457 00d4 1344     		add	r3, r3, r2
 13458 00d6 BB60     		str	r3, [r7, #8]
6071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   MODIFY_REG(hfdcan->Instance->RXF1C, FDCAN_RXF1C_F1SA, (StartAddress << FDCAN_RXF1C_F1SA_Pos));
 13459              		.loc 1 6071 3
 13460 00d8 7B68     		ldr	r3, [r7, #4]
 13461 00da 1B68     		ldr	r3, [r3]
 13462 00dc D3F8B020 		ldr	r2, [r3, #176]
 13463 00e0 744B     		ldr	r3, .L692
 13464 00e2 1340     		ands	r3, r3, r2
 13465 00e4 BA68     		ldr	r2, [r7, #8]
 13466 00e6 9100     		lsls	r1, r2, #2
 13467 00e8 7A68     		ldr	r2, [r7, #4]
 13468 00ea 1268     		ldr	r2, [r2]
 13469 00ec 0B43     		orrs	r3, r3, r1
 13470 00ee C2F8B030 		str	r3, [r2, #176]
6072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Rx FIFO 1 elements number */
6074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   MODIFY_REG(hfdcan->Instance->RXF1C, FDCAN_RXF1C_F1S, (hfdcan->Init.RxFifo1ElmtsNbr << FDCAN_RXF1C
 13471              		.loc 1 6074 3
 13472 00f2 7B68     		ldr	r3, [r7, #4]
 13473 00f4 1B68     		ldr	r3, [r3]
 13474 00f6 D3F8B030 		ldr	r3, [r3, #176]
 13475 00fa 23F4FE01 		bic	r1, r3, #8323072
 13476 00fe 7B68     		ldr	r3, [r7, #4]
 13477 0100 9B6C     		ldr	r3, [r3, #72]
 13478 0102 1A04     		lsls	r2, r3, #16
 13479 0104 7B68     		ldr	r3, [r7, #4]
 13480 0106 1B68     		ldr	r3, [r3]
 13481 0108 0A43     		orrs	r2, r2, r1
 13482 010a C3F8B020 		str	r2, [r3, #176]
6075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Rx buffer list start address */
6077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   StartAddress += (hfdcan->Init.RxFifo1ElmtsNbr * hfdcan->Init.RxFifo1ElmtSize);
 13483              		.loc 1 6077 32
 13484 010e 7B68     		ldr	r3, [r7, #4]
 13485 0110 9B6C     		ldr	r3, [r3, #72]
 13486              		.loc 1 6077 63
 13487 0112 7A68     		ldr	r2, [r7, #4]
 13488 0114 D26C     		ldr	r2, [r2, #76]
 13489              		.loc 1 6077 49
 13490 0116 02FB03F3 		mul	r3, r2, r3
 13491              		.loc 1 6077 16
 13492 011a BA68     		ldr	r2, [r7, #8]
 13493 011c 1344     		add	r3, r3, r2
 13494 011e BB60     		str	r3, [r7, #8]
6078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   MODIFY_REG(hfdcan->Instance->RXBC, FDCAN_RXBC_RBSA, (StartAddress << FDCAN_RXBC_RBSA_Pos));
 13495              		.loc 1 6078 3
 13496 0120 7B68     		ldr	r3, [r7, #4]
 13497 0122 1B68     		ldr	r3, [r3]
 13498 0124 D3F8AC20 		ldr	r2, [r3, #172]
 13499 0128 624B     		ldr	r3, .L692
 13500 012a 1340     		ands	r3, r3, r2
 13501 012c BA68     		ldr	r2, [r7, #8]
 13502 012e 9100     		lsls	r1, r2, #2
 13503 0130 7A68     		ldr	r2, [r7, #4]
 13504 0132 1268     		ldr	r2, [r2]
 13505 0134 0B43     		orrs	r3, r3, r1
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 362


 13506 0136 C2F8AC30 		str	r3, [r2, #172]
6079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Tx event FIFO start address */
6081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   StartAddress += (hfdcan->Init.RxBuffersNbr * hfdcan->Init.RxBufferSize);
 13507              		.loc 1 6081 32
 13508 013a 7B68     		ldr	r3, [r7, #4]
 13509 013c 1B6D     		ldr	r3, [r3, #80]
 13510              		.loc 1 6081 60
 13511 013e 7A68     		ldr	r2, [r7, #4]
 13512 0140 526D     		ldr	r2, [r2, #84]
 13513              		.loc 1 6081 46
 13514 0142 02FB03F3 		mul	r3, r2, r3
 13515              		.loc 1 6081 16
 13516 0146 BA68     		ldr	r2, [r7, #8]
 13517 0148 1344     		add	r3, r3, r2
 13518 014a BB60     		str	r3, [r7, #8]
6082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   MODIFY_REG(hfdcan->Instance->TXEFC, FDCAN_TXEFC_EFSA, (StartAddress << FDCAN_TXEFC_EFSA_Pos));
 13519              		.loc 1 6082 3
 13520 014c 7B68     		ldr	r3, [r7, #4]
 13521 014e 1B68     		ldr	r3, [r3]
 13522 0150 D3F8F020 		ldr	r2, [r3, #240]
 13523 0154 574B     		ldr	r3, .L692
 13524 0156 1340     		ands	r3, r3, r2
 13525 0158 BA68     		ldr	r2, [r7, #8]
 13526 015a 9100     		lsls	r1, r2, #2
 13527 015c 7A68     		ldr	r2, [r7, #4]
 13528 015e 1268     		ldr	r2, [r2]
 13529 0160 0B43     		orrs	r3, r3, r1
 13530 0162 C2F8F030 		str	r3, [r2, #240]
6083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Tx event FIFO elements number */
6085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   MODIFY_REG(hfdcan->Instance->TXEFC, FDCAN_TXEFC_EFS, (hfdcan->Init.TxEventsNbr << FDCAN_TXEFC_EFS
 13531              		.loc 1 6085 3
 13532 0166 7B68     		ldr	r3, [r7, #4]
 13533 0168 1B68     		ldr	r3, [r3]
 13534 016a D3F8F030 		ldr	r3, [r3, #240]
 13535 016e 23F47C11 		bic	r1, r3, #4128768
 13536 0172 7B68     		ldr	r3, [r7, #4]
 13537 0174 9B6D     		ldr	r3, [r3, #88]
 13538 0176 1A04     		lsls	r2, r3, #16
 13539 0178 7B68     		ldr	r3, [r7, #4]
 13540 017a 1B68     		ldr	r3, [r3]
 13541 017c 0A43     		orrs	r2, r2, r1
 13542 017e C3F8F020 		str	r2, [r3, #240]
6086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Tx buffer list start address */
6088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   StartAddress += (hfdcan->Init.TxEventsNbr * 2U);
 13543              		.loc 1 6088 32
 13544 0182 7B68     		ldr	r3, [r7, #4]
 13545 0184 9B6D     		ldr	r3, [r3, #88]
 13546              		.loc 1 6088 45
 13547 0186 5B00     		lsls	r3, r3, #1
 13548              		.loc 1 6088 16
 13549 0188 BA68     		ldr	r2, [r7, #8]
 13550 018a 1344     		add	r3, r3, r2
 13551 018c BB60     		str	r3, [r7, #8]
6089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   MODIFY_REG(hfdcan->Instance->TXBC, FDCAN_TXBC_TBSA, (StartAddress << FDCAN_TXBC_TBSA_Pos));
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 363


 13552              		.loc 1 6089 3
 13553 018e 7B68     		ldr	r3, [r7, #4]
 13554 0190 1B68     		ldr	r3, [r3]
 13555 0192 D3F8C020 		ldr	r2, [r3, #192]
 13556 0196 474B     		ldr	r3, .L692
 13557 0198 1340     		ands	r3, r3, r2
 13558 019a BA68     		ldr	r2, [r7, #8]
 13559 019c 9100     		lsls	r1, r2, #2
 13560 019e 7A68     		ldr	r2, [r7, #4]
 13561 01a0 1268     		ldr	r2, [r2]
 13562 01a2 0B43     		orrs	r3, r3, r1
 13563 01a4 C2F8C030 		str	r3, [r2, #192]
6090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Dedicated Tx buffers number */
6092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   MODIFY_REG(hfdcan->Instance->TXBC, FDCAN_TXBC_NDTB, (hfdcan->Init.TxBuffersNbr << FDCAN_TXBC_NDTB
 13564              		.loc 1 6092 3
 13565 01a8 7B68     		ldr	r3, [r7, #4]
 13566 01aa 1B68     		ldr	r3, [r3]
 13567 01ac D3F8C030 		ldr	r3, [r3, #192]
 13568 01b0 23F47C11 		bic	r1, r3, #4128768
 13569 01b4 7B68     		ldr	r3, [r7, #4]
 13570 01b6 DB6D     		ldr	r3, [r3, #92]
 13571 01b8 1A04     		lsls	r2, r3, #16
 13572 01ba 7B68     		ldr	r3, [r7, #4]
 13573 01bc 1B68     		ldr	r3, [r3]
 13574 01be 0A43     		orrs	r2, r2, r1
 13575 01c0 C3F8C020 		str	r2, [r3, #192]
6093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Tx FIFO/queue elements number */
6095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   MODIFY_REG(hfdcan->Instance->TXBC, FDCAN_TXBC_TFQS, (hfdcan->Init.TxFifoQueueElmtsNbr << FDCAN_TX
 13576              		.loc 1 6095 3
 13577 01c4 7B68     		ldr	r3, [r7, #4]
 13578 01c6 1B68     		ldr	r3, [r3]
 13579 01c8 D3F8C030 		ldr	r3, [r3, #192]
 13580 01cc 23F07C51 		bic	r1, r3, #1056964608
 13581 01d0 7B68     		ldr	r3, [r7, #4]
 13582 01d2 1B6E     		ldr	r3, [r3, #96]
 13583 01d4 1A06     		lsls	r2, r3, #24
 13584 01d6 7B68     		ldr	r3, [r7, #4]
 13585 01d8 1B68     		ldr	r3, [r3]
 13586 01da 0A43     		orrs	r2, r2, r1
 13587 01dc C3F8C020 		str	r2, [r3, #192]
6096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   hfdcan->msgRam.StandardFilterSA = SRAMCAN_BASE + (hfdcan->Init.MessageRAMOffset * 4U);
 13588              		.loc 1 6097 65
 13589 01e0 7B68     		ldr	r3, [r7, #4]
 13590 01e2 5A6B     		ldr	r2, [r3, #52]
 13591              		.loc 1 6097 50
 13592 01e4 344B     		ldr	r3, .L692+4
 13593 01e6 1344     		add	r3, r3, r2
 13594 01e8 9A00     		lsls	r2, r3, #2
 13595              		.loc 1 6097 35
 13596 01ea 7B68     		ldr	r3, [r7, #4]
 13597 01ec DA66     		str	r2, [r3, #108]
6098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   hfdcan->msgRam.ExtendedFilterSA = hfdcan->msgRam.StandardFilterSA + (hfdcan->Init.StdFiltersNbr *
 13598              		.loc 1 6098 51
 13599 01ee 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 364


 13600 01f0 DA6E     		ldr	r2, [r3, #108]
 13601              		.loc 1 6098 84
 13602 01f2 7B68     		ldr	r3, [r7, #4]
 13603 01f4 9B6B     		ldr	r3, [r3, #56]
 13604              		.loc 1 6098 99
 13605 01f6 9B00     		lsls	r3, r3, #2
 13606              		.loc 1 6098 69
 13607 01f8 1A44     		add	r2, r2, r3
 13608              		.loc 1 6098 35
 13609 01fa 7B68     		ldr	r3, [r7, #4]
 13610 01fc 1A67     		str	r2, [r3, #112]
6099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   hfdcan->msgRam.RxFIFO0SA = hfdcan->msgRam.ExtendedFilterSA + (hfdcan->Init.ExtFiltersNbr * 2U * 4
 13611              		.loc 1 6099 44
 13612 01fe 7B68     		ldr	r3, [r7, #4]
 13613 0200 1A6F     		ldr	r2, [r3, #112]
 13614              		.loc 1 6099 77
 13615 0202 7B68     		ldr	r3, [r7, #4]
 13616 0204 DB6B     		ldr	r3, [r3, #60]
 13617              		.loc 1 6099 97
 13618 0206 DB00     		lsls	r3, r3, #3
 13619              		.loc 1 6099 62
 13620 0208 1A44     		add	r2, r2, r3
 13621              		.loc 1 6099 28
 13622 020a 7B68     		ldr	r3, [r7, #4]
 13623 020c 5A67     		str	r2, [r3, #116]
6100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   hfdcan->msgRam.RxFIFO1SA = hfdcan->msgRam.RxFIFO0SA + (hfdcan->Init.RxFifo0ElmtsNbr * hfdcan->Ini
 13624              		.loc 1 6100 44
 13625 020e 7B68     		ldr	r3, [r7, #4]
 13626 0210 5A6F     		ldr	r2, [r3, #116]
 13627              		.loc 1 6100 70
 13628 0212 7B68     		ldr	r3, [r7, #4]
 13629 0214 1B6C     		ldr	r3, [r3, #64]
 13630              		.loc 1 6100 101
 13631 0216 7968     		ldr	r1, [r7, #4]
 13632 0218 496C     		ldr	r1, [r1, #68]
 13633              		.loc 1 6100 87
 13634 021a 01FB03F3 		mul	r3, r1, r3
 13635              		.loc 1 6100 118
 13636 021e 9B00     		lsls	r3, r3, #2
 13637              		.loc 1 6100 55
 13638 0220 1A44     		add	r2, r2, r3
 13639              		.loc 1 6100 28
 13640 0222 7B68     		ldr	r3, [r7, #4]
 13641 0224 9A67     		str	r2, [r3, #120]
6101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   hfdcan->msgRam.RxBufferSA = hfdcan->msgRam.RxFIFO1SA + (hfdcan->Init.RxFifo1ElmtsNbr * hfdcan->In
 13642              		.loc 1 6101 45
 13643 0226 7B68     		ldr	r3, [r7, #4]
 13644 0228 9A6F     		ldr	r2, [r3, #120]
 13645              		.loc 1 6101 71
 13646 022a 7B68     		ldr	r3, [r7, #4]
 13647 022c 9B6C     		ldr	r3, [r3, #72]
 13648              		.loc 1 6101 102
 13649 022e 7968     		ldr	r1, [r7, #4]
 13650 0230 C96C     		ldr	r1, [r1, #76]
 13651              		.loc 1 6101 88
 13652 0232 01FB03F3 		mul	r3, r1, r3
 13653              		.loc 1 6101 119
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 365


 13654 0236 9B00     		lsls	r3, r3, #2
 13655              		.loc 1 6101 56
 13656 0238 1A44     		add	r2, r2, r3
 13657              		.loc 1 6101 29
 13658 023a 7B68     		ldr	r3, [r7, #4]
 13659 023c DA67     		str	r2, [r3, #124]
6102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   hfdcan->msgRam.TxEventFIFOSA = hfdcan->msgRam.RxBufferSA + (hfdcan->Init.RxBuffersNbr * hfdcan->I
 13660              		.loc 1 6102 48
 13661 023e 7B68     		ldr	r3, [r7, #4]
 13662 0240 DA6F     		ldr	r2, [r3, #124]
 13663              		.loc 1 6102 75
 13664 0242 7B68     		ldr	r3, [r7, #4]
 13665 0244 1B6D     		ldr	r3, [r3, #80]
 13666              		.loc 1 6102 103
 13667 0246 7968     		ldr	r1, [r7, #4]
 13668 0248 496D     		ldr	r1, [r1, #84]
 13669              		.loc 1 6102 89
 13670 024a 01FB03F3 		mul	r3, r1, r3
 13671              		.loc 1 6102 117
 13672 024e 9B00     		lsls	r3, r3, #2
 13673              		.loc 1 6102 60
 13674 0250 1A44     		add	r2, r2, r3
 13675              		.loc 1 6102 32
 13676 0252 7B68     		ldr	r3, [r7, #4]
 13677 0254 C3F88020 		str	r2, [r3, #128]
6103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   hfdcan->msgRam.TxBufferSA = hfdcan->msgRam.TxEventFIFOSA + (hfdcan->Init.TxEventsNbr * 2U * 4U);
 13678              		.loc 1 6103 45
 13679 0258 7B68     		ldr	r3, [r7, #4]
 13680 025a D3F88020 		ldr	r2, [r3, #128]
 13681              		.loc 1 6103 75
 13682 025e 7B68     		ldr	r3, [r7, #4]
 13683 0260 9B6D     		ldr	r3, [r3, #88]
 13684              		.loc 1 6103 93
 13685 0262 DB00     		lsls	r3, r3, #3
 13686              		.loc 1 6103 60
 13687 0264 1A44     		add	r2, r2, r3
 13688              		.loc 1 6103 29
 13689 0266 7B68     		ldr	r3, [r7, #4]
 13690 0268 C3F88420 		str	r2, [r3, #132]
6104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   hfdcan->msgRam.TxFIFOQSA = hfdcan->msgRam.TxBufferSA + (hfdcan->Init.TxBuffersNbr * hfdcan->Init.
 13691              		.loc 1 6104 44
 13692 026c 7B68     		ldr	r3, [r7, #4]
 13693 026e D3F88420 		ldr	r2, [r3, #132]
 13694              		.loc 1 6104 71
 13695 0272 7B68     		ldr	r3, [r7, #4]
 13696 0274 DB6D     		ldr	r3, [r3, #92]
 13697              		.loc 1 6104 99
 13698 0276 7968     		ldr	r1, [r7, #4]
 13699 0278 896E     		ldr	r1, [r1, #104]
 13700              		.loc 1 6104 85
 13701 027a 01FB03F3 		mul	r3, r1, r3
 13702              		.loc 1 6104 111
 13703 027e 9B00     		lsls	r3, r3, #2
 13704              		.loc 1 6104 56
 13705 0280 1A44     		add	r2, r2, r3
 13706              		.loc 1 6104 28
 13707 0282 7B68     		ldr	r3, [r7, #4]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 366


 13708 0284 C3F88820 		str	r2, [r3, #136]
6105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   hfdcan->msgRam.EndAddress = hfdcan->msgRam.TxFIFOQSA + (hfdcan->Init.TxFifoQueueElmtsNbr * hfdcan
 13709              		.loc 1 6106 45
 13710 0288 7B68     		ldr	r3, [r7, #4]
 13711 028a D3F88820 		ldr	r2, [r3, #136]
 13712              		.loc 1 6106 71
 13713 028e 7B68     		ldr	r3, [r7, #4]
 13714 0290 1B6E     		ldr	r3, [r3, #96]
 13715              		.loc 1 6106 106
 13716 0292 7968     		ldr	r1, [r7, #4]
 13717 0294 896E     		ldr	r1, [r1, #104]
 13718              		.loc 1 6106 92
 13719 0296 01FB03F3 		mul	r3, r1, r3
 13720              		.loc 1 6106 118
 13721 029a 9B00     		lsls	r3, r3, #2
 13722              		.loc 1 6106 56
 13723 029c 1A44     		add	r2, r2, r3
 13724              		.loc 1 6106 29
 13725 029e 7B68     		ldr	r3, [r7, #4]
 13726 02a0 C3F89020 		str	r2, [r3, #144]
6107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (hfdcan->msgRam.EndAddress > FDCAN_MESSAGE_RAM_END_ADDRESS) /* Last address of the Message RAM
 13727              		.loc 1 6108 21
 13728 02a4 7B68     		ldr	r3, [r7, #4]
 13729 02a6 D3F89030 		ldr	r3, [r3, #144]
 13730              		.loc 1 6108 6
 13731 02aa 044A     		ldr	r2, .L692+8
 13732 02ac 9342     		cmp	r3, r2
 13733 02ae 15D9     		bls	.L688
 13734 02b0 06E0     		b	.L693
 13735              	.L694:
 13736 02b2 00BF     		.align	2
 13737              	.L692:
 13738 02b4 0300FFFF 		.word	-65533
 13739 02b8 002B0010 		.word	268446464
 13740 02bc FCD30040 		.word	1073796092
 13741              	.L693:
6109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
6110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Update error code.
6111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****        Message RAM overflow */
6112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->ErrorCode |= HAL_FDCAN_ERROR_PARAM;
 13742              		.loc 1 6112 23
 13743 02c0 7B68     		ldr	r3, [r7, #4]
 13744 02c2 D3F89C30 		ldr	r3, [r3, #156]
 13745 02c6 43F02002 		orr	r2, r3, #32
 13746 02ca 7B68     		ldr	r3, [r7, #4]
 13747 02cc C3F89C20 		str	r2, [r3, #156]
6113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Change FDCAN state */
6115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     hfdcan->State = HAL_FDCAN_STATE_ERROR;
 13748              		.loc 1 6115 19
 13749 02d0 7B68     		ldr	r3, [r7, #4]
 13750 02d2 0322     		movs	r2, #3
 13751 02d4 83F89820 		strb	r2, [r3, #152]
6116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     return HAL_ERROR;
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 367


 13752              		.loc 1 6117 12
 13753 02d8 0123     		movs	r3, #1
 13754 02da 10E0     		b	.L689
 13755              	.L688:
6118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
6119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else
6120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
6121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     /* Flush the allocated Message RAM area */
6122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     for (RAMcounter = hfdcan->msgRam.StandardFilterSA; RAMcounter < hfdcan->msgRam.EndAddress; RAMc
 13756              		.loc 1 6122 21
 13757 02dc 7B68     		ldr	r3, [r7, #4]
 13758 02de DB6E     		ldr	r3, [r3, #108]
 13759 02e0 FB60     		str	r3, [r7, #12]
 13760              		.loc 1 6122 5
 13761 02e2 05E0     		b	.L690
 13762              	.L691:
6123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
6124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****       *(uint32_t *)(RAMcounter) = 0x00000000;
 13763              		.loc 1 6124 8 discriminator 3
 13764 02e4 FB68     		ldr	r3, [r7, #12]
 13765              		.loc 1 6124 33 discriminator 3
 13766 02e6 0022     		movs	r2, #0
 13767 02e8 1A60     		str	r2, [r3]
6122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 13768              		.loc 1 6122 107 discriminator 3
 13769 02ea FB68     		ldr	r3, [r7, #12]
 13770 02ec 0433     		adds	r3, r3, #4
 13771 02ee FB60     		str	r3, [r7, #12]
 13772              	.L690:
6122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 13773              		.loc 1 6122 83 discriminator 1
 13774 02f0 7B68     		ldr	r3, [r7, #4]
 13775 02f2 D3F89030 		ldr	r3, [r3, #144]
6122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     {
 13776              		.loc 1 6122 5 discriminator 1
 13777 02f6 FA68     		ldr	r2, [r7, #12]
 13778 02f8 9A42     		cmp	r2, r3
 13779 02fa F3D3     		bcc	.L691
6125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     }
6126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
6127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Return function status */
6129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   return HAL_OK;
 13780              		.loc 1 6129 10
 13781 02fc 0023     		movs	r3, #0
 13782              	.L689:
6130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 13783              		.loc 1 6130 1
 13784 02fe 1846     		mov	r0, r3
 13785 0300 1437     		adds	r7, r7, #20
 13786              	.LCFI727:
 13787              		.cfi_def_cfa_offset 4
 13788 0302 BD46     		mov	sp, r7
 13789              	.LCFI728:
 13790              		.cfi_def_cfa_register 13
 13791              		@ sp needed
 13792 0304 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 368


 13793              	.LCFI729:
 13794              		.cfi_restore 7
 13795              		.cfi_def_cfa_offset 0
 13796 0308 7047     		bx	lr
 13797              		.cfi_endproc
 13798              	.LFE455:
 13800 030a 00BF     		.section	.text.FDCAN_CopyMessageToRAM,"ax",%progbits
 13801              		.align	1
 13802              		.syntax unified
 13803              		.thumb
 13804              		.thumb_func
 13806              	FDCAN_CopyMessageToRAM:
 13807              	.LFB456:
6131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** /**
6133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @brief  Copy Tx message to the message RAM.
6134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  hfdcan pointer to an FDCAN_HandleTypeDef structure that contains
6135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *         the configuration information for the specified FDCAN.
6136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  pTxHeader pointer to a FDCAN_TxHeaderTypeDef structure.
6137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  pTxData pointer to a buffer containing the payload of the Tx frame.
6138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @param  BufferIndex index of the buffer to be configured.
6139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   * @retval HAL status
6140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****  */
6141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** static void FDCAN_CopyMessageToRAM(FDCAN_HandleTypeDef *hfdcan, FDCAN_TxHeaderTypeDef *pTxHeader, u
6142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** {
 13808              		.loc 1 6142 1
 13809              		.cfi_startproc
 13810              		@ args = 0, pretend = 0, frame = 32
 13811              		@ frame_needed = 1, uses_anonymous_args = 0
 13812              		@ link register save eliminated.
 13813 0000 80B4     		push	{r7}
 13814              	.LCFI730:
 13815              		.cfi_def_cfa_offset 4
 13816              		.cfi_offset 7, -4
 13817 0002 89B0     		sub	sp, sp, #36
 13818              	.LCFI731:
 13819              		.cfi_def_cfa_offset 40
 13820 0004 00AF     		add	r7, sp, #0
 13821              	.LCFI732:
 13822              		.cfi_def_cfa_register 7
 13823 0006 F860     		str	r0, [r7, #12]
 13824 0008 B960     		str	r1, [r7, #8]
 13825 000a 7A60     		str	r2, [r7, #4]
 13826 000c 3B60     		str	r3, [r7]
6143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t TxElementW1;
6144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t TxElementW2;
6145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t *TxAddress;
6146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   uint32_t ByteCounter;
6147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Build first word of Tx header element */
6149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   if (pTxHeader->IdType == FDCAN_STANDARD_ID)
 13827              		.loc 1 6149 16
 13828 000e BB68     		ldr	r3, [r7, #8]
 13829 0010 5B68     		ldr	r3, [r3, #4]
 13830              		.loc 1 6149 6
 13831 0012 002B     		cmp	r3, #0
 13832 0014 0AD1     		bne	.L696
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 369


6150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
6151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     TxElementW1 = (pTxHeader->ErrorStateIndicator |
 13833              		.loc 1 6151 29
 13834 0016 BB68     		ldr	r3, [r7, #8]
 13835 0018 1A69     		ldr	r2, [r3, #16]
6152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                    FDCAN_STANDARD_ID |
6153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                    pTxHeader->TxFrameType |
 13836              		.loc 1 6153 29
 13837 001a BB68     		ldr	r3, [r7, #8]
 13838 001c 9B68     		ldr	r3, [r3, #8]
6152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                    FDCAN_STANDARD_ID |
 13839              		.loc 1 6152 38
 13840 001e 1A43     		orrs	r2, r2, r3
6154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                    (pTxHeader->Identifier << 18));
 13841              		.loc 1 6154 30
 13842 0020 BB68     		ldr	r3, [r7, #8]
 13843 0022 1B68     		ldr	r3, [r3]
 13844              		.loc 1 6154 43
 13845 0024 9B04     		lsls	r3, r3, #18
6151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                    FDCAN_STANDARD_ID |
 13846              		.loc 1 6151 17
 13847 0026 1343     		orrs	r3, r3, r2
 13848 0028 FB61     		str	r3, [r7, #28]
 13849 002a 0AE0     		b	.L697
 13850              	.L696:
6155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
6156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   else /* pTxHeader->IdType == FDCAN_EXTENDED_ID */
6157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
6158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     TxElementW1 = (pTxHeader->ErrorStateIndicator |
 13851              		.loc 1 6158 29
 13852 002c BB68     		ldr	r3, [r7, #8]
 13853 002e 1A69     		ldr	r2, [r3, #16]
6159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                    FDCAN_EXTENDED_ID |
6160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                    pTxHeader->TxFrameType |
 13854              		.loc 1 6160 29
 13855 0030 BB68     		ldr	r3, [r7, #8]
 13856 0032 9B68     		ldr	r3, [r3, #8]
6159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                    FDCAN_EXTENDED_ID |
 13857              		.loc 1 6159 38
 13858 0034 1A43     		orrs	r2, r2, r3
6161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                    pTxHeader->Identifier);
 13859              		.loc 1 6161 29
 13860 0036 BB68     		ldr	r3, [r7, #8]
 13861 0038 1B68     		ldr	r3, [r3]
6160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                    pTxHeader->Identifier);
 13862              		.loc 1 6160 43
 13863 003a 1343     		orrs	r3, r3, r2
6158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                    FDCAN_EXTENDED_ID |
 13864              		.loc 1 6158 17
 13865 003c 43F08043 		orr	r3, r3, #1073741824
 13866 0040 FB61     		str	r3, [r7, #28]
 13867              	.L697:
6162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
6163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Build second word of Tx header element */
6165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   TxElementW2 = ((pTxHeader->MessageMarker << 24) |
 13868              		.loc 1 6165 28
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 370


 13869 0042 BB68     		ldr	r3, [r7, #8]
 13870 0044 1B6A     		ldr	r3, [r3, #32]
 13871              		.loc 1 6165 44
 13872 0046 1A06     		lsls	r2, r3, #24
6166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                  pTxHeader->TxEventFifoControl |
 13873              		.loc 1 6166 27
 13874 0048 BB68     		ldr	r3, [r7, #8]
 13875 004a DB69     		ldr	r3, [r3, #28]
6165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                  pTxHeader->TxEventFifoControl |
 13876              		.loc 1 6165 51
 13877 004c 1A43     		orrs	r2, r2, r3
6167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                  pTxHeader->FDFormat |
 13878              		.loc 1 6167 27
 13879 004e BB68     		ldr	r3, [r7, #8]
 13880 0050 9B69     		ldr	r3, [r3, #24]
6166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                  pTxHeader->TxEventFifoControl |
 13881              		.loc 1 6166 48
 13882 0052 1A43     		orrs	r2, r2, r3
6168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                  pTxHeader->BitRateSwitch |
 13883              		.loc 1 6168 27
 13884 0054 BB68     		ldr	r3, [r7, #8]
 13885 0056 5B69     		ldr	r3, [r3, #20]
6167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                  pTxHeader->FDFormat |
 13886              		.loc 1 6167 38
 13887 0058 1A43     		orrs	r2, r2, r3
6169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                  pTxHeader->DataLength);
 13888              		.loc 1 6169 27
 13889 005a BB68     		ldr	r3, [r7, #8]
 13890 005c DB68     		ldr	r3, [r3, #12]
6165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                  pTxHeader->TxEventFifoControl |
 13891              		.loc 1 6165 15
 13892 005e 1343     		orrs	r3, r3, r2
 13893 0060 3B61     		str	r3, [r7, #16]
6170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Calculate Tx element address */
6172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   TxAddress = (uint32_t *)(hfdcan->msgRam.TxBufferSA + (BufferIndex * hfdcan->Init.TxElmtSize * 4U)
 13894              		.loc 1 6172 42
 13895 0062 FB68     		ldr	r3, [r7, #12]
 13896 0064 D3F88420 		ldr	r2, [r3, #132]
 13897              		.loc 1 6172 83
 13898 0068 FB68     		ldr	r3, [r7, #12]
 13899 006a 9B6E     		ldr	r3, [r3, #104]
 13900              		.loc 1 6172 69
 13901 006c 3968     		ldr	r1, [r7]
 13902 006e 01FB03F3 		mul	r3, r1, r3
 13903              		.loc 1 6172 95
 13904 0072 9B00     		lsls	r3, r3, #2
 13905              		.loc 1 6172 54
 13906 0074 1344     		add	r3, r3, r2
 13907              		.loc 1 6172 13
 13908 0076 BB61     		str	r3, [r7, #24]
6173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Write Tx element header to the message RAM */
6175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *TxAddress = TxElementW1;
 13909              		.loc 1 6175 14
 13910 0078 BB69     		ldr	r3, [r7, #24]
 13911 007a FA69     		ldr	r2, [r7, #28]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 371


 13912 007c 1A60     		str	r2, [r3]
6176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   TxAddress++;
 13913              		.loc 1 6176 12
 13914 007e BB69     		ldr	r3, [r7, #24]
 13915 0080 0433     		adds	r3, r3, #4
 13916 0082 BB61     		str	r3, [r7, #24]
6177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   *TxAddress = TxElementW2;
 13917              		.loc 1 6177 14
 13918 0084 BB69     		ldr	r3, [r7, #24]
 13919 0086 3A69     		ldr	r2, [r7, #16]
 13920 0088 1A60     		str	r2, [r3]
6178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   TxAddress++;
 13921              		.loc 1 6178 12
 13922 008a BB69     		ldr	r3, [r7, #24]
 13923 008c 0433     		adds	r3, r3, #4
 13924 008e BB61     		str	r3, [r7, #24]
6179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** 
6180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   /* Write Tx payload to the message RAM */
6181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   for (ByteCounter = 0; ByteCounter < DLCtoBytes[pTxHeader->DataLength >> 16]; ByteCounter += 4U)
 13925              		.loc 1 6181 20
 13926 0090 0023     		movs	r3, #0
 13927 0092 7B61     		str	r3, [r7, #20]
 13928              		.loc 1 6181 3
 13929 0094 20E0     		b	.L698
 13930              	.L699:
6182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
6183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     *TxAddress = (((uint32_t)pTxData[ByteCounter + 3U] << 24) |
 13931              		.loc 1 6183 37 discriminator 3
 13932 0096 7B69     		ldr	r3, [r7, #20]
 13933 0098 0333     		adds	r3, r3, #3
 13934 009a 7A68     		ldr	r2, [r7, #4]
 13935 009c 1344     		add	r3, r3, r2
 13936 009e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13937              		.loc 1 6183 56 discriminator 3
 13938 00a0 1A06     		lsls	r2, r3, #24
6184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                   ((uint32_t)pTxData[ByteCounter + 2U] << 16) |
 13939              		.loc 1 6184 37 discriminator 3
 13940 00a2 7B69     		ldr	r3, [r7, #20]
 13941 00a4 0233     		adds	r3, r3, #2
 13942 00a6 7968     		ldr	r1, [r7, #4]
 13943 00a8 0B44     		add	r3, r3, r1
 13944 00aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13945              		.loc 1 6184 56 discriminator 3
 13946 00ac 1B04     		lsls	r3, r3, #16
6183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                   ((uint32_t)pTxData[ByteCounter + 2U] << 16) |
 13947              		.loc 1 6183 63 discriminator 3
 13948 00ae 1A43     		orrs	r2, r2, r3
6185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                   ((uint32_t)pTxData[ByteCounter + 1U] << 8) |
 13949              		.loc 1 6185 37 discriminator 3
 13950 00b0 7B69     		ldr	r3, [r7, #20]
 13951 00b2 0133     		adds	r3, r3, #1
 13952 00b4 7968     		ldr	r1, [r7, #4]
 13953 00b6 0B44     		add	r3, r3, r1
 13954 00b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13955              		.loc 1 6185 56 discriminator 3
 13956 00ba 1B02     		lsls	r3, r3, #8
6184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                   ((uint32_t)pTxData[ByteCounter + 2U] << 16) |
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 372


 13957              		.loc 1 6184 63 discriminator 3
 13958 00bc 1343     		orrs	r3, r3, r2
6186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                   (uint32_t)pTxData[ByteCounter]);
 13959              		.loc 1 6186 36 discriminator 3
 13960 00be 7968     		ldr	r1, [r7, #4]
 13961 00c0 7A69     		ldr	r2, [r7, #20]
 13962 00c2 0A44     		add	r2, r2, r1
 13963 00c4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
6185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                   ((uint32_t)pTxData[ByteCounter + 1U] << 8) |
 13964              		.loc 1 6185 62 discriminator 3
 13965 00c6 1A43     		orrs	r2, r2, r3
6183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****                   ((uint32_t)pTxData[ByteCounter + 2U] << 16) |
 13966              		.loc 1 6183 16 discriminator 3
 13967 00c8 BB69     		ldr	r3, [r7, #24]
 13968 00ca 1A60     		str	r2, [r3]
6187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****     TxAddress++;
 13969              		.loc 1 6187 14 discriminator 3
 13970 00cc BB69     		ldr	r3, [r7, #24]
 13971 00ce 0433     		adds	r3, r3, #4
 13972 00d0 BB61     		str	r3, [r7, #24]
6181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 13973              		.loc 1 6181 92 discriminator 3
 13974 00d2 7B69     		ldr	r3, [r7, #20]
 13975 00d4 0433     		adds	r3, r3, #4
 13976 00d6 7B61     		str	r3, [r7, #20]
 13977              	.L698:
6181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 13978              		.loc 1 6181 59 discriminator 1
 13979 00d8 BB68     		ldr	r3, [r7, #8]
 13980 00da DB68     		ldr	r3, [r3, #12]
6181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 13981              		.loc 1 6181 72 discriminator 1
 13982 00dc 1B0C     		lsrs	r3, r3, #16
6181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 13983              		.loc 1 6181 49 discriminator 1
 13984 00de 064A     		ldr	r2, .L700
 13985 00e0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13986 00e2 1A46     		mov	r2, r3
6181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   {
 13987              		.loc 1 6181 3 discriminator 1
 13988 00e4 7B69     		ldr	r3, [r7, #20]
 13989 00e6 9342     		cmp	r3, r2
 13990 00e8 D5D3     		bcc	.L699
6188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c ****   }
6189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_fdcan.c **** }
 13991              		.loc 1 6189 1
 13992 00ea 00BF     		nop
 13993 00ec 00BF     		nop
 13994 00ee 2437     		adds	r7, r7, #36
 13995              	.LCFI733:
 13996              		.cfi_def_cfa_offset 4
 13997 00f0 BD46     		mov	sp, r7
 13998              	.LCFI734:
 13999              		.cfi_def_cfa_register 13
 14000              		@ sp needed
 14001 00f2 5DF8047B 		ldr	r7, [sp], #4
 14002              	.LCFI735:
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 373


 14003              		.cfi_restore 7
 14004              		.cfi_def_cfa_offset 0
 14005 00f6 7047     		bx	lr
 14006              	.L701:
 14007              		.align	2
 14008              	.L700:
 14009 00f8 00000000 		.word	DLCtoBytes
 14010              		.cfi_endproc
 14011              	.LFE456:
 14013              		.text
 14014              	.Letext0:
 14015              		.file 3 "/Users/seojisu/Library/Arm-GCC-xPack/arm-none-eabi/include/machine/_default_types.h"
 14016              		.file 4 "/Users/seojisu/Library/Arm-GCC-xPack/arm-none-eabi/include/sys/_stdint.h"
 14017              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 14018              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"
 14019              		.file 7 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 14020              		.file 8 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_fdcan.h"
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 374


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_hal_fdcan.c
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:19     .rodata.DLCtoBytes:0000000000000000 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:22     .rodata.DLCtoBytes:0000000000000000 DLCtoBytes
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:26     .rodata:0000000000000000 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:48     .text.HAL_FDCAN_Init:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:54     .text.HAL_FDCAN_Init:0000000000000000 HAL_FDCAN_Init
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:426    .text.HAL_FDCAN_Init:0000000000000270 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:12521  .text.HAL_FDCAN_ClockCalibrationCallback:0000000000000000 HAL_FDCAN_ClockCalibrationCallback
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:12564  .text.HAL_FDCAN_TxEventFifoCallback:0000000000000000 HAL_FDCAN_TxEventFifoCallback
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:12607  .text.HAL_FDCAN_RxFifo0Callback:0000000000000000 HAL_FDCAN_RxFifo0Callback
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:12650  .text.HAL_FDCAN_RxFifo1Callback:0000000000000000 HAL_FDCAN_RxFifo1Callback
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:12693  .text.HAL_FDCAN_TxFifoEmptyCallback:0000000000000000 HAL_FDCAN_TxFifoEmptyCallback
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:12735  .text.HAL_FDCAN_TxBufferCompleteCallback:0000000000000000 HAL_FDCAN_TxBufferCompleteCallback
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:12778  .text.HAL_FDCAN_TxBufferAbortCallback:0000000000000000 HAL_FDCAN_TxBufferAbortCallback
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:12821  .text.HAL_FDCAN_RxBufferNewMessageCallback:0000000000000000 HAL_FDCAN_RxBufferNewMessageCallback
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:12947  .text.HAL_FDCAN_HighPriorityMessageCallback:0000000000000000 HAL_FDCAN_HighPriorityMessageCallback
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:12863  .text.HAL_FDCAN_TimestampWraparoundCallback:0000000000000000 HAL_FDCAN_TimestampWraparoundCallback
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:12905  .text.HAL_FDCAN_TimeoutOccurredCallback:0000000000000000 HAL_FDCAN_TimeoutOccurredCallback
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:12989  .text.HAL_FDCAN_ErrorCallback:0000000000000000 HAL_FDCAN_ErrorCallback
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:13031  .text.HAL_FDCAN_ErrorStatusCallback:0000000000000000 HAL_FDCAN_ErrorStatusCallback
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:13074  .text.HAL_FDCAN_TT_ScheduleSyncCallback:0000000000000000 HAL_FDCAN_TT_ScheduleSyncCallback
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:13117  .text.HAL_FDCAN_TT_TimeMarkCallback:0000000000000000 HAL_FDCAN_TT_TimeMarkCallback
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:13160  .text.HAL_FDCAN_TT_StopWatchCallback:0000000000000000 HAL_FDCAN_TT_StopWatchCallback
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:13204  .text.HAL_FDCAN_TT_GlobalTimeCallback:0000000000000000 HAL_FDCAN_TT_GlobalTimeCallback
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:843    .text.HAL_FDCAN_MspInit:0000000000000000 HAL_FDCAN_MspInit
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:448    .text.HAL_FDCAN_Init:00000000000002c0 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:13337  .text.FDCAN_CalcultateRamBlockAddresses:0000000000000000 FDCAN_CalcultateRamBlockAddresses
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:742    .text.HAL_FDCAN_Init:00000000000004a0 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:747    .text.HAL_FDCAN_DeInit:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:753    .text.HAL_FDCAN_DeInit:0000000000000000 HAL_FDCAN_DeInit
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:5527   .text.HAL_FDCAN_Stop:0000000000000000 HAL_FDCAN_Stop
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:832    .text.HAL_FDCAN_DeInit:0000000000000060 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:885    .text.HAL_FDCAN_MspDeInit:0000000000000000 HAL_FDCAN_MspDeInit
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:837    .text.HAL_FDCAN_MspInit:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:879    .text.HAL_FDCAN_MspDeInit:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:921    .text.HAL_FDCAN_EnterPowerDownMode:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:927    .text.HAL_FDCAN_EnterPowerDownMode:0000000000000000 HAL_FDCAN_EnterPowerDownMode
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:1009   .text.HAL_FDCAN_ExitPowerDownMode:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:1015   .text.HAL_FDCAN_ExitPowerDownMode:0000000000000000 HAL_FDCAN_ExitPowerDownMode
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:1105   .text.HAL_FDCAN_RegisterCallback:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:1111   .text.HAL_FDCAN_RegisterCallback:0000000000000000 HAL_FDCAN_RegisterCallback
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:1164   .text.HAL_FDCAN_RegisterCallback:0000000000000044 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:1172   .text.HAL_FDCAN_RegisterCallback:0000000000000064 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:1314   .text.HAL_FDCAN_UnRegisterCallback:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:1320   .text.HAL_FDCAN_UnRegisterCallback:0000000000000000 HAL_FDCAN_UnRegisterCallback
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:1358   .text.HAL_FDCAN_UnRegisterCallback:0000000000000028 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:1366   .text.HAL_FDCAN_UnRegisterCallback:0000000000000048 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:1506   .text.HAL_FDCAN_UnRegisterCallback:0000000000000114 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:1518   .text.HAL_FDCAN_RegisterClockCalibrationCallback:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:1524   .text.HAL_FDCAN_RegisterClockCalibrationCallback:0000000000000000 HAL_FDCAN_RegisterClockCalibrationCallback
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:1604   .text.HAL_FDCAN_UnRegisterClockCalibrationCallback:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:1610   .text.HAL_FDCAN_UnRegisterClockCalibrationCallback:0000000000000000 HAL_FDCAN_UnRegisterClockCalibrationCallback
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:1673   .text.HAL_FDCAN_UnRegisterClockCalibrationCallback:0000000000000044 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:1678   .text.HAL_FDCAN_RegisterTxEventFifoCallback:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:1684   .text.HAL_FDCAN_RegisterTxEventFifoCallback:0000000000000000 HAL_FDCAN_RegisterTxEventFifoCallback
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:1764   .text.HAL_FDCAN_UnRegisterTxEventFifoCallback:0000000000000000 $t
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 375


/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:1770   .text.HAL_FDCAN_UnRegisterTxEventFifoCallback:0000000000000000 HAL_FDCAN_UnRegisterTxEventFifoCallback
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:1833   .text.HAL_FDCAN_UnRegisterTxEventFifoCallback:0000000000000044 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:1838   .text.HAL_FDCAN_RegisterRxFifo0Callback:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:1844   .text.HAL_FDCAN_RegisterRxFifo0Callback:0000000000000000 HAL_FDCAN_RegisterRxFifo0Callback
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:1924   .text.HAL_FDCAN_UnRegisterRxFifo0Callback:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:1930   .text.HAL_FDCAN_UnRegisterRxFifo0Callback:0000000000000000 HAL_FDCAN_UnRegisterRxFifo0Callback
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:1993   .text.HAL_FDCAN_UnRegisterRxFifo0Callback:0000000000000044 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:1998   .text.HAL_FDCAN_RegisterRxFifo1Callback:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:2004   .text.HAL_FDCAN_RegisterRxFifo1Callback:0000000000000000 HAL_FDCAN_RegisterRxFifo1Callback
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:2084   .text.HAL_FDCAN_UnRegisterRxFifo1Callback:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:2090   .text.HAL_FDCAN_UnRegisterRxFifo1Callback:0000000000000000 HAL_FDCAN_UnRegisterRxFifo1Callback
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:2153   .text.HAL_FDCAN_UnRegisterRxFifo1Callback:0000000000000044 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:2158   .text.HAL_FDCAN_RegisterTxBufferCompleteCallback:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:2164   .text.HAL_FDCAN_RegisterTxBufferCompleteCallback:0000000000000000 HAL_FDCAN_RegisterTxBufferCompleteCallback
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:2244   .text.HAL_FDCAN_UnRegisterTxBufferCompleteCallback:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:2250   .text.HAL_FDCAN_UnRegisterTxBufferCompleteCallback:0000000000000000 HAL_FDCAN_UnRegisterTxBufferCompleteCallback
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:2313   .text.HAL_FDCAN_UnRegisterTxBufferCompleteCallback:0000000000000044 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:2318   .text.HAL_FDCAN_RegisterTxBufferAbortCallback:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:2324   .text.HAL_FDCAN_RegisterTxBufferAbortCallback:0000000000000000 HAL_FDCAN_RegisterTxBufferAbortCallback
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:2404   .text.HAL_FDCAN_UnRegisterTxBufferAbortCallback:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:2410   .text.HAL_FDCAN_UnRegisterTxBufferAbortCallback:0000000000000000 HAL_FDCAN_UnRegisterTxBufferAbortCallback
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:2473   .text.HAL_FDCAN_UnRegisterTxBufferAbortCallback:0000000000000044 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:2478   .text.HAL_FDCAN_RegisterErrorStatusCallback:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:2484   .text.HAL_FDCAN_RegisterErrorStatusCallback:0000000000000000 HAL_FDCAN_RegisterErrorStatusCallback
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:2564   .text.HAL_FDCAN_UnRegisterErrorStatusCallback:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:2570   .text.HAL_FDCAN_UnRegisterErrorStatusCallback:0000000000000000 HAL_FDCAN_UnRegisterErrorStatusCallback
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:2633   .text.HAL_FDCAN_UnRegisterErrorStatusCallback:0000000000000044 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:2638   .text.HAL_FDCAN_RegisterTTScheduleSyncCallback:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:2644   .text.HAL_FDCAN_RegisterTTScheduleSyncCallback:0000000000000000 HAL_FDCAN_RegisterTTScheduleSyncCallback
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:2724   .text.HAL_FDCAN_UnRegisterTTScheduleSyncCallback:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:2730   .text.HAL_FDCAN_UnRegisterTTScheduleSyncCallback:0000000000000000 HAL_FDCAN_UnRegisterTTScheduleSyncCallback
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:2793   .text.HAL_FDCAN_UnRegisterTTScheduleSyncCallback:0000000000000044 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:2798   .text.HAL_FDCAN_RegisterTTTimeMarkCallback:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:2804   .text.HAL_FDCAN_RegisterTTTimeMarkCallback:0000000000000000 HAL_FDCAN_RegisterTTTimeMarkCallback
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:2884   .text.HAL_FDCAN_UnRegisterTTTimeMarkCallback:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:2890   .text.HAL_FDCAN_UnRegisterTTTimeMarkCallback:0000000000000000 HAL_FDCAN_UnRegisterTTTimeMarkCallback
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:2953   .text.HAL_FDCAN_UnRegisterTTTimeMarkCallback:0000000000000044 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:2958   .text.HAL_FDCAN_RegisterTTStopWatchCallback:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:2964   .text.HAL_FDCAN_RegisterTTStopWatchCallback:0000000000000000 HAL_FDCAN_RegisterTTStopWatchCallback
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:3044   .text.HAL_FDCAN_UnRegisterTTStopWatchCallback:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:3050   .text.HAL_FDCAN_UnRegisterTTStopWatchCallback:0000000000000000 HAL_FDCAN_UnRegisterTTStopWatchCallback
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:3113   .text.HAL_FDCAN_UnRegisterTTStopWatchCallback:0000000000000044 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:3118   .text.HAL_FDCAN_RegisterTTGlobalTimeCallback:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:3124   .text.HAL_FDCAN_RegisterTTGlobalTimeCallback:0000000000000000 HAL_FDCAN_RegisterTTGlobalTimeCallback
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:3204   .text.HAL_FDCAN_UnRegisterTTGlobalTimeCallback:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:3210   .text.HAL_FDCAN_UnRegisterTTGlobalTimeCallback:0000000000000000 HAL_FDCAN_UnRegisterTTGlobalTimeCallback
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:3273   .text.HAL_FDCAN_UnRegisterTTGlobalTimeCallback:0000000000000044 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:3278   .text.HAL_FDCAN_ConfigClockCalibration:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:3284   .text.HAL_FDCAN_ConfigClockCalibration:0000000000000000 HAL_FDCAN_ConfigClockCalibration
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:3414   .text.HAL_FDCAN_ConfigClockCalibration:00000000000000bc $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:3422   .text.HAL_FDCAN_GetClockCalibrationState:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:3428   .text.HAL_FDCAN_GetClockCalibrationState:0000000000000000 HAL_FDCAN_GetClockCalibrationState
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:3468   .text.HAL_FDCAN_GetClockCalibrationState:000000000000001c $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:3473   .text.HAL_FDCAN_ResetClockCalibrationState:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:3479   .text.HAL_FDCAN_ResetClockCalibrationState:0000000000000000 HAL_FDCAN_ResetClockCalibrationState
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:3557   .text.HAL_FDCAN_ResetClockCalibrationState:0000000000000060 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:3563   .text.HAL_FDCAN_GetClockCalibrationCounter:0000000000000000 $t
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 376


/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:3569   .text.HAL_FDCAN_GetClockCalibrationCounter:0000000000000000 HAL_FDCAN_GetClockCalibrationCounter
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:3635   .text.HAL_FDCAN_GetClockCalibrationCounter:0000000000000040 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:3640   .text.HAL_FDCAN_ConfigFilter:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:3646   .text.HAL_FDCAN_ConfigFilter:0000000000000000 HAL_FDCAN_ConfigFilter
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:3847   .text.HAL_FDCAN_ConfigGlobalFilter:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:3853   .text.HAL_FDCAN_ConfigGlobalFilter:0000000000000000 HAL_FDCAN_ConfigGlobalFilter
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:3933   .text.HAL_FDCAN_ConfigExtendedIdMask:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:3939   .text.HAL_FDCAN_ConfigExtendedIdMask:0000000000000000 HAL_FDCAN_ConfigExtendedIdMask
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:4002   .text.HAL_FDCAN_ConfigRxFifoOverwrite:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:4008   .text.HAL_FDCAN_ConfigRxFifoOverwrite:0000000000000000 HAL_FDCAN_ConfigRxFifoOverwrite
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:4093   .text.HAL_FDCAN_ConfigFifoWatermark:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:4099   .text.HAL_FDCAN_ConfigFifoWatermark:0000000000000000 HAL_FDCAN_ConfigFifoWatermark
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:4203   .text.HAL_FDCAN_ConfigRamWatchdog:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:4209   .text.HAL_FDCAN_ConfigRamWatchdog:0000000000000000 HAL_FDCAN_ConfigRamWatchdog
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:4276   .text.HAL_FDCAN_ConfigTimestampCounter:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:4282   .text.HAL_FDCAN_ConfigTimestampCounter:0000000000000000 HAL_FDCAN_ConfigTimestampCounter
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:4349   .text.HAL_FDCAN_EnableTimestampCounter:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:4355   .text.HAL_FDCAN_EnableTimestampCounter:0000000000000000 HAL_FDCAN_EnableTimestampCounter
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:4422   .text.HAL_FDCAN_DisableTimestampCounter:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:4428   .text.HAL_FDCAN_DisableTimestampCounter:0000000000000000 HAL_FDCAN_DisableTimestampCounter
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:4492   .text.HAL_FDCAN_GetTimestampCounter:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:4498   .text.HAL_FDCAN_GetTimestampCounter:0000000000000000 HAL_FDCAN_GetTimestampCounter
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:4541   .text.HAL_FDCAN_ResetTimestampCounter:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:4547   .text.HAL_FDCAN_ResetTimestampCounter:0000000000000000 HAL_FDCAN_ResetTimestampCounter
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:4611   .text.HAL_FDCAN_ConfigTimeoutCounter:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:4617   .text.HAL_FDCAN_ConfigTimeoutCounter:0000000000000000 HAL_FDCAN_ConfigTimeoutCounter
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:4689   .text.HAL_FDCAN_EnableTimeoutCounter:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:4695   .text.HAL_FDCAN_EnableTimeoutCounter:0000000000000000 HAL_FDCAN_EnableTimeoutCounter
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:4759   .text.HAL_FDCAN_DisableTimeoutCounter:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:4765   .text.HAL_FDCAN_DisableTimeoutCounter:0000000000000000 HAL_FDCAN_DisableTimeoutCounter
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:4829   .text.HAL_FDCAN_GetTimeoutCounter:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:4835   .text.HAL_FDCAN_GetTimeoutCounter:0000000000000000 HAL_FDCAN_GetTimeoutCounter
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:4878   .text.HAL_FDCAN_ResetTimeoutCounter:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:4884   .text.HAL_FDCAN_ResetTimeoutCounter:0000000000000000 HAL_FDCAN_ResetTimeoutCounter
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:4948   .text.HAL_FDCAN_ConfigTxDelayCompensation:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:4954   .text.HAL_FDCAN_ConfigTxDelayCompensation:0000000000000000 HAL_FDCAN_ConfigTxDelayCompensation
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:5023   .text.HAL_FDCAN_EnableTxDelayCompensation:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:5029   .text.HAL_FDCAN_EnableTxDelayCompensation:0000000000000000 HAL_FDCAN_EnableTxDelayCompensation
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:5093   .text.HAL_FDCAN_DisableTxDelayCompensation:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:5099   .text.HAL_FDCAN_DisableTxDelayCompensation:0000000000000000 HAL_FDCAN_DisableTxDelayCompensation
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:5163   .text.HAL_FDCAN_EnableISOMode:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:5169   .text.HAL_FDCAN_EnableISOMode:0000000000000000 HAL_FDCAN_EnableISOMode
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:5233   .text.HAL_FDCAN_DisableISOMode:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:5239   .text.HAL_FDCAN_DisableISOMode:0000000000000000 HAL_FDCAN_DisableISOMode
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:5303   .text.HAL_FDCAN_EnableEdgeFiltering:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:5309   .text.HAL_FDCAN_EnableEdgeFiltering:0000000000000000 HAL_FDCAN_EnableEdgeFiltering
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:5373   .text.HAL_FDCAN_DisableEdgeFiltering:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:5379   .text.HAL_FDCAN_DisableEdgeFiltering:0000000000000000 HAL_FDCAN_DisableEdgeFiltering
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:5443   .text.HAL_FDCAN_Start:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:5449   .text.HAL_FDCAN_Start:0000000000000000 HAL_FDCAN_Start
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:5521   .text.HAL_FDCAN_Stop:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:5693   .text.HAL_FDCAN_AddMessageToTxFifoQ:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:5699   .text.HAL_FDCAN_AddMessageToTxFifoQ:0000000000000000 HAL_FDCAN_AddMessageToTxFifoQ
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:13806  .text.FDCAN_CopyMessageToRAM:0000000000000000 FDCAN_CopyMessageToRAM
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:5825   .text.HAL_FDCAN_AddMessageToTxBuffer:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:5831   .text.HAL_FDCAN_AddMessageToTxBuffer:0000000000000000 HAL_FDCAN_AddMessageToTxBuffer
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:6012   .text.HAL_FDCAN_EnableTxBufferRequest:0000000000000000 $t
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 377


/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:6018   .text.HAL_FDCAN_EnableTxBufferRequest:0000000000000000 HAL_FDCAN_EnableTxBufferRequest
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:6081   .text.HAL_FDCAN_GetLatestTxFifoQRequestBuffer:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:6087   .text.HAL_FDCAN_GetLatestTxFifoQRequestBuffer:0000000000000000 HAL_FDCAN_GetLatestTxFifoQRequestBuffer
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:6126   .text.HAL_FDCAN_AbortTxRequest:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:6132   .text.HAL_FDCAN_AbortTxRequest:0000000000000000 HAL_FDCAN_AbortTxRequest
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:6195   .text.HAL_FDCAN_GetRxMessage:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:6201   .text.HAL_FDCAN_GetRxMessage:0000000000000000 HAL_FDCAN_GetRxMessage
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:6691   .text.HAL_FDCAN_GetRxMessage:00000000000002d8 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:6696   .text.HAL_FDCAN_GetTxEvent:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:6702   .text.HAL_FDCAN_GetTxEvent:0000000000000000 HAL_FDCAN_GetTxEvent
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:6928   .text.HAL_FDCAN_GetHighPriorityMessageStatus:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:6934   .text.HAL_FDCAN_GetHighPriorityMessageStatus:0000000000000000 HAL_FDCAN_GetHighPriorityMessageStatus
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:7015   .text.HAL_FDCAN_GetProtocolStatus:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:7021   .text.HAL_FDCAN_GetProtocolStatus:0000000000000000 HAL_FDCAN_GetProtocolStatus
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:7141   .text.HAL_FDCAN_GetErrorCounters:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:7147   .text.HAL_FDCAN_GetErrorCounters:0000000000000000 HAL_FDCAN_GetErrorCounters
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:7219   .text.HAL_FDCAN_IsRxBufferMessageAvailable:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:7225   .text.HAL_FDCAN_IsRxBufferMessageAvailable:0000000000000000 HAL_FDCAN_IsRxBufferMessageAvailable
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:7336   .text.HAL_FDCAN_IsTxBufferMessagePending:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:7342   .text.HAL_FDCAN_IsTxBufferMessagePending:0000000000000000 HAL_FDCAN_IsTxBufferMessagePending
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:7397   .text.HAL_FDCAN_GetRxFifoFillLevel:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:7403   .text.HAL_FDCAN_GetRxFifoFillLevel:0000000000000000 HAL_FDCAN_GetRxFifoFillLevel
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:7465   .text.HAL_FDCAN_GetTxFifoFreeLevel:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:7471   .text.HAL_FDCAN_GetTxFifoFreeLevel:0000000000000000 HAL_FDCAN_GetTxFifoFreeLevel
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:7517   .text.HAL_FDCAN_IsRestrictedOperationMode:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:7523   .text.HAL_FDCAN_IsRestrictedOperationMode:0000000000000000 HAL_FDCAN_IsRestrictedOperationMode
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:7571   .text.HAL_FDCAN_ExitRestrictedOperationMode:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:7577   .text.HAL_FDCAN_ExitRestrictedOperationMode:0000000000000000 HAL_FDCAN_ExitRestrictedOperationMode
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:7647   .text.HAL_FDCAN_TT_ConfigOperation:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:7653   .text.HAL_FDCAN_TT_ConfigOperation:0000000000000000 HAL_FDCAN_TT_ConfigOperation
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:8009   .text.HAL_FDCAN_TT_ConfigOperation:0000000000000254 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:8020   .text.HAL_FDCAN_TT_ConfigReferenceMessage:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:8026   .text.HAL_FDCAN_TT_ConfigReferenceMessage:0000000000000000 HAL_FDCAN_TT_ConfigReferenceMessage
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:8121   .text.HAL_FDCAN_TT_ConfigTrigger:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:8127   .text.HAL_FDCAN_TT_ConfigTrigger:0000000000000000 HAL_FDCAN_TT_ConfigTrigger
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:8371   .text.HAL_FDCAN_TT_SetGlobalTime:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:8377   .text.HAL_FDCAN_TT_SetGlobalTime:0000000000000000 HAL_FDCAN_TT_SetGlobalTime
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:8537   .text.HAL_FDCAN_TT_SetGlobalTime:00000000000000e8 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:8542   .text.HAL_FDCAN_TT_SetClockSynchronization:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:8548   .text.HAL_FDCAN_TT_SetClockSynchronization:0000000000000000 HAL_FDCAN_TT_SetClockSynchronization
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:8709   .text.HAL_FDCAN_TT_SetClockSynchronization:00000000000000ec $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:8714   .text.HAL_FDCAN_TT_ConfigStopWatch:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:8720   .text.HAL_FDCAN_TT_ConfigStopWatch:0000000000000000 HAL_FDCAN_TT_ConfigStopWatch
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:8834   .text.HAL_FDCAN_TT_ConfigRegisterTimeMark:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:8840   .text.HAL_FDCAN_TT_ConfigRegisterTimeMark:0000000000000000 HAL_FDCAN_TT_ConfigRegisterTimeMark
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:9068   .text.HAL_FDCAN_TT_EnableRegisterTimeMarkPulse:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:9074   .text.HAL_FDCAN_TT_EnableRegisterTimeMarkPulse:0000000000000000 HAL_FDCAN_TT_EnableRegisterTimeMarkPulse
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:9182   .text.HAL_FDCAN_TT_DisableRegisterTimeMarkPulse:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:9188   .text.HAL_FDCAN_TT_DisableRegisterTimeMarkPulse:0000000000000000 HAL_FDCAN_TT_DisableRegisterTimeMarkPulse
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:9296   .text.HAL_FDCAN_TT_EnableTriggerTimeMarkPulse:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:9302   .text.HAL_FDCAN_TT_EnableTriggerTimeMarkPulse:0000000000000000 HAL_FDCAN_TT_EnableTriggerTimeMarkPulse
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:9431   .text.HAL_FDCAN_TT_DisableTriggerTimeMarkPulse:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:9437   .text.HAL_FDCAN_TT_DisableTriggerTimeMarkPulse:0000000000000000 HAL_FDCAN_TT_DisableTriggerTimeMarkPulse
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:9566   .text.HAL_FDCAN_TT_EnableHardwareGapControl:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:9572   .text.HAL_FDCAN_TT_EnableHardwareGapControl:0000000000000000 HAL_FDCAN_TT_EnableHardwareGapControl
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:9701   .text.HAL_FDCAN_TT_DisableHardwareGapControl:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:9707   .text.HAL_FDCAN_TT_DisableHardwareGapControl:0000000000000000 HAL_FDCAN_TT_DisableHardwareGapControl
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 378


/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:9836   .text.HAL_FDCAN_TT_EnableTimeMarkGapControl:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:9842   .text.HAL_FDCAN_TT_EnableTimeMarkGapControl:0000000000000000 HAL_FDCAN_TT_EnableTimeMarkGapControl
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:9971   .text.HAL_FDCAN_TT_DisableTimeMarkGapControl:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:9977   .text.HAL_FDCAN_TT_DisableTimeMarkGapControl:0000000000000000 HAL_FDCAN_TT_DisableTimeMarkGapControl
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:10106  .text.HAL_FDCAN_TT_SetNextIsGap:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:10112  .text.HAL_FDCAN_TT_SetNextIsGap:0000000000000000 HAL_FDCAN_TT_SetNextIsGap
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:10261  .text.HAL_FDCAN_TT_SetEndOfGap:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:10267  .text.HAL_FDCAN_TT_SetEndOfGap:0000000000000000 HAL_FDCAN_TT_SetEndOfGap
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:10416  .text.HAL_FDCAN_TT_ConfigExternalSyncPhase:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:10422  .text.HAL_FDCAN_TT_ConfigExternalSyncPhase:0000000000000000 HAL_FDCAN_TT_ConfigExternalSyncPhase
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:10516  .text.HAL_FDCAN_TT_EnableExternalSynchronization:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:10522  .text.HAL_FDCAN_TT_EnableExternalSynchronization:0000000000000000 HAL_FDCAN_TT_EnableExternalSynchronization
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:10630  .text.HAL_FDCAN_TT_DisableExternalSynchronization:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:10636  .text.HAL_FDCAN_TT_DisableExternalSynchronization:0000000000000000 HAL_FDCAN_TT_DisableExternalSynchronization
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:10744  .text.HAL_FDCAN_TT_GetOperationStatus:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:10750  .text.HAL_FDCAN_TT_GetOperationStatus:0000000000000000 HAL_FDCAN_TT_GetOperationStatus
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:10889  .text.HAL_FDCAN_ConfigInterruptLines:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:10895  .text.HAL_FDCAN_ConfigInterruptLines:0000000000000000 HAL_FDCAN_ConfigInterruptLines
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:10985  .text.HAL_FDCAN_TT_ConfigInterruptLines:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:10991  .text.HAL_FDCAN_TT_ConfigInterruptLines:0000000000000000 HAL_FDCAN_TT_ConfigInterruptLines
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:11081  .text.HAL_FDCAN_ActivateNotification:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:11087  .text.HAL_FDCAN_ActivateNotification:0000000000000000 HAL_FDCAN_ActivateNotification
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:11250  .text.HAL_FDCAN_ActivateNotification:00000000000000ec $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:11256  .text.HAL_FDCAN_DeactivateNotification:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:11262  .text.HAL_FDCAN_DeactivateNotification:0000000000000000 HAL_FDCAN_DeactivateNotification
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:11415  .text.HAL_FDCAN_DeactivateNotification:00000000000000d4 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:11421  .text.HAL_FDCAN_TT_ActivateNotification:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:11427  .text.HAL_FDCAN_TT_ActivateNotification:0000000000000000 HAL_FDCAN_TT_ActivateNotification
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:11549  .text.HAL_FDCAN_TT_DeactivateNotification:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:11555  .text.HAL_FDCAN_TT_DeactivateNotification:0000000000000000 HAL_FDCAN_TT_DeactivateNotification
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:11675  .text.HAL_FDCAN_IRQHandler:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:11681  .text.HAL_FDCAN_IRQHandler:0000000000000000 HAL_FDCAN_IRQHandler
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:12088  .text.HAL_FDCAN_IRQHandler:0000000000000268 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:12092  .text.HAL_FDCAN_IRQHandler:0000000000000270 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:12508  .text.HAL_FDCAN_IRQHandler:00000000000004f0 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:12515  .text.HAL_FDCAN_ClockCalibrationCallback:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:12558  .text.HAL_FDCAN_TxEventFifoCallback:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:12601  .text.HAL_FDCAN_RxFifo0Callback:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:12644  .text.HAL_FDCAN_RxFifo1Callback:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:12687  .text.HAL_FDCAN_TxFifoEmptyCallback:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:12729  .text.HAL_FDCAN_TxBufferCompleteCallback:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:12772  .text.HAL_FDCAN_TxBufferAbortCallback:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:12815  .text.HAL_FDCAN_RxBufferNewMessageCallback:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:12857  .text.HAL_FDCAN_TimestampWraparoundCallback:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:12899  .text.HAL_FDCAN_TimeoutOccurredCallback:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:12941  .text.HAL_FDCAN_HighPriorityMessageCallback:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:12983  .text.HAL_FDCAN_ErrorCallback:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:13025  .text.HAL_FDCAN_ErrorStatusCallback:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:13068  .text.HAL_FDCAN_TT_ScheduleSyncCallback:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:13111  .text.HAL_FDCAN_TT_TimeMarkCallback:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:13154  .text.HAL_FDCAN_TT_StopWatchCallback:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:13198  .text.HAL_FDCAN_TT_GlobalTimeCallback:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:13241  .text.HAL_FDCAN_GetState:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:13247  .text.HAL_FDCAN_GetState:0000000000000000 HAL_FDCAN_GetState
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:13287  .text.HAL_FDCAN_GetError:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:13293  .text.HAL_FDCAN_GetError:0000000000000000 HAL_FDCAN_GetError
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:13332  .text.FDCAN_CalcultateRamBlockAddresses:0000000000000000 $t
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s 			page 379


/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:13738  .text.FDCAN_CalcultateRamBlockAddresses:00000000000002b4 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:13743  .text.FDCAN_CalcultateRamBlockAddresses:00000000000002c0 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:13801  .text.FDCAN_CopyMessageToRAM:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccNgUmO8.s:14009  .text.FDCAN_CopyMessageToRAM:00000000000000f8 $d

UNDEFINED SYMBOLS
memcpy
HAL_GetTick
