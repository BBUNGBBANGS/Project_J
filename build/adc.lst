ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccugdK5G.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"adc.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ADC_CH6_Raw
  19              		.section	.bss.ADC_CH6_Raw,"aw",%nobits
  20              		.align	2
  23              	ADC_CH6_Raw:
  24 0000 00000000 		.space	4
  25              		.global	ADC_CH7_Raw
  26              		.section	.bss.ADC_CH7_Raw,"aw",%nobits
  27              		.align	2
  30              	ADC_CH7_Raw:
  31 0000 00000000 		.space	4
  32              		.global	ADC_BATT_Raw
  33              		.section	.bss.ADC_BATT_Raw,"aw",%nobits
  34              		.align	2
  37              	ADC_BATT_Raw:
  38 0000 00000000 		.space	4
  39              		.global	ADC_CPU_Raw
  40              		.section	.bss.ADC_CPU_Raw,"aw",%nobits
  41              		.align	2
  44              	ADC_CPU_Raw:
  45 0000 00000000 		.space	4
  46              		.global	ADC_CH6_Volt
  47              		.section	.bss.ADC_CH6_Volt,"aw",%nobits
  48              		.align	2
  51              	ADC_CH6_Volt:
  52 0000 00000000 		.space	4
  53              		.global	ADC_CH7_Volt
  54              		.section	.bss.ADC_CH7_Volt,"aw",%nobits
  55              		.align	2
  58              	ADC_CH7_Volt:
  59 0000 00000000 		.space	4
  60              		.global	ADC_BATT_Volt
  61              		.section	.bss.ADC_BATT_Volt,"aw",%nobits
  62              		.align	2
  65              	ADC_BATT_Volt:
  66 0000 00000000 		.space	4
  67              		.global	ADC_CPU_Volt
  68              		.section	.bss.ADC_CPU_Volt,"aw",%nobits
  69              		.align	2
  72              	ADC_CPU_Volt:
  73 0000 00000000 		.space	4
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccugdK5G.s 			page 2


  74              		.section	.text.Adc_Read,"ax",%progbits
  75              		.align	1
  76              		.global	Adc_Read
  77              		.syntax unified
  78              		.thumb
  79              		.thumb_func
  81              	Adc_Read:
  82              	.LFB333:
  83              		.file 1 "Core/Src/adc.c"
   1:Core/Src/adc.c **** #include "adc.h"
   2:Core/Src/adc.c **** 
   3:Core/Src/adc.c **** uint16 ADC_CH6_Raw;
   4:Core/Src/adc.c **** uint16 ADC_CH7_Raw;
   5:Core/Src/adc.c **** uint16 ADC_BATT_Raw;
   6:Core/Src/adc.c **** uint16 ADC_CPU_Raw;
   7:Core/Src/adc.c **** uint16 ADC_CH6_Volt;
   8:Core/Src/adc.c **** uint16 ADC_CH7_Volt;
   9:Core/Src/adc.c **** uint16 ADC_BATT_Volt;
  10:Core/Src/adc.c **** uint16 ADC_CPU_Volt;
  11:Core/Src/adc.c **** 
  12:Core/Src/adc.c **** void Adc_Read(void)
  13:Core/Src/adc.c **** {
  84              		.loc 1 13 1
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 0
  87              		@ frame_needed = 1, uses_anonymous_args = 0
  88 0000 80B5     		push	{r7, lr}
  89              	.LCFI0:
  90              		.cfi_def_cfa_offset 8
  91              		.cfi_offset 7, -8
  92              		.cfi_offset 14, -4
  93 0002 00AF     		add	r7, sp, #0
  94              	.LCFI1:
  95              		.cfi_def_cfa_register 7
  14:Core/Src/adc.c ****     HAL_ADC_Start(&hadc1);
  96              		.loc 1 14 5
  97 0004 2148     		ldr	r0, .L8
  98 0006 FFF7FEFF 		bl	HAL_ADC_Start
  15:Core/Src/adc.c ****     if(HAL_OK == HAL_ADC_PollForConversion(&hadc1,10))
  99              		.loc 1 15 18
 100 000a 0A21     		movs	r1, #10
 101 000c 1F48     		ldr	r0, .L8
 102 000e FFF7FEFF 		bl	HAL_ADC_PollForConversion
 103 0012 0346     		mov	r3, r0
 104              		.loc 1 15 7
 105 0014 002B     		cmp	r3, #0
 106 0016 05D1     		bne	.L2
  16:Core/Src/adc.c ****     {
  17:Core/Src/adc.c ****         ADC_CH6_Raw = HAL_ADC_GetValue(&hadc1);
 107              		.loc 1 17 23
 108 0018 1C48     		ldr	r0, .L8
 109 001a FFF7FEFF 		bl	HAL_ADC_GetValue
 110 001e 0346     		mov	r3, r0
 111              		.loc 1 17 21
 112 0020 1B4A     		ldr	r2, .L8+4
 113 0022 1360     		str	r3, [r2]
 114              	.L2:
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccugdK5G.s 			page 3


  18:Core/Src/adc.c ****     }
  19:Core/Src/adc.c ****     HAL_ADC_Start(&hadc1);
 115              		.loc 1 19 5
 116 0024 1948     		ldr	r0, .L8
 117 0026 FFF7FEFF 		bl	HAL_ADC_Start
  20:Core/Src/adc.c ****     if(HAL_OK == HAL_ADC_PollForConversion(&hadc1,10))
 118              		.loc 1 20 18
 119 002a 0A21     		movs	r1, #10
 120 002c 1748     		ldr	r0, .L8
 121 002e FFF7FEFF 		bl	HAL_ADC_PollForConversion
 122 0032 0346     		mov	r3, r0
 123              		.loc 1 20 7
 124 0034 002B     		cmp	r3, #0
 125 0036 05D1     		bne	.L3
  21:Core/Src/adc.c ****     {
  22:Core/Src/adc.c ****         ADC_CH7_Raw = HAL_ADC_GetValue(&hadc1);
 126              		.loc 1 22 23
 127 0038 1448     		ldr	r0, .L8
 128 003a FFF7FEFF 		bl	HAL_ADC_GetValue
 129 003e 0346     		mov	r3, r0
 130              		.loc 1 22 21
 131 0040 144A     		ldr	r2, .L8+8
 132 0042 1360     		str	r3, [r2]
 133              	.L3:
  23:Core/Src/adc.c ****     }
  24:Core/Src/adc.c ****     HAL_ADC_Start(&hadc3);
 134              		.loc 1 24 5
 135 0044 1448     		ldr	r0, .L8+12
 136 0046 FFF7FEFF 		bl	HAL_ADC_Start
  25:Core/Src/adc.c ****     if(HAL_OK == HAL_ADC_PollForConversion(&hadc3,10))
 137              		.loc 1 25 18
 138 004a 0A21     		movs	r1, #10
 139 004c 1248     		ldr	r0, .L8+12
 140 004e FFF7FEFF 		bl	HAL_ADC_PollForConversion
 141 0052 0346     		mov	r3, r0
 142              		.loc 1 25 7
 143 0054 002B     		cmp	r3, #0
 144 0056 05D1     		bne	.L4
  26:Core/Src/adc.c ****     {
  27:Core/Src/adc.c ****         ADC_BATT_Raw = HAL_ADC_GetValue(&hadc3);
 145              		.loc 1 27 24
 146 0058 0F48     		ldr	r0, .L8+12
 147 005a FFF7FEFF 		bl	HAL_ADC_GetValue
 148 005e 0346     		mov	r3, r0
 149              		.loc 1 27 22
 150 0060 0E4A     		ldr	r2, .L8+16
 151 0062 1360     		str	r3, [r2]
 152              	.L4:
  28:Core/Src/adc.c ****     }
  29:Core/Src/adc.c ****     HAL_ADC_Start(&hadc3);
 153              		.loc 1 29 5
 154 0064 0C48     		ldr	r0, .L8+12
 155 0066 FFF7FEFF 		bl	HAL_ADC_Start
  30:Core/Src/adc.c ****     if(HAL_OK == HAL_ADC_PollForConversion(&hadc3,10))
 156              		.loc 1 30 18
 157 006a 0A21     		movs	r1, #10
 158 006c 0A48     		ldr	r0, .L8+12
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccugdK5G.s 			page 4


 159 006e FFF7FEFF 		bl	HAL_ADC_PollForConversion
 160 0072 0346     		mov	r3, r0
 161              		.loc 1 30 7
 162 0074 002B     		cmp	r3, #0
 163 0076 06D1     		bne	.L7
  31:Core/Src/adc.c ****     {
  32:Core/Src/adc.c ****         ADC_CPU_Raw = HAL_ADC_GetValue(&hadc3);
 164              		.loc 1 32 23
 165 0078 0748     		ldr	r0, .L8+12
 166 007a FFF7FEFF 		bl	HAL_ADC_GetValue
 167 007e 0346     		mov	r3, r0
 168              		.loc 1 32 21
 169 0080 074A     		ldr	r2, .L8+20
 170 0082 1360     		str	r3, [r2]
  33:Core/Src/adc.c ****     }
  34:Core/Src/adc.c ****     return;
 171              		.loc 1 34 5
 172 0084 00BF     		nop
 173              	.L7:
 174 0086 00BF     		nop
  35:Core/Src/adc.c **** }
 175              		.loc 1 35 1
 176 0088 80BD     		pop	{r7, pc}
 177              	.L9:
 178 008a 00BF     		.align	2
 179              	.L8:
 180 008c 00000000 		.word	hadc1
 181 0090 00000000 		.word	ADC_CH6_Raw
 182 0094 00000000 		.word	ADC_CH7_Raw
 183 0098 00000000 		.word	hadc3
 184 009c 00000000 		.word	ADC_BATT_Raw
 185 00a0 00000000 		.word	ADC_CPU_Raw
 186              		.cfi_endproc
 187              	.LFE333:
 189              		.section	.text.Adc_Calc,"ax",%progbits
 190              		.align	1
 191              		.global	Adc_Calc
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 196              	Adc_Calc:
 197              	.LFB334:
  36:Core/Src/adc.c **** 
  37:Core/Src/adc.c **** void Adc_Calc(void)
  38:Core/Src/adc.c **** {
 198              		.loc 1 38 1
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 0
 201              		@ frame_needed = 1, uses_anonymous_args = 0
 202              		@ link register save eliminated.
 203 0000 80B4     		push	{r7}
 204              	.LCFI2:
 205              		.cfi_def_cfa_offset 4
 206              		.cfi_offset 7, -4
 207 0002 00AF     		add	r7, sp, #0
 208              	.LCFI3:
 209              		.cfi_def_cfa_register 7
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccugdK5G.s 			page 5


  39:Core/Src/adc.c ****     ADC_CH6_Volt = (uint16)((float)ADC_CH6_Raw*5000.0f/65535.0f);
 210              		.loc 1 39 29
 211 0004 2A4B     		ldr	r3, .L11
 212 0006 1B68     		ldr	r3, [r3]
 213 0008 07EE903A 		vmov	s15, r3	@ int
 214 000c F8EE677A 		vcvt.f32.u32	s15, s15
 215              		.loc 1 39 47
 216 0010 9FED287A 		vldr.32	s14, .L11+4
 217 0014 27EE877A 		vmul.f32	s14, s15, s14
 218              		.loc 1 39 55
 219 0018 DFED276A 		vldr.32	s13, .L11+8
 220 001c C7EE267A 		vdiv.f32	s15, s14, s13
 221              		.loc 1 39 20
 222 0020 FCEEE77A 		vcvt.u32.f32	s15, s15
 223 0024 17EE902A 		vmov	r2, s15	@ int
 224              		.loc 1 39 18
 225 0028 244B     		ldr	r3, .L11+12
 226 002a 1A60     		str	r2, [r3]
  40:Core/Src/adc.c ****     ADC_CH7_Volt = (uint16)((float)ADC_CH7_Raw*5000.0f/65535.0f);
 227              		.loc 1 40 29
 228 002c 244B     		ldr	r3, .L11+16
 229 002e 1B68     		ldr	r3, [r3]
 230 0030 07EE903A 		vmov	s15, r3	@ int
 231 0034 F8EE677A 		vcvt.f32.u32	s15, s15
 232              		.loc 1 40 47
 233 0038 9FED1E7A 		vldr.32	s14, .L11+4
 234 003c 27EE877A 		vmul.f32	s14, s15, s14
 235              		.loc 1 40 55
 236 0040 DFED1D6A 		vldr.32	s13, .L11+8
 237 0044 C7EE267A 		vdiv.f32	s15, s14, s13
 238              		.loc 1 40 20
 239 0048 FCEEE77A 		vcvt.u32.f32	s15, s15
 240 004c 17EE902A 		vmov	r2, s15	@ int
 241              		.loc 1 40 18
 242 0050 1C4B     		ldr	r3, .L11+20
 243 0052 1A60     		str	r2, [r3]
  41:Core/Src/adc.c ****     ADC_BATT_Volt = (uint16)((float)ADC_BATT_Raw*3300.0f/65535.0f);
 244              		.loc 1 41 30
 245 0054 1C4B     		ldr	r3, .L11+24
 246 0056 1B68     		ldr	r3, [r3]
 247 0058 07EE903A 		vmov	s15, r3	@ int
 248 005c F8EE677A 		vcvt.f32.u32	s15, s15
 249              		.loc 1 41 49
 250 0060 9FED1A7A 		vldr.32	s14, .L11+28
 251 0064 27EE877A 		vmul.f32	s14, s15, s14
 252              		.loc 1 41 57
 253 0068 DFED136A 		vldr.32	s13, .L11+8
 254 006c C7EE267A 		vdiv.f32	s15, s14, s13
 255              		.loc 1 41 21
 256 0070 FCEEE77A 		vcvt.u32.f32	s15, s15
 257 0074 17EE902A 		vmov	r2, s15	@ int
 258              		.loc 1 41 19
 259 0078 154B     		ldr	r3, .L11+32
 260 007a 1A60     		str	r2, [r3]
  42:Core/Src/adc.c ****     ADC_CPU_Volt = (uint16)((float)ADC_CPU_Raw*3300.0f/65535.0f);
 261              		.loc 1 42 29
 262 007c 154B     		ldr	r3, .L11+36
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccugdK5G.s 			page 6


 263 007e 1B68     		ldr	r3, [r3]
 264 0080 07EE903A 		vmov	s15, r3	@ int
 265 0084 F8EE677A 		vcvt.f32.u32	s15, s15
 266              		.loc 1 42 47
 267 0088 9FED107A 		vldr.32	s14, .L11+28
 268 008c 27EE877A 		vmul.f32	s14, s15, s14
 269              		.loc 1 42 55
 270 0090 DFED096A 		vldr.32	s13, .L11+8
 271 0094 C7EE267A 		vdiv.f32	s15, s14, s13
 272              		.loc 1 42 20
 273 0098 FCEEE77A 		vcvt.u32.f32	s15, s15
 274 009c 17EE902A 		vmov	r2, s15	@ int
 275              		.loc 1 42 18
 276 00a0 0D4B     		ldr	r3, .L11+40
 277 00a2 1A60     		str	r2, [r3]
  43:Core/Src/adc.c **** }...
 278              		.loc 1 43 1
 279 00a4 00BF     		nop
 280 00a6 BD46     		mov	sp, r7
 281              	.LCFI4:
 282              		.cfi_def_cfa_register 13
 283              		@ sp needed
 284 00a8 5DF8047B 		ldr	r7, [sp], #4
 285              	.LCFI5:
 286              		.cfi_restore 7
 287              		.cfi_def_cfa_offset 0
 288 00ac 7047     		bx	lr
 289              	.L12:
 290 00ae 00BF     		.align	2
 291              	.L11:
 292 00b0 00000000 		.word	ADC_CH6_Raw
 293 00b4 00409C45 		.word	1167867904
 294 00b8 00FF7F47 		.word	1199570688
 295 00bc 00000000 		.word	ADC_CH6_Volt
 296 00c0 00000000 		.word	ADC_CH7_Raw
 297 00c4 00000000 		.word	ADC_CH7_Volt
 298 00c8 00000000 		.word	ADC_BATT_Raw
 299 00cc 00404E45 		.word	1162756096
 300 00d0 00000000 		.word	ADC_BATT_Volt
 301 00d4 00000000 		.word	ADC_CPU_Raw
 302 00d8 00000000 		.word	ADC_CPU_Volt
 303              		.cfi_endproc
 304              	.LFE334:
 306              		.text
 307              	.Letext0:
 308              		.file 2 "/Users/seojisu/Library/Arm-GCC-xPack/arm-none-eabi/include/machine/_default_types.h"
 309              		.file 3 "/Users/seojisu/Library/Arm-GCC-xPack/arm-none-eabi/include/sys/_stdint.h"
 310              		.file 4 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 311              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"
 312              		.file 6 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 313              		.file 7 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 314              		.file 8 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_adc.h"
 315              		.file 9 "Core/Inc/vardef.h"
 316              		.file 10 "Core/Inc/main.h"
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccugdK5G.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 adc.c
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccugdK5G.s:23     .bss.ADC_CH6_Raw:0000000000000000 ADC_CH6_Raw
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccugdK5G.s:20     .bss.ADC_CH6_Raw:0000000000000000 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccugdK5G.s:30     .bss.ADC_CH7_Raw:0000000000000000 ADC_CH7_Raw
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccugdK5G.s:27     .bss.ADC_CH7_Raw:0000000000000000 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccugdK5G.s:37     .bss.ADC_BATT_Raw:0000000000000000 ADC_BATT_Raw
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccugdK5G.s:34     .bss.ADC_BATT_Raw:0000000000000000 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccugdK5G.s:44     .bss.ADC_CPU_Raw:0000000000000000 ADC_CPU_Raw
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccugdK5G.s:41     .bss.ADC_CPU_Raw:0000000000000000 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccugdK5G.s:51     .bss.ADC_CH6_Volt:0000000000000000 ADC_CH6_Volt
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccugdK5G.s:48     .bss.ADC_CH6_Volt:0000000000000000 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccugdK5G.s:58     .bss.ADC_CH7_Volt:0000000000000000 ADC_CH7_Volt
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccugdK5G.s:55     .bss.ADC_CH7_Volt:0000000000000000 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccugdK5G.s:65     .bss.ADC_BATT_Volt:0000000000000000 ADC_BATT_Volt
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccugdK5G.s:62     .bss.ADC_BATT_Volt:0000000000000000 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccugdK5G.s:72     .bss.ADC_CPU_Volt:0000000000000000 ADC_CPU_Volt
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccugdK5G.s:69     .bss.ADC_CPU_Volt:0000000000000000 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccugdK5G.s:75     .text.Adc_Read:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccugdK5G.s:81     .text.Adc_Read:0000000000000000 Adc_Read
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccugdK5G.s:180    .text.Adc_Read:000000000000008c $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccugdK5G.s:190    .text.Adc_Calc:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccugdK5G.s:196    .text.Adc_Calc:0000000000000000 Adc_Calc
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccugdK5G.s:292    .text.Adc_Calc:00000000000000b0 $d

UNDEFINED SYMBOLS
HAL_ADC_Start
HAL_ADC_PollForConversion
HAL_ADC_GetValue
hadc1
hadc3
