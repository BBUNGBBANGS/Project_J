ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//cci12lpk.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"stm32h7xx_it.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.NMI_Handler,"ax",%progbits
  19              		.align	1
  20              		.global	NMI_Handler
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	NMI_Handler:
  26              	.LFB333:
  27              		.file 1 "Core/Src/stm32h7xx_it.c"
   1:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32h7xx_it.c **** /**
   3:Core/Src/stm32h7xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32h7xx_it.c ****   * @file    stm32h7xx_it.c
   5:Core/Src/stm32h7xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32h7xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32h7xx_it.c ****   * @attention
   8:Core/Src/stm32h7xx_it.c ****   *
   9:Core/Src/stm32h7xx_it.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/stm32h7xx_it.c ****   * All rights reserved.</center></h2>
  11:Core/Src/stm32h7xx_it.c ****   *
  12:Core/Src/stm32h7xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/stm32h7xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/stm32h7xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/stm32h7xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/stm32h7xx_it.c ****   *
  17:Core/Src/stm32h7xx_it.c ****   ******************************************************************************
  18:Core/Src/stm32h7xx_it.c ****   */
  19:Core/Src/stm32h7xx_it.c **** /* USER CODE END Header */
  20:Core/Src/stm32h7xx_it.c **** 
  21:Core/Src/stm32h7xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/stm32h7xx_it.c **** #include "main.h"
  23:Core/Src/stm32h7xx_it.c **** #include "stm32h7xx_it.h"
  24:Core/Src/stm32h7xx_it.c **** #include "os.h"
  25:Core/Src/stm32h7xx_it.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/stm32h7xx_it.c **** /* USER CODE END Includes */
  28:Core/Src/stm32h7xx_it.c **** 
  29:Core/Src/stm32h7xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN TD */
  31:Core/Src/stm32h7xx_it.c **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//cci12lpk.s 			page 2


  32:Core/Src/stm32h7xx_it.c **** /* USER CODE END TD */
  33:Core/Src/stm32h7xx_it.c **** 
  34:Core/Src/stm32h7xx_it.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN PD */
  36:Core/Src/stm32h7xx_it.c **** 
  37:Core/Src/stm32h7xx_it.c **** /* USER CODE END PD */
  38:Core/Src/stm32h7xx_it.c **** 
  39:Core/Src/stm32h7xx_it.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN PM */
  41:Core/Src/stm32h7xx_it.c **** 
  42:Core/Src/stm32h7xx_it.c **** /* USER CODE END PM */
  43:Core/Src/stm32h7xx_it.c **** 
  44:Core/Src/stm32h7xx_it.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN PV */
  46:Core/Src/stm32h7xx_it.c **** 
  47:Core/Src/stm32h7xx_it.c **** /* USER CODE END PV */
  48:Core/Src/stm32h7xx_it.c **** 
  49:Core/Src/stm32h7xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  50:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN PFP */
  51:Core/Src/stm32h7xx_it.c **** 
  52:Core/Src/stm32h7xx_it.c **** /* USER CODE END PFP */
  53:Core/Src/stm32h7xx_it.c **** 
  54:Core/Src/stm32h7xx_it.c **** /* Private user code ---------------------------------------------------------*/
  55:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN 0 */
  56:Core/Src/stm32h7xx_it.c **** 
  57:Core/Src/stm32h7xx_it.c **** /* USER CODE END 0 */
  58:Core/Src/stm32h7xx_it.c **** 
  59:Core/Src/stm32h7xx_it.c **** /* External variables --------------------------------------------------------*/
  60:Core/Src/stm32h7xx_it.c **** extern FDCAN_HandleTypeDef hfdcan1;
  61:Core/Src/stm32h7xx_it.c **** extern TIM_HandleTypeDef htim15;
  62:Core/Src/stm32h7xx_it.c **** extern TIM_HandleTypeDef htim16;
  63:Core/Src/stm32h7xx_it.c **** extern TIM_HandleTypeDef htim17;
  64:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN EV */
  65:Core/Src/stm32h7xx_it.c **** 
  66:Core/Src/stm32h7xx_it.c **** /* USER CODE END EV */
  67:Core/Src/stm32h7xx_it.c **** 
  68:Core/Src/stm32h7xx_it.c **** /******************************************************************************/
  69:Core/Src/stm32h7xx_it.c **** /*           Cortex Processor Interruption and Exception Handlers          */
  70:Core/Src/stm32h7xx_it.c **** /******************************************************************************/
  71:Core/Src/stm32h7xx_it.c **** /**
  72:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Non maskable interrupt.
  73:Core/Src/stm32h7xx_it.c ****   */
  74:Core/Src/stm32h7xx_it.c **** void NMI_Handler(void)
  75:Core/Src/stm32h7xx_it.c **** {
  28              		.loc 1 75 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 00AF     		add	r7, sp, #0
  38              	.LCFI1:
  39              		.cfi_def_cfa_register 7
  40              	.L2:
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//cci12lpk.s 			page 3


  76:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  77:Core/Src/stm32h7xx_it.c **** 
  78:Core/Src/stm32h7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  79:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  80:Core/Src/stm32h7xx_it.c ****   while (1)
  41              		.loc 1 80 9 discriminator 1
  42 0004 FEE7     		b	.L2
  43              		.cfi_endproc
  44              	.LFE333:
  46              		.section	.text.HardFault_Handler,"ax",%progbits
  47              		.align	1
  48              		.global	HardFault_Handler
  49              		.syntax unified
  50              		.thumb
  51              		.thumb_func
  53              	HardFault_Handler:
  54              	.LFB334:
  81:Core/Src/stm32h7xx_it.c ****   {
  82:Core/Src/stm32h7xx_it.c ****   }
  83:Core/Src/stm32h7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  84:Core/Src/stm32h7xx_it.c **** }
  85:Core/Src/stm32h7xx_it.c **** 
  86:Core/Src/stm32h7xx_it.c **** /**
  87:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Hard fault interrupt.
  88:Core/Src/stm32h7xx_it.c ****   */
  89:Core/Src/stm32h7xx_it.c **** void HardFault_Handler(void)
  90:Core/Src/stm32h7xx_it.c **** {
  55              		.loc 1 90 1
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 1, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60 0000 80B4     		push	{r7}
  61              	.LCFI2:
  62              		.cfi_def_cfa_offset 4
  63              		.cfi_offset 7, -4
  64 0002 00AF     		add	r7, sp, #0
  65              	.LCFI3:
  66              		.cfi_def_cfa_register 7
  67              	.L4:
  91:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  92:Core/Src/stm32h7xx_it.c **** 
  93:Core/Src/stm32h7xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  94:Core/Src/stm32h7xx_it.c ****   while (1)
  68              		.loc 1 94 9 discriminator 1
  69 0004 FEE7     		b	.L4
  70              		.cfi_endproc
  71              	.LFE334:
  73              		.section	.text.MemManage_Handler,"ax",%progbits
  74              		.align	1
  75              		.global	MemManage_Handler
  76              		.syntax unified
  77              		.thumb
  78              		.thumb_func
  80              	MemManage_Handler:
  81              	.LFB335:
  95:Core/Src/stm32h7xx_it.c ****   {
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//cci12lpk.s 			page 4


  96:Core/Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  97:Core/Src/stm32h7xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  98:Core/Src/stm32h7xx_it.c ****   }
  99:Core/Src/stm32h7xx_it.c **** }
 100:Core/Src/stm32h7xx_it.c **** 
 101:Core/Src/stm32h7xx_it.c **** /**
 102:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Memory management fault.
 103:Core/Src/stm32h7xx_it.c ****   */
 104:Core/Src/stm32h7xx_it.c **** void MemManage_Handler(void)
 105:Core/Src/stm32h7xx_it.c **** {
  82              		.loc 1 105 1
  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 0
  85              		@ frame_needed = 1, uses_anonymous_args = 0
  86              		@ link register save eliminated.
  87 0000 80B4     		push	{r7}
  88              	.LCFI4:
  89              		.cfi_def_cfa_offset 4
  90              		.cfi_offset 7, -4
  91 0002 00AF     		add	r7, sp, #0
  92              	.LCFI5:
  93              		.cfi_def_cfa_register 7
  94              	.L6:
 106:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 107:Core/Src/stm32h7xx_it.c **** 
 108:Core/Src/stm32h7xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 109:Core/Src/stm32h7xx_it.c ****   while (1)
  95              		.loc 1 109 9 discriminator 1
  96 0004 FEE7     		b	.L6
  97              		.cfi_endproc
  98              	.LFE335:
 100              		.section	.text.BusFault_Handler,"ax",%progbits
 101              		.align	1
 102              		.global	BusFault_Handler
 103              		.syntax unified
 104              		.thumb
 105              		.thumb_func
 107              	BusFault_Handler:
 108              	.LFB336:
 110:Core/Src/stm32h7xx_it.c ****   {
 111:Core/Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 112:Core/Src/stm32h7xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 113:Core/Src/stm32h7xx_it.c ****   }
 114:Core/Src/stm32h7xx_it.c **** }
 115:Core/Src/stm32h7xx_it.c **** 
 116:Core/Src/stm32h7xx_it.c **** /**
 117:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 118:Core/Src/stm32h7xx_it.c ****   */
 119:Core/Src/stm32h7xx_it.c **** void BusFault_Handler(void)
 120:Core/Src/stm32h7xx_it.c **** {
 109              		.loc 1 120 1
 110              		.cfi_startproc
 111              		@ args = 0, pretend = 0, frame = 0
 112              		@ frame_needed = 1, uses_anonymous_args = 0
 113              		@ link register save eliminated.
 114 0000 80B4     		push	{r7}
 115              	.LCFI6:
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//cci12lpk.s 			page 5


 116              		.cfi_def_cfa_offset 4
 117              		.cfi_offset 7, -4
 118 0002 00AF     		add	r7, sp, #0
 119              	.LCFI7:
 120              		.cfi_def_cfa_register 7
 121              	.L8:
 121:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 122:Core/Src/stm32h7xx_it.c **** 
 123:Core/Src/stm32h7xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 124:Core/Src/stm32h7xx_it.c ****   while (1)
 122              		.loc 1 124 9 discriminator 1
 123 0004 FEE7     		b	.L8
 124              		.cfi_endproc
 125              	.LFE336:
 127              		.section	.text.UsageFault_Handler,"ax",%progbits
 128              		.align	1
 129              		.global	UsageFault_Handler
 130              		.syntax unified
 131              		.thumb
 132              		.thumb_func
 134              	UsageFault_Handler:
 135              	.LFB337:
 125:Core/Src/stm32h7xx_it.c ****   {
 126:Core/Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 127:Core/Src/stm32h7xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 128:Core/Src/stm32h7xx_it.c ****   }
 129:Core/Src/stm32h7xx_it.c **** }
 130:Core/Src/stm32h7xx_it.c **** 
 131:Core/Src/stm32h7xx_it.c **** /**
 132:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 133:Core/Src/stm32h7xx_it.c ****   */
 134:Core/Src/stm32h7xx_it.c **** void UsageFault_Handler(void)
 135:Core/Src/stm32h7xx_it.c **** {
 136              		.loc 1 135 1
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 0
 139              		@ frame_needed = 1, uses_anonymous_args = 0
 140              		@ link register save eliminated.
 141 0000 80B4     		push	{r7}
 142              	.LCFI8:
 143              		.cfi_def_cfa_offset 4
 144              		.cfi_offset 7, -4
 145 0002 00AF     		add	r7, sp, #0
 146              	.LCFI9:
 147              		.cfi_def_cfa_register 7
 148              	.L10:
 136:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 137:Core/Src/stm32h7xx_it.c **** 
 138:Core/Src/stm32h7xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 139:Core/Src/stm32h7xx_it.c ****   while (1)
 149              		.loc 1 139 9 discriminator 1
 150 0004 FEE7     		b	.L10
 151              		.cfi_endproc
 152              	.LFE337:
 154              		.section	.text.SVC_Handler,"ax",%progbits
 155              		.align	1
 156              		.global	SVC_Handler
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//cci12lpk.s 			page 6


 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 161              	SVC_Handler:
 162              	.LFB338:
 140:Core/Src/stm32h7xx_it.c ****   {
 141:Core/Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 142:Core/Src/stm32h7xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 143:Core/Src/stm32h7xx_it.c ****   }
 144:Core/Src/stm32h7xx_it.c **** }
 145:Core/Src/stm32h7xx_it.c **** 
 146:Core/Src/stm32h7xx_it.c **** /**
 147:Core/Src/stm32h7xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 148:Core/Src/stm32h7xx_it.c ****   */
 149:Core/Src/stm32h7xx_it.c **** void SVC_Handler(void)
 150:Core/Src/stm32h7xx_it.c **** {
 163              		.loc 1 150 1
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 1, uses_anonymous_args = 0
 167              		@ link register save eliminated.
 168 0000 80B4     		push	{r7}
 169              	.LCFI10:
 170              		.cfi_def_cfa_offset 4
 171              		.cfi_offset 7, -4
 172 0002 00AF     		add	r7, sp, #0
 173              	.LCFI11:
 174              		.cfi_def_cfa_register 7
 151:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 152:Core/Src/stm32h7xx_it.c **** 
 153:Core/Src/stm32h7xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 154:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 155:Core/Src/stm32h7xx_it.c **** 
 156:Core/Src/stm32h7xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 157:Core/Src/stm32h7xx_it.c **** }
 175              		.loc 1 157 1
 176 0004 00BF     		nop
 177 0006 BD46     		mov	sp, r7
 178              	.LCFI12:
 179              		.cfi_def_cfa_register 13
 180              		@ sp needed
 181 0008 5DF8047B 		ldr	r7, [sp], #4
 182              	.LCFI13:
 183              		.cfi_restore 7
 184              		.cfi_def_cfa_offset 0
 185 000c 7047     		bx	lr
 186              		.cfi_endproc
 187              	.LFE338:
 189              		.section	.text.DebugMon_Handler,"ax",%progbits
 190              		.align	1
 191              		.global	DebugMon_Handler
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 196              	DebugMon_Handler:
 197              	.LFB339:
 158:Core/Src/stm32h7xx_it.c **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//cci12lpk.s 			page 7


 159:Core/Src/stm32h7xx_it.c **** /**
 160:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Debug monitor.
 161:Core/Src/stm32h7xx_it.c ****   */
 162:Core/Src/stm32h7xx_it.c **** void DebugMon_Handler(void)
 163:Core/Src/stm32h7xx_it.c **** {
 198              		.loc 1 163 1
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 0
 201              		@ frame_needed = 1, uses_anonymous_args = 0
 202              		@ link register save eliminated.
 203 0000 80B4     		push	{r7}
 204              	.LCFI14:
 205              		.cfi_def_cfa_offset 4
 206              		.cfi_offset 7, -4
 207 0002 00AF     		add	r7, sp, #0
 208              	.LCFI15:
 209              		.cfi_def_cfa_register 7
 164:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 165:Core/Src/stm32h7xx_it.c **** 
 166:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 167:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 168:Core/Src/stm32h7xx_it.c **** 
 169:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 170:Core/Src/stm32h7xx_it.c **** }
 210              		.loc 1 170 1
 211 0004 00BF     		nop
 212 0006 BD46     		mov	sp, r7
 213              	.LCFI16:
 214              		.cfi_def_cfa_register 13
 215              		@ sp needed
 216 0008 5DF8047B 		ldr	r7, [sp], #4
 217              	.LCFI17:
 218              		.cfi_restore 7
 219              		.cfi_def_cfa_offset 0
 220 000c 7047     		bx	lr
 221              		.cfi_endproc
 222              	.LFE339:
 224              		.section	.text.PendSV_Handler,"ax",%progbits
 225              		.align	1
 226              		.global	PendSV_Handler
 227              		.syntax unified
 228              		.thumb
 229              		.thumb_func
 231              	PendSV_Handler:
 232              	.LFB340:
 171:Core/Src/stm32h7xx_it.c **** 
 172:Core/Src/stm32h7xx_it.c **** /**
 173:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Pendable request for system service.
 174:Core/Src/stm32h7xx_it.c ****   */
 175:Core/Src/stm32h7xx_it.c **** void PendSV_Handler(void)
 176:Core/Src/stm32h7xx_it.c **** {
 233              		.loc 1 176 1
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 1, uses_anonymous_args = 0
 237              		@ link register save eliminated.
 238 0000 80B4     		push	{r7}
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//cci12lpk.s 			page 8


 239              	.LCFI18:
 240              		.cfi_def_cfa_offset 4
 241              		.cfi_offset 7, -4
 242 0002 00AF     		add	r7, sp, #0
 243              	.LCFI19:
 244              		.cfi_def_cfa_register 7
 177:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 178:Core/Src/stm32h7xx_it.c **** 
 179:Core/Src/stm32h7xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 180:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 181:Core/Src/stm32h7xx_it.c **** 
 182:Core/Src/stm32h7xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 183:Core/Src/stm32h7xx_it.c **** }
 245              		.loc 1 183 1
 246 0004 00BF     		nop
 247 0006 BD46     		mov	sp, r7
 248              	.LCFI20:
 249              		.cfi_def_cfa_register 13
 250              		@ sp needed
 251 0008 5DF8047B 		ldr	r7, [sp], #4
 252              	.LCFI21:
 253              		.cfi_restore 7
 254              		.cfi_def_cfa_offset 0
 255 000c 7047     		bx	lr
 256              		.cfi_endproc
 257              	.LFE340:
 259              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 260              		.align	1
 261              		.global	HAL_TIM_PeriodElapsedCallback
 262              		.syntax unified
 263              		.thumb
 264              		.thumb_func
 266              	HAL_TIM_PeriodElapsedCallback:
 267              	.LFB341:
 184:Core/Src/stm32h7xx_it.c **** 
 185:Core/Src/stm32h7xx_it.c **** /******************************************************************************/
 186:Core/Src/stm32h7xx_it.c **** /* STM32H7xx Peripheral Interrupt Handlers                                    */
 187:Core/Src/stm32h7xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 188:Core/Src/stm32h7xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 189:Core/Src/stm32h7xx_it.c **** /* please refer to the startup file (startup_stm32h7xx.s).                    */
 190:Core/Src/stm32h7xx_it.c **** /******************************************************************************/
 191:Core/Src/stm32h7xx_it.c **** 
 192:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN 1 */
 193:Core/Src/stm32h7xx_it.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 194:Core/Src/stm32h7xx_it.c **** {
 268              		.loc 1 194 1
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 8
 271              		@ frame_needed = 1, uses_anonymous_args = 0
 272 0000 80B5     		push	{r7, lr}
 273              	.LCFI22:
 274              		.cfi_def_cfa_offset 8
 275              		.cfi_offset 7, -8
 276              		.cfi_offset 14, -4
 277 0002 82B0     		sub	sp, sp, #8
 278              	.LCFI23:
 279              		.cfi_def_cfa_offset 16
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//cci12lpk.s 			page 9


 280 0004 00AF     		add	r7, sp, #0
 281              	.LCFI24:
 282              		.cfi_def_cfa_register 7
 283 0006 7860     		str	r0, [r7, #4]
 195:Core/Src/stm32h7xx_it.c ****     if(htim->Instance == TIM15)
 284              		.loc 1 195 12
 285 0008 7B68     		ldr	r3, [r7, #4]
 286 000a 1B68     		ldr	r3, [r3]
 287              		.loc 1 195 7
 288 000c 0B4A     		ldr	r2, .L19
 289 000e 9342     		cmp	r3, r2
 290 0010 01D1     		bne	.L15
 196:Core/Src/stm32h7xx_it.c ****     {
 197:Core/Src/stm32h7xx_it.c ****         Os_Handler_10ms();
 291              		.loc 1 197 9
 292 0012 FFF7FEFF 		bl	Os_Handler_10ms
 293              	.L15:
 198:Core/Src/stm32h7xx_it.c ****     }
 199:Core/Src/stm32h7xx_it.c ****     if(htim->Instance == TIM16)
 294              		.loc 1 199 12
 295 0016 7B68     		ldr	r3, [r7, #4]
 296 0018 1B68     		ldr	r3, [r3]
 297              		.loc 1 199 7
 298 001a 094A     		ldr	r2, .L19+4
 299 001c 9342     		cmp	r3, r2
 300 001e 01D1     		bne	.L16
 200:Core/Src/stm32h7xx_it.c ****     {
 201:Core/Src/stm32h7xx_it.c ****         Os_Time_Handler();
 301              		.loc 1 201 9
 302 0020 FFF7FEFF 		bl	Os_Time_Handler
 303              	.L16:
 202:Core/Src/stm32h7xx_it.c ****     }
 203:Core/Src/stm32h7xx_it.c ****     if(htim->Instance == TIM17)
 304              		.loc 1 203 12
 305 0024 7B68     		ldr	r3, [r7, #4]
 306 0026 1B68     		ldr	r3, [r3]
 307              		.loc 1 203 7
 308 0028 064A     		ldr	r2, .L19+8
 309 002a 9342     		cmp	r3, r2
 310 002c 01D1     		bne	.L18
 204:Core/Src/stm32h7xx_it.c ****     {
 205:Core/Src/stm32h7xx_it.c ****         Os_Handler_1ms();
 311              		.loc 1 205 9
 312 002e FFF7FEFF 		bl	Os_Handler_1ms
 313              	.L18:
 206:Core/Src/stm32h7xx_it.c ****     }
 207:Core/Src/stm32h7xx_it.c **** }
 314              		.loc 1 207 1
 315 0032 00BF     		nop
 316 0034 0837     		adds	r7, r7, #8
 317              	.LCFI25:
 318              		.cfi_def_cfa_offset 8
 319 0036 BD46     		mov	sp, r7
 320              	.LCFI26:
 321              		.cfi_def_cfa_register 13
 322              		@ sp needed
 323 0038 80BD     		pop	{r7, pc}
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//cci12lpk.s 			page 10


 324              	.L20:
 325 003a 00BF     		.align	2
 326              	.L19:
 327 003c 00400140 		.word	1073823744
 328 0040 00440140 		.word	1073824768
 329 0044 00480140 		.word	1073825792
 330              		.cfi_endproc
 331              	.LFE341:
 333              		.text
 334              	.Letext0:
 335              		.file 2 "/Users/seojisu/Library/Arm-GCC-xPack/arm-none-eabi/include/machine/_default_types.h"
 336              		.file 3 "/Users/seojisu/Library/Arm-GCC-xPack/arm-none-eabi/include/sys/_stdint.h"
 337              		.file 4 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 338              		.file 5 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 339              		.file 6 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 340              		.file 7 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_tim.h"
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//cci12lpk.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_it.c
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//cci12lpk.s:19     .text.NMI_Handler:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//cci12lpk.s:25     .text.NMI_Handler:0000000000000000 NMI_Handler
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//cci12lpk.s:47     .text.HardFault_Handler:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//cci12lpk.s:53     .text.HardFault_Handler:0000000000000000 HardFault_Handler
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//cci12lpk.s:74     .text.MemManage_Handler:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//cci12lpk.s:80     .text.MemManage_Handler:0000000000000000 MemManage_Handler
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//cci12lpk.s:101    .text.BusFault_Handler:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//cci12lpk.s:107    .text.BusFault_Handler:0000000000000000 BusFault_Handler
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//cci12lpk.s:128    .text.UsageFault_Handler:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//cci12lpk.s:134    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//cci12lpk.s:155    .text.SVC_Handler:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//cci12lpk.s:161    .text.SVC_Handler:0000000000000000 SVC_Handler
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//cci12lpk.s:190    .text.DebugMon_Handler:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//cci12lpk.s:196    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//cci12lpk.s:225    .text.PendSV_Handler:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//cci12lpk.s:231    .text.PendSV_Handler:0000000000000000 PendSV_Handler
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//cci12lpk.s:260    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//cci12lpk.s:266    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//cci12lpk.s:327    .text.HAL_TIM_PeriodElapsedCallback:000000000000003c $d

UNDEFINED SYMBOLS
Os_Handler_10ms
Os_Time_Handler
Os_Handler_1ms
