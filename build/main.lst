ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	hadc1
  19              		.section	.bss.hadc1,"aw",%nobits
  20              		.align	2
  23              	hadc1:
  24 0000 00000000 		.space	100
  24      00000000 
  24      00000000 
  24      00000000 
  24      00000000 
  25              		.global	hadc3
  26              		.section	.bss.hadc3,"aw",%nobits
  27              		.align	2
  30              	hadc3:
  31 0000 00000000 		.space	100
  31      00000000 
  31      00000000 
  31      00000000 
  31      00000000 
  32              		.global	hfdcan1
  33              		.section	.bss.hfdcan1,"aw",%nobits
  34              		.align	2
  37              	hfdcan1:
  38 0000 00000000 		.space	236
  38      00000000 
  38      00000000 
  38      00000000 
  38      00000000 
  39              		.global	hfdcan2
  40              		.section	.bss.hfdcan2,"aw",%nobits
  41              		.align	2
  44              	hfdcan2:
  45 0000 00000000 		.space	236
  45      00000000 
  45      00000000 
  45      00000000 
  45      00000000 
  46              		.global	hi2c1
  47              		.section	.bss.hi2c1,"aw",%nobits
  48              		.align	2
  51              	hi2c1:
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 2


  52 0000 00000000 		.space	76
  52      00000000 
  52      00000000 
  52      00000000 
  52      00000000 
  53              		.global	hi2c4
  54              		.section	.bss.hi2c4,"aw",%nobits
  55              		.align	2
  58              	hi2c4:
  59 0000 00000000 		.space	76
  59      00000000 
  59      00000000 
  59      00000000 
  59      00000000 
  60              		.global	hspi5
  61              		.section	.bss.hspi5,"aw",%nobits
  62              		.align	2
  65              	hspi5:
  66 0000 00000000 		.space	136
  66      00000000 
  66      00000000 
  66      00000000 
  66      00000000 
  67              		.global	htim5
  68              		.section	.bss.htim5,"aw",%nobits
  69              		.align	2
  72              	htim5:
  73 0000 00000000 		.space	188
  73      00000000 
  73      00000000 
  73      00000000 
  73      00000000 
  74              		.global	htim15
  75              		.section	.bss.htim15,"aw",%nobits
  76              		.align	2
  79              	htim15:
  80 0000 00000000 		.space	188
  80      00000000 
  80      00000000 
  80      00000000 
  80      00000000 
  81              		.global	htim16
  82              		.section	.bss.htim16,"aw",%nobits
  83              		.align	2
  86              	htim16:
  87 0000 00000000 		.space	188
  87      00000000 
  87      00000000 
  87      00000000 
  87      00000000 
  88              		.global	htim17
  89              		.section	.bss.htim17,"aw",%nobits
  90              		.align	2
  93              	htim17:
  94 0000 00000000 		.space	188
  94      00000000 
  94      00000000 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 3


  94      00000000 
  94      00000000 
  95              		.section	.text.main,"ax",%progbits
  96              		.align	1
  97              		.global	main
  98              		.syntax unified
  99              		.thumb
 100              		.thumb_func
 102              	main:
 103              	.LFB333:
 104              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "os.h"
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c ****  ADC_HandleTypeDef hadc1;
  44:Core/Src/main.c **** ADC_HandleTypeDef hadc3;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** FDCAN_HandleTypeDef hfdcan1;
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 4


  47:Core/Src/main.c **** FDCAN_HandleTypeDef hfdcan2;
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  50:Core/Src/main.c **** I2C_HandleTypeDef hi2c4;
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** SPI_HandleTypeDef hspi5;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** TIM_HandleTypeDef htim5;
  55:Core/Src/main.c **** TIM_HandleTypeDef htim15;
  56:Core/Src/main.c **** TIM_HandleTypeDef htim16;
  57:Core/Src/main.c **** TIM_HandleTypeDef htim17;
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* USER CODE BEGIN PV */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* USER CODE END PV */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  64:Core/Src/main.c **** void SystemClock_Config(void);
  65:Core/Src/main.c **** void PeriphCommonClock_Config(void);
  66:Core/Src/main.c **** static void MX_GPIO_Init(void);
  67:Core/Src/main.c **** static void MX_TIM17_Init(void);
  68:Core/Src/main.c **** static void MX_TIM16_Init(void);
  69:Core/Src/main.c **** static void MX_I2C1_Init(void);
  70:Core/Src/main.c **** static void MX_I2C4_Init(void);
  71:Core/Src/main.c **** static void MX_TIM15_Init(void);
  72:Core/Src/main.c **** static void MX_ADC3_Init(void);
  73:Core/Src/main.c **** static void MX_ADC1_Init(void);
  74:Core/Src/main.c **** static void MX_SPI5_Init(void);
  75:Core/Src/main.c **** static void MX_TIM5_Init(void);
  76:Core/Src/main.c **** static void MX_FDCAN1_Init(void);
  77:Core/Src/main.c **** static void MX_FDCAN2_Init(void);
  78:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** /* USER CODE END PFP */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  83:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** /* USER CODE END 0 */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** /**
  88:Core/Src/main.c ****   * @brief  The application entry point.
  89:Core/Src/main.c ****   * @retval int
  90:Core/Src/main.c ****   */
  91:Core/Src/main.c **** int main(void)
  92:Core/Src/main.c **** {
 105              		.loc 1 92 1
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 16
 108              		@ frame_needed = 1, uses_anonymous_args = 0
 109 0000 80B5     		push	{r7, lr}
 110              	.LCFI0:
 111              		.cfi_def_cfa_offset 8
 112              		.cfi_offset 7, -8
 113              		.cfi_offset 14, -4
 114 0002 84B0     		sub	sp, sp, #16
 115              	.LCFI1:
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 5


 116              		.cfi_def_cfa_offset 24
 117 0004 00AF     		add	r7, sp, #0
 118              	.LCFI2:
 119              		.cfi_def_cfa_register 7
 120              	.LBB48:
 121              	.LBB49:
 122              		.file 2 "Drivers/CMSIS/Include/core_cm7.h"
   1:Drivers/CMSIS/Include/core_cm7.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm7.h ****  * @file     core_cm7.h
   3:Drivers/CMSIS/Include/core_cm7.h ****  * @brief    CMSIS Cortex-M7 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm7.h ****  * @version  V5.1.1
   5:Drivers/CMSIS/Include/core_cm7.h ****  * @date     28. March 2019
   6:Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm7.h **** /*
   8:Drivers/CMSIS/Include/core_cm7.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/core_cm7.h ****  *
  10:Drivers/CMSIS/Include/core_cm7.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/core_cm7.h ****  *
  12:Drivers/CMSIS/Include/core_cm7.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/core_cm7.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/core_cm7.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/core_cm7.h ****  *
  16:Drivers/CMSIS/Include/core_cm7.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/core_cm7.h ****  *
  18:Drivers/CMSIS/Include/core_cm7.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/core_cm7.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/core_cm7.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/core_cm7.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/core_cm7.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/core_cm7.h ****  */
  24:Drivers/CMSIS/Include/core_cm7.h **** 
  25:Drivers/CMSIS/Include/core_cm7.h **** #if   defined ( __ICCARM__ )
  26:Drivers/CMSIS/Include/core_cm7.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:Drivers/CMSIS/Include/core_cm7.h **** #elif defined (__clang__)
  28:Drivers/CMSIS/Include/core_cm7.h ****   #pragma clang system_header   /* treat file as system include file */
  29:Drivers/CMSIS/Include/core_cm7.h **** #endif
  30:Drivers/CMSIS/Include/core_cm7.h **** 
  31:Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CORE_CM7_H_GENERIC
  32:Drivers/CMSIS/Include/core_cm7.h **** #define __CORE_CM7_H_GENERIC
  33:Drivers/CMSIS/Include/core_cm7.h **** 
  34:Drivers/CMSIS/Include/core_cm7.h **** #include <stdint.h>
  35:Drivers/CMSIS/Include/core_cm7.h **** 
  36:Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
  37:Drivers/CMSIS/Include/core_cm7.h ****  extern "C" {
  38:Drivers/CMSIS/Include/core_cm7.h **** #endif
  39:Drivers/CMSIS/Include/core_cm7.h **** 
  40:Drivers/CMSIS/Include/core_cm7.h **** /**
  41:Drivers/CMSIS/Include/core_cm7.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:Drivers/CMSIS/Include/core_cm7.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:Drivers/CMSIS/Include/core_cm7.h **** 
  44:Drivers/CMSIS/Include/core_cm7.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:Drivers/CMSIS/Include/core_cm7.h ****      Function definitions in header files are used to allow 'inlining'.
  46:Drivers/CMSIS/Include/core_cm7.h **** 
  47:Drivers/CMSIS/Include/core_cm7.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:Drivers/CMSIS/Include/core_cm7.h ****      Unions are used for effective representation of core registers.
  49:Drivers/CMSIS/Include/core_cm7.h **** 
  50:Drivers/CMSIS/Include/core_cm7.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 6


  51:Drivers/CMSIS/Include/core_cm7.h ****      Function-like macros are used to allow more efficient code.
  52:Drivers/CMSIS/Include/core_cm7.h ****  */
  53:Drivers/CMSIS/Include/core_cm7.h **** 
  54:Drivers/CMSIS/Include/core_cm7.h **** 
  55:Drivers/CMSIS/Include/core_cm7.h **** /*******************************************************************************
  56:Drivers/CMSIS/Include/core_cm7.h ****  *                 CMSIS definitions
  57:Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
  58:Drivers/CMSIS/Include/core_cm7.h **** /**
  59:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup Cortex_M7
  60:Drivers/CMSIS/Include/core_cm7.h ****   @{
  61:Drivers/CMSIS/Include/core_cm7.h ****  */
  62:Drivers/CMSIS/Include/core_cm7.h **** 
  63:Drivers/CMSIS/Include/core_cm7.h **** #include "cmsis_version.h"
  64:Drivers/CMSIS/Include/core_cm7.h **** 
  65:Drivers/CMSIS/Include/core_cm7.h **** /* CMSIS CM7 definitions */
  66:Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)                  /*!< \deprecated [31:1
  67:Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION_SUB   ( __CM_CMSIS_VERSION_SUB)                  /*!< \deprecated [15:0
  68:Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION       ((__CM7_CMSIS_VERSION_MAIN << 16U) | \
  69:Drivers/CMSIS/Include/core_cm7.h ****                                     __CM7_CMSIS_VERSION_SUB           )      /*!< \deprecated CMSIS
  70:Drivers/CMSIS/Include/core_cm7.h **** 
  71:Drivers/CMSIS/Include/core_cm7.h **** #define __CORTEX_M                (7U)                                       /*!< Cortex-M Core */
  72:Drivers/CMSIS/Include/core_cm7.h **** 
  73:Drivers/CMSIS/Include/core_cm7.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:Drivers/CMSIS/Include/core_cm7.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:Drivers/CMSIS/Include/core_cm7.h **** */
  76:Drivers/CMSIS/Include/core_cm7.h **** #if defined ( __CC_ARM )
  77:Drivers/CMSIS/Include/core_cm7.h ****   #if defined __TARGET_FPU_VFP
  78:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
  80:Drivers/CMSIS/Include/core_cm7.h ****     #else
  81:Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
  83:Drivers/CMSIS/Include/core_cm7.h ****     #endif
  84:Drivers/CMSIS/Include/core_cm7.h ****   #else
  85:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
  86:Drivers/CMSIS/Include/core_cm7.h ****   #endif
  87:Drivers/CMSIS/Include/core_cm7.h **** 
  88:Drivers/CMSIS/Include/core_cm7.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:Drivers/CMSIS/Include/core_cm7.h ****   #if defined __ARM_FP
  90:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
  92:Drivers/CMSIS/Include/core_cm7.h ****     #else
  93:Drivers/CMSIS/Include/core_cm7.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
  95:Drivers/CMSIS/Include/core_cm7.h ****     #endif
  96:Drivers/CMSIS/Include/core_cm7.h ****   #else
  97:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
  98:Drivers/CMSIS/Include/core_cm7.h ****   #endif
  99:Drivers/CMSIS/Include/core_cm7.h **** 
 100:Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __GNUC__ )
 101:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 104:Drivers/CMSIS/Include/core_cm7.h ****     #else
 105:Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 107:Drivers/CMSIS/Include/core_cm7.h ****     #endif
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 7


 108:Drivers/CMSIS/Include/core_cm7.h ****   #else
 109:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 110:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 111:Drivers/CMSIS/Include/core_cm7.h **** 
 112:Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __ICCARM__ )
 113:Drivers/CMSIS/Include/core_cm7.h ****   #if defined __ARMVFP__
 114:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 116:Drivers/CMSIS/Include/core_cm7.h ****     #else
 117:Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 119:Drivers/CMSIS/Include/core_cm7.h ****     #endif
 120:Drivers/CMSIS/Include/core_cm7.h ****   #else
 121:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 122:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 123:Drivers/CMSIS/Include/core_cm7.h **** 
 124:Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __TI_ARM__ )
 125:Drivers/CMSIS/Include/core_cm7.h ****   #if defined __TI_VFP_SUPPORT__
 126:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 128:Drivers/CMSIS/Include/core_cm7.h ****     #else
 129:Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 131:Drivers/CMSIS/Include/core_cm7.h ****     #endif
 132:Drivers/CMSIS/Include/core_cm7.h ****   #else
 133:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 134:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 135:Drivers/CMSIS/Include/core_cm7.h **** 
 136:Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __TASKING__ )
 137:Drivers/CMSIS/Include/core_cm7.h ****   #if defined __FPU_VFP__
 138:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 140:Drivers/CMSIS/Include/core_cm7.h ****     #else
 141:Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 143:Drivers/CMSIS/Include/core_cm7.h ****     #endif
 144:Drivers/CMSIS/Include/core_cm7.h ****   #else
 145:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 146:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 147:Drivers/CMSIS/Include/core_cm7.h **** 
 148:Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __CSMC__ )
 149:Drivers/CMSIS/Include/core_cm7.h ****   #if ( __CSMC__ & 0x400U)
 150:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 152:Drivers/CMSIS/Include/core_cm7.h ****     #else
 153:Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 155:Drivers/CMSIS/Include/core_cm7.h ****     #endif
 156:Drivers/CMSIS/Include/core_cm7.h ****   #else
 157:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 158:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 159:Drivers/CMSIS/Include/core_cm7.h **** 
 160:Drivers/CMSIS/Include/core_cm7.h **** #endif
 161:Drivers/CMSIS/Include/core_cm7.h **** 
 162:Drivers/CMSIS/Include/core_cm7.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:Drivers/CMSIS/Include/core_cm7.h **** 
 164:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 8


 165:Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 166:Drivers/CMSIS/Include/core_cm7.h **** }
 167:Drivers/CMSIS/Include/core_cm7.h **** #endif
 168:Drivers/CMSIS/Include/core_cm7.h **** 
 169:Drivers/CMSIS/Include/core_cm7.h **** #endif /* __CORE_CM7_H_GENERIC */
 170:Drivers/CMSIS/Include/core_cm7.h **** 
 171:Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CMSIS_GENERIC
 172:Drivers/CMSIS/Include/core_cm7.h **** 
 173:Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CORE_CM7_H_DEPENDANT
 174:Drivers/CMSIS/Include/core_cm7.h **** #define __CORE_CM7_H_DEPENDANT
 175:Drivers/CMSIS/Include/core_cm7.h **** 
 176:Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 177:Drivers/CMSIS/Include/core_cm7.h ****  extern "C" {
 178:Drivers/CMSIS/Include/core_cm7.h **** #endif
 179:Drivers/CMSIS/Include/core_cm7.h **** 
 180:Drivers/CMSIS/Include/core_cm7.h **** /* check device defines and use defaults */
 181:Drivers/CMSIS/Include/core_cm7.h **** #if defined __CHECK_DEVICE_DEFINES
 182:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __CM7_REV
 183:Drivers/CMSIS/Include/core_cm7.h ****     #define __CM7_REV               0x0000U
 184:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__CM7_REV not defined in device header file; using default!"
 185:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 186:Drivers/CMSIS/Include/core_cm7.h **** 
 187:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __FPU_PRESENT
 188:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_PRESENT             0U
 189:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 191:Drivers/CMSIS/Include/core_cm7.h **** 
 192:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __MPU_PRESENT
 193:Drivers/CMSIS/Include/core_cm7.h ****     #define __MPU_PRESENT             0U
 194:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 196:Drivers/CMSIS/Include/core_cm7.h **** 
 197:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __ICACHE_PRESENT
 198:Drivers/CMSIS/Include/core_cm7.h ****     #define __ICACHE_PRESENT          0U
 199:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__ICACHE_PRESENT not defined in device header file; using default!"
 200:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 201:Drivers/CMSIS/Include/core_cm7.h **** 
 202:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __DCACHE_PRESENT
 203:Drivers/CMSIS/Include/core_cm7.h ****     #define __DCACHE_PRESENT          0U
 204:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__DCACHE_PRESENT not defined in device header file; using default!"
 205:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 206:Drivers/CMSIS/Include/core_cm7.h **** 
 207:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __DTCM_PRESENT
 208:Drivers/CMSIS/Include/core_cm7.h ****     #define __DTCM_PRESENT            0U
 209:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__DTCM_PRESENT        not defined in device header file; using default!"
 210:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 211:Drivers/CMSIS/Include/core_cm7.h **** 
 212:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __NVIC_PRIO_BITS
 213:Drivers/CMSIS/Include/core_cm7.h ****     #define __NVIC_PRIO_BITS          3U
 214:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 215:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 216:Drivers/CMSIS/Include/core_cm7.h **** 
 217:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __Vendor_SysTickConfig
 218:Drivers/CMSIS/Include/core_cm7.h ****     #define __Vendor_SysTickConfig    0U
 219:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 220:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 221:Drivers/CMSIS/Include/core_cm7.h **** #endif
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 9


 222:Drivers/CMSIS/Include/core_cm7.h **** 
 223:Drivers/CMSIS/Include/core_cm7.h **** /* IO definitions (access restrictions to peripheral registers) */
 224:Drivers/CMSIS/Include/core_cm7.h **** /**
 225:Drivers/CMSIS/Include/core_cm7.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 226:Drivers/CMSIS/Include/core_cm7.h **** 
 227:Drivers/CMSIS/Include/core_cm7.h ****     <strong>IO Type Qualifiers</strong> are used
 228:Drivers/CMSIS/Include/core_cm7.h ****     \li to specify the access to peripheral variables.
 229:Drivers/CMSIS/Include/core_cm7.h ****     \li for automatic generation of peripheral register debug information.
 230:Drivers/CMSIS/Include/core_cm7.h **** */
 231:Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 232:Drivers/CMSIS/Include/core_cm7.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 233:Drivers/CMSIS/Include/core_cm7.h **** #else
 234:Drivers/CMSIS/Include/core_cm7.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 235:Drivers/CMSIS/Include/core_cm7.h **** #endif
 236:Drivers/CMSIS/Include/core_cm7.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 237:Drivers/CMSIS/Include/core_cm7.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 238:Drivers/CMSIS/Include/core_cm7.h **** 
 239:Drivers/CMSIS/Include/core_cm7.h **** /* following defines should be used for structure members */
 240:Drivers/CMSIS/Include/core_cm7.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 241:Drivers/CMSIS/Include/core_cm7.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 242:Drivers/CMSIS/Include/core_cm7.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 243:Drivers/CMSIS/Include/core_cm7.h **** 
 244:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group Cortex_M7 */
 245:Drivers/CMSIS/Include/core_cm7.h **** 
 246:Drivers/CMSIS/Include/core_cm7.h **** 
 247:Drivers/CMSIS/Include/core_cm7.h **** 
 248:Drivers/CMSIS/Include/core_cm7.h **** /*******************************************************************************
 249:Drivers/CMSIS/Include/core_cm7.h ****  *                 Register Abstraction
 250:Drivers/CMSIS/Include/core_cm7.h ****   Core Register contain:
 251:Drivers/CMSIS/Include/core_cm7.h ****   - Core Register
 252:Drivers/CMSIS/Include/core_cm7.h ****   - Core NVIC Register
 253:Drivers/CMSIS/Include/core_cm7.h ****   - Core SCB Register
 254:Drivers/CMSIS/Include/core_cm7.h ****   - Core SysTick Register
 255:Drivers/CMSIS/Include/core_cm7.h ****   - Core Debug Register
 256:Drivers/CMSIS/Include/core_cm7.h ****   - Core MPU Register
 257:Drivers/CMSIS/Include/core_cm7.h ****   - Core FPU Register
 258:Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
 259:Drivers/CMSIS/Include/core_cm7.h **** /**
 260:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 261:Drivers/CMSIS/Include/core_cm7.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 262:Drivers/CMSIS/Include/core_cm7.h **** */
 263:Drivers/CMSIS/Include/core_cm7.h **** 
 264:Drivers/CMSIS/Include/core_cm7.h **** /**
 265:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
 266:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 267:Drivers/CMSIS/Include/core_cm7.h ****   \brief      Core Register type definitions.
 268:Drivers/CMSIS/Include/core_cm7.h ****   @{
 269:Drivers/CMSIS/Include/core_cm7.h ****  */
 270:Drivers/CMSIS/Include/core_cm7.h **** 
 271:Drivers/CMSIS/Include/core_cm7.h **** /**
 272:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 273:Drivers/CMSIS/Include/core_cm7.h ****  */
 274:Drivers/CMSIS/Include/core_cm7.h **** typedef union
 275:Drivers/CMSIS/Include/core_cm7.h **** {
 276:Drivers/CMSIS/Include/core_cm7.h ****   struct
 277:Drivers/CMSIS/Include/core_cm7.h ****   {
 278:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 10


 279:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 280:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 281:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 282:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 283:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 284:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 285:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 286:Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 287:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 288:Drivers/CMSIS/Include/core_cm7.h **** } APSR_Type;
 289:Drivers/CMSIS/Include/core_cm7.h **** 
 290:Drivers/CMSIS/Include/core_cm7.h **** /* APSR Register Definitions */
 291:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 292:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 293:Drivers/CMSIS/Include/core_cm7.h **** 
 294:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 295:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 296:Drivers/CMSIS/Include/core_cm7.h **** 
 297:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 298:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 299:Drivers/CMSIS/Include/core_cm7.h **** 
 300:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 301:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 302:Drivers/CMSIS/Include/core_cm7.h **** 
 303:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 304:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 305:Drivers/CMSIS/Include/core_cm7.h **** 
 306:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 307:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 308:Drivers/CMSIS/Include/core_cm7.h **** 
 309:Drivers/CMSIS/Include/core_cm7.h **** 
 310:Drivers/CMSIS/Include/core_cm7.h **** /**
 311:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 312:Drivers/CMSIS/Include/core_cm7.h ****  */
 313:Drivers/CMSIS/Include/core_cm7.h **** typedef union
 314:Drivers/CMSIS/Include/core_cm7.h **** {
 315:Drivers/CMSIS/Include/core_cm7.h ****   struct
 316:Drivers/CMSIS/Include/core_cm7.h ****   {
 317:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 318:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 319:Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 320:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 321:Drivers/CMSIS/Include/core_cm7.h **** } IPSR_Type;
 322:Drivers/CMSIS/Include/core_cm7.h **** 
 323:Drivers/CMSIS/Include/core_cm7.h **** /* IPSR Register Definitions */
 324:Drivers/CMSIS/Include/core_cm7.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 325:Drivers/CMSIS/Include/core_cm7.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 326:Drivers/CMSIS/Include/core_cm7.h **** 
 327:Drivers/CMSIS/Include/core_cm7.h **** 
 328:Drivers/CMSIS/Include/core_cm7.h **** /**
 329:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 330:Drivers/CMSIS/Include/core_cm7.h ****  */
 331:Drivers/CMSIS/Include/core_cm7.h **** typedef union
 332:Drivers/CMSIS/Include/core_cm7.h **** {
 333:Drivers/CMSIS/Include/core_cm7.h ****   struct
 334:Drivers/CMSIS/Include/core_cm7.h ****   {
 335:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 11


 336:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 337:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 338:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 339:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 340:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 341:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 342:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 343:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 344:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 345:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 346:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 347:Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 348:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 349:Drivers/CMSIS/Include/core_cm7.h **** } xPSR_Type;
 350:Drivers/CMSIS/Include/core_cm7.h **** 
 351:Drivers/CMSIS/Include/core_cm7.h **** /* xPSR Register Definitions */
 352:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 353:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 354:Drivers/CMSIS/Include/core_cm7.h **** 
 355:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 356:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 357:Drivers/CMSIS/Include/core_cm7.h **** 
 358:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 359:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 360:Drivers/CMSIS/Include/core_cm7.h **** 
 361:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 362:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 363:Drivers/CMSIS/Include/core_cm7.h **** 
 364:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 365:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 366:Drivers/CMSIS/Include/core_cm7.h **** 
 367:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 368:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 369:Drivers/CMSIS/Include/core_cm7.h **** 
 370:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 371:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 372:Drivers/CMSIS/Include/core_cm7.h **** 
 373:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 374:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 375:Drivers/CMSIS/Include/core_cm7.h **** 
 376:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 377:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 378:Drivers/CMSIS/Include/core_cm7.h **** 
 379:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 380:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 381:Drivers/CMSIS/Include/core_cm7.h **** 
 382:Drivers/CMSIS/Include/core_cm7.h **** 
 383:Drivers/CMSIS/Include/core_cm7.h **** /**
 384:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Control Registers (CONTROL).
 385:Drivers/CMSIS/Include/core_cm7.h ****  */
 386:Drivers/CMSIS/Include/core_cm7.h **** typedef union
 387:Drivers/CMSIS/Include/core_cm7.h **** {
 388:Drivers/CMSIS/Include/core_cm7.h ****   struct
 389:Drivers/CMSIS/Include/core_cm7.h ****   {
 390:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 391:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 392:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 12


 393:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 394:Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 395:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 396:Drivers/CMSIS/Include/core_cm7.h **** } CONTROL_Type;
 397:Drivers/CMSIS/Include/core_cm7.h **** 
 398:Drivers/CMSIS/Include/core_cm7.h **** /* CONTROL Register Definitions */
 399:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 400:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 401:Drivers/CMSIS/Include/core_cm7.h **** 
 402:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 403:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 404:Drivers/CMSIS/Include/core_cm7.h **** 
 405:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 406:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 407:Drivers/CMSIS/Include/core_cm7.h **** 
 408:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_CORE */
 409:Drivers/CMSIS/Include/core_cm7.h **** 
 410:Drivers/CMSIS/Include/core_cm7.h **** 
 411:Drivers/CMSIS/Include/core_cm7.h **** /**
 412:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
 413:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 414:Drivers/CMSIS/Include/core_cm7.h ****   \brief      Type definitions for the NVIC Registers
 415:Drivers/CMSIS/Include/core_cm7.h ****   @{
 416:Drivers/CMSIS/Include/core_cm7.h ****  */
 417:Drivers/CMSIS/Include/core_cm7.h **** 
 418:Drivers/CMSIS/Include/core_cm7.h **** /**
 419:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 420:Drivers/CMSIS/Include/core_cm7.h ****  */
 421:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 422:Drivers/CMSIS/Include/core_cm7.h **** {
 423:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 424:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[24U];
 425:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 426:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[24U];
 427:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 428:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[24U];
 429:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 430:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[24U];
 431:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 432:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[56U];
 433:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 434:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[644U];
 435:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 436:Drivers/CMSIS/Include/core_cm7.h **** }  NVIC_Type;
 437:Drivers/CMSIS/Include/core_cm7.h **** 
 438:Drivers/CMSIS/Include/core_cm7.h **** /* Software Triggered Interrupt Register Definitions */
 439:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 440:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 441:Drivers/CMSIS/Include/core_cm7.h **** 
 442:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_NVIC */
 443:Drivers/CMSIS/Include/core_cm7.h **** 
 444:Drivers/CMSIS/Include/core_cm7.h **** 
 445:Drivers/CMSIS/Include/core_cm7.h **** /**
 446:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 447:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 448:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Control Block Registers
 449:Drivers/CMSIS/Include/core_cm7.h ****   @{
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 13


 450:Drivers/CMSIS/Include/core_cm7.h ****  */
 451:Drivers/CMSIS/Include/core_cm7.h **** 
 452:Drivers/CMSIS/Include/core_cm7.h **** /**
 453:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Control Block (SCB).
 454:Drivers/CMSIS/Include/core_cm7.h ****  */
 455:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 456:Drivers/CMSIS/Include/core_cm7.h **** {
 457:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 458:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 459:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 460:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 461:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 462:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 463:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint8_t  SHPR[12U];              /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 464:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 465:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 466:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 467:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 468:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 469:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 470:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 471:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_PFR[2U];             /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 472:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_DFR;                 /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 473:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_AFR;                 /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 474:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_MFR[4U];             /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 475:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_ISAR[5U];            /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 476:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
 477:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CLIDR;                  /*!< Offset: 0x078 (R/ )  Cache Level ID register */
 478:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CTR;                    /*!< Offset: 0x07C (R/ )  Cache Type register */
 479:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CCSIDR;                 /*!< Offset: 0x080 (R/ )  Cache Size ID Register */
 480:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CSSELR;                 /*!< Offset: 0x084 (R/W)  Cache Size Selection Register */
 481:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 482:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[93U];
 483:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0x200 ( /W)  Software Triggered Interrupt Reg
 484:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[15U];
 485:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x240 (R/ )  Media and VFP Feature Register 0
 486:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x244 (R/ )  Media and VFP Feature Register 1
 487:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x248 (R/ )  Media and VFP Feature Register 2
 488:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[1U];
 489:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t ICIALLU;                /*!< Offset: 0x250 ( /W)  I-Cache Invalidate All to PoU */
 490:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED6[1U];
 491:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t ICIMVAU;                /*!< Offset: 0x258 ( /W)  I-Cache Invalidate by MVA to PoU
 492:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCIMVAC;                /*!< Offset: 0x25C ( /W)  D-Cache Invalidate by MVA to PoC
 493:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCISW;                  /*!< Offset: 0x260 ( /W)  D-Cache Invalidate by Set-way */
 494:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCMVAU;                /*!< Offset: 0x264 ( /W)  D-Cache Clean by MVA to PoU */
 495:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCMVAC;                /*!< Offset: 0x268 ( /W)  D-Cache Clean by MVA to PoC */
 496:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCSW;                  /*!< Offset: 0x26C ( /W)  D-Cache Clean by Set-way */
 497:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCIMVAC;               /*!< Offset: 0x270 ( /W)  D-Cache Clean and Invalidate by 
 498:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCISW;                 /*!< Offset: 0x274 ( /W)  D-Cache Clean and Invalidate by 
 499:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED7[6U];
 500:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ITCMCR;                 /*!< Offset: 0x290 (R/W)  Instruction Tightly-Coupled Memo
 501:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DTCMCR;                 /*!< Offset: 0x294 (R/W)  Data Tightly-Coupled Memory Cont
 502:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AHBPCR;                 /*!< Offset: 0x298 (R/W)  AHBP Control Register */
 503:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CACR;                   /*!< Offset: 0x29C (R/W)  L1 Cache Control Register */
 504:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AHBSCR;                 /*!< Offset: 0x2A0 (R/W)  AHB Slave Control Register */
 505:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED8[1U];
 506:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ABFSR;                  /*!< Offset: 0x2A8 (R/W)  Auxiliary Bus Fault Status Regis
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 14


 507:Drivers/CMSIS/Include/core_cm7.h **** } SCB_Type;
 508:Drivers/CMSIS/Include/core_cm7.h **** 
 509:Drivers/CMSIS/Include/core_cm7.h **** /* SCB CPUID Register Definitions */
 510:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 511:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 512:Drivers/CMSIS/Include/core_cm7.h **** 
 513:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 514:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 515:Drivers/CMSIS/Include/core_cm7.h **** 
 516:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 517:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 518:Drivers/CMSIS/Include/core_cm7.h **** 
 519:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 520:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 521:Drivers/CMSIS/Include/core_cm7.h **** 
 522:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 523:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 524:Drivers/CMSIS/Include/core_cm7.h **** 
 525:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Interrupt Control State Register Definitions */
 526:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 527:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 528:Drivers/CMSIS/Include/core_cm7.h **** 
 529:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 530:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 531:Drivers/CMSIS/Include/core_cm7.h **** 
 532:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 533:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 534:Drivers/CMSIS/Include/core_cm7.h **** 
 535:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 536:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 537:Drivers/CMSIS/Include/core_cm7.h **** 
 538:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 539:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 540:Drivers/CMSIS/Include/core_cm7.h **** 
 541:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 542:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 543:Drivers/CMSIS/Include/core_cm7.h **** 
 544:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 545:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 546:Drivers/CMSIS/Include/core_cm7.h **** 
 547:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 548:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 549:Drivers/CMSIS/Include/core_cm7.h **** 
 550:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 551:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 552:Drivers/CMSIS/Include/core_cm7.h **** 
 553:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 554:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 555:Drivers/CMSIS/Include/core_cm7.h **** 
 556:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Vector Table Offset Register Definitions */
 557:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 558:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 559:Drivers/CMSIS/Include/core_cm7.h **** 
 560:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 561:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 562:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 563:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 15


 564:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 565:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 566:Drivers/CMSIS/Include/core_cm7.h **** 
 567:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 568:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 569:Drivers/CMSIS/Include/core_cm7.h **** 
 570:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 571:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 572:Drivers/CMSIS/Include/core_cm7.h **** 
 573:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 574:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 575:Drivers/CMSIS/Include/core_cm7.h **** 
 576:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 577:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 578:Drivers/CMSIS/Include/core_cm7.h **** 
 579:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 580:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 581:Drivers/CMSIS/Include/core_cm7.h **** 
 582:Drivers/CMSIS/Include/core_cm7.h **** /* SCB System Control Register Definitions */
 583:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 584:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 585:Drivers/CMSIS/Include/core_cm7.h **** 
 586:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 587:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 588:Drivers/CMSIS/Include/core_cm7.h **** 
 589:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 590:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 591:Drivers/CMSIS/Include/core_cm7.h **** 
 592:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Configuration Control Register Definitions */
 593:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BP_Pos                      18U                                           /*!< SCB 
 594:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BP_Msk                     (1UL << SCB_CCR_BP_Pos)                        /*!< SCB 
 595:Drivers/CMSIS/Include/core_cm7.h **** 
 596:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_IC_Pos                      17U                                           /*!< SCB 
 597:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_IC_Msk                     (1UL << SCB_CCR_IC_Pos)                        /*!< SCB 
 598:Drivers/CMSIS/Include/core_cm7.h **** 
 599:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DC_Pos                      16U                                           /*!< SCB 
 600:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DC_Msk                     (1UL << SCB_CCR_DC_Pos)                        /*!< SCB 
 601:Drivers/CMSIS/Include/core_cm7.h **** 
 602:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 603:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 604:Drivers/CMSIS/Include/core_cm7.h **** 
 605:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 606:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 607:Drivers/CMSIS/Include/core_cm7.h **** 
 608:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 609:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 610:Drivers/CMSIS/Include/core_cm7.h **** 
 611:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 612:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 613:Drivers/CMSIS/Include/core_cm7.h **** 
 614:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 615:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 616:Drivers/CMSIS/Include/core_cm7.h **** 
 617:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 618:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 619:Drivers/CMSIS/Include/core_cm7.h **** 
 620:Drivers/CMSIS/Include/core_cm7.h **** /* SCB System Handler Control and State Register Definitions */
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 16


 621:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 622:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 623:Drivers/CMSIS/Include/core_cm7.h **** 
 624:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 625:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 626:Drivers/CMSIS/Include/core_cm7.h **** 
 627:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 628:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 629:Drivers/CMSIS/Include/core_cm7.h **** 
 630:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 631:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 632:Drivers/CMSIS/Include/core_cm7.h **** 
 633:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 634:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 635:Drivers/CMSIS/Include/core_cm7.h **** 
 636:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 637:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 638:Drivers/CMSIS/Include/core_cm7.h **** 
 639:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 640:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 641:Drivers/CMSIS/Include/core_cm7.h **** 
 642:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 643:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 644:Drivers/CMSIS/Include/core_cm7.h **** 
 645:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 646:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 647:Drivers/CMSIS/Include/core_cm7.h **** 
 648:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 649:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 650:Drivers/CMSIS/Include/core_cm7.h **** 
 651:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 652:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 653:Drivers/CMSIS/Include/core_cm7.h **** 
 654:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 655:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 656:Drivers/CMSIS/Include/core_cm7.h **** 
 657:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 658:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 659:Drivers/CMSIS/Include/core_cm7.h **** 
 660:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 661:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 662:Drivers/CMSIS/Include/core_cm7.h **** 
 663:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Configurable Fault Status Register Definitions */
 664:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 665:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 666:Drivers/CMSIS/Include/core_cm7.h **** 
 667:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 668:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 669:Drivers/CMSIS/Include/core_cm7.h **** 
 670:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 671:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 672:Drivers/CMSIS/Include/core_cm7.h **** 
 673:Drivers/CMSIS/Include/core_cm7.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 674:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 675:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 676:Drivers/CMSIS/Include/core_cm7.h **** 
 677:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 17


 678:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 679:Drivers/CMSIS/Include/core_cm7.h **** 
 680:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 681:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 682:Drivers/CMSIS/Include/core_cm7.h **** 
 683:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 684:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 685:Drivers/CMSIS/Include/core_cm7.h **** 
 686:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 687:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 688:Drivers/CMSIS/Include/core_cm7.h **** 
 689:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 690:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 691:Drivers/CMSIS/Include/core_cm7.h **** 
 692:Drivers/CMSIS/Include/core_cm7.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 693:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 694:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 695:Drivers/CMSIS/Include/core_cm7.h **** 
 696:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 697:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 698:Drivers/CMSIS/Include/core_cm7.h **** 
 699:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 700:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 701:Drivers/CMSIS/Include/core_cm7.h **** 
 702:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 703:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 704:Drivers/CMSIS/Include/core_cm7.h **** 
 705:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 706:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 707:Drivers/CMSIS/Include/core_cm7.h **** 
 708:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 709:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 710:Drivers/CMSIS/Include/core_cm7.h **** 
 711:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 712:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 713:Drivers/CMSIS/Include/core_cm7.h **** 
 714:Drivers/CMSIS/Include/core_cm7.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 715:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 716:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 717:Drivers/CMSIS/Include/core_cm7.h **** 
 718:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 719:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 720:Drivers/CMSIS/Include/core_cm7.h **** 
 721:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 722:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 723:Drivers/CMSIS/Include/core_cm7.h **** 
 724:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 725:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 726:Drivers/CMSIS/Include/core_cm7.h **** 
 727:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 728:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 729:Drivers/CMSIS/Include/core_cm7.h **** 
 730:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 731:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 732:Drivers/CMSIS/Include/core_cm7.h **** 
 733:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Hard Fault Status Register Definitions */
 734:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 18


 735:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 736:Drivers/CMSIS/Include/core_cm7.h **** 
 737:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 738:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 739:Drivers/CMSIS/Include/core_cm7.h **** 
 740:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 741:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 742:Drivers/CMSIS/Include/core_cm7.h **** 
 743:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Debug Fault Status Register Definitions */
 744:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 745:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 746:Drivers/CMSIS/Include/core_cm7.h **** 
 747:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 748:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 749:Drivers/CMSIS/Include/core_cm7.h **** 
 750:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 751:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 752:Drivers/CMSIS/Include/core_cm7.h **** 
 753:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 754:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 755:Drivers/CMSIS/Include/core_cm7.h **** 
 756:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 757:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 758:Drivers/CMSIS/Include/core_cm7.h **** 
 759:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Level ID Register Definitions */
 760:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOUU_Pos                 27U                                            /*!< SCB 
 761:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOUU_Msk                 (7UL << SCB_CLIDR_LOUU_Pos)                    /*!< SCB 
 762:Drivers/CMSIS/Include/core_cm7.h **** 
 763:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOC_Pos                  24U                                            /*!< SCB 
 764:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOC_Msk                  (7UL << SCB_CLIDR_LOC_Pos)                     /*!< SCB 
 765:Drivers/CMSIS/Include/core_cm7.h **** 
 766:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Type Register Definitions */
 767:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_FORMAT_Pos                 29U                                            /*!< SCB 
 768:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_FORMAT_Msk                 (7UL << SCB_CTR_FORMAT_Pos)                    /*!< SCB 
 769:Drivers/CMSIS/Include/core_cm7.h **** 
 770:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_CWG_Pos                    24U                                            /*!< SCB 
 771:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_CWG_Msk                    (0xFUL << SCB_CTR_CWG_Pos)                     /*!< SCB 
 772:Drivers/CMSIS/Include/core_cm7.h **** 
 773:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_ERG_Pos                    20U                                            /*!< SCB 
 774:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_ERG_Msk                    (0xFUL << SCB_CTR_ERG_Pos)                     /*!< SCB 
 775:Drivers/CMSIS/Include/core_cm7.h **** 
 776:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_DMINLINE_Pos               16U                                            /*!< SCB 
 777:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_DMINLINE_Msk               (0xFUL << SCB_CTR_DMINLINE_Pos)                /*!< SCB 
 778:Drivers/CMSIS/Include/core_cm7.h **** 
 779:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_IMINLINE_Pos                0U                                            /*!< SCB 
 780:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_IMINLINE_Msk               (0xFUL /*<< SCB_CTR_IMINLINE_Pos*/)            /*!< SCB 
 781:Drivers/CMSIS/Include/core_cm7.h **** 
 782:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Size ID Register Definitions */
 783:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WT_Pos                  31U                                            /*!< SCB 
 784:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WT_Msk                  (1UL << SCB_CCSIDR_WT_Pos)                     /*!< SCB 
 785:Drivers/CMSIS/Include/core_cm7.h **** 
 786:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WB_Pos                  30U                                            /*!< SCB 
 787:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WB_Msk                  (1UL << SCB_CCSIDR_WB_Pos)                     /*!< SCB 
 788:Drivers/CMSIS/Include/core_cm7.h **** 
 789:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_RA_Pos                  29U                                            /*!< SCB 
 790:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_RA_Msk                  (1UL << SCB_CCSIDR_RA_Pos)                     /*!< SCB 
 791:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 19


 792:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WA_Pos                  28U                                            /*!< SCB 
 793:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WA_Msk                  (1UL << SCB_CCSIDR_WA_Pos)                     /*!< SCB 
 794:Drivers/CMSIS/Include/core_cm7.h **** 
 795:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_NUMSETS_Pos             13U                                            /*!< SCB 
 796:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_NUMSETS_Msk             (0x7FFFUL << SCB_CCSIDR_NUMSETS_Pos)           /*!< SCB 
 797:Drivers/CMSIS/Include/core_cm7.h **** 
 798:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Pos        3U                                            /*!< SCB 
 799:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Msk       (0x3FFUL << SCB_CCSIDR_ASSOCIATIVITY_Pos)      /*!< SCB 
 800:Drivers/CMSIS/Include/core_cm7.h **** 
 801:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_LINESIZE_Pos             0U                                            /*!< SCB 
 802:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_LINESIZE_Msk            (7UL /*<< SCB_CCSIDR_LINESIZE_Pos*/)           /*!< SCB 
 803:Drivers/CMSIS/Include/core_cm7.h **** 
 804:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Size Selection Register Definitions */
 805:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_LEVEL_Pos                1U                                            /*!< SCB 
 806:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_LEVEL_Msk               (7UL << SCB_CSSELR_LEVEL_Pos)                  /*!< SCB 
 807:Drivers/CMSIS/Include/core_cm7.h **** 
 808:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_IND_Pos                  0U                                            /*!< SCB 
 809:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_IND_Msk                 (1UL /*<< SCB_CSSELR_IND_Pos*/)                /*!< SCB 
 810:Drivers/CMSIS/Include/core_cm7.h **** 
 811:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Software Triggered Interrupt Register Definitions */
 812:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_STIR_INTID_Pos                  0U                                            /*!< SCB 
 813:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_STIR_INTID_Msk                 (0x1FFUL /*<< SCB_STIR_INTID_Pos*/)            /*!< SCB 
 814:Drivers/CMSIS/Include/core_cm7.h **** 
 815:Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Invalidate by Set-way Register Definitions */
 816:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_WAY_Pos                  30U                                            /*!< SCB 
 817:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_WAY_Msk                  (3UL << SCB_DCISW_WAY_Pos)                     /*!< SCB 
 818:Drivers/CMSIS/Include/core_cm7.h **** 
 819:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_SET_Pos                   5U                                            /*!< SCB 
 820:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_SET_Msk                  (0x1FFUL << SCB_DCISW_SET_Pos)                 /*!< SCB 
 821:Drivers/CMSIS/Include/core_cm7.h **** 
 822:Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Clean by Set-way Register Definitions */
 823:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_WAY_Pos                  30U                                            /*!< SCB 
 824:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_WAY_Msk                  (3UL << SCB_DCCSW_WAY_Pos)                     /*!< SCB 
 825:Drivers/CMSIS/Include/core_cm7.h **** 
 826:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_SET_Pos                   5U                                            /*!< SCB 
 827:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_SET_Msk                  (0x1FFUL << SCB_DCCSW_SET_Pos)                 /*!< SCB 
 828:Drivers/CMSIS/Include/core_cm7.h **** 
 829:Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Clean and Invalidate by Set-way Register Definitions */
 830:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_WAY_Pos                 30U                                            /*!< SCB 
 831:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_WAY_Msk                 (3UL << SCB_DCCISW_WAY_Pos)                    /*!< SCB 
 832:Drivers/CMSIS/Include/core_cm7.h **** 
 833:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_SET_Pos                  5U                                            /*!< SCB 
 834:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_SET_Msk                 (0x1FFUL << SCB_DCCISW_SET_Pos)                /*!< SCB 
 835:Drivers/CMSIS/Include/core_cm7.h **** 
 836:Drivers/CMSIS/Include/core_cm7.h **** /* Instruction Tightly-Coupled Memory Control Register Definitions */
 837:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_SZ_Pos                   3U                                            /*!< SCB 
 838:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_SZ_Msk                  (0xFUL << SCB_ITCMCR_SZ_Pos)                   /*!< SCB 
 839:Drivers/CMSIS/Include/core_cm7.h **** 
 840:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RETEN_Pos                2U                                            /*!< SCB 
 841:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RETEN_Msk               (1UL << SCB_ITCMCR_RETEN_Pos)                  /*!< SCB 
 842:Drivers/CMSIS/Include/core_cm7.h **** 
 843:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RMW_Pos                  1U                                            /*!< SCB 
 844:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RMW_Msk                 (1UL << SCB_ITCMCR_RMW_Pos)                    /*!< SCB 
 845:Drivers/CMSIS/Include/core_cm7.h **** 
 846:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_EN_Pos                   0U                                            /*!< SCB 
 847:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_EN_Msk                  (1UL /*<< SCB_ITCMCR_EN_Pos*/)                 /*!< SCB 
 848:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 20


 849:Drivers/CMSIS/Include/core_cm7.h **** /* Data Tightly-Coupled Memory Control Register Definitions */
 850:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_SZ_Pos                   3U                                            /*!< SCB 
 851:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_SZ_Msk                  (0xFUL << SCB_DTCMCR_SZ_Pos)                   /*!< SCB 
 852:Drivers/CMSIS/Include/core_cm7.h **** 
 853:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RETEN_Pos                2U                                            /*!< SCB 
 854:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RETEN_Msk               (1UL << SCB_DTCMCR_RETEN_Pos)                   /*!< SCB
 855:Drivers/CMSIS/Include/core_cm7.h **** 
 856:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RMW_Pos                  1U                                            /*!< SCB 
 857:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RMW_Msk                 (1UL << SCB_DTCMCR_RMW_Pos)                    /*!< SCB 
 858:Drivers/CMSIS/Include/core_cm7.h **** 
 859:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_EN_Pos                   0U                                            /*!< SCB 
 860:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_EN_Msk                  (1UL /*<< SCB_DTCMCR_EN_Pos*/)                 /*!< SCB 
 861:Drivers/CMSIS/Include/core_cm7.h **** 
 862:Drivers/CMSIS/Include/core_cm7.h **** /* AHBP Control Register Definitions */
 863:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_SZ_Pos                   1U                                            /*!< SCB 
 864:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_SZ_Msk                  (7UL << SCB_AHBPCR_SZ_Pos)                     /*!< SCB 
 865:Drivers/CMSIS/Include/core_cm7.h **** 
 866:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_EN_Pos                   0U                                            /*!< SCB 
 867:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_EN_Msk                  (1UL /*<< SCB_AHBPCR_EN_Pos*/)                 /*!< SCB 
 868:Drivers/CMSIS/Include/core_cm7.h **** 
 869:Drivers/CMSIS/Include/core_cm7.h **** /* L1 Cache Control Register Definitions */
 870:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_FORCEWT_Pos                2U                                            /*!< SCB 
 871:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_FORCEWT_Msk               (1UL << SCB_CACR_FORCEWT_Pos)                  /*!< SCB 
 872:Drivers/CMSIS/Include/core_cm7.h **** 
 873:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_ECCEN_Pos                  1U                                            /*!< SCB 
 874:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_ECCEN_Msk                 (1UL << SCB_CACR_ECCEN_Pos)                    /*!< SCB 
 875:Drivers/CMSIS/Include/core_cm7.h **** 
 876:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_SIWT_Pos                   0U                                            /*!< SCB 
 877:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_SIWT_Msk                  (1UL /*<< SCB_CACR_SIWT_Pos*/)                 /*!< SCB 
 878:Drivers/CMSIS/Include/core_cm7.h **** 
 879:Drivers/CMSIS/Include/core_cm7.h **** /* AHBS Control Register Definitions */
 880:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_INITCOUNT_Pos           11U                                            /*!< SCB 
 881:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_INITCOUNT_Msk           (0x1FUL << SCB_AHBPCR_INITCOUNT_Pos)           /*!< SCB 
 882:Drivers/CMSIS/Include/core_cm7.h **** 
 883:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_TPRI_Pos                 2U                                            /*!< SCB 
 884:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_TPRI_Msk                (0x1FFUL << SCB_AHBPCR_TPRI_Pos)               /*!< SCB 
 885:Drivers/CMSIS/Include/core_cm7.h **** 
 886:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_CTL_Pos                  0U                                            /*!< SCB 
 887:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_CTL_Msk                 (3UL /*<< SCB_AHBPCR_CTL_Pos*/)                /*!< SCB 
 888:Drivers/CMSIS/Include/core_cm7.h **** 
 889:Drivers/CMSIS/Include/core_cm7.h **** /* Auxiliary Bus Fault Status Register Definitions */
 890:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIMTYPE_Pos              8U                                            /*!< SCB 
 891:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIMTYPE_Msk             (3UL << SCB_ABFSR_AXIMTYPE_Pos)                /*!< SCB 
 892:Drivers/CMSIS/Include/core_cm7.h **** 
 893:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_EPPB_Pos                  4U                                            /*!< SCB 
 894:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_EPPB_Msk                 (1UL << SCB_ABFSR_EPPB_Pos)                    /*!< SCB 
 895:Drivers/CMSIS/Include/core_cm7.h **** 
 896:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIM_Pos                  3U                                            /*!< SCB 
 897:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIM_Msk                 (1UL << SCB_ABFSR_AXIM_Pos)                    /*!< SCB 
 898:Drivers/CMSIS/Include/core_cm7.h **** 
 899:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AHBP_Pos                  2U                                            /*!< SCB 
 900:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AHBP_Msk                 (1UL << SCB_ABFSR_AHBP_Pos)                    /*!< SCB 
 901:Drivers/CMSIS/Include/core_cm7.h **** 
 902:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_DTCM_Pos                  1U                                            /*!< SCB 
 903:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_DTCM_Msk                 (1UL << SCB_ABFSR_DTCM_Pos)                    /*!< SCB 
 904:Drivers/CMSIS/Include/core_cm7.h **** 
 905:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_ITCM_Pos                  0U                                            /*!< SCB 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 21


 906:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_ITCM_Msk                 (1UL /*<< SCB_ABFSR_ITCM_Pos*/)                /*!< SCB 
 907:Drivers/CMSIS/Include/core_cm7.h **** 
 908:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SCB */
 909:Drivers/CMSIS/Include/core_cm7.h **** 
 910:Drivers/CMSIS/Include/core_cm7.h **** 
 911:Drivers/CMSIS/Include/core_cm7.h **** /**
 912:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 913:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 914:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 915:Drivers/CMSIS/Include/core_cm7.h ****   @{
 916:Drivers/CMSIS/Include/core_cm7.h ****  */
 917:Drivers/CMSIS/Include/core_cm7.h **** 
 918:Drivers/CMSIS/Include/core_cm7.h **** /**
 919:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 920:Drivers/CMSIS/Include/core_cm7.h ****  */
 921:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 922:Drivers/CMSIS/Include/core_cm7.h **** {
 923:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
 924:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 925:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 926:Drivers/CMSIS/Include/core_cm7.h **** } SCnSCB_Type;
 927:Drivers/CMSIS/Include/core_cm7.h **** 
 928:Drivers/CMSIS/Include/core_cm7.h **** /* Interrupt Controller Type Register Definitions */
 929:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 930:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 931:Drivers/CMSIS/Include/core_cm7.h **** 
 932:Drivers/CMSIS/Include/core_cm7.h **** /* Auxiliary Control Register Definitions */
 933:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISDYNADD_Pos         26U                                         /*!< ACTLR: 
 934:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISDYNADD_Msk         (1UL << SCnSCB_ACTLR_DISDYNADD_Pos)         /*!< ACTLR: 
 935:Drivers/CMSIS/Include/core_cm7.h **** 
 936:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISISSCH1_Pos         21U                                         /*!< ACTLR: 
 937:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISISSCH1_Msk         (0x1FUL << SCnSCB_ACTLR_DISISSCH1_Pos)      /*!< ACTLR: 
 938:Drivers/CMSIS/Include/core_cm7.h **** 
 939:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISDI_Pos             16U                                         /*!< ACTLR: 
 940:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISDI_Msk             (0x1FUL << SCnSCB_ACTLR_DISDI_Pos)          /*!< ACTLR: 
 941:Drivers/CMSIS/Include/core_cm7.h **** 
 942:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISCRITAXIRUR_Pos     15U                                         /*!< ACTLR: 
 943:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISCRITAXIRUR_Msk     (1UL << SCnSCB_ACTLR_DISCRITAXIRUR_Pos)     /*!< ACTLR: 
 944:Drivers/CMSIS/Include/core_cm7.h **** 
 945:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISBTACALLOC_Pos      14U                                         /*!< ACTLR: 
 946:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISBTACALLOC_Msk      (1UL << SCnSCB_ACTLR_DISBTACALLOC_Pos)      /*!< ACTLR: 
 947:Drivers/CMSIS/Include/core_cm7.h **** 
 948:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISBTACREAD_Pos       13U                                         /*!< ACTLR: 
 949:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISBTACREAD_Msk       (1UL << SCnSCB_ACTLR_DISBTACREAD_Pos)       /*!< ACTLR: 
 950:Drivers/CMSIS/Include/core_cm7.h **** 
 951:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISITMATBFLUSH_Pos    12U                                         /*!< ACTLR: 
 952:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISITMATBFLUSH_Msk    (1UL << SCnSCB_ACTLR_DISITMATBFLUSH_Pos)    /*!< ACTLR: 
 953:Drivers/CMSIS/Include/core_cm7.h **** 
 954:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISRAMODE_Pos         11U                                         /*!< ACTLR: 
 955:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISRAMODE_Msk         (1UL << SCnSCB_ACTLR_DISRAMODE_Pos)         /*!< ACTLR: 
 956:Drivers/CMSIS/Include/core_cm7.h **** 
 957:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_FPEXCODIS_Pos         10U                                         /*!< ACTLR: 
 958:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_FPEXCODIS_Msk         (1UL << SCnSCB_ACTLR_FPEXCODIS_Pos)         /*!< ACTLR: 
 959:Drivers/CMSIS/Include/core_cm7.h **** 
 960:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 961:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 962:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 22


 963:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 964:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 965:Drivers/CMSIS/Include/core_cm7.h **** 
 966:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SCnotSCB */
 967:Drivers/CMSIS/Include/core_cm7.h **** 
 968:Drivers/CMSIS/Include/core_cm7.h **** 
 969:Drivers/CMSIS/Include/core_cm7.h **** /**
 970:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 971:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 972:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Timer Registers.
 973:Drivers/CMSIS/Include/core_cm7.h ****   @{
 974:Drivers/CMSIS/Include/core_cm7.h ****  */
 975:Drivers/CMSIS/Include/core_cm7.h **** 
 976:Drivers/CMSIS/Include/core_cm7.h **** /**
 977:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Timer (SysTick).
 978:Drivers/CMSIS/Include/core_cm7.h ****  */
 979:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 980:Drivers/CMSIS/Include/core_cm7.h **** {
 981:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 982:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 983:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 984:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 985:Drivers/CMSIS/Include/core_cm7.h **** } SysTick_Type;
 986:Drivers/CMSIS/Include/core_cm7.h **** 
 987:Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Control / Status Register Definitions */
 988:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 989:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 990:Drivers/CMSIS/Include/core_cm7.h **** 
 991:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 992:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 993:Drivers/CMSIS/Include/core_cm7.h **** 
 994:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 995:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 996:Drivers/CMSIS/Include/core_cm7.h **** 
 997:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 998:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 999:Drivers/CMSIS/Include/core_cm7.h **** 
1000:Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Reload Register Definitions */
1001:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
1002:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
1003:Drivers/CMSIS/Include/core_cm7.h **** 
1004:Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Current Register Definitions */
1005:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
1006:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
1007:Drivers/CMSIS/Include/core_cm7.h **** 
1008:Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Calibration Register Definitions */
1009:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
1010:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
1011:Drivers/CMSIS/Include/core_cm7.h **** 
1012:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
1013:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
1014:Drivers/CMSIS/Include/core_cm7.h **** 
1015:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
1016:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
1017:Drivers/CMSIS/Include/core_cm7.h **** 
1018:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SysTick */
1019:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 23


1020:Drivers/CMSIS/Include/core_cm7.h **** 
1021:Drivers/CMSIS/Include/core_cm7.h **** /**
1022:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1023:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
1024:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
1025:Drivers/CMSIS/Include/core_cm7.h ****   @{
1026:Drivers/CMSIS/Include/core_cm7.h ****  */
1027:Drivers/CMSIS/Include/core_cm7.h **** 
1028:Drivers/CMSIS/Include/core_cm7.h **** /**
1029:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
1030:Drivers/CMSIS/Include/core_cm7.h ****  */
1031:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1032:Drivers/CMSIS/Include/core_cm7.h **** {
1033:Drivers/CMSIS/Include/core_cm7.h ****   __OM  union
1034:Drivers/CMSIS/Include/core_cm7.h ****   {
1035:Drivers/CMSIS/Include/core_cm7.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
1036:Drivers/CMSIS/Include/core_cm7.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
1037:Drivers/CMSIS/Include/core_cm7.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
1038:Drivers/CMSIS/Include/core_cm7.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
1039:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[864U];
1040:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
1041:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[15U];
1042:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
1043:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[15U];
1044:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
1045:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[32U];
1046:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[43U];
1047:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
1048:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
1049:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[6U];
1050:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
1051:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
1052:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
1053:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
1054:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
1055:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
1056:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
1057:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
1058:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
1059:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
1060:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
1061:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
1062:Drivers/CMSIS/Include/core_cm7.h **** } ITM_Type;
1063:Drivers/CMSIS/Include/core_cm7.h **** 
1064:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Trace Privilege Register Definitions */
1065:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
1066:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
1067:Drivers/CMSIS/Include/core_cm7.h **** 
1068:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Trace Control Register Definitions */
1069:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
1070:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
1071:Drivers/CMSIS/Include/core_cm7.h **** 
1072:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
1073:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
1074:Drivers/CMSIS/Include/core_cm7.h **** 
1075:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
1076:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 24


1077:Drivers/CMSIS/Include/core_cm7.h **** 
1078:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
1079:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
1080:Drivers/CMSIS/Include/core_cm7.h **** 
1081:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
1082:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
1083:Drivers/CMSIS/Include/core_cm7.h **** 
1084:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
1085:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
1086:Drivers/CMSIS/Include/core_cm7.h **** 
1087:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
1088:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
1089:Drivers/CMSIS/Include/core_cm7.h **** 
1090:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
1091:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
1092:Drivers/CMSIS/Include/core_cm7.h **** 
1093:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
1094:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
1095:Drivers/CMSIS/Include/core_cm7.h **** 
1096:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Lock Status Register Definitions */
1097:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
1098:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
1099:Drivers/CMSIS/Include/core_cm7.h **** 
1100:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
1101:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
1102:Drivers/CMSIS/Include/core_cm7.h **** 
1103:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
1104:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
1105:Drivers/CMSIS/Include/core_cm7.h **** 
1106:Drivers/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_ITM */
1107:Drivers/CMSIS/Include/core_cm7.h **** 
1108:Drivers/CMSIS/Include/core_cm7.h **** 
1109:Drivers/CMSIS/Include/core_cm7.h **** /**
1110:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1111:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
1112:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
1113:Drivers/CMSIS/Include/core_cm7.h ****   @{
1114:Drivers/CMSIS/Include/core_cm7.h ****  */
1115:Drivers/CMSIS/Include/core_cm7.h **** 
1116:Drivers/CMSIS/Include/core_cm7.h **** /**
1117:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
1118:Drivers/CMSIS/Include/core_cm7.h ****  */
1119:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1120:Drivers/CMSIS/Include/core_cm7.h **** {
1121:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
1122:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
1123:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
1124:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
1125:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
1126:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
1127:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
1128:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
1129:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
1130:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
1131:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
1132:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
1133:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 25


1134:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
1135:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
1136:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[1U];
1137:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
1138:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
1139:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
1140:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[1U];
1141:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
1142:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
1143:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
1144:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[981U];
1145:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 (  W)  Lock Access Register */
1146:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R  )  Lock Status Register */
1147:Drivers/CMSIS/Include/core_cm7.h **** } DWT_Type;
1148:Drivers/CMSIS/Include/core_cm7.h **** 
1149:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Control Register Definitions */
1150:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
1151:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
1152:Drivers/CMSIS/Include/core_cm7.h **** 
1153:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
1154:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
1155:Drivers/CMSIS/Include/core_cm7.h **** 
1156:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
1157:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
1158:Drivers/CMSIS/Include/core_cm7.h **** 
1159:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
1160:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
1161:Drivers/CMSIS/Include/core_cm7.h **** 
1162:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
1163:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
1164:Drivers/CMSIS/Include/core_cm7.h **** 
1165:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
1166:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
1167:Drivers/CMSIS/Include/core_cm7.h **** 
1168:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
1169:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
1170:Drivers/CMSIS/Include/core_cm7.h **** 
1171:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
1172:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
1173:Drivers/CMSIS/Include/core_cm7.h **** 
1174:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
1175:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
1176:Drivers/CMSIS/Include/core_cm7.h **** 
1177:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
1178:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
1179:Drivers/CMSIS/Include/core_cm7.h **** 
1180:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
1181:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
1182:Drivers/CMSIS/Include/core_cm7.h **** 
1183:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
1184:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
1185:Drivers/CMSIS/Include/core_cm7.h **** 
1186:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
1187:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
1188:Drivers/CMSIS/Include/core_cm7.h **** 
1189:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
1190:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 26


1191:Drivers/CMSIS/Include/core_cm7.h **** 
1192:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
1193:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
1194:Drivers/CMSIS/Include/core_cm7.h **** 
1195:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
1196:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
1197:Drivers/CMSIS/Include/core_cm7.h **** 
1198:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
1199:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
1200:Drivers/CMSIS/Include/core_cm7.h **** 
1201:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
1202:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
1203:Drivers/CMSIS/Include/core_cm7.h **** 
1204:Drivers/CMSIS/Include/core_cm7.h **** /* DWT CPI Count Register Definitions */
1205:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
1206:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
1207:Drivers/CMSIS/Include/core_cm7.h **** 
1208:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Exception Overhead Count Register Definitions */
1209:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
1210:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
1211:Drivers/CMSIS/Include/core_cm7.h **** 
1212:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Sleep Count Register Definitions */
1213:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
1214:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
1215:Drivers/CMSIS/Include/core_cm7.h **** 
1216:Drivers/CMSIS/Include/core_cm7.h **** /* DWT LSU Count Register Definitions */
1217:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
1218:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
1219:Drivers/CMSIS/Include/core_cm7.h **** 
1220:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Folded-instruction Count Register Definitions */
1221:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
1222:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1223:Drivers/CMSIS/Include/core_cm7.h **** 
1224:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Comparator Mask Register Definitions */
1225:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1226:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1227:Drivers/CMSIS/Include/core_cm7.h **** 
1228:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Comparator Function Register Definitions */
1229:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1230:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1231:Drivers/CMSIS/Include/core_cm7.h **** 
1232:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1233:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1234:Drivers/CMSIS/Include/core_cm7.h **** 
1235:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1236:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1237:Drivers/CMSIS/Include/core_cm7.h **** 
1238:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1239:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1240:Drivers/CMSIS/Include/core_cm7.h **** 
1241:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1242:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1243:Drivers/CMSIS/Include/core_cm7.h **** 
1244:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1245:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1246:Drivers/CMSIS/Include/core_cm7.h **** 
1247:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 27


1248:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1249:Drivers/CMSIS/Include/core_cm7.h **** 
1250:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1251:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1252:Drivers/CMSIS/Include/core_cm7.h **** 
1253:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1254:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1255:Drivers/CMSIS/Include/core_cm7.h **** 
1256:Drivers/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_DWT */
1257:Drivers/CMSIS/Include/core_cm7.h **** 
1258:Drivers/CMSIS/Include/core_cm7.h **** 
1259:Drivers/CMSIS/Include/core_cm7.h **** /**
1260:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1261:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1262:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1263:Drivers/CMSIS/Include/core_cm7.h ****   @{
1264:Drivers/CMSIS/Include/core_cm7.h ****  */
1265:Drivers/CMSIS/Include/core_cm7.h **** 
1266:Drivers/CMSIS/Include/core_cm7.h **** /**
1267:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1268:Drivers/CMSIS/Include/core_cm7.h ****  */
1269:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1270:Drivers/CMSIS/Include/core_cm7.h **** {
1271:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1272:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1273:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[2U];
1274:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1275:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[55U];
1276:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1277:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[131U];
1278:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1279:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1280:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1281:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[759U];
1282:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1283:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1284:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1285:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[1U];
1286:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1287:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1288:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1289:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[39U];
1290:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1291:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1292:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED7[8U];
1293:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1294:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1295:Drivers/CMSIS/Include/core_cm7.h **** } TPI_Type;
1296:Drivers/CMSIS/Include/core_cm7.h **** 
1297:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1298:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1299:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1300:Drivers/CMSIS/Include/core_cm7.h **** 
1301:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Selected Pin Protocol Register Definitions */
1302:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1303:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1304:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 28


1305:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Formatter and Flush Status Register Definitions */
1306:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1307:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1308:Drivers/CMSIS/Include/core_cm7.h **** 
1309:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1310:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1311:Drivers/CMSIS/Include/core_cm7.h **** 
1312:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1313:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1314:Drivers/CMSIS/Include/core_cm7.h **** 
1315:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1316:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1317:Drivers/CMSIS/Include/core_cm7.h **** 
1318:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Formatter and Flush Control Register Definitions */
1319:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1320:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1321:Drivers/CMSIS/Include/core_cm7.h **** 
1322:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1323:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1324:Drivers/CMSIS/Include/core_cm7.h **** 
1325:Drivers/CMSIS/Include/core_cm7.h **** /* TPI TRIGGER Register Definitions */
1326:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1327:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1328:Drivers/CMSIS/Include/core_cm7.h **** 
1329:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1330:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1331:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1332:Drivers/CMSIS/Include/core_cm7.h **** 
1333:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1334:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1335:Drivers/CMSIS/Include/core_cm7.h **** 
1336:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1337:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1338:Drivers/CMSIS/Include/core_cm7.h **** 
1339:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1340:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1341:Drivers/CMSIS/Include/core_cm7.h **** 
1342:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1343:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1344:Drivers/CMSIS/Include/core_cm7.h **** 
1345:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1346:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1347:Drivers/CMSIS/Include/core_cm7.h **** 
1348:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1349:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1350:Drivers/CMSIS/Include/core_cm7.h **** 
1351:Drivers/CMSIS/Include/core_cm7.h **** /* TPI ITATBCTR2 Register Definitions */
1352:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1353:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1354:Drivers/CMSIS/Include/core_cm7.h **** 
1355:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1356:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1357:Drivers/CMSIS/Include/core_cm7.h **** 
1358:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1359:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1360:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1361:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 29


1362:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1363:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1364:Drivers/CMSIS/Include/core_cm7.h **** 
1365:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1366:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1367:Drivers/CMSIS/Include/core_cm7.h **** 
1368:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1369:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1370:Drivers/CMSIS/Include/core_cm7.h **** 
1371:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1372:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1373:Drivers/CMSIS/Include/core_cm7.h **** 
1374:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1375:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1376:Drivers/CMSIS/Include/core_cm7.h **** 
1377:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1378:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1379:Drivers/CMSIS/Include/core_cm7.h **** 
1380:Drivers/CMSIS/Include/core_cm7.h **** /* TPI ITATBCTR0 Register Definitions */
1381:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1382:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1383:Drivers/CMSIS/Include/core_cm7.h **** 
1384:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1385:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1386:Drivers/CMSIS/Include/core_cm7.h **** 
1387:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration Mode Control Register Definitions */
1388:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1389:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1390:Drivers/CMSIS/Include/core_cm7.h **** 
1391:Drivers/CMSIS/Include/core_cm7.h **** /* TPI DEVID Register Definitions */
1392:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1393:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1394:Drivers/CMSIS/Include/core_cm7.h **** 
1395:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1396:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1397:Drivers/CMSIS/Include/core_cm7.h **** 
1398:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1399:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1400:Drivers/CMSIS/Include/core_cm7.h **** 
1401:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1402:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1403:Drivers/CMSIS/Include/core_cm7.h **** 
1404:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1405:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1406:Drivers/CMSIS/Include/core_cm7.h **** 
1407:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1408:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1409:Drivers/CMSIS/Include/core_cm7.h **** 
1410:Drivers/CMSIS/Include/core_cm7.h **** /* TPI DEVTYPE Register Definitions */
1411:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1412:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1413:Drivers/CMSIS/Include/core_cm7.h **** 
1414:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1415:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1416:Drivers/CMSIS/Include/core_cm7.h **** 
1417:Drivers/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_TPI */
1418:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 30


1419:Drivers/CMSIS/Include/core_cm7.h **** 
1420:Drivers/CMSIS/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1421:Drivers/CMSIS/Include/core_cm7.h **** /**
1422:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1423:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1424:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1425:Drivers/CMSIS/Include/core_cm7.h ****   @{
1426:Drivers/CMSIS/Include/core_cm7.h ****  */
1427:Drivers/CMSIS/Include/core_cm7.h **** 
1428:Drivers/CMSIS/Include/core_cm7.h **** /**
1429:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1430:Drivers/CMSIS/Include/core_cm7.h ****  */
1431:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1432:Drivers/CMSIS/Include/core_cm7.h **** {
1433:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1434:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1435:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1436:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1437:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1438:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1439:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1440:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1441:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1442:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1443:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1444:Drivers/CMSIS/Include/core_cm7.h **** } MPU_Type;
1445:Drivers/CMSIS/Include/core_cm7.h **** 
1446:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_RALIASES                  4U
1447:Drivers/CMSIS/Include/core_cm7.h **** 
1448:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Type Register Definitions */
1449:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1450:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1451:Drivers/CMSIS/Include/core_cm7.h **** 
1452:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1453:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1454:Drivers/CMSIS/Include/core_cm7.h **** 
1455:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1456:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1457:Drivers/CMSIS/Include/core_cm7.h **** 
1458:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Control Register Definitions */
1459:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1460:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1461:Drivers/CMSIS/Include/core_cm7.h **** 
1462:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1463:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1464:Drivers/CMSIS/Include/core_cm7.h **** 
1465:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1466:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1467:Drivers/CMSIS/Include/core_cm7.h **** 
1468:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Number Register Definitions */
1469:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1470:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1471:Drivers/CMSIS/Include/core_cm7.h **** 
1472:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Base Address Register Definitions */
1473:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1474:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1475:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 31


1476:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1477:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1478:Drivers/CMSIS/Include/core_cm7.h **** 
1479:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1480:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1481:Drivers/CMSIS/Include/core_cm7.h **** 
1482:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Attribute and Size Register Definitions */
1483:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1484:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1485:Drivers/CMSIS/Include/core_cm7.h **** 
1486:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1487:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1488:Drivers/CMSIS/Include/core_cm7.h **** 
1489:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1490:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1491:Drivers/CMSIS/Include/core_cm7.h **** 
1492:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1493:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1494:Drivers/CMSIS/Include/core_cm7.h **** 
1495:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1496:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1497:Drivers/CMSIS/Include/core_cm7.h **** 
1498:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1499:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1500:Drivers/CMSIS/Include/core_cm7.h **** 
1501:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1502:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1503:Drivers/CMSIS/Include/core_cm7.h **** 
1504:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1505:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1506:Drivers/CMSIS/Include/core_cm7.h **** 
1507:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1508:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1509:Drivers/CMSIS/Include/core_cm7.h **** 
1510:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1511:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1512:Drivers/CMSIS/Include/core_cm7.h **** 
1513:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_MPU */
1514:Drivers/CMSIS/Include/core_cm7.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1515:Drivers/CMSIS/Include/core_cm7.h **** 
1516:Drivers/CMSIS/Include/core_cm7.h **** 
1517:Drivers/CMSIS/Include/core_cm7.h **** /**
1518:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1519:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1520:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1521:Drivers/CMSIS/Include/core_cm7.h ****   @{
1522:Drivers/CMSIS/Include/core_cm7.h ****  */
1523:Drivers/CMSIS/Include/core_cm7.h **** 
1524:Drivers/CMSIS/Include/core_cm7.h **** /**
1525:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1526:Drivers/CMSIS/Include/core_cm7.h ****  */
1527:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1528:Drivers/CMSIS/Include/core_cm7.h **** {
1529:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
1530:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1531:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1532:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 32


1533:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1534:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1535:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1536:Drivers/CMSIS/Include/core_cm7.h **** } FPU_Type;
1537:Drivers/CMSIS/Include/core_cm7.h **** 
1538:Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Context Control Register Definitions */
1539:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1540:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1541:Drivers/CMSIS/Include/core_cm7.h **** 
1542:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1543:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1544:Drivers/CMSIS/Include/core_cm7.h **** 
1545:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1546:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1547:Drivers/CMSIS/Include/core_cm7.h **** 
1548:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1549:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1550:Drivers/CMSIS/Include/core_cm7.h **** 
1551:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1552:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1553:Drivers/CMSIS/Include/core_cm7.h **** 
1554:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1555:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1556:Drivers/CMSIS/Include/core_cm7.h **** 
1557:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1558:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1559:Drivers/CMSIS/Include/core_cm7.h **** 
1560:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1561:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1562:Drivers/CMSIS/Include/core_cm7.h **** 
1563:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1564:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1565:Drivers/CMSIS/Include/core_cm7.h **** 
1566:Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Context Address Register Definitions */
1567:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1568:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1569:Drivers/CMSIS/Include/core_cm7.h **** 
1570:Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Default Status Control Register Definitions */
1571:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1572:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1573:Drivers/CMSIS/Include/core_cm7.h **** 
1574:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1575:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1576:Drivers/CMSIS/Include/core_cm7.h **** 
1577:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1578:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1579:Drivers/CMSIS/Include/core_cm7.h **** 
1580:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1581:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1582:Drivers/CMSIS/Include/core_cm7.h **** 
1583:Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 0 Definitions */
1584:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1585:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1586:Drivers/CMSIS/Include/core_cm7.h **** 
1587:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1588:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1589:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 33


1590:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1591:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1592:Drivers/CMSIS/Include/core_cm7.h **** 
1593:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1594:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1595:Drivers/CMSIS/Include/core_cm7.h **** 
1596:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1597:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1598:Drivers/CMSIS/Include/core_cm7.h **** 
1599:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1600:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1601:Drivers/CMSIS/Include/core_cm7.h **** 
1602:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1603:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1604:Drivers/CMSIS/Include/core_cm7.h **** 
1605:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1606:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1607:Drivers/CMSIS/Include/core_cm7.h **** 
1608:Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 1 Definitions */
1609:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1610:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1611:Drivers/CMSIS/Include/core_cm7.h **** 
1612:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1613:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1614:Drivers/CMSIS/Include/core_cm7.h **** 
1615:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1616:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1617:Drivers/CMSIS/Include/core_cm7.h **** 
1618:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1619:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1620:Drivers/CMSIS/Include/core_cm7.h **** 
1621:Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 2 Definitions */
1622:Drivers/CMSIS/Include/core_cm7.h **** 
1623:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR2_VFP_Misc_Pos              4U                                            /*!< MVFR
1624:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR2_VFP_Misc_Msk             (0xFUL << FPU_MVFR2_VFP_Misc_Pos)              /*!< MVFR
1625:Drivers/CMSIS/Include/core_cm7.h **** 
1626:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_FPU */
1627:Drivers/CMSIS/Include/core_cm7.h **** 
1628:Drivers/CMSIS/Include/core_cm7.h **** 
1629:Drivers/CMSIS/Include/core_cm7.h **** /**
1630:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1631:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1632:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Core Debug Registers
1633:Drivers/CMSIS/Include/core_cm7.h ****   @{
1634:Drivers/CMSIS/Include/core_cm7.h ****  */
1635:Drivers/CMSIS/Include/core_cm7.h **** 
1636:Drivers/CMSIS/Include/core_cm7.h **** /**
1637:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1638:Drivers/CMSIS/Include/core_cm7.h ****  */
1639:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1640:Drivers/CMSIS/Include/core_cm7.h **** {
1641:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1642:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1643:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1644:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1645:Drivers/CMSIS/Include/core_cm7.h **** } CoreDebug_Type;
1646:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 34


1647:Drivers/CMSIS/Include/core_cm7.h **** /* Debug Halting Control and Status Register Definitions */
1648:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1649:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1650:Drivers/CMSIS/Include/core_cm7.h **** 
1651:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1652:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1653:Drivers/CMSIS/Include/core_cm7.h **** 
1654:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1655:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1656:Drivers/CMSIS/Include/core_cm7.h **** 
1657:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1658:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1659:Drivers/CMSIS/Include/core_cm7.h **** 
1660:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1661:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1662:Drivers/CMSIS/Include/core_cm7.h **** 
1663:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1664:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1665:Drivers/CMSIS/Include/core_cm7.h **** 
1666:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1667:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1668:Drivers/CMSIS/Include/core_cm7.h **** 
1669:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1670:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1671:Drivers/CMSIS/Include/core_cm7.h **** 
1672:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1673:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1674:Drivers/CMSIS/Include/core_cm7.h **** 
1675:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1676:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1677:Drivers/CMSIS/Include/core_cm7.h **** 
1678:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1679:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1680:Drivers/CMSIS/Include/core_cm7.h **** 
1681:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1682:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1683:Drivers/CMSIS/Include/core_cm7.h **** 
1684:Drivers/CMSIS/Include/core_cm7.h **** /* Debug Core Register Selector Register Definitions */
1685:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1686:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1687:Drivers/CMSIS/Include/core_cm7.h **** 
1688:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1689:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1690:Drivers/CMSIS/Include/core_cm7.h **** 
1691:Drivers/CMSIS/Include/core_cm7.h **** /* Debug Exception and Monitor Control Register Definitions */
1692:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1693:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1694:Drivers/CMSIS/Include/core_cm7.h **** 
1695:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1696:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1697:Drivers/CMSIS/Include/core_cm7.h **** 
1698:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1699:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1700:Drivers/CMSIS/Include/core_cm7.h **** 
1701:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1702:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1703:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 35


1704:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1705:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1706:Drivers/CMSIS/Include/core_cm7.h **** 
1707:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1708:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1709:Drivers/CMSIS/Include/core_cm7.h **** 
1710:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1711:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1712:Drivers/CMSIS/Include/core_cm7.h **** 
1713:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1714:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1715:Drivers/CMSIS/Include/core_cm7.h **** 
1716:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1717:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1718:Drivers/CMSIS/Include/core_cm7.h **** 
1719:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1720:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1721:Drivers/CMSIS/Include/core_cm7.h **** 
1722:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1723:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1724:Drivers/CMSIS/Include/core_cm7.h **** 
1725:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1726:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1727:Drivers/CMSIS/Include/core_cm7.h **** 
1728:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1729:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1730:Drivers/CMSIS/Include/core_cm7.h **** 
1731:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_CoreDebug */
1732:Drivers/CMSIS/Include/core_cm7.h **** 
1733:Drivers/CMSIS/Include/core_cm7.h **** 
1734:Drivers/CMSIS/Include/core_cm7.h **** /**
1735:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
1736:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1737:Drivers/CMSIS/Include/core_cm7.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1738:Drivers/CMSIS/Include/core_cm7.h ****   @{
1739:Drivers/CMSIS/Include/core_cm7.h ****  */
1740:Drivers/CMSIS/Include/core_cm7.h **** 
1741:Drivers/CMSIS/Include/core_cm7.h **** /**
1742:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1743:Drivers/CMSIS/Include/core_cm7.h ****   \param[in] field  Name of the register bit field.
1744:Drivers/CMSIS/Include/core_cm7.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1745:Drivers/CMSIS/Include/core_cm7.h ****   \return           Masked and shifted value.
1746:Drivers/CMSIS/Include/core_cm7.h **** */
1747:Drivers/CMSIS/Include/core_cm7.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1748:Drivers/CMSIS/Include/core_cm7.h **** 
1749:Drivers/CMSIS/Include/core_cm7.h **** /**
1750:Drivers/CMSIS/Include/core_cm7.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1751:Drivers/CMSIS/Include/core_cm7.h ****   \param[in] field  Name of the register bit field.
1752:Drivers/CMSIS/Include/core_cm7.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1753:Drivers/CMSIS/Include/core_cm7.h ****   \return           Masked and shifted bit field value.
1754:Drivers/CMSIS/Include/core_cm7.h **** */
1755:Drivers/CMSIS/Include/core_cm7.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1756:Drivers/CMSIS/Include/core_cm7.h **** 
1757:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_core_bitfield */
1758:Drivers/CMSIS/Include/core_cm7.h **** 
1759:Drivers/CMSIS/Include/core_cm7.h **** 
1760:Drivers/CMSIS/Include/core_cm7.h **** /**
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 36


1761:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
1762:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_core_base     Core Definitions
1763:Drivers/CMSIS/Include/core_cm7.h ****   \brief      Definitions for base addresses, unions, and structures.
1764:Drivers/CMSIS/Include/core_cm7.h ****   @{
1765:Drivers/CMSIS/Include/core_cm7.h ****  */
1766:Drivers/CMSIS/Include/core_cm7.h **** 
1767:Drivers/CMSIS/Include/core_cm7.h **** /* Memory mapping of Core Hardware */
1768:Drivers/CMSIS/Include/core_cm7.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1769:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1770:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1771:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1772:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1773:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1774:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1775:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1776:Drivers/CMSIS/Include/core_cm7.h **** 
1777:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1778:Drivers/CMSIS/Include/core_cm7.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1779:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1780:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1781:Drivers/CMSIS/Include/core_cm7.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1782:Drivers/CMSIS/Include/core_cm7.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1783:Drivers/CMSIS/Include/core_cm7.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1784:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1785:Drivers/CMSIS/Include/core_cm7.h **** 
1786:Drivers/CMSIS/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1787:Drivers/CMSIS/Include/core_cm7.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1788:Drivers/CMSIS/Include/core_cm7.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1789:Drivers/CMSIS/Include/core_cm7.h **** #endif
1790:Drivers/CMSIS/Include/core_cm7.h **** 
1791:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1792:Drivers/CMSIS/Include/core_cm7.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1793:Drivers/CMSIS/Include/core_cm7.h **** 
1794:Drivers/CMSIS/Include/core_cm7.h **** /*@} */
1795:Drivers/CMSIS/Include/core_cm7.h **** 
1796:Drivers/CMSIS/Include/core_cm7.h **** 
1797:Drivers/CMSIS/Include/core_cm7.h **** 
1798:Drivers/CMSIS/Include/core_cm7.h **** /*******************************************************************************
1799:Drivers/CMSIS/Include/core_cm7.h ****  *                Hardware Abstraction Layer
1800:Drivers/CMSIS/Include/core_cm7.h ****   Core Function Interface contains:
1801:Drivers/CMSIS/Include/core_cm7.h ****   - Core NVIC Functions
1802:Drivers/CMSIS/Include/core_cm7.h ****   - Core SysTick Functions
1803:Drivers/CMSIS/Include/core_cm7.h ****   - Core Debug Functions
1804:Drivers/CMSIS/Include/core_cm7.h ****   - Core Register Access Functions
1805:Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
1806:Drivers/CMSIS/Include/core_cm7.h **** /**
1807:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1808:Drivers/CMSIS/Include/core_cm7.h **** */
1809:Drivers/CMSIS/Include/core_cm7.h **** 
1810:Drivers/CMSIS/Include/core_cm7.h **** 
1811:Drivers/CMSIS/Include/core_cm7.h **** 
1812:Drivers/CMSIS/Include/core_cm7.h **** /* ##########################   NVIC functions  #################################### */
1813:Drivers/CMSIS/Include/core_cm7.h **** /**
1814:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
1815:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1816:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1817:Drivers/CMSIS/Include/core_cm7.h ****   @{
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 37


1818:Drivers/CMSIS/Include/core_cm7.h ****  */
1819:Drivers/CMSIS/Include/core_cm7.h **** 
1820:Drivers/CMSIS/Include/core_cm7.h **** #ifdef CMSIS_NVIC_VIRTUAL
1821:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1822:Drivers/CMSIS/Include/core_cm7.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1823:Drivers/CMSIS/Include/core_cm7.h ****   #endif
1824:Drivers/CMSIS/Include/core_cm7.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1825:Drivers/CMSIS/Include/core_cm7.h **** #else
1826:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1827:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1828:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1829:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1830:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1831:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1832:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1833:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1834:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetActive              __NVIC_GetActive
1835:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1836:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1837:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1838:Drivers/CMSIS/Include/core_cm7.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1839:Drivers/CMSIS/Include/core_cm7.h **** 
1840:Drivers/CMSIS/Include/core_cm7.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1841:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1842:Drivers/CMSIS/Include/core_cm7.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1843:Drivers/CMSIS/Include/core_cm7.h ****   #endif
1844:Drivers/CMSIS/Include/core_cm7.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1845:Drivers/CMSIS/Include/core_cm7.h **** #else
1846:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SetVector              __NVIC_SetVector
1847:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetVector              __NVIC_GetVector
1848:Drivers/CMSIS/Include/core_cm7.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1849:Drivers/CMSIS/Include/core_cm7.h **** 
1850:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_USER_IRQ_OFFSET          16
1851:Drivers/CMSIS/Include/core_cm7.h **** 
1852:Drivers/CMSIS/Include/core_cm7.h **** 
1853:Drivers/CMSIS/Include/core_cm7.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1854:Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1855:Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1856:Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1857:Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1858:Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1859:Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1860:Drivers/CMSIS/Include/core_cm7.h **** 
1861:Drivers/CMSIS/Include/core_cm7.h **** 
1862:Drivers/CMSIS/Include/core_cm7.h **** /**
1863:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Priority Grouping
1864:Drivers/CMSIS/Include/core_cm7.h ****   \details Sets the priority grouping field using the required unlock sequence.
1865:Drivers/CMSIS/Include/core_cm7.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1866:Drivers/CMSIS/Include/core_cm7.h ****            Only values from 0..7 are used.
1867:Drivers/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
1868:Drivers/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1869:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      PriorityGroup  Priority grouping field.
1870:Drivers/CMSIS/Include/core_cm7.h ****  */
1871:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1872:Drivers/CMSIS/Include/core_cm7.h **** {
1873:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t reg_value;
1874:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 38


1875:Drivers/CMSIS/Include/core_cm7.h **** 
1876:Drivers/CMSIS/Include/core_cm7.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1877:Drivers/CMSIS/Include/core_cm7.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1878:Drivers/CMSIS/Include/core_cm7.h ****   reg_value  =  (reg_value                                   |
1879:Drivers/CMSIS/Include/core_cm7.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1880:Drivers/CMSIS/Include/core_cm7.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
1881:Drivers/CMSIS/Include/core_cm7.h ****   SCB->AIRCR =  reg_value;
1882:Drivers/CMSIS/Include/core_cm7.h **** }
1883:Drivers/CMSIS/Include/core_cm7.h **** 
1884:Drivers/CMSIS/Include/core_cm7.h **** 
1885:Drivers/CMSIS/Include/core_cm7.h **** /**
1886:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Priority Grouping
1887:Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1888:Drivers/CMSIS/Include/core_cm7.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1889:Drivers/CMSIS/Include/core_cm7.h ****  */
1890:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1891:Drivers/CMSIS/Include/core_cm7.h **** {
1892:Drivers/CMSIS/Include/core_cm7.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1893:Drivers/CMSIS/Include/core_cm7.h **** }
1894:Drivers/CMSIS/Include/core_cm7.h **** 
1895:Drivers/CMSIS/Include/core_cm7.h **** 
1896:Drivers/CMSIS/Include/core_cm7.h **** /**
1897:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Enable Interrupt
1898:Drivers/CMSIS/Include/core_cm7.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1899:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1900:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1901:Drivers/CMSIS/Include/core_cm7.h ****  */
1902:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1903:Drivers/CMSIS/Include/core_cm7.h **** {
1904:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1905:Drivers/CMSIS/Include/core_cm7.h ****   {
1906:Drivers/CMSIS/Include/core_cm7.h ****     __COMPILER_BARRIER();
1907:Drivers/CMSIS/Include/core_cm7.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1908:Drivers/CMSIS/Include/core_cm7.h ****     __COMPILER_BARRIER();
1909:Drivers/CMSIS/Include/core_cm7.h ****   }
1910:Drivers/CMSIS/Include/core_cm7.h **** }
1911:Drivers/CMSIS/Include/core_cm7.h **** 
1912:Drivers/CMSIS/Include/core_cm7.h **** 
1913:Drivers/CMSIS/Include/core_cm7.h **** /**
1914:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Interrupt Enable status
1915:Drivers/CMSIS/Include/core_cm7.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1916:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1917:Drivers/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt is not enabled.
1918:Drivers/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt is enabled.
1919:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1920:Drivers/CMSIS/Include/core_cm7.h ****  */
1921:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1922:Drivers/CMSIS/Include/core_cm7.h **** {
1923:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1924:Drivers/CMSIS/Include/core_cm7.h ****   {
1925:Drivers/CMSIS/Include/core_cm7.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1926:Drivers/CMSIS/Include/core_cm7.h ****   }
1927:Drivers/CMSIS/Include/core_cm7.h ****   else
1928:Drivers/CMSIS/Include/core_cm7.h ****   {
1929:Drivers/CMSIS/Include/core_cm7.h ****     return(0U);
1930:Drivers/CMSIS/Include/core_cm7.h ****   }
1931:Drivers/CMSIS/Include/core_cm7.h **** }
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 39


1932:Drivers/CMSIS/Include/core_cm7.h **** 
1933:Drivers/CMSIS/Include/core_cm7.h **** 
1934:Drivers/CMSIS/Include/core_cm7.h **** /**
1935:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Disable Interrupt
1936:Drivers/CMSIS/Include/core_cm7.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1937:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1938:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1939:Drivers/CMSIS/Include/core_cm7.h ****  */
1940:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1941:Drivers/CMSIS/Include/core_cm7.h **** {
1942:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1943:Drivers/CMSIS/Include/core_cm7.h ****   {
1944:Drivers/CMSIS/Include/core_cm7.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1945:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
1946:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
1947:Drivers/CMSIS/Include/core_cm7.h ****   }
1948:Drivers/CMSIS/Include/core_cm7.h **** }
1949:Drivers/CMSIS/Include/core_cm7.h **** 
1950:Drivers/CMSIS/Include/core_cm7.h **** 
1951:Drivers/CMSIS/Include/core_cm7.h **** /**
1952:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Pending Interrupt
1953:Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1954:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1955:Drivers/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt status is not pending.
1956:Drivers/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt status is pending.
1957:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1958:Drivers/CMSIS/Include/core_cm7.h ****  */
1959:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1960:Drivers/CMSIS/Include/core_cm7.h **** {
1961:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1962:Drivers/CMSIS/Include/core_cm7.h ****   {
1963:Drivers/CMSIS/Include/core_cm7.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1964:Drivers/CMSIS/Include/core_cm7.h ****   }
1965:Drivers/CMSIS/Include/core_cm7.h ****   else
1966:Drivers/CMSIS/Include/core_cm7.h ****   {
1967:Drivers/CMSIS/Include/core_cm7.h ****     return(0U);
1968:Drivers/CMSIS/Include/core_cm7.h ****   }
1969:Drivers/CMSIS/Include/core_cm7.h **** }
1970:Drivers/CMSIS/Include/core_cm7.h **** 
1971:Drivers/CMSIS/Include/core_cm7.h **** 
1972:Drivers/CMSIS/Include/core_cm7.h **** /**
1973:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Pending Interrupt
1974:Drivers/CMSIS/Include/core_cm7.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1975:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1976:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1977:Drivers/CMSIS/Include/core_cm7.h ****  */
1978:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1979:Drivers/CMSIS/Include/core_cm7.h **** {
1980:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1981:Drivers/CMSIS/Include/core_cm7.h ****   {
1982:Drivers/CMSIS/Include/core_cm7.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1983:Drivers/CMSIS/Include/core_cm7.h ****   }
1984:Drivers/CMSIS/Include/core_cm7.h **** }
1985:Drivers/CMSIS/Include/core_cm7.h **** 
1986:Drivers/CMSIS/Include/core_cm7.h **** 
1987:Drivers/CMSIS/Include/core_cm7.h **** /**
1988:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Clear Pending Interrupt
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 40


1989:Drivers/CMSIS/Include/core_cm7.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1990:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1991:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1992:Drivers/CMSIS/Include/core_cm7.h ****  */
1993:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1994:Drivers/CMSIS/Include/core_cm7.h **** {
1995:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1996:Drivers/CMSIS/Include/core_cm7.h ****   {
1997:Drivers/CMSIS/Include/core_cm7.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1998:Drivers/CMSIS/Include/core_cm7.h ****   }
1999:Drivers/CMSIS/Include/core_cm7.h **** }
2000:Drivers/CMSIS/Include/core_cm7.h **** 
2001:Drivers/CMSIS/Include/core_cm7.h **** 
2002:Drivers/CMSIS/Include/core_cm7.h **** /**
2003:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Active Interrupt
2004:Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
2005:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
2006:Drivers/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt status is not active.
2007:Drivers/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt status is active.
2008:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
2009:Drivers/CMSIS/Include/core_cm7.h ****  */
2010:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
2011:Drivers/CMSIS/Include/core_cm7.h **** {
2012:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
2013:Drivers/CMSIS/Include/core_cm7.h ****   {
2014:Drivers/CMSIS/Include/core_cm7.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
2015:Drivers/CMSIS/Include/core_cm7.h ****   }
2016:Drivers/CMSIS/Include/core_cm7.h ****   else
2017:Drivers/CMSIS/Include/core_cm7.h ****   {
2018:Drivers/CMSIS/Include/core_cm7.h ****     return(0U);
2019:Drivers/CMSIS/Include/core_cm7.h ****   }
2020:Drivers/CMSIS/Include/core_cm7.h **** }
2021:Drivers/CMSIS/Include/core_cm7.h **** 
2022:Drivers/CMSIS/Include/core_cm7.h **** 
2023:Drivers/CMSIS/Include/core_cm7.h **** /**
2024:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Interrupt Priority
2025:Drivers/CMSIS/Include/core_cm7.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
2026:Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2027:Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2028:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Interrupt number.
2029:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]  priority  Priority to set.
2030:Drivers/CMSIS/Include/core_cm7.h ****   \note    The priority cannot be set for every processor exception.
2031:Drivers/CMSIS/Include/core_cm7.h ****  */
2032:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
2033:Drivers/CMSIS/Include/core_cm7.h **** {
2034:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
2035:Drivers/CMSIS/Include/core_cm7.h ****   {
2036:Drivers/CMSIS/Include/core_cm7.h ****     NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (
2037:Drivers/CMSIS/Include/core_cm7.h ****   }
2038:Drivers/CMSIS/Include/core_cm7.h ****   else
2039:Drivers/CMSIS/Include/core_cm7.h ****   {
2040:Drivers/CMSIS/Include/core_cm7.h ****     SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (
2041:Drivers/CMSIS/Include/core_cm7.h ****   }
2042:Drivers/CMSIS/Include/core_cm7.h **** }
2043:Drivers/CMSIS/Include/core_cm7.h **** 
2044:Drivers/CMSIS/Include/core_cm7.h **** 
2045:Drivers/CMSIS/Include/core_cm7.h **** /**
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 41


2046:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Interrupt Priority
2047:Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
2048:Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2049:Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2050:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   IRQn  Interrupt number.
2051:Drivers/CMSIS/Include/core_cm7.h ****   \return             Interrupt Priority.
2052:Drivers/CMSIS/Include/core_cm7.h ****                       Value is aligned automatically to the implemented priority bits of the microc
2053:Drivers/CMSIS/Include/core_cm7.h ****  */
2054:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
2055:Drivers/CMSIS/Include/core_cm7.h **** {
2056:Drivers/CMSIS/Include/core_cm7.h **** 
2057:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
2058:Drivers/CMSIS/Include/core_cm7.h ****   {
2059:Drivers/CMSIS/Include/core_cm7.h ****     return(((uint32_t)NVIC->IP[((uint32_t)IRQn)]                >> (8U - __NVIC_PRIO_BITS)));
2060:Drivers/CMSIS/Include/core_cm7.h ****   }
2061:Drivers/CMSIS/Include/core_cm7.h ****   else
2062:Drivers/CMSIS/Include/core_cm7.h ****   {
2063:Drivers/CMSIS/Include/core_cm7.h ****     return(((uint32_t)SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
2064:Drivers/CMSIS/Include/core_cm7.h ****   }
2065:Drivers/CMSIS/Include/core_cm7.h **** }
2066:Drivers/CMSIS/Include/core_cm7.h **** 
2067:Drivers/CMSIS/Include/core_cm7.h **** 
2068:Drivers/CMSIS/Include/core_cm7.h **** /**
2069:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Encode Priority
2070:Drivers/CMSIS/Include/core_cm7.h ****   \details Encodes the priority for an interrupt with the given priority group,
2071:Drivers/CMSIS/Include/core_cm7.h ****            preemptive priority value, and subpriority value.
2072:Drivers/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
2073:Drivers/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
2074:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]     PriorityGroup  Used priority group.
2075:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
2076:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
2077:Drivers/CMSIS/Include/core_cm7.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
2078:Drivers/CMSIS/Include/core_cm7.h ****  */
2079:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
2080:Drivers/CMSIS/Include/core_cm7.h **** {
2081:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
2082:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PreemptPriorityBits;
2083:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t SubPriorityBits;
2084:Drivers/CMSIS/Include/core_cm7.h **** 
2085:Drivers/CMSIS/Include/core_cm7.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
2086:Drivers/CMSIS/Include/core_cm7.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
2087:Drivers/CMSIS/Include/core_cm7.h **** 
2088:Drivers/CMSIS/Include/core_cm7.h ****   return (
2089:Drivers/CMSIS/Include/core_cm7.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
2090:Drivers/CMSIS/Include/core_cm7.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
2091:Drivers/CMSIS/Include/core_cm7.h ****          );
2092:Drivers/CMSIS/Include/core_cm7.h **** }
2093:Drivers/CMSIS/Include/core_cm7.h **** 
2094:Drivers/CMSIS/Include/core_cm7.h **** 
2095:Drivers/CMSIS/Include/core_cm7.h **** /**
2096:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Decode Priority
2097:Drivers/CMSIS/Include/core_cm7.h ****   \details Decodes an interrupt priority value with a given priority group to
2098:Drivers/CMSIS/Include/core_cm7.h ****            preemptive priority value and subpriority value.
2099:Drivers/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
2100:Drivers/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
2101:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
2102:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]     PriorityGroup  Used priority group.
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 42


2103:Drivers/CMSIS/Include/core_cm7.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
2104:Drivers/CMSIS/Include/core_cm7.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
2105:Drivers/CMSIS/Include/core_cm7.h ****  */
2106:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
2107:Drivers/CMSIS/Include/core_cm7.h **** {
2108:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
2109:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PreemptPriorityBits;
2110:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t SubPriorityBits;
2111:Drivers/CMSIS/Include/core_cm7.h **** 
2112:Drivers/CMSIS/Include/core_cm7.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
2113:Drivers/CMSIS/Include/core_cm7.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
2114:Drivers/CMSIS/Include/core_cm7.h **** 
2115:Drivers/CMSIS/Include/core_cm7.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
2116:Drivers/CMSIS/Include/core_cm7.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
2117:Drivers/CMSIS/Include/core_cm7.h **** }
2118:Drivers/CMSIS/Include/core_cm7.h **** 
2119:Drivers/CMSIS/Include/core_cm7.h **** 
2120:Drivers/CMSIS/Include/core_cm7.h **** /**
2121:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Interrupt Vector
2122:Drivers/CMSIS/Include/core_cm7.h ****   \details Sets an interrupt vector in SRAM based interrupt vector table.
2123:Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2124:Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2125:Drivers/CMSIS/Include/core_cm7.h ****            VTOR must been relocated to SRAM before.
2126:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   IRQn      Interrupt number
2127:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   vector    Address of interrupt handler function
2128:Drivers/CMSIS/Include/core_cm7.h ****  */
2129:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
2130:Drivers/CMSIS/Include/core_cm7.h **** {
2131:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t vectors = (uint32_t )SCB->VTOR;
2132:Drivers/CMSIS/Include/core_cm7.h ****   (* (int *) (vectors + ((int32_t)IRQn + NVIC_USER_IRQ_OFFSET) * 4)) = vector;
2133:Drivers/CMSIS/Include/core_cm7.h ****   __DSB();
2134:Drivers/CMSIS/Include/core_cm7.h **** }
2135:Drivers/CMSIS/Include/core_cm7.h **** 
2136:Drivers/CMSIS/Include/core_cm7.h **** 
2137:Drivers/CMSIS/Include/core_cm7.h **** /**
2138:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Interrupt Vector
2139:Drivers/CMSIS/Include/core_cm7.h ****   \details Reads an interrupt vector from interrupt vector table.
2140:Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2141:Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2142:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   IRQn      Interrupt number.
2143:Drivers/CMSIS/Include/core_cm7.h ****   \return                 Address of interrupt handler function
2144:Drivers/CMSIS/Include/core_cm7.h ****  */
2145:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
2146:Drivers/CMSIS/Include/core_cm7.h **** {
2147:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t vectors = (uint32_t )SCB->VTOR;
2148:Drivers/CMSIS/Include/core_cm7.h ****   return (uint32_t)(* (int *) (vectors + ((int32_t)IRQn + NVIC_USER_IRQ_OFFSET) * 4));
2149:Drivers/CMSIS/Include/core_cm7.h **** }
2150:Drivers/CMSIS/Include/core_cm7.h **** 
2151:Drivers/CMSIS/Include/core_cm7.h **** 
2152:Drivers/CMSIS/Include/core_cm7.h **** /**
2153:Drivers/CMSIS/Include/core_cm7.h ****   \brief   System Reset
2154:Drivers/CMSIS/Include/core_cm7.h ****   \details Initiates a system reset request to reset the MCU.
2155:Drivers/CMSIS/Include/core_cm7.h ****  */
2156:Drivers/CMSIS/Include/core_cm7.h **** __NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
2157:Drivers/CMSIS/Include/core_cm7.h **** {
2158:Drivers/CMSIS/Include/core_cm7.h ****   __DSB();                                                          /* Ensure all outstanding memor
2159:Drivers/CMSIS/Include/core_cm7.h ****                                                                        buffered write are completed
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 43


2160:Drivers/CMSIS/Include/core_cm7.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
2161:Drivers/CMSIS/Include/core_cm7.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
2162:Drivers/CMSIS/Include/core_cm7.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
2163:Drivers/CMSIS/Include/core_cm7.h ****   __DSB();                                                          /* Ensure completion of memory 
2164:Drivers/CMSIS/Include/core_cm7.h **** 
2165:Drivers/CMSIS/Include/core_cm7.h ****   for(;;)                                                           /* wait until reset */
2166:Drivers/CMSIS/Include/core_cm7.h ****   {
2167:Drivers/CMSIS/Include/core_cm7.h ****     __NOP();
2168:Drivers/CMSIS/Include/core_cm7.h ****   }
2169:Drivers/CMSIS/Include/core_cm7.h **** }
2170:Drivers/CMSIS/Include/core_cm7.h **** 
2171:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of CMSIS_Core_NVICFunctions */
2172:Drivers/CMSIS/Include/core_cm7.h **** 
2173:Drivers/CMSIS/Include/core_cm7.h **** 
2174:Drivers/CMSIS/Include/core_cm7.h **** /* ##########################  MPU functions  #################################### */
2175:Drivers/CMSIS/Include/core_cm7.h **** 
2176:Drivers/CMSIS/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
2177:Drivers/CMSIS/Include/core_cm7.h **** 
2178:Drivers/CMSIS/Include/core_cm7.h **** #include "mpu_armv7.h"
2179:Drivers/CMSIS/Include/core_cm7.h **** 
2180:Drivers/CMSIS/Include/core_cm7.h **** #endif
2181:Drivers/CMSIS/Include/core_cm7.h **** 
2182:Drivers/CMSIS/Include/core_cm7.h **** 
2183:Drivers/CMSIS/Include/core_cm7.h **** /* ##########################  FPU functions  #################################### */
2184:Drivers/CMSIS/Include/core_cm7.h **** /**
2185:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2186:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_FpuFunctions FPU Functions
2187:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Function that provides FPU type.
2188:Drivers/CMSIS/Include/core_cm7.h ****   @{
2189:Drivers/CMSIS/Include/core_cm7.h ****  */
2190:Drivers/CMSIS/Include/core_cm7.h **** 
2191:Drivers/CMSIS/Include/core_cm7.h **** /**
2192:Drivers/CMSIS/Include/core_cm7.h ****   \brief   get FPU type
2193:Drivers/CMSIS/Include/core_cm7.h ****   \details returns the FPU type
2194:Drivers/CMSIS/Include/core_cm7.h ****   \returns
2195:Drivers/CMSIS/Include/core_cm7.h ****    - \b  0: No FPU
2196:Drivers/CMSIS/Include/core_cm7.h ****    - \b  1: Single precision FPU
2197:Drivers/CMSIS/Include/core_cm7.h ****    - \b  2: Double + Single precision FPU
2198:Drivers/CMSIS/Include/core_cm7.h ****  */
2199:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t SCB_GetFPUType(void)
2200:Drivers/CMSIS/Include/core_cm7.h **** {
2201:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t mvfr0;
2202:Drivers/CMSIS/Include/core_cm7.h **** 
2203:Drivers/CMSIS/Include/core_cm7.h ****   mvfr0 = SCB->MVFR0;
2204:Drivers/CMSIS/Include/core_cm7.h ****   if      ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x220U)
2205:Drivers/CMSIS/Include/core_cm7.h ****   {
2206:Drivers/CMSIS/Include/core_cm7.h ****     return 2U;           /* Double + Single precision FPU */
2207:Drivers/CMSIS/Include/core_cm7.h ****   }
2208:Drivers/CMSIS/Include/core_cm7.h ****   else if ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x020U)
2209:Drivers/CMSIS/Include/core_cm7.h ****   {
2210:Drivers/CMSIS/Include/core_cm7.h ****     return 1U;           /* Single precision FPU */
2211:Drivers/CMSIS/Include/core_cm7.h ****   }
2212:Drivers/CMSIS/Include/core_cm7.h ****   else
2213:Drivers/CMSIS/Include/core_cm7.h ****   {
2214:Drivers/CMSIS/Include/core_cm7.h ****     return 0U;           /* No FPU */
2215:Drivers/CMSIS/Include/core_cm7.h ****   }
2216:Drivers/CMSIS/Include/core_cm7.h **** }
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 44


2217:Drivers/CMSIS/Include/core_cm7.h **** 
2218:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of CMSIS_Core_FpuFunctions */
2219:Drivers/CMSIS/Include/core_cm7.h **** 
2220:Drivers/CMSIS/Include/core_cm7.h **** 
2221:Drivers/CMSIS/Include/core_cm7.h **** 
2222:Drivers/CMSIS/Include/core_cm7.h **** /* ##########################  Cache functions  #################################### */
2223:Drivers/CMSIS/Include/core_cm7.h **** /**
2224:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2225:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_CacheFunctions Cache Functions
2226:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Functions that configure Instruction and Data cache.
2227:Drivers/CMSIS/Include/core_cm7.h ****   @{
2228:Drivers/CMSIS/Include/core_cm7.h ****  */
2229:Drivers/CMSIS/Include/core_cm7.h **** 
2230:Drivers/CMSIS/Include/core_cm7.h **** /* Cache Size ID Register Macros */
2231:Drivers/CMSIS/Include/core_cm7.h **** #define CCSIDR_WAYS(x)         (((x) & SCB_CCSIDR_ASSOCIATIVITY_Msk) >> SCB_CCSIDR_ASSOCIATIVITY_Po
2232:Drivers/CMSIS/Include/core_cm7.h **** #define CCSIDR_SETS(x)         (((x) & SCB_CCSIDR_NUMSETS_Msk      ) >> SCB_CCSIDR_NUMSETS_Pos     
2233:Drivers/CMSIS/Include/core_cm7.h **** 
2234:Drivers/CMSIS/Include/core_cm7.h **** #define __SCB_DCACHE_LINE_SIZE  32U /*!< Cortex-M7 cache line size is fixed to 32 bytes (8 words). 
2235:Drivers/CMSIS/Include/core_cm7.h **** #define __SCB_ICACHE_LINE_SIZE  32U /*!< Cortex-M7 cache line size is fixed to 32 bytes (8 words). 
2236:Drivers/CMSIS/Include/core_cm7.h **** 
2237:Drivers/CMSIS/Include/core_cm7.h **** /**
2238:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Enable I-Cache
2239:Drivers/CMSIS/Include/core_cm7.h ****   \details Turns on I-Cache
2240:Drivers/CMSIS/Include/core_cm7.h ****   */
2241:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_EnableICache (void)
2242:Drivers/CMSIS/Include/core_cm7.h **** {
2243:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2244:Drivers/CMSIS/Include/core_cm7.h ****     if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
 123              		.loc 2 2244 12
 124 0006 474B     		ldr	r3, .L11
 125 0008 5B69     		ldr	r3, [r3, #20]
 126              		.loc 2 2244 18
 127 000a 03F40033 		and	r3, r3, #131072
 128              		.loc 2 2244 8
 129 000e 002B     		cmp	r3, #0
 130 0010 1BD1     		bne	.L9
 131              	.LBB50:
 132              	.LBB51:
 133              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 45


  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 46


  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 47


 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 48


 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 214:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 220:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 49


 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 260:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 262:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 302:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 50


 304:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 321:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 346:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 360:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 51


 361:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 364:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 402:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 52


 418:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 419:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 423:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 437:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 441:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 449:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 452:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 474:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 53


 475:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 512:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 519:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 530:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 54


 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 545:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 546:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 553:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 576:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 578:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 587:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 588:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 55


 589:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 597:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 617:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 618:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 640:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 642:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 56


 646:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 667:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 686:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 57


 703:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 706:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 753:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 754:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 758:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 58


 760:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 774:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 779:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 782:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 784:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 788:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 802:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 815:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 59


 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 819:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 821:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 833:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 843:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 847:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 848:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 854:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 60


 874:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 875:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 884:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 885:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 886:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 903:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 905:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 913:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 917:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 61


 931:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 933:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 935:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 134              		.loc 3 946 3
 135              		.syntax unified
 136              	@ 946 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 137 0012 BFF34F8F 		dsb 0xF
 138              	@ 0 "" 2
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 139              		.loc 3 947 1
 140              		.thumb
 141              		.syntax unified
 142 0016 00BF     		nop
 143              	.LBE51:
 144              	.LBE50:
 145              	.LBB52:
 146              	.LBB53:
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 147              		.loc 3 935 3
 148              		.syntax unified
 149              	@ 935 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 150 0018 BFF36F8F 		isb 0xF
 151              	@ 0 "" 2
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 152              		.loc 3 936 1
 153              		.thumb
 154              		.syntax unified
 155 001c 00BF     		nop
 156              	.LBE53:
 157              	.LBE52:
2245:Drivers/CMSIS/Include/core_cm7.h **** 
2246:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2247:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2248:Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 158              		.loc 2 2248 8
 159 001e 414B     		ldr	r3, .L11
 160              		.loc 2 2248 18
 161 0020 0022     		movs	r2, #0
 162 0022 C3F85022 		str	r2, [r3, #592]
 163              	.LBB54:
 164              	.LBB55:
 946:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165              		.loc 3 946 3
 166              		.syntax unified
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 62


 167              	@ 946 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 168 0026 BFF34F8F 		dsb 0xF
 169              	@ 0 "" 2
 170              		.loc 3 947 1
 171              		.thumb
 172              		.syntax unified
 173 002a 00BF     		nop
 174              	.LBE55:
 175              	.LBE54:
 176              	.LBB56:
 177              	.LBB57:
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 178              		.loc 3 935 3
 179              		.syntax unified
 180              	@ 935 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 181 002c BFF36F8F 		isb 0xF
 182              	@ 0 "" 2
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 183              		.loc 3 936 1
 184              		.thumb
 185              		.syntax unified
 186 0030 00BF     		nop
 187              	.LBE57:
 188              	.LBE56:
2249:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2250:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2251:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
 189              		.loc 2 2251 14
 190 0032 3C4B     		ldr	r3, .L11
 191 0034 5B69     		ldr	r3, [r3, #20]
 192 0036 3B4A     		ldr	r2, .L11
 193 0038 43F40033 		orr	r3, r3, #131072
 194 003c 5361     		str	r3, [r2, #20]
 195              	.LBB58:
 196              	.LBB59:
 946:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 197              		.loc 3 946 3
 198              		.syntax unified
 199              	@ 946 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 200 003e BFF34F8F 		dsb 0xF
 201              	@ 0 "" 2
 202              		.loc 3 947 1
 203              		.thumb
 204              		.syntax unified
 205 0042 00BF     		nop
 206              	.LBE59:
 207              	.LBE58:
 208              	.LBB60:
 209              	.LBB61:
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 210              		.loc 3 935 3
 211              		.syntax unified
 212              	@ 935 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 213 0044 BFF36F8F 		isb 0xF
 214              	@ 0 "" 2
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 215              		.loc 3 936 1
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 63


 216              		.thumb
 217              		.syntax unified
 218 0048 00E0     		b	.L3
 219              	.L9:
 220              	.LBE61:
 221              	.LBE60:
2244:Drivers/CMSIS/Include/core_cm7.h **** 
 222              		.loc 2 2244 36
 223 004a 00BF     		nop
 224              	.L3:
 225              	.LBE49:
 226              	.LBE48:
 227              	.LBB62:
 228              	.LBB63:
2252:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2253:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2254:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2255:Drivers/CMSIS/Include/core_cm7.h **** }
2256:Drivers/CMSIS/Include/core_cm7.h **** 
2257:Drivers/CMSIS/Include/core_cm7.h **** 
2258:Drivers/CMSIS/Include/core_cm7.h **** /**
2259:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Disable I-Cache
2260:Drivers/CMSIS/Include/core_cm7.h ****   \details Turns off I-Cache
2261:Drivers/CMSIS/Include/core_cm7.h ****   */
2262:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_DisableICache (void)
2263:Drivers/CMSIS/Include/core_cm7.h **** {
2264:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2265:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2266:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2267:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_IC_Msk;  /* disable I-Cache */
2268:Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
2269:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2270:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2271:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2272:Drivers/CMSIS/Include/core_cm7.h **** }
2273:Drivers/CMSIS/Include/core_cm7.h **** 
2274:Drivers/CMSIS/Include/core_cm7.h **** 
2275:Drivers/CMSIS/Include/core_cm7.h **** /**
2276:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Invalidate I-Cache
2277:Drivers/CMSIS/Include/core_cm7.h ****   \details Invalidates I-Cache
2278:Drivers/CMSIS/Include/core_cm7.h ****   */
2279:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_InvalidateICache (void)
2280:Drivers/CMSIS/Include/core_cm7.h **** {
2281:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2282:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2283:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2284:Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;
2285:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2286:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2287:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2288:Drivers/CMSIS/Include/core_cm7.h **** }
2289:Drivers/CMSIS/Include/core_cm7.h **** 
2290:Drivers/CMSIS/Include/core_cm7.h **** 
2291:Drivers/CMSIS/Include/core_cm7.h **** /**
2292:Drivers/CMSIS/Include/core_cm7.h ****   \brief   I-Cache Invalidate by address
2293:Drivers/CMSIS/Include/core_cm7.h ****   \details Invalidates I-Cache for the given address.
2294:Drivers/CMSIS/Include/core_cm7.h ****            I-Cache is invalidated starting from a 32 byte aligned address in 32 byte granularity.
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 64


2295:Drivers/CMSIS/Include/core_cm7.h ****            I-Cache memory blocks which are part of given address + given size are invalidated.
2296:Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   addr    address
2297:Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   isize   size of memory block (in number of bytes)
2298:Drivers/CMSIS/Include/core_cm7.h **** */
2299:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_InvalidateICache_by_Addr (void *addr, int32_t isize)
2300:Drivers/CMSIS/Include/core_cm7.h **** {
2301:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2302:Drivers/CMSIS/Include/core_cm7.h ****     if ( isize > 0 ) {
2303:Drivers/CMSIS/Include/core_cm7.h ****        int32_t op_size = isize + (((uint32_t)addr) & (__SCB_ICACHE_LINE_SIZE - 1U));
2304:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_ICACHE_LINE_SIZE - 1U) */;
2305:Drivers/CMSIS/Include/core_cm7.h **** 
2306:Drivers/CMSIS/Include/core_cm7.h ****       __DSB();
2307:Drivers/CMSIS/Include/core_cm7.h **** 
2308:Drivers/CMSIS/Include/core_cm7.h ****       do {
2309:Drivers/CMSIS/Include/core_cm7.h ****         SCB->ICIMVAU = op_addr;             /* register accepts only 32byte aligned values, only bi
2310:Drivers/CMSIS/Include/core_cm7.h ****         op_addr += __SCB_ICACHE_LINE_SIZE;
2311:Drivers/CMSIS/Include/core_cm7.h ****         op_size -= __SCB_ICACHE_LINE_SIZE;
2312:Drivers/CMSIS/Include/core_cm7.h ****       } while ( op_size > 0 );
2313:Drivers/CMSIS/Include/core_cm7.h **** 
2314:Drivers/CMSIS/Include/core_cm7.h ****       __DSB();
2315:Drivers/CMSIS/Include/core_cm7.h ****       __ISB();
2316:Drivers/CMSIS/Include/core_cm7.h ****     }
2317:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2318:Drivers/CMSIS/Include/core_cm7.h **** }
2319:Drivers/CMSIS/Include/core_cm7.h **** 
2320:Drivers/CMSIS/Include/core_cm7.h **** 
2321:Drivers/CMSIS/Include/core_cm7.h **** /**
2322:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Enable D-Cache
2323:Drivers/CMSIS/Include/core_cm7.h ****   \details Turns on D-Cache
2324:Drivers/CMSIS/Include/core_cm7.h ****   */
2325:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_EnableDCache (void)
2326:Drivers/CMSIS/Include/core_cm7.h **** {
2327:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2328:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2329:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2330:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2331:Drivers/CMSIS/Include/core_cm7.h **** 
2332:Drivers/CMSIS/Include/core_cm7.h ****     if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
 229              		.loc 2 2332 12
 230 004c 354B     		ldr	r3, .L11
 231 004e 5B69     		ldr	r3, [r3, #20]
 232              		.loc 2 2332 18
 233 0050 03F48033 		and	r3, r3, #65536
 234              		.loc 2 2332 8
 235 0054 002B     		cmp	r3, #0
 236 0056 38D1     		bne	.L10
2333:Drivers/CMSIS/Include/core_cm7.h **** 
2334:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 237              		.loc 2 2334 8
 238 0058 324B     		ldr	r3, .L11
 239              		.loc 2 2334 17
 240 005a 0022     		movs	r2, #0
 241 005c C3F88420 		str	r2, [r3, #132]
 242              	.LBB64:
 243              	.LBB65:
 946:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 244              		.loc 3 946 3
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 65


 245              		.syntax unified
 246              	@ 946 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 247 0060 BFF34F8F 		dsb 0xF
 248              	@ 0 "" 2
 249              		.loc 3 947 1
 250              		.thumb
 251              		.syntax unified
 252 0064 00BF     		nop
 253              	.LBE65:
 254              	.LBE64:
2335:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2336:Drivers/CMSIS/Include/core_cm7.h **** 
2337:Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
 255              		.loc 2 2337 17
 256 0066 2F4B     		ldr	r3, .L11
 257              		.loc 2 2337 12
 258 0068 D3F88030 		ldr	r3, [r3, #128]
 259 006c FB60     		str	r3, [r7, #12]
2338:Drivers/CMSIS/Include/core_cm7.h **** 
2339:Drivers/CMSIS/Include/core_cm7.h ****                                             /* invalidate D-Cache */
2340:Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 260              		.loc 2 2340 12
 261 006e FB68     		ldr	r3, [r7, #12]
 262 0070 5B0B     		lsrs	r3, r3, #13
 263              		.loc 2 2340 10
 264 0072 C3F30E03 		ubfx	r3, r3, #0, #15
 265 0076 BB60     		str	r3, [r7, #8]
 266              	.L7:
2341:Drivers/CMSIS/Include/core_cm7.h ****     do {
2342:Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 267              		.loc 2 2342 14
 268 0078 FB68     		ldr	r3, [r7, #12]
 269 007a DB08     		lsrs	r3, r3, #3
 270              		.loc 2 2342 12
 271 007c C3F30903 		ubfx	r3, r3, #0, #10
 272 0080 7B60     		str	r3, [r7, #4]
 273              	.L6:
2343:Drivers/CMSIS/Include/core_cm7.h ****       do {
2344:Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 274              		.loc 2 2344 30
 275 0082 BB68     		ldr	r3, [r7, #8]
 276 0084 5A01     		lsls	r2, r3, #5
 277              		.loc 2 2344 52
 278 0086 43F6E073 		movw	r3, #16352
 279 008a 1340     		ands	r3, r3, r2
2345:Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 280              		.loc 2 2345 30
 281 008c 7A68     		ldr	r2, [r7, #4]
 282 008e 9207     		lsls	r2, r2, #30
2344:Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 283              		.loc 2 2344 12
 284 0090 2449     		ldr	r1, .L11
2344:Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 285              		.loc 2 2344 73
 286 0092 1343     		orrs	r3, r3, r2
2344:Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 287              		.loc 2 2344 20
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 66


 288 0094 C1F86032 		str	r3, [r1, #608]
2346:Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2347:Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2348:Drivers/CMSIS/Include/core_cm7.h ****         #endif
2349:Drivers/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
 289              		.loc 2 2349 20
 290 0098 7B68     		ldr	r3, [r7, #4]
 291 009a 5A1E     		subs	r2, r3, #1
 292 009c 7A60     		str	r2, [r7, #4]
 293              		.loc 2 2349 7
 294 009e 002B     		cmp	r3, #0
 295 00a0 EFD1     		bne	.L6
2350:Drivers/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
 296              		.loc 2 2350 17
 297 00a2 BB68     		ldr	r3, [r7, #8]
 298 00a4 5A1E     		subs	r2, r3, #1
 299 00a6 BA60     		str	r2, [r7, #8]
 300              		.loc 2 2350 5
 301 00a8 002B     		cmp	r3, #0
 302 00aa E5D1     		bne	.L7
 303              	.LBB66:
 304              	.LBB67:
 946:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 305              		.loc 3 946 3
 306              		.syntax unified
 307              	@ 946 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 308 00ac BFF34F8F 		dsb 0xF
 309              	@ 0 "" 2
 310              		.loc 3 947 1
 311              		.thumb
 312              		.syntax unified
 313 00b0 00BF     		nop
 314              	.LBE67:
 315              	.LBE66:
2351:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2352:Drivers/CMSIS/Include/core_cm7.h **** 
2353:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
 316              		.loc 2 2353 14
 317 00b2 1C4B     		ldr	r3, .L11
 318 00b4 5B69     		ldr	r3, [r3, #20]
 319 00b6 1B4A     		ldr	r2, .L11
 320 00b8 43F48033 		orr	r3, r3, #65536
 321 00bc 5361     		str	r3, [r2, #20]
 322              	.LBB68:
 323              	.LBB69:
 946:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 324              		.loc 3 946 3
 325              		.syntax unified
 326              	@ 946 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 327 00be BFF34F8F 		dsb 0xF
 328              	@ 0 "" 2
 329              		.loc 3 947 1
 330              		.thumb
 331              		.syntax unified
 332 00c2 00BF     		nop
 333              	.LBE69:
 334              	.LBE68:
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 67


 335              	.LBB70:
 336              	.LBB71:
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337              		.loc 3 935 3
 338              		.syntax unified
 339              	@ 935 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 340 00c4 BFF36F8F 		isb 0xF
 341              	@ 0 "" 2
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 342              		.loc 3 936 1
 343              		.thumb
 344              		.syntax unified
 345 00c8 00E0     		b	.L5
 346              	.L10:
 347              	.LBE71:
 348              	.LBE70:
2332:Drivers/CMSIS/Include/core_cm7.h **** 
 349              		.loc 2 2332 36
 350 00ca 00BF     		nop
 351              	.L5:
 352              	.LBE63:
 353              	.LBE62:
  93:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* USER CODE END 1 */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* Enable I-Cache---------------------------------------------------------*/
  98:Core/Src/main.c ****   SCB_EnableICache();
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* Enable D-Cache---------------------------------------------------------*/
 101:Core/Src/main.c ****   SCB_EnableDCache();
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 106:Core/Src/main.c ****   HAL_Init();
 354              		.loc 1 106 3
 355 00cc FFF7FEFF 		bl	HAL_Init
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* USER CODE END Init */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* Configure the system clock */
 113:Core/Src/main.c ****   SystemClock_Config();
 356              		.loc 1 113 3
 357 00d0 FFF7FEFF 		bl	SystemClock_Config
 114:Core/Src/main.c **** 
 115:Core/Src/main.c **** /* Configure the peripherals common clocks */
 116:Core/Src/main.c ****   PeriphCommonClock_Config();
 358              		.loc 1 116 3
 359 00d4 FFF7FEFF 		bl	PeriphCommonClock_Config
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /* USER CODE END SysInit */
 121:Core/Src/main.c **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 68


 122:Core/Src/main.c ****   /* Initialize all configured peripherals */
 123:Core/Src/main.c ****   MX_GPIO_Init();
 360              		.loc 1 123 3
 361 00d8 FFF7FEFF 		bl	MX_GPIO_Init
 124:Core/Src/main.c ****   MX_TIM17_Init();
 362              		.loc 1 124 3
 363 00dc FFF7FEFF 		bl	MX_TIM17_Init
 125:Core/Src/main.c ****   MX_TIM16_Init();
 364              		.loc 1 125 3
 365 00e0 FFF7FEFF 		bl	MX_TIM16_Init
 126:Core/Src/main.c ****   MX_I2C1_Init();
 366              		.loc 1 126 3
 367 00e4 FFF7FEFF 		bl	MX_I2C1_Init
 127:Core/Src/main.c ****   MX_I2C4_Init();
 368              		.loc 1 127 3
 369 00e8 FFF7FEFF 		bl	MX_I2C4_Init
 128:Core/Src/main.c ****   MX_TIM15_Init();
 370              		.loc 1 128 3
 371 00ec FFF7FEFF 		bl	MX_TIM15_Init
 129:Core/Src/main.c ****   MX_ADC3_Init();
 372              		.loc 1 129 3
 373 00f0 FFF7FEFF 		bl	MX_ADC3_Init
 130:Core/Src/main.c ****   MX_ADC1_Init();
 374              		.loc 1 130 3
 375 00f4 FFF7FEFF 		bl	MX_ADC1_Init
 131:Core/Src/main.c ****   MX_SPI5_Init();
 376              		.loc 1 131 3
 377 00f8 FFF7FEFF 		bl	MX_SPI5_Init
 132:Core/Src/main.c ****   MX_TIM5_Init();
 378              		.loc 1 132 3
 379 00fc FFF7FEFF 		bl	MX_TIM5_Init
 133:Core/Src/main.c ****   MX_FDCAN1_Init();
 380              		.loc 1 133 3
 381 0100 FFF7FEFF 		bl	MX_FDCAN1_Init
 134:Core/Src/main.c ****   MX_FDCAN2_Init();
 382              		.loc 1 134 3
 383 0104 FFF7FEFF 		bl	MX_FDCAN2_Init
 135:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 136:Core/Src/main.c ****     HAL_TIM_Base_Start_IT(&htim15);
 384              		.loc 1 136 5
 385 0108 0748     		ldr	r0, .L11+4
 386 010a FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 137:Core/Src/main.c ****     HAL_TIM_Base_Start_IT(&htim16);
 387              		.loc 1 137 5
 388 010e 0748     		ldr	r0, .L11+8
 389 0110 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 138:Core/Src/main.c ****     HAL_TIM_Base_Start_IT(&htim17);
 390              		.loc 1 138 5
 391 0114 0648     		ldr	r0, .L11+12
 392 0116 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 139:Core/Src/main.c ****     //HAL_TIM_PWM_Start(&htim1,TIM_CHANNEL_1);
 140:Core/Src/main.c ****     //HAL_TIMEx_PWMN_Start(&htim1,TIM_CHANNEL_1);
 141:Core/Src/main.c ****     //HAL_TIM_PWM_Start(&htim1,TIM_CHANNEL_2);
 142:Core/Src/main.c ****     //HAL_TIMEx_PWMN_Start(&htim1,TIM_CHANNEL_2);
 143:Core/Src/main.c ****     //HAL_TIM_PWM_Start(&htim1,TIM_CHANNEL_3);
 144:Core/Src/main.c ****     //HAL_TIMEx_PWMN_Start(&htim1,TIM_CHANNEL_3);
 145:Core/Src/main.c **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 69


 146:Core/Src/main.c ****     Os_Init_Task();
 393              		.loc 1 146 5
 394 011a FFF7FEFF 		bl	Os_Init_Task
 395              	.L8:
 147:Core/Src/main.c ****     /* USER CODE END 2 */
 148:Core/Src/main.c ****     /* Infinite loop */
 149:Core/Src/main.c ****     while (1)
 150:Core/Src/main.c ****     {
 151:Core/Src/main.c ****         /* USER CODE END WHILE */
 152:Core/Src/main.c ****         Os_Handler();
 396              		.loc 1 152 9 discriminator 1
 397 011e FFF7FEFF 		bl	Os_Handler
 398 0122 FCE7     		b	.L8
 399              	.L12:
 400              		.align	2
 401              	.L11:
 402 0124 00ED00E0 		.word	-536810240
 403 0128 00000000 		.word	htim15
 404 012c 00000000 		.word	htim16
 405 0130 00000000 		.word	htim17
 406              		.cfi_endproc
 407              	.LFE333:
 409              		.section	.text.SystemClock_Config,"ax",%progbits
 410              		.align	1
 411              		.global	SystemClock_Config
 412              		.syntax unified
 413              		.thumb
 414              		.thumb_func
 416              	SystemClock_Config:
 417              	.LFB334:
 153:Core/Src/main.c ****         /* USER CODE BEGIN 3 */
 154:Core/Src/main.c ****     }
 155:Core/Src/main.c ****     /* USER CODE END 3 */
 156:Core/Src/main.c **** }
 157:Core/Src/main.c **** /**
 158:Core/Src/main.c ****   * @brief System Clock Configuration
 159:Core/Src/main.c ****   * @retval None
 160:Core/Src/main.c ****   */
 161:Core/Src/main.c **** void SystemClock_Config(void)
 162:Core/Src/main.c **** {
 418              		.loc 1 162 1
 419              		.cfi_startproc
 420              		@ args = 0, pretend = 0, frame = 112
 421              		@ frame_needed = 1, uses_anonymous_args = 0
 422 0000 80B5     		push	{r7, lr}
 423              	.LCFI3:
 424              		.cfi_def_cfa_offset 8
 425              		.cfi_offset 7, -8
 426              		.cfi_offset 14, -4
 427 0002 9CB0     		sub	sp, sp, #112
 428              	.LCFI4:
 429              		.cfi_def_cfa_offset 120
 430 0004 00AF     		add	r7, sp, #0
 431              	.LCFI5:
 432              		.cfi_def_cfa_register 7
 163:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 433              		.loc 1 163 22
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 70


 434 0006 07F12403 		add	r3, r7, #36
 435 000a 4C22     		movs	r2, #76
 436 000c 0021     		movs	r1, #0
 437 000e 1846     		mov	r0, r3
 438 0010 FFF7FEFF 		bl	memset
 164:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 439              		.loc 1 164 22
 440 0014 3B1D     		adds	r3, r7, #4
 441 0016 2022     		movs	r2, #32
 442 0018 0021     		movs	r1, #0
 443 001a 1846     		mov	r0, r3
 444 001c FFF7FEFF 		bl	memset
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   /** Supply configuration update enable
 167:Core/Src/main.c ****   */
 168:Core/Src/main.c ****   HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
 445              		.loc 1 168 3
 446 0020 0220     		movs	r0, #2
 447 0022 FFF7FEFF 		bl	HAL_PWREx_ConfigSupply
 448              	.LBB72:
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 171:Core/Src/main.c ****   */
 172:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
 449              		.loc 1 172 3
 450 0026 0023     		movs	r3, #0
 451 0028 3B60     		str	r3, [r7]
 452 002a 354B     		ldr	r3, .L18
 453 002c 9B69     		ldr	r3, [r3, #24]
 454 002e 344A     		ldr	r2, .L18
 455 0030 43F44043 		orr	r3, r3, #49152
 456 0034 9361     		str	r3, [r2, #24]
 457 0036 324B     		ldr	r3, .L18
 458 0038 9B69     		ldr	r3, [r3, #24]
 459 003a 03F44043 		and	r3, r3, #49152
 460 003e 3B60     		str	r3, [r7]
 461 0040 304B     		ldr	r3, .L18+4
 462 0042 DB6A     		ldr	r3, [r3, #44]
 463 0044 2F4A     		ldr	r2, .L18+4
 464 0046 43F00103 		orr	r3, r3, #1
 465 004a D362     		str	r3, [r2, #44]
 466 004c 2D4B     		ldr	r3, .L18+4
 467 004e DB6A     		ldr	r3, [r3, #44]
 468 0050 03F00103 		and	r3, r3, #1
 469 0054 3B60     		str	r3, [r7]
 470 0056 3B68     		ldr	r3, [r7]
 471              	.LBE72:
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****   while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 472              		.loc 1 174 8
 473 0058 00BF     		nop
 474              	.L14:
 475              		.loc 1 174 10 discriminator 1
 476 005a 294B     		ldr	r3, .L18
 477 005c 9B69     		ldr	r3, [r3, #24]
 478 005e 03F40053 		and	r3, r3, #8192
 479              		.loc 1 174 8 discriminator 1
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 71


 480 0062 B3F5005F 		cmp	r3, #8192
 481 0066 F8D1     		bne	.L14
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****   /** Macro to configure the PLL clock source
 177:Core/Src/main.c ****   */
 178:Core/Src/main.c ****   __HAL_RCC_PLL_PLLSOURCE_CONFIG(RCC_PLLSOURCE_CSI);
 482              		.loc 1 178 3
 483 0068 274B     		ldr	r3, .L18+8
 484 006a 9B6A     		ldr	r3, [r3, #40]
 485 006c 23F00303 		bic	r3, r3, #3
 486 0070 254A     		ldr	r2, .L18+8
 487 0072 43F00103 		orr	r3, r3, #1
 488 0076 9362     		str	r3, [r2, #40]
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 181:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 182:Core/Src/main.c ****   */
 183:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_CSI;
 489              		.loc 1 183 36
 490 0078 1023     		movs	r3, #16
 491 007a 7B62     		str	r3, [r7, #36]
 184:Core/Src/main.c ****   RCC_OscInitStruct.CSIState = RCC_CSI_ON;
 492              		.loc 1 184 30
 493 007c 8023     		movs	r3, #128
 494 007e 3B64     		str	r3, [r7, #64]
 185:Core/Src/main.c ****   RCC_OscInitStruct.CSICalibrationValue = RCC_CSICALIBRATION_DEFAULT;
 495              		.loc 1 185 41
 496 0080 2023     		movs	r3, #32
 497 0082 7B64     		str	r3, [r7, #68]
 186:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 498              		.loc 1 186 34
 499 0084 0223     		movs	r3, #2
 500 0086 BB64     		str	r3, [r7, #72]
 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_CSI;
 501              		.loc 1 187 35
 502 0088 0123     		movs	r3, #1
 503 008a FB64     		str	r3, [r7, #76]
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 504              		.loc 1 188 30
 505 008c 0123     		movs	r3, #1
 506 008e 3B65     		str	r3, [r7, #80]
 189:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 240;
 507              		.loc 1 189 30
 508 0090 F023     		movs	r3, #240
 509 0092 7B65     		str	r3, [r7, #84]
 190:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = 2;
 510              		.loc 1 190 30
 511 0094 0223     		movs	r3, #2
 512 0096 BB65     		str	r3, [r7, #88]
 191:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 513              		.loc 1 191 30
 514 0098 0223     		movs	r3, #2
 515 009a FB65     		str	r3, [r7, #92]
 192:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 516              		.loc 1 192 30
 517 009c 0223     		movs	r3, #2
 518 009e 3B66     		str	r3, [r7, #96]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 72


 193:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
 519              		.loc 1 193 32
 520 00a0 0823     		movs	r3, #8
 521 00a2 7B66     		str	r3, [r7, #100]
 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 522              		.loc 1 194 35
 523 00a4 0023     		movs	r3, #0
 524 00a6 BB66     		str	r3, [r7, #104]
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 525              		.loc 1 195 34
 526 00a8 0023     		movs	r3, #0
 527 00aa FB66     		str	r3, [r7, #108]
 196:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 528              		.loc 1 196 7
 529 00ac 07F12403 		add	r3, r7, #36
 530 00b0 1846     		mov	r0, r3
 531 00b2 FFF7FEFF 		bl	HAL_RCC_OscConfig
 532 00b6 0346     		mov	r3, r0
 533              		.loc 1 196 6
 534 00b8 002B     		cmp	r3, #0
 535 00ba 01D0     		beq	.L15
 197:Core/Src/main.c ****   {
 198:Core/Src/main.c ****     Error_Handler();
 536              		.loc 1 198 5
 537 00bc FFF7FEFF 		bl	Error_Handler
 538              	.L15:
 199:Core/Src/main.c ****   }
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 202:Core/Src/main.c ****   */
 203:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 539              		.loc 1 203 31
 540 00c0 3F23     		movs	r3, #63
 541 00c2 7B60     		str	r3, [r7, #4]
 204:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 205:Core/Src/main.c ****                               |RCC_CLOCKTYPE_D3PCLK1|RCC_CLOCKTYPE_D1PCLK1;
 206:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 542              		.loc 1 206 34
 543 00c4 0323     		movs	r3, #3
 544 00c6 BB60     		str	r3, [r7, #8]
 207:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 545              		.loc 1 207 35
 546 00c8 0023     		movs	r3, #0
 547 00ca FB60     		str	r3, [r7, #12]
 208:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 548              		.loc 1 208 35
 549 00cc 0823     		movs	r3, #8
 550 00ce 3B61     		str	r3, [r7, #16]
 209:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 551              		.loc 1 209 36
 552 00d0 4023     		movs	r3, #64
 553 00d2 7B61     		str	r3, [r7, #20]
 210:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 554              		.loc 1 210 36
 555 00d4 4023     		movs	r3, #64
 556 00d6 BB61     		str	r3, [r7, #24]
 211:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 73


 557              		.loc 1 211 36
 558 00d8 4FF48063 		mov	r3, #1024
 559 00dc FB61     		str	r3, [r7, #28]
 212:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 560              		.loc 1 212 36
 561 00de 4023     		movs	r3, #64
 562 00e0 3B62     		str	r3, [r7, #32]
 213:Core/Src/main.c **** 
 214:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 563              		.loc 1 214 7
 564 00e2 3B1D     		adds	r3, r7, #4
 565 00e4 0421     		movs	r1, #4
 566 00e6 1846     		mov	r0, r3
 567 00e8 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 568 00ec 0346     		mov	r3, r0
 569              		.loc 1 214 6
 570 00ee 002B     		cmp	r3, #0
 571 00f0 01D0     		beq	.L17
 215:Core/Src/main.c ****   {
 216:Core/Src/main.c ****     Error_Handler();
 572              		.loc 1 216 5
 573 00f2 FFF7FEFF 		bl	Error_Handler
 574              	.L17:
 217:Core/Src/main.c ****   }
 218:Core/Src/main.c **** }
 575              		.loc 1 218 1
 576 00f6 00BF     		nop
 577 00f8 7037     		adds	r7, r7, #112
 578              	.LCFI6:
 579              		.cfi_def_cfa_offset 8
 580 00fa BD46     		mov	sp, r7
 581              	.LCFI7:
 582              		.cfi_def_cfa_register 13
 583              		@ sp needed
 584 00fc 80BD     		pop	{r7, pc}
 585              	.L19:
 586 00fe 00BF     		.align	2
 587              	.L18:
 588 0100 00480258 		.word	1476544512
 589 0104 00040058 		.word	1476396032
 590 0108 00440258 		.word	1476543488
 591              		.cfi_endproc
 592              	.LFE334:
 594              		.section	.text.PeriphCommonClock_Config,"ax",%progbits
 595              		.align	1
 596              		.global	PeriphCommonClock_Config
 597              		.syntax unified
 598              		.thumb
 599              		.thumb_func
 601              	PeriphCommonClock_Config:
 602              	.LFB335:
 219:Core/Src/main.c **** 
 220:Core/Src/main.c **** /**
 221:Core/Src/main.c ****   * @brief Peripherals Common Clock Configuration
 222:Core/Src/main.c ****   * @retval None
 223:Core/Src/main.c ****   */
 224:Core/Src/main.c **** void PeriphCommonClock_Config(void)
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 74


 225:Core/Src/main.c **** {
 603              		.loc 1 225 1
 604              		.cfi_startproc
 605              		@ args = 0, pretend = 0, frame = 192
 606              		@ frame_needed = 1, uses_anonymous_args = 0
 607 0000 80B5     		push	{r7, lr}
 608              	.LCFI8:
 609              		.cfi_def_cfa_offset 8
 610              		.cfi_offset 7, -8
 611              		.cfi_offset 14, -4
 612 0002 B0B0     		sub	sp, sp, #192
 613              	.LCFI9:
 614              		.cfi_def_cfa_offset 200
 615 0004 00AF     		add	r7, sp, #0
 616              	.LCFI10:
 617              		.cfi_def_cfa_register 7
 226:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 618              		.loc 1 226 28
 619 0006 3B1D     		adds	r3, r7, #4
 620 0008 BC22     		movs	r2, #188
 621 000a 0021     		movs	r1, #0
 622 000c 1846     		mov	r0, r3
 623 000e FFF7FEFF 		bl	memset
 227:Core/Src/main.c **** 
 228:Core/Src/main.c ****   /** Initializes the peripherals clock
 229:Core/Src/main.c ****   */
 230:Core/Src/main.c ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FDCAN;
 624              		.loc 1 230 44
 625 0012 4FF40043 		mov	r3, #32768
 626 0016 7B60     		str	r3, [r7, #4]
 231:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2M = 1;
 627              		.loc 1 231 34
 628 0018 0123     		movs	r3, #1
 629 001a BB60     		str	r3, [r7, #8]
 232:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2N = 37;
 630              		.loc 1 232 34
 631 001c 2523     		movs	r3, #37
 632 001e FB60     		str	r3, [r7, #12]
 233:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2P = 2;
 633              		.loc 1 233 34
 634 0020 0223     		movs	r3, #2
 635 0022 3B61     		str	r3, [r7, #16]
 234:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2Q = 2;
 636              		.loc 1 234 34
 637 0024 0223     		movs	r3, #2
 638 0026 7B61     		str	r3, [r7, #20]
 235:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2R = 2;
 639              		.loc 1 235 34
 640 0028 0223     		movs	r3, #2
 641 002a BB61     		str	r3, [r7, #24]
 236:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2RGE = RCC_PLL2VCIRANGE_2;
 642              		.loc 1 236 36
 643 002c 8023     		movs	r3, #128
 644 002e FB61     		str	r3, [r7, #28]
 237:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2VCOSEL = RCC_PLL2VCOMEDIUM;
 645              		.loc 1 237 39
 646 0030 2023     		movs	r3, #32
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 75


 647 0032 3B62     		str	r3, [r7, #32]
 238:Core/Src/main.c ****   PeriphClkInitStruct.PLL2.PLL2FRACN = 4096;
 648              		.loc 1 238 38
 649 0034 4FF48053 		mov	r3, #4096
 650 0038 7B62     		str	r3, [r7, #36]
 239:Core/Src/main.c ****   PeriphClkInitStruct.FdcanClockSelection = RCC_FDCANCLKSOURCE_PLL2;
 651              		.loc 1 239 43
 652 003a 4FF00053 		mov	r3, #536870912
 653 003e 3B67     		str	r3, [r7, #112]
 240:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 654              		.loc 1 240 7
 655 0040 3B1D     		adds	r3, r7, #4
 656 0042 1846     		mov	r0, r3
 657 0044 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 658 0048 0346     		mov	r3, r0
 659              		.loc 1 240 6
 660 004a 002B     		cmp	r3, #0
 661 004c 01D0     		beq	.L22
 241:Core/Src/main.c ****   {
 242:Core/Src/main.c ****     Error_Handler();
 662              		.loc 1 242 5
 663 004e FFF7FEFF 		bl	Error_Handler
 664              	.L22:
 243:Core/Src/main.c ****   }
 244:Core/Src/main.c **** }
 665              		.loc 1 244 1
 666 0052 00BF     		nop
 667 0054 C037     		adds	r7, r7, #192
 668              	.LCFI11:
 669              		.cfi_def_cfa_offset 8
 670 0056 BD46     		mov	sp, r7
 671              	.LCFI12:
 672              		.cfi_def_cfa_register 13
 673              		@ sp needed
 674 0058 80BD     		pop	{r7, pc}
 675              		.cfi_endproc
 676              	.LFE335:
 678              		.section	.text.MX_ADC1_Init,"ax",%progbits
 679              		.align	1
 680              		.syntax unified
 681              		.thumb
 682              		.thumb_func
 684              	MX_ADC1_Init:
 685              	.LFB336:
 245:Core/Src/main.c **** 
 246:Core/Src/main.c **** /**
 247:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 248:Core/Src/main.c ****   * @param None
 249:Core/Src/main.c ****   * @retval None
 250:Core/Src/main.c ****   */
 251:Core/Src/main.c **** static void MX_ADC1_Init(void)
 252:Core/Src/main.c **** {
 686              		.loc 1 252 1
 687              		.cfi_startproc
 688              		@ args = 0, pretend = 0, frame = 40
 689              		@ frame_needed = 1, uses_anonymous_args = 0
 690 0000 80B5     		push	{r7, lr}
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 76


 691              	.LCFI13:
 692              		.cfi_def_cfa_offset 8
 693              		.cfi_offset 7, -8
 694              		.cfi_offset 14, -4
 695 0002 8AB0     		sub	sp, sp, #40
 696              	.LCFI14:
 697              		.cfi_def_cfa_offset 48
 698 0004 00AF     		add	r7, sp, #0
 699              	.LCFI15:
 700              		.cfi_def_cfa_register 7
 253:Core/Src/main.c **** 
 254:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 255:Core/Src/main.c **** 
 256:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****   ADC_MultiModeTypeDef multimode = {0};
 701              		.loc 1 258 24
 702 0006 07F11C03 		add	r3, r7, #28
 703 000a 0022     		movs	r2, #0
 704 000c 1A60     		str	r2, [r3]
 705 000e 5A60     		str	r2, [r3, #4]
 706 0010 9A60     		str	r2, [r3, #8]
 259:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 707              		.loc 1 259 26
 708 0012 3B46     		mov	r3, r7
 709 0014 0022     		movs	r2, #0
 710 0016 1A60     		str	r2, [r3]
 711 0018 5A60     		str	r2, [r3, #4]
 712 001a 9A60     		str	r2, [r3, #8]
 713 001c DA60     		str	r2, [r3, #12]
 714 001e 1A61     		str	r2, [r3, #16]
 715 0020 5A61     		str	r2, [r3, #20]
 716 0022 9A61     		str	r2, [r3, #24]
 260:Core/Src/main.c **** 
 261:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 264:Core/Src/main.c **** 
 265:Core/Src/main.c ****   /** Common config
 266:Core/Src/main.c ****   */
 267:Core/Src/main.c ****   hadc1.Instance = ADC1;
 717              		.loc 1 267 18
 718 0024 384B     		ldr	r3, .L29
 719 0026 394A     		ldr	r2, .L29+4
 720 0028 1A60     		str	r2, [r3]
 268:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV8;
 721              		.loc 1 268 29
 722 002a 374B     		ldr	r3, .L29
 723 002c 4FF48012 		mov	r2, #1048576
 724 0030 5A60     		str	r2, [r3, #4]
 269:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_16B;
 725              		.loc 1 269 25
 726 0032 354B     		ldr	r3, .L29
 727 0034 0022     		movs	r2, #0
 728 0036 9A60     		str	r2, [r3, #8]
 270:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 729              		.loc 1 270 27
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 77


 730 0038 334B     		ldr	r3, .L29
 731 003a 0122     		movs	r2, #1
 732 003c DA60     		str	r2, [r3, #12]
 271:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 733              		.loc 1 271 27
 734 003e 324B     		ldr	r3, .L29
 735 0040 0422     		movs	r2, #4
 736 0042 1A61     		str	r2, [r3, #16]
 272:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 737              		.loc 1 272 31
 738 0044 304B     		ldr	r3, .L29
 739 0046 0022     		movs	r2, #0
 740 0048 1A75     		strb	r2, [r3, #20]
 273:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 741              		.loc 1 273 33
 742 004a 2F4B     		ldr	r3, .L29
 743 004c 0022     		movs	r2, #0
 744 004e 5A75     		strb	r2, [r3, #21]
 274:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 2;
 745              		.loc 1 274 30
 746 0050 2D4B     		ldr	r3, .L29
 747 0052 0222     		movs	r2, #2
 748 0054 9A61     		str	r2, [r3, #24]
 275:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = ENABLE;
 749              		.loc 1 275 36
 750 0056 2C4B     		ldr	r3, .L29
 751 0058 0122     		movs	r2, #1
 752 005a 1A77     		strb	r2, [r3, #28]
 276:Core/Src/main.c ****   hadc1.Init.NbrOfDiscConversion = 1;
 753              		.loc 1 276 34
 754 005c 2A4B     		ldr	r3, .L29
 755 005e 0122     		movs	r2, #1
 756 0060 1A62     		str	r2, [r3, #32]
 277:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 757              		.loc 1 277 31
 758 0062 294B     		ldr	r3, .L29
 759 0064 0022     		movs	r2, #0
 760 0066 5A62     		str	r2, [r3, #36]
 278:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 761              		.loc 1 278 35
 762 0068 274B     		ldr	r3, .L29
 763 006a 0022     		movs	r2, #0
 764 006c 9A62     		str	r2, [r3, #40]
 279:Core/Src/main.c ****   hadc1.Init.ConversionDataManagement = ADC_CONVERSIONDATA_DR;
 765              		.loc 1 279 39
 766 006e 264B     		ldr	r3, .L29
 767 0070 0022     		movs	r2, #0
 768 0072 DA62     		str	r2, [r3, #44]
 280:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 769              		.loc 1 280 22
 770 0074 244B     		ldr	r3, .L29
 771 0076 0022     		movs	r2, #0
 772 0078 1A63     		str	r2, [r3, #48]
 281:Core/Src/main.c ****   hadc1.Init.LeftBitShift = ADC_LEFTBITSHIFT_NONE;
 773              		.loc 1 281 27
 774 007a 234B     		ldr	r3, .L29
 775 007c 0022     		movs	r2, #0
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 78


 776 007e 5A63     		str	r2, [r3, #52]
 282:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
 777              		.loc 1 282 31
 778 0080 214B     		ldr	r3, .L29
 779 0082 0022     		movs	r2, #0
 780 0084 83F83820 		strb	r2, [r3, #56]
 283:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 781              		.loc 1 283 7
 782 0088 1F48     		ldr	r0, .L29
 783 008a FFF7FEFF 		bl	HAL_ADC_Init
 784 008e 0346     		mov	r3, r0
 785              		.loc 1 283 6
 786 0090 002B     		cmp	r3, #0
 787 0092 01D0     		beq	.L24
 284:Core/Src/main.c ****   {
 285:Core/Src/main.c ****     Error_Handler();
 788              		.loc 1 285 5
 789 0094 FFF7FEFF 		bl	Error_Handler
 790              	.L24:
 286:Core/Src/main.c ****   }
 287:Core/Src/main.c **** 
 288:Core/Src/main.c ****   /** Configure the ADC multi-mode
 289:Core/Src/main.c ****   */
 290:Core/Src/main.c ****   multimode.Mode = ADC_MODE_INDEPENDENT;
 791              		.loc 1 290 18
 792 0098 0023     		movs	r3, #0
 793 009a FB61     		str	r3, [r7, #28]
 291:Core/Src/main.c ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 794              		.loc 1 291 7
 795 009c 07F11C03 		add	r3, r7, #28
 796 00a0 1946     		mov	r1, r3
 797 00a2 1948     		ldr	r0, .L29
 798 00a4 FFF7FEFF 		bl	HAL_ADCEx_MultiModeConfigChannel
 799 00a8 0346     		mov	r3, r0
 800              		.loc 1 291 6
 801 00aa 002B     		cmp	r3, #0
 802 00ac 01D0     		beq	.L25
 292:Core/Src/main.c ****   {
 293:Core/Src/main.c ****     Error_Handler();
 803              		.loc 1 293 5
 804 00ae FFF7FEFF 		bl	Error_Handler
 805              	.L25:
 294:Core/Src/main.c ****   }
 295:Core/Src/main.c **** 
 296:Core/Src/main.c ****   /** Configure Regular Channel
 297:Core/Src/main.c ****   */
 298:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_6;
 806              		.loc 1 298 19
 807 00b2 174B     		ldr	r3, .L29+8
 808 00b4 3B60     		str	r3, [r7]
 299:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 809              		.loc 1 299 16
 810 00b6 0623     		movs	r3, #6
 811 00b8 7B60     		str	r3, [r7, #4]
 300:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 812              		.loc 1 300 24
 813 00ba 0023     		movs	r3, #0
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 79


 814 00bc BB60     		str	r3, [r7, #8]
 301:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 815              		.loc 1 301 22
 816 00be 40F2FF73 		movw	r3, #2047
 817 00c2 FB60     		str	r3, [r7, #12]
 302:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 818              		.loc 1 302 24
 819 00c4 0423     		movs	r3, #4
 820 00c6 3B61     		str	r3, [r7, #16]
 303:Core/Src/main.c ****   sConfig.Offset = 0;
 821              		.loc 1 303 18
 822 00c8 0023     		movs	r3, #0
 823 00ca 7B61     		str	r3, [r7, #20]
 304:Core/Src/main.c ****   sConfig.OffsetSignedSaturation = DISABLE;
 824              		.loc 1 304 34
 825 00cc 0023     		movs	r3, #0
 826 00ce 7B76     		strb	r3, [r7, #25]
 305:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 827              		.loc 1 305 7
 828 00d0 3B46     		mov	r3, r7
 829 00d2 1946     		mov	r1, r3
 830 00d4 0C48     		ldr	r0, .L29
 831 00d6 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 832 00da 0346     		mov	r3, r0
 833              		.loc 1 305 6
 834 00dc 002B     		cmp	r3, #0
 835 00de 01D0     		beq	.L26
 306:Core/Src/main.c ****   {
 307:Core/Src/main.c ****     Error_Handler();
 836              		.loc 1 307 5
 837 00e0 FFF7FEFF 		bl	Error_Handler
 838              	.L26:
 308:Core/Src/main.c ****   }
 309:Core/Src/main.c **** 
 310:Core/Src/main.c ****   /** Configure Regular Channel
 311:Core/Src/main.c ****   */
 312:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_7;
 839              		.loc 1 312 19
 840 00e4 0B4B     		ldr	r3, .L29+12
 841 00e6 3B60     		str	r3, [r7]
 313:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 842              		.loc 1 313 16
 843 00e8 0C23     		movs	r3, #12
 844 00ea 7B60     		str	r3, [r7, #4]
 314:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 845              		.loc 1 314 7
 846 00ec 3B46     		mov	r3, r7
 847 00ee 1946     		mov	r1, r3
 848 00f0 0548     		ldr	r0, .L29
 849 00f2 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 850 00f6 0346     		mov	r3, r0
 851              		.loc 1 314 6
 852 00f8 002B     		cmp	r3, #0
 853 00fa 01D0     		beq	.L28
 315:Core/Src/main.c ****   {
 316:Core/Src/main.c ****     Error_Handler();
 854              		.loc 1 316 5
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 80


 855 00fc FFF7FEFF 		bl	Error_Handler
 856              	.L28:
 317:Core/Src/main.c ****   }
 318:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 319:Core/Src/main.c **** 
 320:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 321:Core/Src/main.c **** 
 322:Core/Src/main.c **** }
 857              		.loc 1 322 1
 858 0100 00BF     		nop
 859 0102 2837     		adds	r7, r7, #40
 860              	.LCFI16:
 861              		.cfi_def_cfa_offset 8
 862 0104 BD46     		mov	sp, r7
 863              	.LCFI17:
 864              		.cfi_def_cfa_register 13
 865              		@ sp needed
 866 0106 80BD     		pop	{r7, pc}
 867              	.L30:
 868              		.align	2
 869              	.L29:
 870 0108 00000000 		.word	hadc1
 871 010c 00200240 		.word	1073881088
 872 0110 40002019 		.word	421527616
 873 0114 8000501D 		.word	491782272
 874              		.cfi_endproc
 875              	.LFE336:
 877              		.section	.text.MX_ADC3_Init,"ax",%progbits
 878              		.align	1
 879              		.syntax unified
 880              		.thumb
 881              		.thumb_func
 883              	MX_ADC3_Init:
 884              	.LFB337:
 323:Core/Src/main.c **** 
 324:Core/Src/main.c **** /**
 325:Core/Src/main.c ****   * @brief ADC3 Initialization Function
 326:Core/Src/main.c ****   * @param None
 327:Core/Src/main.c ****   * @retval None
 328:Core/Src/main.c ****   */
 329:Core/Src/main.c **** static void MX_ADC3_Init(void)
 330:Core/Src/main.c **** {
 885              		.loc 1 330 1
 886              		.cfi_startproc
 887              		@ args = 0, pretend = 0, frame = 32
 888              		@ frame_needed = 1, uses_anonymous_args = 0
 889 0000 80B5     		push	{r7, lr}
 890              	.LCFI18:
 891              		.cfi_def_cfa_offset 8
 892              		.cfi_offset 7, -8
 893              		.cfi_offset 14, -4
 894 0002 88B0     		sub	sp, sp, #32
 895              	.LCFI19:
 896              		.cfi_def_cfa_offset 40
 897 0004 00AF     		add	r7, sp, #0
 898              	.LCFI20:
 899              		.cfi_def_cfa_register 7
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 81


 331:Core/Src/main.c **** 
 332:Core/Src/main.c ****   /* USER CODE BEGIN ADC3_Init 0 */
 333:Core/Src/main.c **** 
 334:Core/Src/main.c ****   /* USER CODE END ADC3_Init 0 */
 335:Core/Src/main.c **** 
 336:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 900              		.loc 1 336 26
 901 0006 3B1D     		adds	r3, r7, #4
 902 0008 0022     		movs	r2, #0
 903 000a 1A60     		str	r2, [r3]
 904 000c 5A60     		str	r2, [r3, #4]
 905 000e 9A60     		str	r2, [r3, #8]
 906 0010 DA60     		str	r2, [r3, #12]
 907 0012 1A61     		str	r2, [r3, #16]
 908 0014 5A61     		str	r2, [r3, #20]
 909 0016 9A61     		str	r2, [r3, #24]
 337:Core/Src/main.c **** 
 338:Core/Src/main.c ****   /* USER CODE BEGIN ADC3_Init 1 */
 339:Core/Src/main.c **** 
 340:Core/Src/main.c ****   /* USER CODE END ADC3_Init 1 */
 341:Core/Src/main.c **** 
 342:Core/Src/main.c ****   /** Common config
 343:Core/Src/main.c ****   */
 344:Core/Src/main.c ****   hadc3.Instance = ADC3;
 910              		.loc 1 344 18
 911 0018 324B     		ldr	r3, .L36
 912 001a 334A     		ldr	r2, .L36+4
 913 001c 1A60     		str	r2, [r3]
 345:Core/Src/main.c ****   hadc3.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV8;
 914              		.loc 1 345 29
 915 001e 314B     		ldr	r3, .L36
 916 0020 4FF48012 		mov	r2, #1048576
 917 0024 5A60     		str	r2, [r3, #4]
 346:Core/Src/main.c ****   hadc3.Init.Resolution = ADC_RESOLUTION_16B;
 918              		.loc 1 346 25
 919 0026 2F4B     		ldr	r3, .L36
 920 0028 0022     		movs	r2, #0
 921 002a 9A60     		str	r2, [r3, #8]
 347:Core/Src/main.c ****   hadc3.Init.ScanConvMode = ADC_SCAN_ENABLE;
 922              		.loc 1 347 27
 923 002c 2D4B     		ldr	r3, .L36
 924 002e 0122     		movs	r2, #1
 925 0030 DA60     		str	r2, [r3, #12]
 348:Core/Src/main.c ****   hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 926              		.loc 1 348 27
 927 0032 2C4B     		ldr	r3, .L36
 928 0034 0422     		movs	r2, #4
 929 0036 1A61     		str	r2, [r3, #16]
 349:Core/Src/main.c ****   hadc3.Init.LowPowerAutoWait = DISABLE;
 930              		.loc 1 349 31
 931 0038 2A4B     		ldr	r3, .L36
 932 003a 0022     		movs	r2, #0
 933 003c 1A75     		strb	r2, [r3, #20]
 350:Core/Src/main.c ****   hadc3.Init.ContinuousConvMode = DISABLE;
 934              		.loc 1 350 33
 935 003e 294B     		ldr	r3, .L36
 936 0040 0022     		movs	r2, #0
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 82


 937 0042 5A75     		strb	r2, [r3, #21]
 351:Core/Src/main.c ****   hadc3.Init.NbrOfConversion = 2;
 938              		.loc 1 351 30
 939 0044 274B     		ldr	r3, .L36
 940 0046 0222     		movs	r2, #2
 941 0048 9A61     		str	r2, [r3, #24]
 352:Core/Src/main.c ****   hadc3.Init.DiscontinuousConvMode = ENABLE;
 942              		.loc 1 352 36
 943 004a 264B     		ldr	r3, .L36
 944 004c 0122     		movs	r2, #1
 945 004e 1A77     		strb	r2, [r3, #28]
 353:Core/Src/main.c ****   hadc3.Init.NbrOfDiscConversion = 1;
 946              		.loc 1 353 34
 947 0050 244B     		ldr	r3, .L36
 948 0052 0122     		movs	r2, #1
 949 0054 1A62     		str	r2, [r3, #32]
 354:Core/Src/main.c ****   hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 950              		.loc 1 354 31
 951 0056 234B     		ldr	r3, .L36
 952 0058 0022     		movs	r2, #0
 953 005a 5A62     		str	r2, [r3, #36]
 355:Core/Src/main.c ****   hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 954              		.loc 1 355 35
 955 005c 214B     		ldr	r3, .L36
 956 005e 0022     		movs	r2, #0
 957 0060 9A62     		str	r2, [r3, #40]
 356:Core/Src/main.c ****   hadc3.Init.ConversionDataManagement = ADC_CONVERSIONDATA_DR;
 958              		.loc 1 356 39
 959 0062 204B     		ldr	r3, .L36
 960 0064 0022     		movs	r2, #0
 961 0066 DA62     		str	r2, [r3, #44]
 357:Core/Src/main.c ****   hadc3.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 962              		.loc 1 357 22
 963 0068 1E4B     		ldr	r3, .L36
 964 006a 0022     		movs	r2, #0
 965 006c 1A63     		str	r2, [r3, #48]
 358:Core/Src/main.c ****   hadc3.Init.LeftBitShift = ADC_LEFTBITSHIFT_NONE;
 966              		.loc 1 358 27
 967 006e 1D4B     		ldr	r3, .L36
 968 0070 0022     		movs	r2, #0
 969 0072 5A63     		str	r2, [r3, #52]
 359:Core/Src/main.c ****   hadc3.Init.OversamplingMode = DISABLE;
 970              		.loc 1 359 31
 971 0074 1B4B     		ldr	r3, .L36
 972 0076 0022     		movs	r2, #0
 973 0078 83F83820 		strb	r2, [r3, #56]
 360:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc3) != HAL_OK)
 974              		.loc 1 360 7
 975 007c 1948     		ldr	r0, .L36
 976 007e FFF7FEFF 		bl	HAL_ADC_Init
 977 0082 0346     		mov	r3, r0
 978              		.loc 1 360 6
 979 0084 002B     		cmp	r3, #0
 980 0086 01D0     		beq	.L32
 361:Core/Src/main.c ****   {
 362:Core/Src/main.c ****     Error_Handler();
 981              		.loc 1 362 5
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 83


 982 0088 FFF7FEFF 		bl	Error_Handler
 983              	.L32:
 363:Core/Src/main.c ****   }
 364:Core/Src/main.c **** 
 365:Core/Src/main.c ****   /** Configure Regular Channel
 366:Core/Src/main.c ****   */
 367:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_TEMPSENSOR;
 984              		.loc 1 367 19
 985 008c 174B     		ldr	r3, .L36+8
 986 008e 7B60     		str	r3, [r7, #4]
 368:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 987              		.loc 1 368 16
 988 0090 0623     		movs	r3, #6
 989 0092 BB60     		str	r3, [r7, #8]
 369:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 990              		.loc 1 369 24
 991 0094 0023     		movs	r3, #0
 992 0096 FB60     		str	r3, [r7, #12]
 370:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 993              		.loc 1 370 22
 994 0098 40F2FF73 		movw	r3, #2047
 995 009c 3B61     		str	r3, [r7, #16]
 371:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 996              		.loc 1 371 24
 997 009e 0423     		movs	r3, #4
 998 00a0 7B61     		str	r3, [r7, #20]
 372:Core/Src/main.c ****   sConfig.Offset = 0;
 999              		.loc 1 372 18
 1000 00a2 0023     		movs	r3, #0
 1001 00a4 BB61     		str	r3, [r7, #24]
 373:Core/Src/main.c ****   sConfig.OffsetSignedSaturation = DISABLE;
 1002              		.loc 1 373 34
 1003 00a6 0023     		movs	r3, #0
 1004 00a8 7B77     		strb	r3, [r7, #29]
 374:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 1005              		.loc 1 374 7
 1006 00aa 3B1D     		adds	r3, r7, #4
 1007 00ac 1946     		mov	r1, r3
 1008 00ae 0D48     		ldr	r0, .L36
 1009 00b0 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1010 00b4 0346     		mov	r3, r0
 1011              		.loc 1 374 6
 1012 00b6 002B     		cmp	r3, #0
 1013 00b8 01D0     		beq	.L33
 375:Core/Src/main.c ****   {
 376:Core/Src/main.c ****     Error_Handler();
 1014              		.loc 1 376 5
 1015 00ba FFF7FEFF 		bl	Error_Handler
 1016              	.L33:
 377:Core/Src/main.c ****   }
 378:Core/Src/main.c **** 
 379:Core/Src/main.c ****   /** Configure Regular Channel
 380:Core/Src/main.c ****   */
 381:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_VBAT;
 1017              		.loc 1 381 19
 1018 00be 0C4B     		ldr	r3, .L36+12
 1019 00c0 7B60     		str	r3, [r7, #4]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 84


 382:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 1020              		.loc 1 382 16
 1021 00c2 0C23     		movs	r3, #12
 1022 00c4 BB60     		str	r3, [r7, #8]
 383:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 1023              		.loc 1 383 7
 1024 00c6 3B1D     		adds	r3, r7, #4
 1025 00c8 1946     		mov	r1, r3
 1026 00ca 0648     		ldr	r0, .L36
 1027 00cc FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1028 00d0 0346     		mov	r3, r0
 1029              		.loc 1 383 6
 1030 00d2 002B     		cmp	r3, #0
 1031 00d4 01D0     		beq	.L35
 384:Core/Src/main.c ****   {
 385:Core/Src/main.c ****     Error_Handler();
 1032              		.loc 1 385 5
 1033 00d6 FFF7FEFF 		bl	Error_Handler
 1034              	.L35:
 386:Core/Src/main.c ****   }
 387:Core/Src/main.c ****   /* USER CODE BEGIN ADC3_Init 2 */
 388:Core/Src/main.c **** 
 389:Core/Src/main.c ****   /* USER CODE END ADC3_Init 2 */
 390:Core/Src/main.c **** 
 391:Core/Src/main.c **** }
 1035              		.loc 1 391 1
 1036 00da 00BF     		nop
 1037 00dc 2037     		adds	r7, r7, #32
 1038              	.LCFI21:
 1039              		.cfi_def_cfa_offset 8
 1040 00de BD46     		mov	sp, r7
 1041              	.LCFI22:
 1042              		.cfi_def_cfa_register 13
 1043              		@ sp needed
 1044 00e0 80BD     		pop	{r7, pc}
 1045              	.L37:
 1046 00e2 00BF     		.align	2
 1047              	.L36:
 1048 00e4 00000000 		.word	hadc3
 1049 00e8 00600258 		.word	1476550656
 1050 00ec 000084CB 		.word	-880541696
 1051 00f0 000052C7 		.word	-950927360
 1052              		.cfi_endproc
 1053              	.LFE337:
 1055              		.section	.text.MX_FDCAN1_Init,"ax",%progbits
 1056              		.align	1
 1057              		.syntax unified
 1058              		.thumb
 1059              		.thumb_func
 1061              	MX_FDCAN1_Init:
 1062              	.LFB338:
 392:Core/Src/main.c **** 
 393:Core/Src/main.c **** /**
 394:Core/Src/main.c ****   * @brief FDCAN1 Initialization Function
 395:Core/Src/main.c ****   * @param None
 396:Core/Src/main.c ****   * @retval None
 397:Core/Src/main.c ****   */
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 85


 398:Core/Src/main.c **** static void MX_FDCAN1_Init(void)
 399:Core/Src/main.c **** {
 1063              		.loc 1 399 1
 1064              		.cfi_startproc
 1065              		@ args = 0, pretend = 0, frame = 0
 1066              		@ frame_needed = 1, uses_anonymous_args = 0
 1067 0000 80B5     		push	{r7, lr}
 1068              	.LCFI23:
 1069              		.cfi_def_cfa_offset 8
 1070              		.cfi_offset 7, -8
 1071              		.cfi_offset 14, -4
 1072 0002 00AF     		add	r7, sp, #0
 1073              	.LCFI24:
 1074              		.cfi_def_cfa_register 7
 400:Core/Src/main.c **** 
 401:Core/Src/main.c ****   /* USER CODE BEGIN FDCAN1_Init 0 */
 402:Core/Src/main.c **** 
 403:Core/Src/main.c ****   /* USER CODE END FDCAN1_Init 0 */
 404:Core/Src/main.c **** 
 405:Core/Src/main.c ****   /* USER CODE BEGIN FDCAN1_Init 1 */
 406:Core/Src/main.c **** 
 407:Core/Src/main.c ****   /* USER CODE END FDCAN1_Init 1 */
 408:Core/Src/main.c ****   hfdcan1.Instance = FDCAN1;
 1075              		.loc 1 408 20
 1076 0004 2E4B     		ldr	r3, .L41
 1077 0006 2F4A     		ldr	r2, .L41+4
 1078 0008 1A60     		str	r2, [r3]
 409:Core/Src/main.c ****   hfdcan1.Init.FrameFormat = FDCAN_FRAME_CLASSIC;
 1079              		.loc 1 409 28
 1080 000a 2D4B     		ldr	r3, .L41
 1081 000c 0022     		movs	r2, #0
 1082 000e 9A60     		str	r2, [r3, #8]
 410:Core/Src/main.c ****   hfdcan1.Init.Mode = FDCAN_MODE_EXTERNAL_LOOPBACK;
 1083              		.loc 1 410 21
 1084 0010 2B4B     		ldr	r3, .L41
 1085 0012 0422     		movs	r2, #4
 1086 0014 DA60     		str	r2, [r3, #12]
 411:Core/Src/main.c ****   hfdcan1.Init.AutoRetransmission = ENABLE;
 1087              		.loc 1 411 35
 1088 0016 2A4B     		ldr	r3, .L41
 1089 0018 0122     		movs	r2, #1
 1090 001a 1A74     		strb	r2, [r3, #16]
 412:Core/Src/main.c ****   hfdcan1.Init.TransmitPause = DISABLE;
 1091              		.loc 1 412 30
 1092 001c 284B     		ldr	r3, .L41
 1093 001e 0022     		movs	r2, #0
 1094 0020 5A74     		strb	r2, [r3, #17]
 413:Core/Src/main.c ****   hfdcan1.Init.ProtocolException = ENABLE;
 1095              		.loc 1 413 34
 1096 0022 274B     		ldr	r3, .L41
 1097 0024 0122     		movs	r2, #1
 1098 0026 9A74     		strb	r2, [r3, #18]
 414:Core/Src/main.c ****   hfdcan1.Init.NominalPrescaler = 2;
 1099              		.loc 1 414 33
 1100 0028 254B     		ldr	r3, .L41
 1101 002a 0222     		movs	r2, #2
 1102 002c 5A61     		str	r2, [r3, #20]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 86


 415:Core/Src/main.c ****   hfdcan1.Init.NominalSyncJumpWidth = 0x8;
 1103              		.loc 1 415 37
 1104 002e 244B     		ldr	r3, .L41
 1105 0030 0822     		movs	r2, #8
 1106 0032 9A61     		str	r2, [r3, #24]
 416:Core/Src/main.c ****   hfdcan1.Init.NominalTimeSeg1 = 0x1F;
 1107              		.loc 1 416 32
 1108 0034 224B     		ldr	r3, .L41
 1109 0036 1F22     		movs	r2, #31
 1110 0038 DA61     		str	r2, [r3, #28]
 417:Core/Src/main.c ****   hfdcan1.Init.NominalTimeSeg2 = 0x8;
 1111              		.loc 1 417 32
 1112 003a 214B     		ldr	r3, .L41
 1113 003c 0822     		movs	r2, #8
 1114 003e 1A62     		str	r2, [r3, #32]
 418:Core/Src/main.c ****   hfdcan1.Init.DataPrescaler = 1;
 1115              		.loc 1 418 30
 1116 0040 1F4B     		ldr	r3, .L41
 1117 0042 0122     		movs	r2, #1
 1118 0044 5A62     		str	r2, [r3, #36]
 419:Core/Src/main.c ****   hfdcan1.Init.DataSyncJumpWidth = 1;
 1119              		.loc 1 419 34
 1120 0046 1E4B     		ldr	r3, .L41
 1121 0048 0122     		movs	r2, #1
 1122 004a 9A62     		str	r2, [r3, #40]
 420:Core/Src/main.c ****   hfdcan1.Init.DataTimeSeg1 = 1;
 1123              		.loc 1 420 29
 1124 004c 1C4B     		ldr	r3, .L41
 1125 004e 0122     		movs	r2, #1
 1126 0050 DA62     		str	r2, [r3, #44]
 421:Core/Src/main.c ****   hfdcan1.Init.DataTimeSeg2 = 1;
 1127              		.loc 1 421 29
 1128 0052 1B4B     		ldr	r3, .L41
 1129 0054 0122     		movs	r2, #1
 1130 0056 1A63     		str	r2, [r3, #48]
 422:Core/Src/main.c ****   hfdcan1.Init.MessageRAMOffset = 0;
 1131              		.loc 1 422 33
 1132 0058 194B     		ldr	r3, .L41
 1133 005a 0022     		movs	r2, #0
 1134 005c 5A63     		str	r2, [r3, #52]
 423:Core/Src/main.c ****   hfdcan1.Init.StdFiltersNbr = 1;
 1135              		.loc 1 423 30
 1136 005e 184B     		ldr	r3, .L41
 1137 0060 0122     		movs	r2, #1
 1138 0062 9A63     		str	r2, [r3, #56]
 424:Core/Src/main.c ****   hfdcan1.Init.ExtFiltersNbr = 0;
 1139              		.loc 1 424 30
 1140 0064 164B     		ldr	r3, .L41
 1141 0066 0022     		movs	r2, #0
 1142 0068 DA63     		str	r2, [r3, #60]
 425:Core/Src/main.c ****   hfdcan1.Init.RxFifo0ElmtsNbr = 0;
 1143              		.loc 1 425 32
 1144 006a 154B     		ldr	r3, .L41
 1145 006c 0022     		movs	r2, #0
 1146 006e 1A64     		str	r2, [r3, #64]
 426:Core/Src/main.c ****   hfdcan1.Init.RxFifo0ElmtSize = FDCAN_DATA_BYTES_8;
 1147              		.loc 1 426 32
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 87


 1148 0070 134B     		ldr	r3, .L41
 1149 0072 0422     		movs	r2, #4
 1150 0074 5A64     		str	r2, [r3, #68]
 427:Core/Src/main.c ****   hfdcan1.Init.RxFifo1ElmtsNbr = 0;
 1151              		.loc 1 427 32
 1152 0076 124B     		ldr	r3, .L41
 1153 0078 0022     		movs	r2, #0
 1154 007a 9A64     		str	r2, [r3, #72]
 428:Core/Src/main.c ****   hfdcan1.Init.RxFifo1ElmtSize = FDCAN_DATA_BYTES_8;
 1155              		.loc 1 428 32
 1156 007c 104B     		ldr	r3, .L41
 1157 007e 0422     		movs	r2, #4
 1158 0080 DA64     		str	r2, [r3, #76]
 429:Core/Src/main.c ****   hfdcan1.Init.RxBuffersNbr = 0;
 1159              		.loc 1 429 29
 1160 0082 0F4B     		ldr	r3, .L41
 1161 0084 0022     		movs	r2, #0
 1162 0086 1A65     		str	r2, [r3, #80]
 430:Core/Src/main.c ****   hfdcan1.Init.RxBufferSize = FDCAN_DATA_BYTES_8;
 1163              		.loc 1 430 29
 1164 0088 0D4B     		ldr	r3, .L41
 1165 008a 0422     		movs	r2, #4
 1166 008c 5A65     		str	r2, [r3, #84]
 431:Core/Src/main.c ****   hfdcan1.Init.TxEventsNbr = 0;
 1167              		.loc 1 431 28
 1168 008e 0C4B     		ldr	r3, .L41
 1169 0090 0022     		movs	r2, #0
 1170 0092 9A65     		str	r2, [r3, #88]
 432:Core/Src/main.c ****   hfdcan1.Init.TxBuffersNbr = 0;
 1171              		.loc 1 432 29
 1172 0094 0A4B     		ldr	r3, .L41
 1173 0096 0022     		movs	r2, #0
 1174 0098 DA65     		str	r2, [r3, #92]
 433:Core/Src/main.c ****   hfdcan1.Init.TxFifoQueueElmtsNbr = 0;
 1175              		.loc 1 433 36
 1176 009a 094B     		ldr	r3, .L41
 1177 009c 0022     		movs	r2, #0
 1178 009e 1A66     		str	r2, [r3, #96]
 434:Core/Src/main.c ****   hfdcan1.Init.TxFifoQueueMode = FDCAN_TX_FIFO_OPERATION;
 1179              		.loc 1 434 32
 1180 00a0 074B     		ldr	r3, .L41
 1181 00a2 0022     		movs	r2, #0
 1182 00a4 5A66     		str	r2, [r3, #100]
 435:Core/Src/main.c ****   hfdcan1.Init.TxElmtSize = FDCAN_DATA_BYTES_8;
 1183              		.loc 1 435 27
 1184 00a6 064B     		ldr	r3, .L41
 1185 00a8 0422     		movs	r2, #4
 1186 00aa 9A66     		str	r2, [r3, #104]
 436:Core/Src/main.c ****   if (HAL_FDCAN_Init(&hfdcan1) != HAL_OK)
 1187              		.loc 1 436 7
 1188 00ac 0448     		ldr	r0, .L41
 1189 00ae FFF7FEFF 		bl	HAL_FDCAN_Init
 1190 00b2 0346     		mov	r3, r0
 1191              		.loc 1 436 6
 1192 00b4 002B     		cmp	r3, #0
 1193 00b6 01D0     		beq	.L40
 437:Core/Src/main.c ****   {
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 88


 438:Core/Src/main.c ****     Error_Handler();
 1194              		.loc 1 438 5
 1195 00b8 FFF7FEFF 		bl	Error_Handler
 1196              	.L40:
 439:Core/Src/main.c ****   }
 440:Core/Src/main.c ****   /* USER CODE BEGIN FDCAN1_Init 2 */
 441:Core/Src/main.c **** 
 442:Core/Src/main.c ****   /* USER CODE END FDCAN1_Init 2 */
 443:Core/Src/main.c **** 
 444:Core/Src/main.c **** }
 1197              		.loc 1 444 1
 1198 00bc 00BF     		nop
 1199 00be 80BD     		pop	{r7, pc}
 1200              	.L42:
 1201              		.align	2
 1202              	.L41:
 1203 00c0 00000000 		.word	hfdcan1
 1204 00c4 00A00040 		.word	1073782784
 1205              		.cfi_endproc
 1206              	.LFE338:
 1208              		.section	.text.MX_FDCAN2_Init,"ax",%progbits
 1209              		.align	1
 1210              		.syntax unified
 1211              		.thumb
 1212              		.thumb_func
 1214              	MX_FDCAN2_Init:
 1215              	.LFB339:
 445:Core/Src/main.c **** 
 446:Core/Src/main.c **** /**
 447:Core/Src/main.c ****   * @brief FDCAN2 Initialization Function
 448:Core/Src/main.c ****   * @param None
 449:Core/Src/main.c ****   * @retval None
 450:Core/Src/main.c ****   */
 451:Core/Src/main.c **** static void MX_FDCAN2_Init(void)
 452:Core/Src/main.c **** {
 1216              		.loc 1 452 1
 1217              		.cfi_startproc
 1218              		@ args = 0, pretend = 0, frame = 0
 1219              		@ frame_needed = 1, uses_anonymous_args = 0
 1220 0000 80B5     		push	{r7, lr}
 1221              	.LCFI25:
 1222              		.cfi_def_cfa_offset 8
 1223              		.cfi_offset 7, -8
 1224              		.cfi_offset 14, -4
 1225 0002 00AF     		add	r7, sp, #0
 1226              	.LCFI26:
 1227              		.cfi_def_cfa_register 7
 453:Core/Src/main.c **** 
 454:Core/Src/main.c ****   /* USER CODE BEGIN FDCAN2_Init 0 */
 455:Core/Src/main.c **** 
 456:Core/Src/main.c ****   /* USER CODE END FDCAN2_Init 0 */
 457:Core/Src/main.c **** 
 458:Core/Src/main.c ****   /* USER CODE BEGIN FDCAN2_Init 1 */
 459:Core/Src/main.c **** 
 460:Core/Src/main.c ****   /* USER CODE END FDCAN2_Init 1 */
 461:Core/Src/main.c ****   hfdcan2.Instance = FDCAN2;
 1228              		.loc 1 461 20
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 89


 1229 0004 2E4B     		ldr	r3, .L46
 1230 0006 2F4A     		ldr	r2, .L46+4
 1231 0008 1A60     		str	r2, [r3]
 462:Core/Src/main.c ****   hfdcan2.Init.FrameFormat = FDCAN_FRAME_CLASSIC;
 1232              		.loc 1 462 28
 1233 000a 2D4B     		ldr	r3, .L46
 1234 000c 0022     		movs	r2, #0
 1235 000e 9A60     		str	r2, [r3, #8]
 463:Core/Src/main.c ****   hfdcan2.Init.Mode = FDCAN_MODE_EXTERNAL_LOOPBACK;
 1236              		.loc 1 463 21
 1237 0010 2B4B     		ldr	r3, .L46
 1238 0012 0422     		movs	r2, #4
 1239 0014 DA60     		str	r2, [r3, #12]
 464:Core/Src/main.c ****   hfdcan2.Init.AutoRetransmission = ENABLE;
 1240              		.loc 1 464 35
 1241 0016 2A4B     		ldr	r3, .L46
 1242 0018 0122     		movs	r2, #1
 1243 001a 1A74     		strb	r2, [r3, #16]
 465:Core/Src/main.c ****   hfdcan2.Init.TransmitPause = DISABLE;
 1244              		.loc 1 465 30
 1245 001c 284B     		ldr	r3, .L46
 1246 001e 0022     		movs	r2, #0
 1247 0020 5A74     		strb	r2, [r3, #17]
 466:Core/Src/main.c ****   hfdcan2.Init.ProtocolException = ENABLE;
 1248              		.loc 1 466 34
 1249 0022 274B     		ldr	r3, .L46
 1250 0024 0122     		movs	r2, #1
 1251 0026 9A74     		strb	r2, [r3, #18]
 467:Core/Src/main.c ****   hfdcan2.Init.NominalPrescaler = 2;
 1252              		.loc 1 467 33
 1253 0028 254B     		ldr	r3, .L46
 1254 002a 0222     		movs	r2, #2
 1255 002c 5A61     		str	r2, [r3, #20]
 468:Core/Src/main.c ****   hfdcan2.Init.NominalSyncJumpWidth = 0x8;
 1256              		.loc 1 468 37
 1257 002e 244B     		ldr	r3, .L46
 1258 0030 0822     		movs	r2, #8
 1259 0032 9A61     		str	r2, [r3, #24]
 469:Core/Src/main.c ****   hfdcan2.Init.NominalTimeSeg1 = 0x1F;
 1260              		.loc 1 469 32
 1261 0034 224B     		ldr	r3, .L46
 1262 0036 1F22     		movs	r2, #31
 1263 0038 DA61     		str	r2, [r3, #28]
 470:Core/Src/main.c ****   hfdcan2.Init.NominalTimeSeg2 = 0x8;
 1264              		.loc 1 470 32
 1265 003a 214B     		ldr	r3, .L46
 1266 003c 0822     		movs	r2, #8
 1267 003e 1A62     		str	r2, [r3, #32]
 471:Core/Src/main.c ****   hfdcan2.Init.DataPrescaler = 1;
 1268              		.loc 1 471 30
 1269 0040 1F4B     		ldr	r3, .L46
 1270 0042 0122     		movs	r2, #1
 1271 0044 5A62     		str	r2, [r3, #36]
 472:Core/Src/main.c ****   hfdcan2.Init.DataSyncJumpWidth = 1;
 1272              		.loc 1 472 34
 1273 0046 1E4B     		ldr	r3, .L46
 1274 0048 0122     		movs	r2, #1
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 90


 1275 004a 9A62     		str	r2, [r3, #40]
 473:Core/Src/main.c ****   hfdcan2.Init.DataTimeSeg1 = 1;
 1276              		.loc 1 473 29
 1277 004c 1C4B     		ldr	r3, .L46
 1278 004e 0122     		movs	r2, #1
 1279 0050 DA62     		str	r2, [r3, #44]
 474:Core/Src/main.c ****   hfdcan2.Init.DataTimeSeg2 = 1;
 1280              		.loc 1 474 29
 1281 0052 1B4B     		ldr	r3, .L46
 1282 0054 0122     		movs	r2, #1
 1283 0056 1A63     		str	r2, [r3, #48]
 475:Core/Src/main.c ****   hfdcan2.Init.MessageRAMOffset = 0;
 1284              		.loc 1 475 33
 1285 0058 194B     		ldr	r3, .L46
 1286 005a 0022     		movs	r2, #0
 1287 005c 5A63     		str	r2, [r3, #52]
 476:Core/Src/main.c ****   hfdcan2.Init.StdFiltersNbr = 0;
 1288              		.loc 1 476 30
 1289 005e 184B     		ldr	r3, .L46
 1290 0060 0022     		movs	r2, #0
 1291 0062 9A63     		str	r2, [r3, #56]
 477:Core/Src/main.c ****   hfdcan2.Init.ExtFiltersNbr = 0;
 1292              		.loc 1 477 30
 1293 0064 164B     		ldr	r3, .L46
 1294 0066 0022     		movs	r2, #0
 1295 0068 DA63     		str	r2, [r3, #60]
 478:Core/Src/main.c ****   hfdcan2.Init.RxFifo0ElmtsNbr = 0;
 1296              		.loc 1 478 32
 1297 006a 154B     		ldr	r3, .L46
 1298 006c 0022     		movs	r2, #0
 1299 006e 1A64     		str	r2, [r3, #64]
 479:Core/Src/main.c ****   hfdcan2.Init.RxFifo0ElmtSize = FDCAN_DATA_BYTES_8;
 1300              		.loc 1 479 32
 1301 0070 134B     		ldr	r3, .L46
 1302 0072 0422     		movs	r2, #4
 1303 0074 5A64     		str	r2, [r3, #68]
 480:Core/Src/main.c ****   hfdcan2.Init.RxFifo1ElmtsNbr = 0;
 1304              		.loc 1 480 32
 1305 0076 124B     		ldr	r3, .L46
 1306 0078 0022     		movs	r2, #0
 1307 007a 9A64     		str	r2, [r3, #72]
 481:Core/Src/main.c ****   hfdcan2.Init.RxFifo1ElmtSize = FDCAN_DATA_BYTES_8;
 1308              		.loc 1 481 32
 1309 007c 104B     		ldr	r3, .L46
 1310 007e 0422     		movs	r2, #4
 1311 0080 DA64     		str	r2, [r3, #76]
 482:Core/Src/main.c ****   hfdcan2.Init.RxBuffersNbr = 0;
 1312              		.loc 1 482 29
 1313 0082 0F4B     		ldr	r3, .L46
 1314 0084 0022     		movs	r2, #0
 1315 0086 1A65     		str	r2, [r3, #80]
 483:Core/Src/main.c ****   hfdcan2.Init.RxBufferSize = FDCAN_DATA_BYTES_8;
 1316              		.loc 1 483 29
 1317 0088 0D4B     		ldr	r3, .L46
 1318 008a 0422     		movs	r2, #4
 1319 008c 5A65     		str	r2, [r3, #84]
 484:Core/Src/main.c ****   hfdcan2.Init.TxEventsNbr = 0;
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 91


 1320              		.loc 1 484 28
 1321 008e 0C4B     		ldr	r3, .L46
 1322 0090 0022     		movs	r2, #0
 1323 0092 9A65     		str	r2, [r3, #88]
 485:Core/Src/main.c ****   hfdcan2.Init.TxBuffersNbr = 0;
 1324              		.loc 1 485 29
 1325 0094 0A4B     		ldr	r3, .L46
 1326 0096 0022     		movs	r2, #0
 1327 0098 DA65     		str	r2, [r3, #92]
 486:Core/Src/main.c ****   hfdcan2.Init.TxFifoQueueElmtsNbr = 0;
 1328              		.loc 1 486 36
 1329 009a 094B     		ldr	r3, .L46
 1330 009c 0022     		movs	r2, #0
 1331 009e 1A66     		str	r2, [r3, #96]
 487:Core/Src/main.c ****   hfdcan2.Init.TxFifoQueueMode = FDCAN_TX_FIFO_OPERATION;
 1332              		.loc 1 487 32
 1333 00a0 074B     		ldr	r3, .L46
 1334 00a2 0022     		movs	r2, #0
 1335 00a4 5A66     		str	r2, [r3, #100]
 488:Core/Src/main.c ****   hfdcan2.Init.TxElmtSize = FDCAN_DATA_BYTES_8;
 1336              		.loc 1 488 27
 1337 00a6 064B     		ldr	r3, .L46
 1338 00a8 0422     		movs	r2, #4
 1339 00aa 9A66     		str	r2, [r3, #104]
 489:Core/Src/main.c ****   if (HAL_FDCAN_Init(&hfdcan2) != HAL_OK)
 1340              		.loc 1 489 7
 1341 00ac 0448     		ldr	r0, .L46
 1342 00ae FFF7FEFF 		bl	HAL_FDCAN_Init
 1343 00b2 0346     		mov	r3, r0
 1344              		.loc 1 489 6
 1345 00b4 002B     		cmp	r3, #0
 1346 00b6 01D0     		beq	.L45
 490:Core/Src/main.c ****   {
 491:Core/Src/main.c ****     Error_Handler();
 1347              		.loc 1 491 5
 1348 00b8 FFF7FEFF 		bl	Error_Handler
 1349              	.L45:
 492:Core/Src/main.c ****   }
 493:Core/Src/main.c ****   /* USER CODE BEGIN FDCAN2_Init 2 */
 494:Core/Src/main.c **** 
 495:Core/Src/main.c ****   /* USER CODE END FDCAN2_Init 2 */
 496:Core/Src/main.c **** 
 497:Core/Src/main.c **** }
 1350              		.loc 1 497 1
 1351 00bc 00BF     		nop
 1352 00be 80BD     		pop	{r7, pc}
 1353              	.L47:
 1354              		.align	2
 1355              	.L46:
 1356 00c0 00000000 		.word	hfdcan2
 1357 00c4 00A40040 		.word	1073783808
 1358              		.cfi_endproc
 1359              	.LFE339:
 1361              		.section	.text.MX_I2C1_Init,"ax",%progbits
 1362              		.align	1
 1363              		.syntax unified
 1364              		.thumb
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 92


 1365              		.thumb_func
 1367              	MX_I2C1_Init:
 1368              	.LFB340:
 498:Core/Src/main.c **** 
 499:Core/Src/main.c **** /**
 500:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 501:Core/Src/main.c ****   * @param None
 502:Core/Src/main.c ****   * @retval None
 503:Core/Src/main.c ****   */
 504:Core/Src/main.c **** static void MX_I2C1_Init(void)
 505:Core/Src/main.c **** {
 1369              		.loc 1 505 1
 1370              		.cfi_startproc
 1371              		@ args = 0, pretend = 0, frame = 0
 1372              		@ frame_needed = 1, uses_anonymous_args = 0
 1373 0000 80B5     		push	{r7, lr}
 1374              	.LCFI27:
 1375              		.cfi_def_cfa_offset 8
 1376              		.cfi_offset 7, -8
 1377              		.cfi_offset 14, -4
 1378 0002 00AF     		add	r7, sp, #0
 1379              	.LCFI28:
 1380              		.cfi_def_cfa_register 7
 506:Core/Src/main.c **** 
 507:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 508:Core/Src/main.c **** 
 509:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 510:Core/Src/main.c **** 
 511:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 512:Core/Src/main.c **** 
 513:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 514:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 1381              		.loc 1 514 18
 1382 0004 1B4B     		ldr	r3, .L53
 1383 0006 1C4A     		ldr	r2, .L53+4
 1384 0008 1A60     		str	r2, [r3]
 515:Core/Src/main.c ****   hi2c1.Init.Timing = 0x00B03FDB;
 1385              		.loc 1 515 21
 1386 000a 1A4B     		ldr	r3, .L53
 1387 000c 1B4A     		ldr	r2, .L53+8
 1388 000e 5A60     		str	r2, [r3, #4]
 516:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 1389              		.loc 1 516 26
 1390 0010 184B     		ldr	r3, .L53
 1391 0012 0022     		movs	r2, #0
 1392 0014 9A60     		str	r2, [r3, #8]
 517:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1393              		.loc 1 517 29
 1394 0016 174B     		ldr	r3, .L53
 1395 0018 0122     		movs	r2, #1
 1396 001a DA60     		str	r2, [r3, #12]
 518:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1397              		.loc 1 518 30
 1398 001c 154B     		ldr	r3, .L53
 1399 001e 0022     		movs	r2, #0
 1400 0020 1A61     		str	r2, [r3, #16]
 519:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 93


 1401              		.loc 1 519 26
 1402 0022 144B     		ldr	r3, .L53
 1403 0024 0022     		movs	r2, #0
 1404 0026 5A61     		str	r2, [r3, #20]
 520:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 1405              		.loc 1 520 31
 1406 0028 124B     		ldr	r3, .L53
 1407 002a 0022     		movs	r2, #0
 1408 002c 9A61     		str	r2, [r3, #24]
 521:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1409              		.loc 1 521 30
 1410 002e 114B     		ldr	r3, .L53
 1411 0030 0022     		movs	r2, #0
 1412 0032 DA61     		str	r2, [r3, #28]
 522:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1413              		.loc 1 522 28
 1414 0034 0F4B     		ldr	r3, .L53
 1415 0036 0022     		movs	r2, #0
 1416 0038 1A62     		str	r2, [r3, #32]
 523:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 1417              		.loc 1 523 7
 1418 003a 0E48     		ldr	r0, .L53
 1419 003c FFF7FEFF 		bl	HAL_I2C_Init
 1420 0040 0346     		mov	r3, r0
 1421              		.loc 1 523 6
 1422 0042 002B     		cmp	r3, #0
 1423 0044 01D0     		beq	.L49
 524:Core/Src/main.c ****   {
 525:Core/Src/main.c ****     Error_Handler();
 1424              		.loc 1 525 5
 1425 0046 FFF7FEFF 		bl	Error_Handler
 1426              	.L49:
 526:Core/Src/main.c ****   }
 527:Core/Src/main.c **** 
 528:Core/Src/main.c ****   /** Configure Analogue filter
 529:Core/Src/main.c ****   */
 530:Core/Src/main.c ****   if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 1427              		.loc 1 530 7
 1428 004a 0021     		movs	r1, #0
 1429 004c 0948     		ldr	r0, .L53
 1430 004e FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 1431 0052 0346     		mov	r3, r0
 1432              		.loc 1 530 6
 1433 0054 002B     		cmp	r3, #0
 1434 0056 01D0     		beq	.L50
 531:Core/Src/main.c ****   {
 532:Core/Src/main.c ****     Error_Handler();
 1435              		.loc 1 532 5
 1436 0058 FFF7FEFF 		bl	Error_Handler
 1437              	.L50:
 533:Core/Src/main.c ****   }
 534:Core/Src/main.c **** 
 535:Core/Src/main.c ****   /** Configure Digital filter
 536:Core/Src/main.c ****   */
 537:Core/Src/main.c ****   if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 1438              		.loc 1 537 7
 1439 005c 0021     		movs	r1, #0
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 94


 1440 005e 0548     		ldr	r0, .L53
 1441 0060 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 1442 0064 0346     		mov	r3, r0
 1443              		.loc 1 537 6
 1444 0066 002B     		cmp	r3, #0
 1445 0068 01D0     		beq	.L52
 538:Core/Src/main.c ****   {
 539:Core/Src/main.c ****     Error_Handler();
 1446              		.loc 1 539 5
 1447 006a FFF7FEFF 		bl	Error_Handler
 1448              	.L52:
 540:Core/Src/main.c ****   }
 541:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 542:Core/Src/main.c **** 
 543:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 544:Core/Src/main.c **** 
 545:Core/Src/main.c **** }
 1449              		.loc 1 545 1
 1450 006e 00BF     		nop
 1451 0070 80BD     		pop	{r7, pc}
 1452              	.L54:
 1453 0072 00BF     		.align	2
 1454              	.L53:
 1455 0074 00000000 		.word	hi2c1
 1456 0078 00540040 		.word	1073763328
 1457 007c DB3FB000 		.word	11550683
 1458              		.cfi_endproc
 1459              	.LFE340:
 1461              		.section	.text.MX_I2C4_Init,"ax",%progbits
 1462              		.align	1
 1463              		.syntax unified
 1464              		.thumb
 1465              		.thumb_func
 1467              	MX_I2C4_Init:
 1468              	.LFB341:
 546:Core/Src/main.c **** 
 547:Core/Src/main.c **** /**
 548:Core/Src/main.c ****   * @brief I2C4 Initialization Function
 549:Core/Src/main.c ****   * @param None
 550:Core/Src/main.c ****   * @retval None
 551:Core/Src/main.c ****   */
 552:Core/Src/main.c **** static void MX_I2C4_Init(void)
 553:Core/Src/main.c **** {
 1469              		.loc 1 553 1
 1470              		.cfi_startproc
 1471              		@ args = 0, pretend = 0, frame = 0
 1472              		@ frame_needed = 1, uses_anonymous_args = 0
 1473 0000 80B5     		push	{r7, lr}
 1474              	.LCFI29:
 1475              		.cfi_def_cfa_offset 8
 1476              		.cfi_offset 7, -8
 1477              		.cfi_offset 14, -4
 1478 0002 00AF     		add	r7, sp, #0
 1479              	.LCFI30:
 1480              		.cfi_def_cfa_register 7
 554:Core/Src/main.c **** 
 555:Core/Src/main.c ****   /* USER CODE BEGIN I2C4_Init 0 */
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 95


 556:Core/Src/main.c **** 
 557:Core/Src/main.c ****   /* USER CODE END I2C4_Init 0 */
 558:Core/Src/main.c **** 
 559:Core/Src/main.c ****   /* USER CODE BEGIN I2C4_Init 1 */
 560:Core/Src/main.c **** 
 561:Core/Src/main.c ****   /* USER CODE END I2C4_Init 1 */
 562:Core/Src/main.c ****   hi2c4.Instance = I2C4;
 1481              		.loc 1 562 18
 1482 0004 1B4B     		ldr	r3, .L60
 1483 0006 1C4A     		ldr	r2, .L60+4
 1484 0008 1A60     		str	r2, [r3]
 563:Core/Src/main.c ****   hi2c4.Init.Timing = 0x307075B1;
 1485              		.loc 1 563 21
 1486 000a 1A4B     		ldr	r3, .L60
 1487 000c 1B4A     		ldr	r2, .L60+8
 1488 000e 5A60     		str	r2, [r3, #4]
 564:Core/Src/main.c ****   hi2c4.Init.OwnAddress1 = 0;
 1489              		.loc 1 564 26
 1490 0010 184B     		ldr	r3, .L60
 1491 0012 0022     		movs	r2, #0
 1492 0014 9A60     		str	r2, [r3, #8]
 565:Core/Src/main.c ****   hi2c4.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 1493              		.loc 1 565 29
 1494 0016 174B     		ldr	r3, .L60
 1495 0018 0122     		movs	r2, #1
 1496 001a DA60     		str	r2, [r3, #12]
 566:Core/Src/main.c ****   hi2c4.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 1497              		.loc 1 566 30
 1498 001c 154B     		ldr	r3, .L60
 1499 001e 0022     		movs	r2, #0
 1500 0020 1A61     		str	r2, [r3, #16]
 567:Core/Src/main.c ****   hi2c4.Init.OwnAddress2 = 0;
 1501              		.loc 1 567 26
 1502 0022 144B     		ldr	r3, .L60
 1503 0024 0022     		movs	r2, #0
 1504 0026 5A61     		str	r2, [r3, #20]
 568:Core/Src/main.c ****   hi2c4.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 1505              		.loc 1 568 31
 1506 0028 124B     		ldr	r3, .L60
 1507 002a 0022     		movs	r2, #0
 1508 002c 9A61     		str	r2, [r3, #24]
 569:Core/Src/main.c ****   hi2c4.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 1509              		.loc 1 569 30
 1510 002e 114B     		ldr	r3, .L60
 1511 0030 0022     		movs	r2, #0
 1512 0032 DA61     		str	r2, [r3, #28]
 570:Core/Src/main.c ****   hi2c4.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 1513              		.loc 1 570 28
 1514 0034 0F4B     		ldr	r3, .L60
 1515 0036 0022     		movs	r2, #0
 1516 0038 1A62     		str	r2, [r3, #32]
 571:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c4) != HAL_OK)
 1517              		.loc 1 571 7
 1518 003a 0E48     		ldr	r0, .L60
 1519 003c FFF7FEFF 		bl	HAL_I2C_Init
 1520 0040 0346     		mov	r3, r0
 1521              		.loc 1 571 6
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 96


 1522 0042 002B     		cmp	r3, #0
 1523 0044 01D0     		beq	.L56
 572:Core/Src/main.c ****   {
 573:Core/Src/main.c ****     Error_Handler();
 1524              		.loc 1 573 5
 1525 0046 FFF7FEFF 		bl	Error_Handler
 1526              	.L56:
 574:Core/Src/main.c ****   }
 575:Core/Src/main.c **** 
 576:Core/Src/main.c ****   /** Configure Analogue filter
 577:Core/Src/main.c ****   */
 578:Core/Src/main.c ****   if (HAL_I2CEx_ConfigAnalogFilter(&hi2c4, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 1527              		.loc 1 578 7
 1528 004a 0021     		movs	r1, #0
 1529 004c 0948     		ldr	r0, .L60
 1530 004e FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 1531 0052 0346     		mov	r3, r0
 1532              		.loc 1 578 6
 1533 0054 002B     		cmp	r3, #0
 1534 0056 01D0     		beq	.L57
 579:Core/Src/main.c ****   {
 580:Core/Src/main.c ****     Error_Handler();
 1535              		.loc 1 580 5
 1536 0058 FFF7FEFF 		bl	Error_Handler
 1537              	.L57:
 581:Core/Src/main.c ****   }
 582:Core/Src/main.c **** 
 583:Core/Src/main.c ****   /** Configure Digital filter
 584:Core/Src/main.c ****   */
 585:Core/Src/main.c ****   if (HAL_I2CEx_ConfigDigitalFilter(&hi2c4, 0) != HAL_OK)
 1538              		.loc 1 585 7
 1539 005c 0021     		movs	r1, #0
 1540 005e 0548     		ldr	r0, .L60
 1541 0060 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 1542 0064 0346     		mov	r3, r0
 1543              		.loc 1 585 6
 1544 0066 002B     		cmp	r3, #0
 1545 0068 01D0     		beq	.L59
 586:Core/Src/main.c ****   {
 587:Core/Src/main.c ****     Error_Handler();
 1546              		.loc 1 587 5
 1547 006a FFF7FEFF 		bl	Error_Handler
 1548              	.L59:
 588:Core/Src/main.c ****   }
 589:Core/Src/main.c ****   /* USER CODE BEGIN I2C4_Init 2 */
 590:Core/Src/main.c **** 
 591:Core/Src/main.c ****   /* USER CODE END I2C4_Init 2 */
 592:Core/Src/main.c **** 
 593:Core/Src/main.c **** }
 1549              		.loc 1 593 1
 1550 006e 00BF     		nop
 1551 0070 80BD     		pop	{r7, pc}
 1552              	.L61:
 1553 0072 00BF     		.align	2
 1554              	.L60:
 1555 0074 00000000 		.word	hi2c4
 1556 0078 001C0058 		.word	1476402176
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 97


 1557 007c B1757030 		.word	812676529
 1558              		.cfi_endproc
 1559              	.LFE341:
 1561              		.section	.text.MX_SPI5_Init,"ax",%progbits
 1562              		.align	1
 1563              		.syntax unified
 1564              		.thumb
 1565              		.thumb_func
 1567              	MX_SPI5_Init:
 1568              	.LFB342:
 594:Core/Src/main.c **** 
 595:Core/Src/main.c **** /**
 596:Core/Src/main.c ****   * @brief SPI5 Initialization Function
 597:Core/Src/main.c ****   * @param None
 598:Core/Src/main.c ****   * @retval None
 599:Core/Src/main.c ****   */
 600:Core/Src/main.c **** static void MX_SPI5_Init(void)
 601:Core/Src/main.c **** {
 1569              		.loc 1 601 1
 1570              		.cfi_startproc
 1571              		@ args = 0, pretend = 0, frame = 0
 1572              		@ frame_needed = 1, uses_anonymous_args = 0
 1573 0000 80B5     		push	{r7, lr}
 1574              	.LCFI31:
 1575              		.cfi_def_cfa_offset 8
 1576              		.cfi_offset 7, -8
 1577              		.cfi_offset 14, -4
 1578 0002 00AF     		add	r7, sp, #0
 1579              	.LCFI32:
 1580              		.cfi_def_cfa_register 7
 602:Core/Src/main.c **** 
 603:Core/Src/main.c ****   /* USER CODE BEGIN SPI5_Init 0 */
 604:Core/Src/main.c **** 
 605:Core/Src/main.c ****   /* USER CODE END SPI5_Init 0 */
 606:Core/Src/main.c **** 
 607:Core/Src/main.c ****   /* USER CODE BEGIN SPI5_Init 1 */
 608:Core/Src/main.c **** 
 609:Core/Src/main.c ****   /* USER CODE END SPI5_Init 1 */
 610:Core/Src/main.c ****   /* SPI5 parameter configuration*/
 611:Core/Src/main.c ****   hspi5.Instance = SPI5;
 1581              		.loc 1 611 18
 1582 0004 274B     		ldr	r3, .L65
 1583 0006 284A     		ldr	r2, .L65+4
 1584 0008 1A60     		str	r2, [r3]
 612:Core/Src/main.c ****   hspi5.Init.Mode = SPI_MODE_MASTER;
 1585              		.loc 1 612 19
 1586 000a 264B     		ldr	r3, .L65
 1587 000c 4FF48002 		mov	r2, #4194304
 1588 0010 5A60     		str	r2, [r3, #4]
 613:Core/Src/main.c ****   hspi5.Init.Direction = SPI_DIRECTION_2LINES;
 1589              		.loc 1 613 24
 1590 0012 244B     		ldr	r3, .L65
 1591 0014 0022     		movs	r2, #0
 1592 0016 9A60     		str	r2, [r3, #8]
 614:Core/Src/main.c ****   hspi5.Init.DataSize = SPI_DATASIZE_4BIT;
 1593              		.loc 1 614 23
 1594 0018 224B     		ldr	r3, .L65
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 98


 1595 001a 0322     		movs	r2, #3
 1596 001c DA60     		str	r2, [r3, #12]
 615:Core/Src/main.c ****   hspi5.Init.CLKPolarity = SPI_POLARITY_LOW;
 1597              		.loc 1 615 26
 1598 001e 214B     		ldr	r3, .L65
 1599 0020 0022     		movs	r2, #0
 1600 0022 1A61     		str	r2, [r3, #16]
 616:Core/Src/main.c ****   hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 1601              		.loc 1 616 23
 1602 0024 1F4B     		ldr	r3, .L65
 1603 0026 0022     		movs	r2, #0
 1604 0028 5A61     		str	r2, [r3, #20]
 617:Core/Src/main.c ****   hspi5.Init.NSS = SPI_NSS_HARD_OUTPUT;
 1605              		.loc 1 617 18
 1606 002a 1E4B     		ldr	r3, .L65
 1607 002c 4FF00052 		mov	r2, #536870912
 1608 0030 9A61     		str	r2, [r3, #24]
 618:Core/Src/main.c ****   hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 1609              		.loc 1 618 32
 1610 0032 1C4B     		ldr	r3, .L65
 1611 0034 0022     		movs	r2, #0
 1612 0036 DA61     		str	r2, [r3, #28]
 619:Core/Src/main.c ****   hspi5.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1613              		.loc 1 619 23
 1614 0038 1A4B     		ldr	r3, .L65
 1615 003a 0022     		movs	r2, #0
 1616 003c 1A62     		str	r2, [r3, #32]
 620:Core/Src/main.c ****   hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 1617              		.loc 1 620 21
 1618 003e 194B     		ldr	r3, .L65
 1619 0040 0022     		movs	r2, #0
 1620 0042 5A62     		str	r2, [r3, #36]
 621:Core/Src/main.c ****   hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1621              		.loc 1 621 29
 1622 0044 174B     		ldr	r3, .L65
 1623 0046 0022     		movs	r2, #0
 1624 0048 9A62     		str	r2, [r3, #40]
 622:Core/Src/main.c ****   hspi5.Init.CRCPolynomial = 0x0;
 1625              		.loc 1 622 28
 1626 004a 164B     		ldr	r3, .L65
 1627 004c 0022     		movs	r2, #0
 1628 004e DA62     		str	r2, [r3, #44]
 623:Core/Src/main.c ****   hspi5.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 1629              		.loc 1 623 23
 1630 0050 144B     		ldr	r3, .L65
 1631 0052 4FF08042 		mov	r2, #1073741824
 1632 0056 5A63     		str	r2, [r3, #52]
 624:Core/Src/main.c ****   hspi5.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
 1633              		.loc 1 624 26
 1634 0058 124B     		ldr	r3, .L65
 1635 005a 0022     		movs	r2, #0
 1636 005c 9A63     		str	r2, [r3, #56]
 625:Core/Src/main.c ****   hspi5.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
 1637              		.loc 1 625 28
 1638 005e 114B     		ldr	r3, .L65
 1639 0060 0022     		movs	r2, #0
 1640 0062 DA63     		str	r2, [r3, #60]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 99


 626:Core/Src/main.c ****   hspi5.Init.TxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 1641              		.loc 1 626 41
 1642 0064 0F4B     		ldr	r3, .L65
 1643 0066 0022     		movs	r2, #0
 1644 0068 1A64     		str	r2, [r3, #64]
 627:Core/Src/main.c ****   hspi5.Init.RxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 1645              		.loc 1 627 41
 1646 006a 0E4B     		ldr	r3, .L65
 1647 006c 0022     		movs	r2, #0
 1648 006e 5A64     		str	r2, [r3, #68]
 628:Core/Src/main.c ****   hspi5.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
 1649              		.loc 1 628 31
 1650 0070 0C4B     		ldr	r3, .L65
 1651 0072 0022     		movs	r2, #0
 1652 0074 9A64     		str	r2, [r3, #72]
 629:Core/Src/main.c ****   hspi5.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
 1653              		.loc 1 629 38
 1654 0076 0B4B     		ldr	r3, .L65
 1655 0078 0022     		movs	r2, #0
 1656 007a DA64     		str	r2, [r3, #76]
 630:Core/Src/main.c ****   hspi5.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
 1657              		.loc 1 630 37
 1658 007c 094B     		ldr	r3, .L65
 1659 007e 0022     		movs	r2, #0
 1660 0080 1A65     		str	r2, [r3, #80]
 631:Core/Src/main.c ****   hspi5.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
 1661              		.loc 1 631 32
 1662 0082 084B     		ldr	r3, .L65
 1663 0084 0022     		movs	r2, #0
 1664 0086 5A65     		str	r2, [r3, #84]
 632:Core/Src/main.c ****   hspi5.Init.IOSwap = SPI_IO_SWAP_DISABLE;
 1665              		.loc 1 632 21
 1666 0088 064B     		ldr	r3, .L65
 1667 008a 0022     		movs	r2, #0
 1668 008c 9A65     		str	r2, [r3, #88]
 633:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi5) != HAL_OK)
 1669              		.loc 1 633 7
 1670 008e 0548     		ldr	r0, .L65
 1671 0090 FFF7FEFF 		bl	HAL_SPI_Init
 1672 0094 0346     		mov	r3, r0
 1673              		.loc 1 633 6
 1674 0096 002B     		cmp	r3, #0
 1675 0098 01D0     		beq	.L64
 634:Core/Src/main.c ****   {
 635:Core/Src/main.c ****     Error_Handler();
 1676              		.loc 1 635 5
 1677 009a FFF7FEFF 		bl	Error_Handler
 1678              	.L64:
 636:Core/Src/main.c ****   }
 637:Core/Src/main.c ****   /* USER CODE BEGIN SPI5_Init 2 */
 638:Core/Src/main.c **** 
 639:Core/Src/main.c ****   /* USER CODE END SPI5_Init 2 */
 640:Core/Src/main.c **** 
 641:Core/Src/main.c **** }
 1679              		.loc 1 641 1
 1680 009e 00BF     		nop
 1681 00a0 80BD     		pop	{r7, pc}
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 100


 1682              	.L66:
 1683 00a2 00BF     		.align	2
 1684              	.L65:
 1685 00a4 00000000 		.word	hspi5
 1686 00a8 00500140 		.word	1073827840
 1687              		.cfi_endproc
 1688              	.LFE342:
 1690              		.section	.text.MX_TIM5_Init,"ax",%progbits
 1691              		.align	1
 1692              		.syntax unified
 1693              		.thumb
 1694              		.thumb_func
 1696              	MX_TIM5_Init:
 1697              	.LFB343:
 642:Core/Src/main.c **** 
 643:Core/Src/main.c **** /**
 644:Core/Src/main.c ****   * @brief TIM5 Initialization Function
 645:Core/Src/main.c ****   * @param None
 646:Core/Src/main.c ****   * @retval None
 647:Core/Src/main.c ****   */
 648:Core/Src/main.c **** static void MX_TIM5_Init(void)
 649:Core/Src/main.c **** {
 1698              		.loc 1 649 1
 1699              		.cfi_startproc
 1700              		@ args = 0, pretend = 0, frame = 56
 1701              		@ frame_needed = 1, uses_anonymous_args = 0
 1702 0000 80B5     		push	{r7, lr}
 1703              	.LCFI33:
 1704              		.cfi_def_cfa_offset 8
 1705              		.cfi_offset 7, -8
 1706              		.cfi_offset 14, -4
 1707 0002 8EB0     		sub	sp, sp, #56
 1708              	.LCFI34:
 1709              		.cfi_def_cfa_offset 64
 1710 0004 00AF     		add	r7, sp, #0
 1711              	.LCFI35:
 1712              		.cfi_def_cfa_register 7
 650:Core/Src/main.c **** 
 651:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 0 */
 652:Core/Src/main.c **** 
 653:Core/Src/main.c ****   /* USER CODE END TIM5_Init 0 */
 654:Core/Src/main.c **** 
 655:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 1713              		.loc 1 655 26
 1714 0006 07F12803 		add	r3, r7, #40
 1715 000a 0022     		movs	r2, #0
 1716 000c 1A60     		str	r2, [r3]
 1717 000e 5A60     		str	r2, [r3, #4]
 1718 0010 9A60     		str	r2, [r3, #8]
 1719 0012 DA60     		str	r2, [r3, #12]
 656:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1720              		.loc 1 656 27
 1721 0014 07F11C03 		add	r3, r7, #28
 1722 0018 0022     		movs	r2, #0
 1723 001a 1A60     		str	r2, [r3]
 1724 001c 5A60     		str	r2, [r3, #4]
 1725 001e 9A60     		str	r2, [r3, #8]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 101


 657:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1726              		.loc 1 657 22
 1727 0020 3B46     		mov	r3, r7
 1728 0022 0022     		movs	r2, #0
 1729 0024 1A60     		str	r2, [r3]
 1730 0026 5A60     		str	r2, [r3, #4]
 1731 0028 9A60     		str	r2, [r3, #8]
 1732 002a DA60     		str	r2, [r3, #12]
 1733 002c 1A61     		str	r2, [r3, #16]
 1734 002e 5A61     		str	r2, [r3, #20]
 1735 0030 9A61     		str	r2, [r3, #24]
 658:Core/Src/main.c **** 
 659:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 1 */
 660:Core/Src/main.c **** 
 661:Core/Src/main.c ****   /* USER CODE END TIM5_Init 1 */
 662:Core/Src/main.c ****   htim5.Instance = TIM5;
 1736              		.loc 1 662 18
 1737 0032 2D4B     		ldr	r3, .L73
 1738 0034 2D4A     		ldr	r2, .L73+4
 1739 0036 1A60     		str	r2, [r3]
 663:Core/Src/main.c ****   htim5.Init.Prescaler = 119;
 1740              		.loc 1 663 24
 1741 0038 2B4B     		ldr	r3, .L73
 1742 003a 7722     		movs	r2, #119
 1743 003c 5A60     		str	r2, [r3, #4]
 664:Core/Src/main.c ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 1744              		.loc 1 664 26
 1745 003e 2A4B     		ldr	r3, .L73
 1746 0040 0022     		movs	r2, #0
 1747 0042 9A60     		str	r2, [r3, #8]
 665:Core/Src/main.c ****   htim5.Init.Period = 1000;
 1748              		.loc 1 665 21
 1749 0044 284B     		ldr	r3, .L73
 1750 0046 4FF47A72 		mov	r2, #1000
 1751 004a DA60     		str	r2, [r3, #12]
 666:Core/Src/main.c ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1752              		.loc 1 666 28
 1753 004c 264B     		ldr	r3, .L73
 1754 004e 0022     		movs	r2, #0
 1755 0050 1A61     		str	r2, [r3, #16]
 667:Core/Src/main.c ****   htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1756              		.loc 1 667 32
 1757 0052 254B     		ldr	r3, .L73
 1758 0054 0022     		movs	r2, #0
 1759 0056 9A61     		str	r2, [r3, #24]
 668:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 1760              		.loc 1 668 7
 1761 0058 2348     		ldr	r0, .L73
 1762 005a FFF7FEFF 		bl	HAL_TIM_Base_Init
 1763 005e 0346     		mov	r3, r0
 1764              		.loc 1 668 6
 1765 0060 002B     		cmp	r3, #0
 1766 0062 01D0     		beq	.L68
 669:Core/Src/main.c ****   {
 670:Core/Src/main.c ****     Error_Handler();
 1767              		.loc 1 670 5
 1768 0064 FFF7FEFF 		bl	Error_Handler
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 102


 1769              	.L68:
 671:Core/Src/main.c ****   }
 672:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 1770              		.loc 1 672 34
 1771 0068 4FF48053 		mov	r3, #4096
 1772 006c BB62     		str	r3, [r7, #40]
 673:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 1773              		.loc 1 673 7
 1774 006e 07F12803 		add	r3, r7, #40
 1775 0072 1946     		mov	r1, r3
 1776 0074 1C48     		ldr	r0, .L73
 1777 0076 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1778 007a 0346     		mov	r3, r0
 1779              		.loc 1 673 6
 1780 007c 002B     		cmp	r3, #0
 1781 007e 01D0     		beq	.L69
 674:Core/Src/main.c ****   {
 675:Core/Src/main.c ****     Error_Handler();
 1782              		.loc 1 675 5
 1783 0080 FFF7FEFF 		bl	Error_Handler
 1784              	.L69:
 676:Core/Src/main.c ****   }
 677:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim5) != HAL_OK)
 1785              		.loc 1 677 7
 1786 0084 1848     		ldr	r0, .L73
 1787 0086 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1788 008a 0346     		mov	r3, r0
 1789              		.loc 1 677 6
 1790 008c 002B     		cmp	r3, #0
 1791 008e 01D0     		beq	.L70
 678:Core/Src/main.c ****   {
 679:Core/Src/main.c ****     Error_Handler();
 1792              		.loc 1 679 5
 1793 0090 FFF7FEFF 		bl	Error_Handler
 1794              	.L70:
 680:Core/Src/main.c ****   }
 681:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 1795              		.loc 1 681 37
 1796 0094 0023     		movs	r3, #0
 1797 0096 FB61     		str	r3, [r7, #28]
 682:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1798              		.loc 1 682 33
 1799 0098 0023     		movs	r3, #0
 1800 009a 7B62     		str	r3, [r7, #36]
 683:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 1801              		.loc 1 683 7
 1802 009c 07F11C03 		add	r3, r7, #28
 1803 00a0 1946     		mov	r1, r3
 1804 00a2 1148     		ldr	r0, .L73
 1805 00a4 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1806 00a8 0346     		mov	r3, r0
 1807              		.loc 1 683 6
 1808 00aa 002B     		cmp	r3, #0
 1809 00ac 01D0     		beq	.L71
 684:Core/Src/main.c ****   {
 685:Core/Src/main.c ****     Error_Handler();
 1810              		.loc 1 685 5
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 103


 1811 00ae FFF7FEFF 		bl	Error_Handler
 1812              	.L71:
 686:Core/Src/main.c ****   }
 687:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 1813              		.loc 1 687 20
 1814 00b2 6023     		movs	r3, #96
 1815 00b4 3B60     		str	r3, [r7]
 688:Core/Src/main.c ****   sConfigOC.Pulse = 500;
 1816              		.loc 1 688 19
 1817 00b6 4FF4FA73 		mov	r3, #500
 1818 00ba 7B60     		str	r3, [r7, #4]
 689:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1819              		.loc 1 689 24
 1820 00bc 0023     		movs	r3, #0
 1821 00be BB60     		str	r3, [r7, #8]
 690:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1822              		.loc 1 690 24
 1823 00c0 0023     		movs	r3, #0
 1824 00c2 3B61     		str	r3, [r7, #16]
 691:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim5, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 1825              		.loc 1 691 7
 1826 00c4 3B46     		mov	r3, r7
 1827 00c6 0C22     		movs	r2, #12
 1828 00c8 1946     		mov	r1, r3
 1829 00ca 0748     		ldr	r0, .L73
 1830 00cc FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1831 00d0 0346     		mov	r3, r0
 1832              		.loc 1 691 6
 1833 00d2 002B     		cmp	r3, #0
 1834 00d4 01D0     		beq	.L72
 692:Core/Src/main.c ****   {
 693:Core/Src/main.c ****     Error_Handler();
 1835              		.loc 1 693 5
 1836 00d6 FFF7FEFF 		bl	Error_Handler
 1837              	.L72:
 694:Core/Src/main.c ****   }
 695:Core/Src/main.c ****   /* USER CODE BEGIN TIM5_Init 2 */
 696:Core/Src/main.c **** 
 697:Core/Src/main.c ****   /* USER CODE END TIM5_Init 2 */
 698:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim5);
 1838              		.loc 1 698 3
 1839 00da 0348     		ldr	r0, .L73
 1840 00dc FFF7FEFF 		bl	HAL_TIM_MspPostInit
 699:Core/Src/main.c **** 
 700:Core/Src/main.c **** }
 1841              		.loc 1 700 1
 1842 00e0 00BF     		nop
 1843 00e2 3837     		adds	r7, r7, #56
 1844              	.LCFI36:
 1845              		.cfi_def_cfa_offset 8
 1846 00e4 BD46     		mov	sp, r7
 1847              	.LCFI37:
 1848              		.cfi_def_cfa_register 13
 1849              		@ sp needed
 1850 00e6 80BD     		pop	{r7, pc}
 1851              	.L74:
 1852              		.align	2
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 104


 1853              	.L73:
 1854 00e8 00000000 		.word	htim5
 1855 00ec 000C0040 		.word	1073744896
 1856              		.cfi_endproc
 1857              	.LFE343:
 1859              		.section	.text.MX_TIM15_Init,"ax",%progbits
 1860              		.align	1
 1861              		.syntax unified
 1862              		.thumb
 1863              		.thumb_func
 1865              	MX_TIM15_Init:
 1866              	.LFB344:
 701:Core/Src/main.c **** 
 702:Core/Src/main.c **** /**
 703:Core/Src/main.c ****   * @brief TIM15 Initialization Function
 704:Core/Src/main.c ****   * @param None
 705:Core/Src/main.c ****   * @retval None
 706:Core/Src/main.c ****   */
 707:Core/Src/main.c **** static void MX_TIM15_Init(void)
 708:Core/Src/main.c **** {
 1867              		.loc 1 708 1
 1868              		.cfi_startproc
 1869              		@ args = 0, pretend = 0, frame = 32
 1870              		@ frame_needed = 1, uses_anonymous_args = 0
 1871 0000 80B5     		push	{r7, lr}
 1872              	.LCFI38:
 1873              		.cfi_def_cfa_offset 8
 1874              		.cfi_offset 7, -8
 1875              		.cfi_offset 14, -4
 1876 0002 88B0     		sub	sp, sp, #32
 1877              	.LCFI39:
 1878              		.cfi_def_cfa_offset 40
 1879 0004 00AF     		add	r7, sp, #0
 1880              	.LCFI40:
 1881              		.cfi_def_cfa_register 7
 709:Core/Src/main.c **** 
 710:Core/Src/main.c ****   /* USER CODE BEGIN TIM15_Init 0 */
 711:Core/Src/main.c **** 
 712:Core/Src/main.c ****   /* USER CODE END TIM15_Init 0 */
 713:Core/Src/main.c **** 
 714:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 1882              		.loc 1 714 26
 1883 0006 07F11003 		add	r3, r7, #16
 1884 000a 0022     		movs	r2, #0
 1885 000c 1A60     		str	r2, [r3]
 1886 000e 5A60     		str	r2, [r3, #4]
 1887 0010 9A60     		str	r2, [r3, #8]
 1888 0012 DA60     		str	r2, [r3, #12]
 715:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1889              		.loc 1 715 27
 1890 0014 3B1D     		adds	r3, r7, #4
 1891 0016 0022     		movs	r2, #0
 1892 0018 1A60     		str	r2, [r3]
 1893 001a 5A60     		str	r2, [r3, #4]
 1894 001c 9A60     		str	r2, [r3, #8]
 716:Core/Src/main.c **** 
 717:Core/Src/main.c ****   /* USER CODE BEGIN TIM15_Init 1 */
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 105


 718:Core/Src/main.c **** 
 719:Core/Src/main.c ****   /* USER CODE END TIM15_Init 1 */
 720:Core/Src/main.c ****   htim15.Instance = TIM15;
 1895              		.loc 1 720 19
 1896 001e 1F4B     		ldr	r3, .L80
 1897 0020 1F4A     		ldr	r2, .L80+4
 1898 0022 1A60     		str	r2, [r3]
 721:Core/Src/main.c ****   htim15.Init.Prescaler = 239;
 1899              		.loc 1 721 25
 1900 0024 1D4B     		ldr	r3, .L80
 1901 0026 EF22     		movs	r2, #239
 1902 0028 5A60     		str	r2, [r3, #4]
 722:Core/Src/main.c ****   htim15.Init.CounterMode = TIM_COUNTERMODE_UP;
 1903              		.loc 1 722 27
 1904 002a 1C4B     		ldr	r3, .L80
 1905 002c 0022     		movs	r2, #0
 1906 002e 9A60     		str	r2, [r3, #8]
 723:Core/Src/main.c ****   htim15.Init.Period = 9999;
 1907              		.loc 1 723 22
 1908 0030 1A4B     		ldr	r3, .L80
 1909 0032 42F20F72 		movw	r2, #9999
 1910 0036 DA60     		str	r2, [r3, #12]
 724:Core/Src/main.c ****   htim15.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1911              		.loc 1 724 29
 1912 0038 184B     		ldr	r3, .L80
 1913 003a 0022     		movs	r2, #0
 1914 003c 1A61     		str	r2, [r3, #16]
 725:Core/Src/main.c ****   htim15.Init.RepetitionCounter = 0;
 1915              		.loc 1 725 33
 1916 003e 174B     		ldr	r3, .L80
 1917 0040 0022     		movs	r2, #0
 1918 0042 5A61     		str	r2, [r3, #20]
 726:Core/Src/main.c ****   htim15.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1919              		.loc 1 726 33
 1920 0044 154B     		ldr	r3, .L80
 1921 0046 0022     		movs	r2, #0
 1922 0048 9A61     		str	r2, [r3, #24]
 727:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim15) != HAL_OK)
 1923              		.loc 1 727 7
 1924 004a 1448     		ldr	r0, .L80
 1925 004c FFF7FEFF 		bl	HAL_TIM_Base_Init
 1926 0050 0346     		mov	r3, r0
 1927              		.loc 1 727 6
 1928 0052 002B     		cmp	r3, #0
 1929 0054 01D0     		beq	.L76
 728:Core/Src/main.c ****   {
 729:Core/Src/main.c ****     Error_Handler();
 1930              		.loc 1 729 5
 1931 0056 FFF7FEFF 		bl	Error_Handler
 1932              	.L76:
 730:Core/Src/main.c ****   }
 731:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 1933              		.loc 1 731 34
 1934 005a 4FF48053 		mov	r3, #4096
 1935 005e 3B61     		str	r3, [r7, #16]
 732:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim15, &sClockSourceConfig) != HAL_OK)
 1936              		.loc 1 732 7
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 106


 1937 0060 07F11003 		add	r3, r7, #16
 1938 0064 1946     		mov	r1, r3
 1939 0066 0D48     		ldr	r0, .L80
 1940 0068 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1941 006c 0346     		mov	r3, r0
 1942              		.loc 1 732 6
 1943 006e 002B     		cmp	r3, #0
 1944 0070 01D0     		beq	.L77
 733:Core/Src/main.c ****   {
 734:Core/Src/main.c ****     Error_Handler();
 1945              		.loc 1 734 5
 1946 0072 FFF7FEFF 		bl	Error_Handler
 1947              	.L77:
 735:Core/Src/main.c ****   }
 736:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 1948              		.loc 1 736 37
 1949 0076 0023     		movs	r3, #0
 1950 0078 7B60     		str	r3, [r7, #4]
 737:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1951              		.loc 1 737 33
 1952 007a 0023     		movs	r3, #0
 1953 007c FB60     		str	r3, [r7, #12]
 738:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim15, &sMasterConfig) != HAL_OK)
 1954              		.loc 1 738 7
 1955 007e 3B1D     		adds	r3, r7, #4
 1956 0080 1946     		mov	r1, r3
 1957 0082 0648     		ldr	r0, .L80
 1958 0084 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1959 0088 0346     		mov	r3, r0
 1960              		.loc 1 738 6
 1961 008a 002B     		cmp	r3, #0
 1962 008c 01D0     		beq	.L79
 739:Core/Src/main.c ****   {
 740:Core/Src/main.c ****     Error_Handler();
 1963              		.loc 1 740 5
 1964 008e FFF7FEFF 		bl	Error_Handler
 1965              	.L79:
 741:Core/Src/main.c ****   }
 742:Core/Src/main.c ****   /* USER CODE BEGIN TIM15_Init 2 */
 743:Core/Src/main.c **** 
 744:Core/Src/main.c ****   /* USER CODE END TIM15_Init 2 */
 745:Core/Src/main.c **** 
 746:Core/Src/main.c **** }
 1966              		.loc 1 746 1
 1967 0092 00BF     		nop
 1968 0094 2037     		adds	r7, r7, #32
 1969              	.LCFI41:
 1970              		.cfi_def_cfa_offset 8
 1971 0096 BD46     		mov	sp, r7
 1972              	.LCFI42:
 1973              		.cfi_def_cfa_register 13
 1974              		@ sp needed
 1975 0098 80BD     		pop	{r7, pc}
 1976              	.L81:
 1977 009a 00BF     		.align	2
 1978              	.L80:
 1979 009c 00000000 		.word	htim15
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 107


 1980 00a0 00400140 		.word	1073823744
 1981              		.cfi_endproc
 1982              	.LFE344:
 1984              		.section	.text.MX_TIM16_Init,"ax",%progbits
 1985              		.align	1
 1986              		.syntax unified
 1987              		.thumb
 1988              		.thumb_func
 1990              	MX_TIM16_Init:
 1991              	.LFB345:
 747:Core/Src/main.c **** 
 748:Core/Src/main.c **** /**
 749:Core/Src/main.c ****   * @brief TIM16 Initialization Function
 750:Core/Src/main.c ****   * @param None
 751:Core/Src/main.c ****   * @retval None
 752:Core/Src/main.c ****   */
 753:Core/Src/main.c **** static void MX_TIM16_Init(void)
 754:Core/Src/main.c **** {
 1992              		.loc 1 754 1
 1993              		.cfi_startproc
 1994              		@ args = 0, pretend = 0, frame = 72
 1995              		@ frame_needed = 1, uses_anonymous_args = 0
 1996 0000 80B5     		push	{r7, lr}
 1997              	.LCFI43:
 1998              		.cfi_def_cfa_offset 8
 1999              		.cfi_offset 7, -8
 2000              		.cfi_offset 14, -4
 2001 0002 92B0     		sub	sp, sp, #72
 2002              	.LCFI44:
 2003              		.cfi_def_cfa_offset 80
 2004 0004 00AF     		add	r7, sp, #0
 2005              	.LCFI45:
 2006              		.cfi_def_cfa_register 7
 755:Core/Src/main.c **** 
 756:Core/Src/main.c ****   /* USER CODE BEGIN TIM16_Init 0 */
 757:Core/Src/main.c **** 
 758:Core/Src/main.c ****   /* USER CODE END TIM16_Init 0 */
 759:Core/Src/main.c **** 
 760:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 2007              		.loc 1 760 22
 2008 0006 07F12C03 		add	r3, r7, #44
 2009 000a 0022     		movs	r2, #0
 2010 000c 1A60     		str	r2, [r3]
 2011 000e 5A60     		str	r2, [r3, #4]
 2012 0010 9A60     		str	r2, [r3, #8]
 2013 0012 DA60     		str	r2, [r3, #12]
 2014 0014 1A61     		str	r2, [r3, #16]
 2015 0016 5A61     		str	r2, [r3, #20]
 2016 0018 9A61     		str	r2, [r3, #24]
 761:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 2017              		.loc 1 761 34
 2018 001a 3B46     		mov	r3, r7
 2019 001c 2C22     		movs	r2, #44
 2020 001e 0021     		movs	r1, #0
 2021 0020 1846     		mov	r0, r3
 2022 0022 FFF7FEFF 		bl	memset
 762:Core/Src/main.c **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 108


 763:Core/Src/main.c ****   /* USER CODE BEGIN TIM16_Init 1 */
 764:Core/Src/main.c **** 
 765:Core/Src/main.c ****   /* USER CODE END TIM16_Init 1 */
 766:Core/Src/main.c ****   htim16.Instance = TIM16;
 2023              		.loc 1 766 19
 2024 0026 2F4B     		ldr	r3, .L88
 2025 0028 2F4A     		ldr	r2, .L88+4
 2026 002a 1A60     		str	r2, [r3]
 767:Core/Src/main.c ****   htim16.Init.Prescaler = 23;
 2027              		.loc 1 767 25
 2028 002c 2D4B     		ldr	r3, .L88
 2029 002e 1722     		movs	r2, #23
 2030 0030 5A60     		str	r2, [r3, #4]
 768:Core/Src/main.c ****   htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 2031              		.loc 1 768 27
 2032 0032 2C4B     		ldr	r3, .L88
 2033 0034 0022     		movs	r2, #0
 2034 0036 9A60     		str	r2, [r3, #8]
 769:Core/Src/main.c ****   htim16.Init.Period = 9;
 2035              		.loc 1 769 22
 2036 0038 2A4B     		ldr	r3, .L88
 2037 003a 0922     		movs	r2, #9
 2038 003c DA60     		str	r2, [r3, #12]
 770:Core/Src/main.c ****   htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2039              		.loc 1 770 29
 2040 003e 294B     		ldr	r3, .L88
 2041 0040 0022     		movs	r2, #0
 2042 0042 1A61     		str	r2, [r3, #16]
 771:Core/Src/main.c ****   htim16.Init.RepetitionCounter = 0;
 2043              		.loc 1 771 33
 2044 0044 274B     		ldr	r3, .L88
 2045 0046 0022     		movs	r2, #0
 2046 0048 5A61     		str	r2, [r3, #20]
 772:Core/Src/main.c ****   htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2047              		.loc 1 772 33
 2048 004a 264B     		ldr	r3, .L88
 2049 004c 0022     		movs	r2, #0
 2050 004e 9A61     		str	r2, [r3, #24]
 773:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 2051              		.loc 1 773 7
 2052 0050 2448     		ldr	r0, .L88
 2053 0052 FFF7FEFF 		bl	HAL_TIM_Base_Init
 2054 0056 0346     		mov	r3, r0
 2055              		.loc 1 773 6
 2056 0058 002B     		cmp	r3, #0
 2057 005a 01D0     		beq	.L83
 774:Core/Src/main.c ****   {
 775:Core/Src/main.c ****     Error_Handler();
 2058              		.loc 1 775 5
 2059 005c FFF7FEFF 		bl	Error_Handler
 2060              	.L83:
 776:Core/Src/main.c ****   }
 777:Core/Src/main.c ****   if (HAL_TIM_OC_Init(&htim16) != HAL_OK)
 2061              		.loc 1 777 7
 2062 0060 2048     		ldr	r0, .L88
 2063 0062 FFF7FEFF 		bl	HAL_TIM_OC_Init
 2064 0066 0346     		mov	r3, r0
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 109


 2065              		.loc 1 777 6
 2066 0068 002B     		cmp	r3, #0
 2067 006a 01D0     		beq	.L84
 778:Core/Src/main.c ****   {
 779:Core/Src/main.c ****     Error_Handler();
 2068              		.loc 1 779 5
 2069 006c FFF7FEFF 		bl	Error_Handler
 2070              	.L84:
 780:Core/Src/main.c ****   }
 781:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_TIMING;
 2071              		.loc 1 781 20
 2072 0070 0023     		movs	r3, #0
 2073 0072 FB62     		str	r3, [r7, #44]
 782:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 2074              		.loc 1 782 19
 2075 0074 0023     		movs	r3, #0
 2076 0076 3B63     		str	r3, [r7, #48]
 783:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2077              		.loc 1 783 24
 2078 0078 0023     		movs	r3, #0
 2079 007a 7B63     		str	r3, [r7, #52]
 784:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 2080              		.loc 1 784 25
 2081 007c 0023     		movs	r3, #0
 2082 007e BB63     		str	r3, [r7, #56]
 785:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2083              		.loc 1 785 24
 2084 0080 0023     		movs	r3, #0
 2085 0082 FB63     		str	r3, [r7, #60]
 786:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 2086              		.loc 1 786 25
 2087 0084 0023     		movs	r3, #0
 2088 0086 3B64     		str	r3, [r7, #64]
 787:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 2089              		.loc 1 787 26
 2090 0088 0023     		movs	r3, #0
 2091 008a 7B64     		str	r3, [r7, #68]
 788:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim16, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 2092              		.loc 1 788 7
 2093 008c 07F12C03 		add	r3, r7, #44
 2094 0090 0022     		movs	r2, #0
 2095 0092 1946     		mov	r1, r3
 2096 0094 1348     		ldr	r0, .L88
 2097 0096 FFF7FEFF 		bl	HAL_TIM_OC_ConfigChannel
 2098 009a 0346     		mov	r3, r0
 2099              		.loc 1 788 6
 2100 009c 002B     		cmp	r3, #0
 2101 009e 01D0     		beq	.L85
 789:Core/Src/main.c ****   {
 790:Core/Src/main.c ****     Error_Handler();
 2102              		.loc 1 790 5
 2103 00a0 FFF7FEFF 		bl	Error_Handler
 2104              	.L85:
 791:Core/Src/main.c ****   }
 792:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 2105              		.loc 1 792 40
 2106 00a4 0023     		movs	r3, #0
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 110


 2107 00a6 3B60     		str	r3, [r7]
 793:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 2108              		.loc 1 793 41
 2109 00a8 0023     		movs	r3, #0
 2110 00aa 7B60     		str	r3, [r7, #4]
 794:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 2111              		.loc 1 794 34
 2112 00ac 0023     		movs	r3, #0
 2113 00ae BB60     		str	r3, [r7, #8]
 795:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 2114              		.loc 1 795 33
 2115 00b0 0023     		movs	r3, #0
 2116 00b2 FB60     		str	r3, [r7, #12]
 796:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 2117              		.loc 1 796 35
 2118 00b4 0023     		movs	r3, #0
 2119 00b6 3B61     		str	r3, [r7, #16]
 797:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 2120              		.loc 1 797 38
 2121 00b8 4FF40053 		mov	r3, #8192
 2122 00bc 7B61     		str	r3, [r7, #20]
 798:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 2123              		.loc 1 798 36
 2124 00be 0023     		movs	r3, #0
 2125 00c0 BB61     		str	r3, [r7, #24]
 799:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 2126              		.loc 1 799 40
 2127 00c2 0023     		movs	r3, #0
 2128 00c4 BB62     		str	r3, [r7, #40]
 800:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim16, &sBreakDeadTimeConfig) != HAL_OK)
 2129              		.loc 1 800 7
 2130 00c6 3B46     		mov	r3, r7
 2131 00c8 1946     		mov	r1, r3
 2132 00ca 0648     		ldr	r0, .L88
 2133 00cc FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 2134 00d0 0346     		mov	r3, r0
 2135              		.loc 1 800 6
 2136 00d2 002B     		cmp	r3, #0
 2137 00d4 01D0     		beq	.L87
 801:Core/Src/main.c ****   {
 802:Core/Src/main.c ****     Error_Handler();
 2138              		.loc 1 802 5
 2139 00d6 FFF7FEFF 		bl	Error_Handler
 2140              	.L87:
 803:Core/Src/main.c ****   }
 804:Core/Src/main.c ****   /* USER CODE BEGIN TIM16_Init 2 */
 805:Core/Src/main.c **** 
 806:Core/Src/main.c ****   /* USER CODE END TIM16_Init 2 */
 807:Core/Src/main.c **** 
 808:Core/Src/main.c **** }
 2141              		.loc 1 808 1
 2142 00da 00BF     		nop
 2143 00dc 4837     		adds	r7, r7, #72
 2144              	.LCFI46:
 2145              		.cfi_def_cfa_offset 8
 2146 00de BD46     		mov	sp, r7
 2147              	.LCFI47:
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 111


 2148              		.cfi_def_cfa_register 13
 2149              		@ sp needed
 2150 00e0 80BD     		pop	{r7, pc}
 2151              	.L89:
 2152 00e2 00BF     		.align	2
 2153              	.L88:
 2154 00e4 00000000 		.word	htim16
 2155 00e8 00440140 		.word	1073824768
 2156              		.cfi_endproc
 2157              	.LFE345:
 2159              		.section	.text.MX_TIM17_Init,"ax",%progbits
 2160              		.align	1
 2161              		.syntax unified
 2162              		.thumb
 2163              		.thumb_func
 2165              	MX_TIM17_Init:
 2166              	.LFB346:
 809:Core/Src/main.c **** 
 810:Core/Src/main.c **** /**
 811:Core/Src/main.c ****   * @brief TIM17 Initialization Function
 812:Core/Src/main.c ****   * @param None
 813:Core/Src/main.c ****   * @retval None
 814:Core/Src/main.c ****   */
 815:Core/Src/main.c **** static void MX_TIM17_Init(void)
 816:Core/Src/main.c **** {
 2167              		.loc 1 816 1
 2168              		.cfi_startproc
 2169              		@ args = 0, pretend = 0, frame = 72
 2170              		@ frame_needed = 1, uses_anonymous_args = 0
 2171 0000 80B5     		push	{r7, lr}
 2172              	.LCFI48:
 2173              		.cfi_def_cfa_offset 8
 2174              		.cfi_offset 7, -8
 2175              		.cfi_offset 14, -4
 2176 0002 92B0     		sub	sp, sp, #72
 2177              	.LCFI49:
 2178              		.cfi_def_cfa_offset 80
 2179 0004 00AF     		add	r7, sp, #0
 2180              	.LCFI50:
 2181              		.cfi_def_cfa_register 7
 817:Core/Src/main.c **** 
 818:Core/Src/main.c ****   /* USER CODE BEGIN TIM17_Init 0 */
 819:Core/Src/main.c **** 
 820:Core/Src/main.c ****   /* USER CODE END TIM17_Init 0 */
 821:Core/Src/main.c **** 
 822:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 2182              		.loc 1 822 22
 2183 0006 07F12C03 		add	r3, r7, #44
 2184 000a 0022     		movs	r2, #0
 2185 000c 1A60     		str	r2, [r3]
 2186 000e 5A60     		str	r2, [r3, #4]
 2187 0010 9A60     		str	r2, [r3, #8]
 2188 0012 DA60     		str	r2, [r3, #12]
 2189 0014 1A61     		str	r2, [r3, #16]
 2190 0016 5A61     		str	r2, [r3, #20]
 2191 0018 9A61     		str	r2, [r3, #24]
 823:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 112


 2192              		.loc 1 823 34
 2193 001a 3B46     		mov	r3, r7
 2194 001c 2C22     		movs	r2, #44
 2195 001e 0021     		movs	r1, #0
 2196 0020 1846     		mov	r0, r3
 2197 0022 FFF7FEFF 		bl	memset
 824:Core/Src/main.c **** 
 825:Core/Src/main.c ****   /* USER CODE BEGIN TIM17_Init 1 */
 826:Core/Src/main.c **** 
 827:Core/Src/main.c ****   /* USER CODE END TIM17_Init 1 */
 828:Core/Src/main.c ****   htim17.Instance = TIM17;
 2198              		.loc 1 828 19
 2199 0026 2F4B     		ldr	r3, .L96
 2200 0028 2F4A     		ldr	r2, .L96+4
 2201 002a 1A60     		str	r2, [r3]
 829:Core/Src/main.c ****   htim17.Init.Prescaler = 239;
 2202              		.loc 1 829 25
 2203 002c 2D4B     		ldr	r3, .L96
 2204 002e EF22     		movs	r2, #239
 2205 0030 5A60     		str	r2, [r3, #4]
 830:Core/Src/main.c ****   htim17.Init.CounterMode = TIM_COUNTERMODE_UP;
 2206              		.loc 1 830 27
 2207 0032 2C4B     		ldr	r3, .L96
 2208 0034 0022     		movs	r2, #0
 2209 0036 9A60     		str	r2, [r3, #8]
 831:Core/Src/main.c ****   htim17.Init.Period = 999;
 2210              		.loc 1 831 22
 2211 0038 2A4B     		ldr	r3, .L96
 2212 003a 40F2E732 		movw	r2, #999
 2213 003e DA60     		str	r2, [r3, #12]
 832:Core/Src/main.c ****   htim17.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2214              		.loc 1 832 29
 2215 0040 284B     		ldr	r3, .L96
 2216 0042 0022     		movs	r2, #0
 2217 0044 1A61     		str	r2, [r3, #16]
 833:Core/Src/main.c ****   htim17.Init.RepetitionCounter = 0;
 2218              		.loc 1 833 33
 2219 0046 274B     		ldr	r3, .L96
 2220 0048 0022     		movs	r2, #0
 2221 004a 5A61     		str	r2, [r3, #20]
 834:Core/Src/main.c ****   htim17.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2222              		.loc 1 834 33
 2223 004c 254B     		ldr	r3, .L96
 2224 004e 0022     		movs	r2, #0
 2225 0050 9A61     		str	r2, [r3, #24]
 835:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim17) != HAL_OK)
 2226              		.loc 1 835 7
 2227 0052 2448     		ldr	r0, .L96
 2228 0054 FFF7FEFF 		bl	HAL_TIM_Base_Init
 2229 0058 0346     		mov	r3, r0
 2230              		.loc 1 835 6
 2231 005a 002B     		cmp	r3, #0
 2232 005c 01D0     		beq	.L91
 836:Core/Src/main.c ****   {
 837:Core/Src/main.c ****     Error_Handler();
 2233              		.loc 1 837 5
 2234 005e FFF7FEFF 		bl	Error_Handler
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 113


 2235              	.L91:
 838:Core/Src/main.c ****   }
 839:Core/Src/main.c ****   if (HAL_TIM_OC_Init(&htim17) != HAL_OK)
 2236              		.loc 1 839 7
 2237 0062 2048     		ldr	r0, .L96
 2238 0064 FFF7FEFF 		bl	HAL_TIM_OC_Init
 2239 0068 0346     		mov	r3, r0
 2240              		.loc 1 839 6
 2241 006a 002B     		cmp	r3, #0
 2242 006c 01D0     		beq	.L92
 840:Core/Src/main.c ****   {
 841:Core/Src/main.c ****     Error_Handler();
 2243              		.loc 1 841 5
 2244 006e FFF7FEFF 		bl	Error_Handler
 2245              	.L92:
 842:Core/Src/main.c ****   }
 843:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_TIMING;
 2246              		.loc 1 843 20
 2247 0072 0023     		movs	r3, #0
 2248 0074 FB62     		str	r3, [r7, #44]
 844:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 2249              		.loc 1 844 19
 2250 0076 0023     		movs	r3, #0
 2251 0078 3B63     		str	r3, [r7, #48]
 845:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2252              		.loc 1 845 24
 2253 007a 0023     		movs	r3, #0
 2254 007c 7B63     		str	r3, [r7, #52]
 846:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 2255              		.loc 1 846 25
 2256 007e 0023     		movs	r3, #0
 2257 0080 BB63     		str	r3, [r7, #56]
 847:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2258              		.loc 1 847 24
 2259 0082 0023     		movs	r3, #0
 2260 0084 FB63     		str	r3, [r7, #60]
 848:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 2261              		.loc 1 848 25
 2262 0086 0023     		movs	r3, #0
 2263 0088 3B64     		str	r3, [r7, #64]
 849:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 2264              		.loc 1 849 26
 2265 008a 0023     		movs	r3, #0
 2266 008c 7B64     		str	r3, [r7, #68]
 850:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim17, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 2267              		.loc 1 850 7
 2268 008e 07F12C03 		add	r3, r7, #44
 2269 0092 0022     		movs	r2, #0
 2270 0094 1946     		mov	r1, r3
 2271 0096 1348     		ldr	r0, .L96
 2272 0098 FFF7FEFF 		bl	HAL_TIM_OC_ConfigChannel
 2273 009c 0346     		mov	r3, r0
 2274              		.loc 1 850 6
 2275 009e 002B     		cmp	r3, #0
 2276 00a0 01D0     		beq	.L93
 851:Core/Src/main.c ****   {
 852:Core/Src/main.c ****     Error_Handler();
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 114


 2277              		.loc 1 852 5
 2278 00a2 FFF7FEFF 		bl	Error_Handler
 2279              	.L93:
 853:Core/Src/main.c ****   }
 854:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 2280              		.loc 1 854 40
 2281 00a6 0023     		movs	r3, #0
 2282 00a8 3B60     		str	r3, [r7]
 855:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 2283              		.loc 1 855 41
 2284 00aa 0023     		movs	r3, #0
 2285 00ac 7B60     		str	r3, [r7, #4]
 856:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 2286              		.loc 1 856 34
 2287 00ae 0023     		movs	r3, #0
 2288 00b0 BB60     		str	r3, [r7, #8]
 857:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 2289              		.loc 1 857 33
 2290 00b2 0023     		movs	r3, #0
 2291 00b4 FB60     		str	r3, [r7, #12]
 858:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 2292              		.loc 1 858 35
 2293 00b6 0023     		movs	r3, #0
 2294 00b8 3B61     		str	r3, [r7, #16]
 859:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 2295              		.loc 1 859 38
 2296 00ba 4FF40053 		mov	r3, #8192
 2297 00be 7B61     		str	r3, [r7, #20]
 860:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 2298              		.loc 1 860 36
 2299 00c0 0023     		movs	r3, #0
 2300 00c2 BB61     		str	r3, [r7, #24]
 861:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 2301              		.loc 1 861 40
 2302 00c4 0023     		movs	r3, #0
 2303 00c6 BB62     		str	r3, [r7, #40]
 862:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim17, &sBreakDeadTimeConfig) != HAL_OK)
 2304              		.loc 1 862 7
 2305 00c8 3B46     		mov	r3, r7
 2306 00ca 1946     		mov	r1, r3
 2307 00cc 0548     		ldr	r0, .L96
 2308 00ce FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 2309 00d2 0346     		mov	r3, r0
 2310              		.loc 1 862 6
 2311 00d4 002B     		cmp	r3, #0
 2312 00d6 01D0     		beq	.L95
 863:Core/Src/main.c ****   {
 864:Core/Src/main.c ****     Error_Handler();
 2313              		.loc 1 864 5
 2314 00d8 FFF7FEFF 		bl	Error_Handler
 2315              	.L95:
 865:Core/Src/main.c ****   }
 866:Core/Src/main.c ****   /* USER CODE BEGIN TIM17_Init 2 */
 867:Core/Src/main.c **** 
 868:Core/Src/main.c ****   /* USER CODE END TIM17_Init 2 */
 869:Core/Src/main.c **** 
 870:Core/Src/main.c **** }
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 115


 2316              		.loc 1 870 1
 2317 00dc 00BF     		nop
 2318 00de 4837     		adds	r7, r7, #72
 2319              	.LCFI51:
 2320              		.cfi_def_cfa_offset 8
 2321 00e0 BD46     		mov	sp, r7
 2322              	.LCFI52:
 2323              		.cfi_def_cfa_register 13
 2324              		@ sp needed
 2325 00e2 80BD     		pop	{r7, pc}
 2326              	.L97:
 2327              		.align	2
 2328              	.L96:
 2329 00e4 00000000 		.word	htim17
 2330 00e8 00480140 		.word	1073825792
 2331              		.cfi_endproc
 2332              	.LFE346:
 2334              		.section	.text.MX_GPIO_Init,"ax",%progbits
 2335              		.align	1
 2336              		.syntax unified
 2337              		.thumb
 2338              		.thumb_func
 2340              	MX_GPIO_Init:
 2341              	.LFB347:
 871:Core/Src/main.c **** 
 872:Core/Src/main.c **** /**
 873:Core/Src/main.c ****   * @brief GPIO Initialization Function
 874:Core/Src/main.c ****   * @param None
 875:Core/Src/main.c ****   * @retval None
 876:Core/Src/main.c ****   */
 877:Core/Src/main.c **** static void MX_GPIO_Init(void)
 878:Core/Src/main.c **** {
 2342              		.loc 1 878 1
 2343              		.cfi_startproc
 2344              		@ args = 0, pretend = 0, frame = 56
 2345              		@ frame_needed = 1, uses_anonymous_args = 0
 2346 0000 80B5     		push	{r7, lr}
 2347              	.LCFI53:
 2348              		.cfi_def_cfa_offset 8
 2349              		.cfi_offset 7, -8
 2350              		.cfi_offset 14, -4
 2351 0002 8EB0     		sub	sp, sp, #56
 2352              	.LCFI54:
 2353              		.cfi_def_cfa_offset 64
 2354 0004 00AF     		add	r7, sp, #0
 2355              	.LCFI55:
 2356              		.cfi_def_cfa_register 7
 879:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 2357              		.loc 1 879 20
 2358 0006 07F12403 		add	r3, r7, #36
 2359 000a 0022     		movs	r2, #0
 2360 000c 1A60     		str	r2, [r3]
 2361 000e 5A60     		str	r2, [r3, #4]
 2362 0010 9A60     		str	r2, [r3, #8]
 2363 0012 DA60     		str	r2, [r3, #12]
 2364 0014 1A61     		str	r2, [r3, #16]
 2365              	.LBB73:
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 116


 880:Core/Src/main.c **** 
 881:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 882:Core/Src/main.c ****   __HAL_RCC_GPIOE_CLK_ENABLE();
 2366              		.loc 1 882 3
 2367 0016 954B     		ldr	r3, .L99
 2368 0018 D3F8E030 		ldr	r3, [r3, #224]
 2369 001c 934A     		ldr	r2, .L99
 2370 001e 43F01003 		orr	r3, r3, #16
 2371 0022 C2F8E030 		str	r3, [r2, #224]
 2372 0026 914B     		ldr	r3, .L99
 2373 0028 D3F8E030 		ldr	r3, [r3, #224]
 2374 002c 03F01003 		and	r3, r3, #16
 2375 0030 3B62     		str	r3, [r7, #32]
 2376 0032 3B6A     		ldr	r3, [r7, #32]
 2377              	.LBE73:
 2378              	.LBB74:
 883:Core/Src/main.c ****   __HAL_RCC_GPIOI_CLK_ENABLE();
 2379              		.loc 1 883 3
 2380 0034 8D4B     		ldr	r3, .L99
 2381 0036 D3F8E030 		ldr	r3, [r3, #224]
 2382 003a 8C4A     		ldr	r2, .L99
 2383 003c 43F48073 		orr	r3, r3, #256
 2384 0040 C2F8E030 		str	r3, [r2, #224]
 2385 0044 894B     		ldr	r3, .L99
 2386 0046 D3F8E030 		ldr	r3, [r3, #224]
 2387 004a 03F48073 		and	r3, r3, #256
 2388 004e FB61     		str	r3, [r7, #28]
 2389 0050 FB69     		ldr	r3, [r7, #28]
 2390              	.LBE74:
 2391              	.LBB75:
 884:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
 2392              		.loc 1 884 3
 2393 0052 864B     		ldr	r3, .L99
 2394 0054 D3F8E030 		ldr	r3, [r3, #224]
 2395 0058 844A     		ldr	r2, .L99
 2396 005a 43F02003 		orr	r3, r3, #32
 2397 005e C2F8E030 		str	r3, [r2, #224]
 2398 0062 824B     		ldr	r3, .L99
 2399 0064 D3F8E030 		ldr	r3, [r3, #224]
 2400 0068 03F02003 		and	r3, r3, #32
 2401 006c BB61     		str	r3, [r7, #24]
 2402 006e BB69     		ldr	r3, [r7, #24]
 2403              	.LBE75:
 2404              	.LBB76:
 885:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 2405              		.loc 1 885 3
 2406 0070 7E4B     		ldr	r3, .L99
 2407 0072 D3F8E030 		ldr	r3, [r3, #224]
 2408 0076 7D4A     		ldr	r2, .L99
 2409 0078 43F00403 		orr	r3, r3, #4
 2410 007c C2F8E030 		str	r3, [r2, #224]
 2411 0080 7A4B     		ldr	r3, .L99
 2412 0082 D3F8E030 		ldr	r3, [r3, #224]
 2413 0086 03F00403 		and	r3, r3, #4
 2414 008a 7B61     		str	r3, [r7, #20]
 2415 008c 7B69     		ldr	r3, [r7, #20]
 2416              	.LBE76:
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 117


 2417              	.LBB77:
 886:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 2418              		.loc 1 886 3
 2419 008e 774B     		ldr	r3, .L99
 2420 0090 D3F8E030 		ldr	r3, [r3, #224]
 2421 0094 754A     		ldr	r2, .L99
 2422 0096 43F08003 		orr	r3, r3, #128
 2423 009a C2F8E030 		str	r3, [r2, #224]
 2424 009e 734B     		ldr	r3, .L99
 2425 00a0 D3F8E030 		ldr	r3, [r3, #224]
 2426 00a4 03F08003 		and	r3, r3, #128
 2427 00a8 3B61     		str	r3, [r7, #16]
 2428 00aa 3B69     		ldr	r3, [r7, #16]
 2429              	.LBE77:
 2430              	.LBB78:
 887:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 2431              		.loc 1 887 3
 2432 00ac 6F4B     		ldr	r3, .L99
 2433 00ae D3F8E030 		ldr	r3, [r3, #224]
 2434 00b2 6E4A     		ldr	r2, .L99
 2435 00b4 43F00103 		orr	r3, r3, #1
 2436 00b8 C2F8E030 		str	r3, [r2, #224]
 2437 00bc 6B4B     		ldr	r3, .L99
 2438 00be D3F8E030 		ldr	r3, [r3, #224]
 2439 00c2 03F00103 		and	r3, r3, #1
 2440 00c6 FB60     		str	r3, [r7, #12]
 2441 00c8 FB68     		ldr	r3, [r7, #12]
 2442              	.LBE78:
 2443              	.LBB79:
 888:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 2444              		.loc 1 888 3
 2445 00ca 684B     		ldr	r3, .L99
 2446 00cc D3F8E030 		ldr	r3, [r3, #224]
 2447 00d0 664A     		ldr	r2, .L99
 2448 00d2 43F00203 		orr	r3, r3, #2
 2449 00d6 C2F8E030 		str	r3, [r2, #224]
 2450 00da 644B     		ldr	r3, .L99
 2451 00dc D3F8E030 		ldr	r3, [r3, #224]
 2452 00e0 03F00203 		and	r3, r3, #2
 2453 00e4 BB60     		str	r3, [r7, #8]
 2454 00e6 BB68     		ldr	r3, [r7, #8]
 2455              	.LBE79:
 2456              	.LBB80:
 889:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 2457              		.loc 1 889 3
 2458 00e8 604B     		ldr	r3, .L99
 2459 00ea D3F8E030 		ldr	r3, [r3, #224]
 2460 00ee 5F4A     		ldr	r2, .L99
 2461 00f0 43F00803 		orr	r3, r3, #8
 2462 00f4 C2F8E030 		str	r3, [r2, #224]
 2463 00f8 5C4B     		ldr	r3, .L99
 2464 00fa D3F8E030 		ldr	r3, [r3, #224]
 2465 00fe 03F00803 		and	r3, r3, #8
 2466 0102 7B60     		str	r3, [r7, #4]
 2467 0104 7B68     		ldr	r3, [r7, #4]
 2468              	.LBE80:
 2469              	.LBB81:
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 118


 890:Core/Src/main.c ****   __HAL_RCC_GPIOG_CLK_ENABLE();
 2470              		.loc 1 890 3
 2471 0106 594B     		ldr	r3, .L99
 2472 0108 D3F8E030 		ldr	r3, [r3, #224]
 2473 010c 574A     		ldr	r2, .L99
 2474 010e 43F04003 		orr	r3, r3, #64
 2475 0112 C2F8E030 		str	r3, [r2, #224]
 2476 0116 554B     		ldr	r3, .L99
 2477 0118 D3F8E030 		ldr	r3, [r3, #224]
 2478 011c 03F04003 		and	r3, r3, #64
 2479 0120 3B60     		str	r3, [r7]
 2480 0122 3B68     		ldr	r3, [r7]
 2481              	.LBE81:
 891:Core/Src/main.c **** 
 892:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 893:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_2|GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6, GPIO_PIN_RESET);
 2482              		.loc 1 893 3
 2483 0124 0022     		movs	r2, #0
 2484 0126 7421     		movs	r1, #116
 2485 0128 5148     		ldr	r0, .L99+4
 2486 012a FFF7FEFF 		bl	HAL_GPIO_WritePin
 894:Core/Src/main.c **** 
 895:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 896:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOI, GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_0
 2487              		.loc 1 896 3
 2488 012e 0022     		movs	r2, #0
 2489 0130 40F2F771 		movw	r1, #2039
 2490 0134 4F48     		ldr	r0, .L99+8
 2491 0136 FFF7FEFF 		bl	HAL_GPIO_WritePin
 897:Core/Src/main.c ****                           |GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_4|GPIO_PIN_5
 898:Core/Src/main.c ****                           |GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
 899:Core/Src/main.c **** 
 900:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 901:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOF, GPIO_PIN_10, GPIO_PIN_RESET);
 2492              		.loc 1 901 3
 2493 013a 0022     		movs	r2, #0
 2494 013c 4FF48061 		mov	r1, #1024
 2495 0140 4D48     		ldr	r0, .L99+12
 2496 0142 FFF7FEFF 		bl	HAL_GPIO_WritePin
 902:Core/Src/main.c **** 
 903:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 904:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_0, GPIO_PIN_RESET);
 2497              		.loc 1 904 3
 2498 0146 0022     		movs	r2, #0
 2499 0148 0121     		movs	r1, #1
 2500 014a 4C48     		ldr	r0, .L99+16
 2501 014c FFF7FEFF 		bl	HAL_GPIO_WritePin
 905:Core/Src/main.c **** 
 906:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 907:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOH, GPIO_PIN_2|GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_8
 2502              		.loc 1 907 3
 2503 0150 0022     		movs	r2, #0
 2504 0152 4AF21C71 		movw	r1, #42780
 2505 0156 4A48     		ldr	r0, .L99+20
 2506 0158 FFF7FEFF 		bl	HAL_GPIO_WritePin
 908:Core/Src/main.c ****                           |GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_13|GPIO_PIN_15, GPIO_PIN_RESET);
 909:Core/Src/main.c **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 119


 910:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 911:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1|GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
 2507              		.loc 1 911 3
 2508 015c 0022     		movs	r2, #0
 2509 015e C221     		movs	r1, #194
 2510 0160 4848     		ldr	r0, .L99+24
 2511 0162 FFF7FEFF 		bl	HAL_GPIO_WritePin
 912:Core/Src/main.c **** 
 913:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 914:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOG, GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_10|GPIO_PIN_11
 2512              		.loc 1 914 3
 2513 0166 0022     		movs	r2, #0
 2514 0168 4FF4E651 		mov	r1, #7360
 2515 016c 4648     		ldr	r0, .L99+28
 2516 016e FFF7FEFF 		bl	HAL_GPIO_WritePin
 915:Core/Src/main.c ****                           |GPIO_PIN_12, GPIO_PIN_RESET);
 916:Core/Src/main.c **** 
 917:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 918:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_6, GPIO_PIN_RESET);
 2517              		.loc 1 918 3
 2518 0172 0022     		movs	r2, #0
 2519 0174 4021     		movs	r1, #64
 2520 0176 4548     		ldr	r0, .L99+32
 2521 0178 FFF7FEFF 		bl	HAL_GPIO_WritePin
 919:Core/Src/main.c **** 
 920:Core/Src/main.c ****   /*Configure GPIO pins : PE2 PE4 PE5 PE6 */
 921:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6;
 2522              		.loc 1 921 23
 2523 017c 7423     		movs	r3, #116
 2524 017e 7B62     		str	r3, [r7, #36]
 922:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 2525              		.loc 1 922 24
 2526 0180 0123     		movs	r3, #1
 2527 0182 BB62     		str	r3, [r7, #40]
 923:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2528              		.loc 1 923 24
 2529 0184 0023     		movs	r3, #0
 2530 0186 FB62     		str	r3, [r7, #44]
 924:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2531              		.loc 1 924 25
 2532 0188 0023     		movs	r3, #0
 2533 018a 3B63     		str	r3, [r7, #48]
 925:Core/Src/main.c ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 2534              		.loc 1 925 3
 2535 018c 07F12403 		add	r3, r7, #36
 2536 0190 1946     		mov	r1, r3
 2537 0192 3748     		ldr	r0, .L99+4
 2538 0194 FFF7FEFF 		bl	HAL_GPIO_Init
 926:Core/Src/main.c **** 
 927:Core/Src/main.c ****   /*Configure GPIO pins : PI8 PI9 PI10 PI0
 928:Core/Src/main.c ****                            PI1 PI2 PI4 PI5
 929:Core/Src/main.c ****                            PI6 PI7 */
 930:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_0
 2539              		.loc 1 930 23
 2540 0198 40F2F773 		movw	r3, #2039
 2541 019c 7B62     		str	r3, [r7, #36]
 931:Core/Src/main.c ****                           |GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_4|GPIO_PIN_5
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 120


 932:Core/Src/main.c ****                           |GPIO_PIN_6|GPIO_PIN_7;
 933:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 2542              		.loc 1 933 24
 2543 019e 0123     		movs	r3, #1
 2544 01a0 BB62     		str	r3, [r7, #40]
 934:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2545              		.loc 1 934 24
 2546 01a2 0023     		movs	r3, #0
 2547 01a4 FB62     		str	r3, [r7, #44]
 935:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2548              		.loc 1 935 25
 2549 01a6 0023     		movs	r3, #0
 2550 01a8 3B63     		str	r3, [r7, #48]
 936:Core/Src/main.c ****   HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 2551              		.loc 1 936 3
 2552 01aa 07F12403 		add	r3, r7, #36
 2553 01ae 1946     		mov	r1, r3
 2554 01b0 3048     		ldr	r0, .L99+8
 2555 01b2 FFF7FEFF 		bl	HAL_GPIO_Init
 937:Core/Src/main.c **** 
 938:Core/Src/main.c ****   /*Configure GPIO pin : PF10 */
 939:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_10;
 2556              		.loc 1 939 23
 2557 01b6 4FF48063 		mov	r3, #1024
 2558 01ba 7B62     		str	r3, [r7, #36]
 940:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 2559              		.loc 1 940 24
 2560 01bc 0123     		movs	r3, #1
 2561 01be BB62     		str	r3, [r7, #40]
 941:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2562              		.loc 1 941 24
 2563 01c0 0023     		movs	r3, #0
 2564 01c2 FB62     		str	r3, [r7, #44]
 942:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2565              		.loc 1 942 25
 2566 01c4 0023     		movs	r3, #0
 2567 01c6 3B63     		str	r3, [r7, #48]
 943:Core/Src/main.c ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 2568              		.loc 1 943 3
 2569 01c8 07F12403 		add	r3, r7, #36
 2570 01cc 1946     		mov	r1, r3
 2571 01ce 2A48     		ldr	r0, .L99+12
 2572 01d0 FFF7FEFF 		bl	HAL_GPIO_Init
 944:Core/Src/main.c **** 
 945:Core/Src/main.c ****   /*Configure GPIO pin : PC0 */
 946:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0;
 2573              		.loc 1 946 23
 2574 01d4 0123     		movs	r3, #1
 2575 01d6 7B62     		str	r3, [r7, #36]
 947:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 2576              		.loc 1 947 24
 2577 01d8 0123     		movs	r3, #1
 2578 01da BB62     		str	r3, [r7, #40]
 948:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2579              		.loc 1 948 24
 2580 01dc 0023     		movs	r3, #0
 2581 01de FB62     		str	r3, [r7, #44]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 121


 949:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2582              		.loc 1 949 25
 2583 01e0 0023     		movs	r3, #0
 2584 01e2 3B63     		str	r3, [r7, #48]
 950:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 2585              		.loc 1 950 3
 2586 01e4 07F12403 		add	r3, r7, #36
 2587 01e8 1946     		mov	r1, r3
 2588 01ea 2448     		ldr	r0, .L99+16
 2589 01ec FFF7FEFF 		bl	HAL_GPIO_Init
 951:Core/Src/main.c **** 
 952:Core/Src/main.c ****   /*Configure GPIO pins : PH2 PH3 PH4 PH8
 953:Core/Src/main.c ****                            PH9 PH10 PH13 PH15 */
 954:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_8
 2590              		.loc 1 954 23
 2591 01f0 4AF21C73 		movw	r3, #42780
 2592 01f4 7B62     		str	r3, [r7, #36]
 955:Core/Src/main.c ****                           |GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_13|GPIO_PIN_15;
 956:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 2593              		.loc 1 956 24
 2594 01f6 0123     		movs	r3, #1
 2595 01f8 BB62     		str	r3, [r7, #40]
 957:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2596              		.loc 1 957 24
 2597 01fa 0023     		movs	r3, #0
 2598 01fc FB62     		str	r3, [r7, #44]
 958:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2599              		.loc 1 958 25
 2600 01fe 0023     		movs	r3, #0
 2601 0200 3B63     		str	r3, [r7, #48]
 959:Core/Src/main.c ****   HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 2602              		.loc 1 959 3
 2603 0202 07F12403 		add	r3, r7, #36
 2604 0206 1946     		mov	r1, r3
 2605 0208 1D48     		ldr	r0, .L99+20
 2606 020a FFF7FEFF 		bl	HAL_GPIO_Init
 960:Core/Src/main.c **** 
 961:Core/Src/main.c ****   /*Configure GPIO pins : PB1 PB6 PB7 */
 962:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_6|GPIO_PIN_7;
 2607              		.loc 1 962 23
 2608 020e C223     		movs	r3, #194
 2609 0210 7B62     		str	r3, [r7, #36]
 963:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 2610              		.loc 1 963 24
 2611 0212 0123     		movs	r3, #1
 2612 0214 BB62     		str	r3, [r7, #40]
 964:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2613              		.loc 1 964 24
 2614 0216 0023     		movs	r3, #0
 2615 0218 FB62     		str	r3, [r7, #44]
 965:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2616              		.loc 1 965 25
 2617 021a 0023     		movs	r3, #0
 2618 021c 3B63     		str	r3, [r7, #48]
 966:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 2619              		.loc 1 966 3
 2620 021e 07F12403 		add	r3, r7, #36
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 122


 2621 0222 1946     		mov	r1, r3
 2622 0224 1748     		ldr	r0, .L99+24
 2623 0226 FFF7FEFF 		bl	HAL_GPIO_Init
 967:Core/Src/main.c **** 
 968:Core/Src/main.c ****   /*Configure GPIO pins : PG6 PG7 PG10 PG11
 969:Core/Src/main.c ****                            PG12 */
 970:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_10|GPIO_PIN_11
 2624              		.loc 1 970 23
 2625 022a 4FF4E653 		mov	r3, #7360
 2626 022e 7B62     		str	r3, [r7, #36]
 971:Core/Src/main.c ****                           |GPIO_PIN_12;
 972:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 2627              		.loc 1 972 24
 2628 0230 0123     		movs	r3, #1
 2629 0232 BB62     		str	r3, [r7, #40]
 973:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2630              		.loc 1 973 24
 2631 0234 0023     		movs	r3, #0
 2632 0236 FB62     		str	r3, [r7, #44]
 974:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2633              		.loc 1 974 25
 2634 0238 0023     		movs	r3, #0
 2635 023a 3B63     		str	r3, [r7, #48]
 975:Core/Src/main.c ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 2636              		.loc 1 975 3
 2637 023c 07F12403 		add	r3, r7, #36
 2638 0240 1946     		mov	r1, r3
 2639 0242 1148     		ldr	r0, .L99+28
 2640 0244 FFF7FEFF 		bl	HAL_GPIO_Init
 976:Core/Src/main.c **** 
 977:Core/Src/main.c ****   /*Configure GPIO pin : PD6 */
 978:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_6;
 2641              		.loc 1 978 23
 2642 0248 4023     		movs	r3, #64
 2643 024a 7B62     		str	r3, [r7, #36]
 979:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 2644              		.loc 1 979 24
 2645 024c 0123     		movs	r3, #1
 2646 024e BB62     		str	r3, [r7, #40]
 980:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2647              		.loc 1 980 24
 2648 0250 0023     		movs	r3, #0
 2649 0252 FB62     		str	r3, [r7, #44]
 981:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2650              		.loc 1 981 25
 2651 0254 0023     		movs	r3, #0
 2652 0256 3B63     		str	r3, [r7, #48]
 982:Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 2653              		.loc 1 982 3
 2654 0258 07F12403 		add	r3, r7, #36
 2655 025c 1946     		mov	r1, r3
 2656 025e 0B48     		ldr	r0, .L99+32
 2657 0260 FFF7FEFF 		bl	HAL_GPIO_Init
 983:Core/Src/main.c **** 
 984:Core/Src/main.c **** }
 2658              		.loc 1 984 1
 2659 0264 00BF     		nop
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 123


 2660 0266 3837     		adds	r7, r7, #56
 2661              	.LCFI56:
 2662              		.cfi_def_cfa_offset 8
 2663 0268 BD46     		mov	sp, r7
 2664              	.LCFI57:
 2665              		.cfi_def_cfa_register 13
 2666              		@ sp needed
 2667 026a 80BD     		pop	{r7, pc}
 2668              	.L100:
 2669              		.align	2
 2670              	.L99:
 2671 026c 00440258 		.word	1476543488
 2672 0270 00100258 		.word	1476530176
 2673 0274 00200258 		.word	1476534272
 2674 0278 00140258 		.word	1476531200
 2675 027c 00080258 		.word	1476528128
 2676 0280 001C0258 		.word	1476533248
 2677 0284 00040258 		.word	1476527104
 2678 0288 00180258 		.word	1476532224
 2679 028c 000C0258 		.word	1476529152
 2680              		.cfi_endproc
 2681              	.LFE347:
 2683              		.section	.text.Error_Handler,"ax",%progbits
 2684              		.align	1
 2685              		.global	Error_Handler
 2686              		.syntax unified
 2687              		.thumb
 2688              		.thumb_func
 2690              	Error_Handler:
 2691              	.LFB348:
 985:Core/Src/main.c **** 
 986:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 987:Core/Src/main.c **** 
 988:Core/Src/main.c **** /* USER CODE END 4 */
 989:Core/Src/main.c **** 
 990:Core/Src/main.c **** /**
 991:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 992:Core/Src/main.c ****   * @retval None
 993:Core/Src/main.c ****   */
 994:Core/Src/main.c **** void Error_Handler(void)
 995:Core/Src/main.c **** {
 2692              		.loc 1 995 1
 2693              		.cfi_startproc
 2694              		@ args = 0, pretend = 0, frame = 0
 2695              		@ frame_needed = 1, uses_anonymous_args = 0
 2696              		@ link register save eliminated.
 2697 0000 80B4     		push	{r7}
 2698              	.LCFI58:
 2699              		.cfi_def_cfa_offset 4
 2700              		.cfi_offset 7, -4
 2701 0002 00AF     		add	r7, sp, #0
 2702              	.LCFI59:
 2703              		.cfi_def_cfa_register 7
 2704              	.LBB82:
 2705              	.LBB83:
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2706              		.loc 3 209 3
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 124


 2707              		.syntax unified
 2708              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2709 0004 72B6     		cpsid i
 2710              	@ 0 "" 2
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2711              		.loc 3 210 1
 2712              		.thumb
 2713              		.syntax unified
 2714 0006 00BF     		nop
 2715              	.L102:
 2716              	.LBE83:
 2717              	.LBE82:
 996:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 997:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 998:Core/Src/main.c ****   __disable_irq();
 999:Core/Src/main.c ****   while (1)
 2718              		.loc 1 999 9 discriminator 1
 2719 0008 FEE7     		b	.L102
 2720              		.cfi_endproc
 2721              	.LFE348:
 2723              		.text
 2724              	.Letext0:
 2725              		.file 4 "/Users/seojisu/Library/Arm-GCC-xPack/arm-none-eabi/include/machine/_default_types.h"
 2726              		.file 5 "/Users/seojisu/Library/Arm-GCC-xPack/arm-none-eabi/include/sys/_stdint.h"
 2727              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 2728              		.file 7 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"
 2729              		.file 8 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 2730              		.file 9 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
 2731              		.file 10 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc_ex.h"
 2732              		.file 11 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_gpio.h"
 2733              		.file 12 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 2734              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_adc.h"
 2735              		.file 14 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_adc_ex.h"
 2736              		.file 15 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_fdcan.h"
 2737              		.file 16 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_i2c.h"
 2738              		.file 17 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_spi.h"
 2739              		.file 18 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_tim.h"
 2740              		.file 19 "Core/Inc/main.h"
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 125


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:23     .bss.hadc1:0000000000000000 hadc1
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:20     .bss.hadc1:0000000000000000 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:30     .bss.hadc3:0000000000000000 hadc3
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:27     .bss.hadc3:0000000000000000 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:37     .bss.hfdcan1:0000000000000000 hfdcan1
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:34     .bss.hfdcan1:0000000000000000 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:44     .bss.hfdcan2:0000000000000000 hfdcan2
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:41     .bss.hfdcan2:0000000000000000 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:51     .bss.hi2c1:0000000000000000 hi2c1
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:48     .bss.hi2c1:0000000000000000 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:58     .bss.hi2c4:0000000000000000 hi2c4
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:55     .bss.hi2c4:0000000000000000 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:65     .bss.hspi5:0000000000000000 hspi5
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:62     .bss.hspi5:0000000000000000 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:72     .bss.htim5:0000000000000000 htim5
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:69     .bss.htim5:0000000000000000 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:79     .bss.htim15:0000000000000000 htim15
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:76     .bss.htim15:0000000000000000 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:86     .bss.htim16:0000000000000000 htim16
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:83     .bss.htim16:0000000000000000 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:93     .bss.htim17:0000000000000000 htim17
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:90     .bss.htim17:0000000000000000 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:96     .text.main:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:102    .text.main:0000000000000000 main
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:416    .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:601    .text.PeriphCommonClock_Config:0000000000000000 PeriphCommonClock_Config
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:2340   .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:2165   .text.MX_TIM17_Init:0000000000000000 MX_TIM17_Init
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:1990   .text.MX_TIM16_Init:0000000000000000 MX_TIM16_Init
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:1367   .text.MX_I2C1_Init:0000000000000000 MX_I2C1_Init
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:1467   .text.MX_I2C4_Init:0000000000000000 MX_I2C4_Init
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:1865   .text.MX_TIM15_Init:0000000000000000 MX_TIM15_Init
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:883    .text.MX_ADC3_Init:0000000000000000 MX_ADC3_Init
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:684    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:1567   .text.MX_SPI5_Init:0000000000000000 MX_SPI5_Init
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:1696   .text.MX_TIM5_Init:0000000000000000 MX_TIM5_Init
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:1061   .text.MX_FDCAN1_Init:0000000000000000 MX_FDCAN1_Init
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:1214   .text.MX_FDCAN2_Init:0000000000000000 MX_FDCAN2_Init
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:402    .text.main:0000000000000124 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:410    .text.SystemClock_Config:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:2690   .text.Error_Handler:0000000000000000 Error_Handler
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:588    .text.SystemClock_Config:0000000000000100 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:595    .text.PeriphCommonClock_Config:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:679    .text.MX_ADC1_Init:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:870    .text.MX_ADC1_Init:0000000000000108 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:878    .text.MX_ADC3_Init:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:1048   .text.MX_ADC3_Init:00000000000000e4 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:1056   .text.MX_FDCAN1_Init:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:1203   .text.MX_FDCAN1_Init:00000000000000c0 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:1209   .text.MX_FDCAN2_Init:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:1356   .text.MX_FDCAN2_Init:00000000000000c0 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:1362   .text.MX_I2C1_Init:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:1455   .text.MX_I2C1_Init:0000000000000074 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:1462   .text.MX_I2C4_Init:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:1555   .text.MX_I2C4_Init:0000000000000074 $d
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s 			page 126


/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:1562   .text.MX_SPI5_Init:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:1685   .text.MX_SPI5_Init:00000000000000a4 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:1691   .text.MX_TIM5_Init:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:1854   .text.MX_TIM5_Init:00000000000000e8 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:1860   .text.MX_TIM15_Init:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:1979   .text.MX_TIM15_Init:000000000000009c $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:1985   .text.MX_TIM16_Init:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:2154   .text.MX_TIM16_Init:00000000000000e4 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:2160   .text.MX_TIM17_Init:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:2329   .text.MX_TIM17_Init:00000000000000e4 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:2335   .text.MX_GPIO_Init:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:2671   .text.MX_GPIO_Init:000000000000026c $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccX4Trk1.s:2684   .text.Error_Handler:0000000000000000 $t

UNDEFINED SYMBOLS
HAL_Init
HAL_TIM_Base_Start_IT
Os_Init_Task
Os_Handler
memset
HAL_PWREx_ConfigSupply
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_ADC_Init
HAL_ADCEx_MultiModeConfigChannel
HAL_ADC_ConfigChannel
HAL_FDCAN_Init
HAL_I2C_Init
HAL_I2CEx_ConfigAnalogFilter
HAL_I2CEx_ConfigDigitalFilter
HAL_SPI_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
HAL_TIM_OC_Init
HAL_TIM_OC_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_GPIO_WritePin
HAL_GPIO_Init
