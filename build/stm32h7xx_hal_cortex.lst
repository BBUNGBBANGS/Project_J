ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"stm32h7xx_hal_cortex.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.__NVIC_SetPriorityGrouping,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	__NVIC_SetPriorityGrouping:
  25              	.LFB104:
  26              		.file 1 "Drivers/CMSIS/Include/core_cm7.h"
   1:Drivers/CMSIS/Include/core_cm7.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm7.h ****  * @file     core_cm7.h
   3:Drivers/CMSIS/Include/core_cm7.h ****  * @brief    CMSIS Cortex-M7 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm7.h ****  * @version  V5.1.1
   5:Drivers/CMSIS/Include/core_cm7.h ****  * @date     28. March 2019
   6:Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm7.h **** /*
   8:Drivers/CMSIS/Include/core_cm7.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/core_cm7.h ****  *
  10:Drivers/CMSIS/Include/core_cm7.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/core_cm7.h ****  *
  12:Drivers/CMSIS/Include/core_cm7.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/core_cm7.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/core_cm7.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/core_cm7.h ****  *
  16:Drivers/CMSIS/Include/core_cm7.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/core_cm7.h ****  *
  18:Drivers/CMSIS/Include/core_cm7.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/core_cm7.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/core_cm7.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/core_cm7.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/core_cm7.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/core_cm7.h ****  */
  24:Drivers/CMSIS/Include/core_cm7.h **** 
  25:Drivers/CMSIS/Include/core_cm7.h **** #if   defined ( __ICCARM__ )
  26:Drivers/CMSIS/Include/core_cm7.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:Drivers/CMSIS/Include/core_cm7.h **** #elif defined (__clang__)
  28:Drivers/CMSIS/Include/core_cm7.h ****   #pragma clang system_header   /* treat file as system include file */
  29:Drivers/CMSIS/Include/core_cm7.h **** #endif
  30:Drivers/CMSIS/Include/core_cm7.h **** 
  31:Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CORE_CM7_H_GENERIC
  32:Drivers/CMSIS/Include/core_cm7.h **** #define __CORE_CM7_H_GENERIC
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 2


  33:Drivers/CMSIS/Include/core_cm7.h **** 
  34:Drivers/CMSIS/Include/core_cm7.h **** #include <stdint.h>
  35:Drivers/CMSIS/Include/core_cm7.h **** 
  36:Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
  37:Drivers/CMSIS/Include/core_cm7.h ****  extern "C" {
  38:Drivers/CMSIS/Include/core_cm7.h **** #endif
  39:Drivers/CMSIS/Include/core_cm7.h **** 
  40:Drivers/CMSIS/Include/core_cm7.h **** /**
  41:Drivers/CMSIS/Include/core_cm7.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:Drivers/CMSIS/Include/core_cm7.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:Drivers/CMSIS/Include/core_cm7.h **** 
  44:Drivers/CMSIS/Include/core_cm7.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:Drivers/CMSIS/Include/core_cm7.h ****      Function definitions in header files are used to allow 'inlining'.
  46:Drivers/CMSIS/Include/core_cm7.h **** 
  47:Drivers/CMSIS/Include/core_cm7.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:Drivers/CMSIS/Include/core_cm7.h ****      Unions are used for effective representation of core registers.
  49:Drivers/CMSIS/Include/core_cm7.h **** 
  50:Drivers/CMSIS/Include/core_cm7.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:Drivers/CMSIS/Include/core_cm7.h ****      Function-like macros are used to allow more efficient code.
  52:Drivers/CMSIS/Include/core_cm7.h ****  */
  53:Drivers/CMSIS/Include/core_cm7.h **** 
  54:Drivers/CMSIS/Include/core_cm7.h **** 
  55:Drivers/CMSIS/Include/core_cm7.h **** /*******************************************************************************
  56:Drivers/CMSIS/Include/core_cm7.h ****  *                 CMSIS definitions
  57:Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
  58:Drivers/CMSIS/Include/core_cm7.h **** /**
  59:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup Cortex_M7
  60:Drivers/CMSIS/Include/core_cm7.h ****   @{
  61:Drivers/CMSIS/Include/core_cm7.h ****  */
  62:Drivers/CMSIS/Include/core_cm7.h **** 
  63:Drivers/CMSIS/Include/core_cm7.h **** #include "cmsis_version.h"
  64:Drivers/CMSIS/Include/core_cm7.h **** 
  65:Drivers/CMSIS/Include/core_cm7.h **** /* CMSIS CM7 definitions */
  66:Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)                  /*!< \deprecated [31:1
  67:Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION_SUB   ( __CM_CMSIS_VERSION_SUB)                  /*!< \deprecated [15:0
  68:Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION       ((__CM7_CMSIS_VERSION_MAIN << 16U) | \
  69:Drivers/CMSIS/Include/core_cm7.h ****                                     __CM7_CMSIS_VERSION_SUB           )      /*!< \deprecated CMSIS
  70:Drivers/CMSIS/Include/core_cm7.h **** 
  71:Drivers/CMSIS/Include/core_cm7.h **** #define __CORTEX_M                (7U)                                       /*!< Cortex-M Core */
  72:Drivers/CMSIS/Include/core_cm7.h **** 
  73:Drivers/CMSIS/Include/core_cm7.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:Drivers/CMSIS/Include/core_cm7.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:Drivers/CMSIS/Include/core_cm7.h **** */
  76:Drivers/CMSIS/Include/core_cm7.h **** #if defined ( __CC_ARM )
  77:Drivers/CMSIS/Include/core_cm7.h ****   #if defined __TARGET_FPU_VFP
  78:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
  80:Drivers/CMSIS/Include/core_cm7.h ****     #else
  81:Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
  83:Drivers/CMSIS/Include/core_cm7.h ****     #endif
  84:Drivers/CMSIS/Include/core_cm7.h ****   #else
  85:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
  86:Drivers/CMSIS/Include/core_cm7.h ****   #endif
  87:Drivers/CMSIS/Include/core_cm7.h **** 
  88:Drivers/CMSIS/Include/core_cm7.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:Drivers/CMSIS/Include/core_cm7.h ****   #if defined __ARM_FP
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 3


  90:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
  92:Drivers/CMSIS/Include/core_cm7.h ****     #else
  93:Drivers/CMSIS/Include/core_cm7.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
  95:Drivers/CMSIS/Include/core_cm7.h ****     #endif
  96:Drivers/CMSIS/Include/core_cm7.h ****   #else
  97:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
  98:Drivers/CMSIS/Include/core_cm7.h ****   #endif
  99:Drivers/CMSIS/Include/core_cm7.h **** 
 100:Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __GNUC__ )
 101:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 104:Drivers/CMSIS/Include/core_cm7.h ****     #else
 105:Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 107:Drivers/CMSIS/Include/core_cm7.h ****     #endif
 108:Drivers/CMSIS/Include/core_cm7.h ****   #else
 109:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 110:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 111:Drivers/CMSIS/Include/core_cm7.h **** 
 112:Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __ICCARM__ )
 113:Drivers/CMSIS/Include/core_cm7.h ****   #if defined __ARMVFP__
 114:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 116:Drivers/CMSIS/Include/core_cm7.h ****     #else
 117:Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 119:Drivers/CMSIS/Include/core_cm7.h ****     #endif
 120:Drivers/CMSIS/Include/core_cm7.h ****   #else
 121:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 122:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 123:Drivers/CMSIS/Include/core_cm7.h **** 
 124:Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __TI_ARM__ )
 125:Drivers/CMSIS/Include/core_cm7.h ****   #if defined __TI_VFP_SUPPORT__
 126:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 128:Drivers/CMSIS/Include/core_cm7.h ****     #else
 129:Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 131:Drivers/CMSIS/Include/core_cm7.h ****     #endif
 132:Drivers/CMSIS/Include/core_cm7.h ****   #else
 133:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 134:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 135:Drivers/CMSIS/Include/core_cm7.h **** 
 136:Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __TASKING__ )
 137:Drivers/CMSIS/Include/core_cm7.h ****   #if defined __FPU_VFP__
 138:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 140:Drivers/CMSIS/Include/core_cm7.h ****     #else
 141:Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 143:Drivers/CMSIS/Include/core_cm7.h ****     #endif
 144:Drivers/CMSIS/Include/core_cm7.h ****   #else
 145:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 146:Drivers/CMSIS/Include/core_cm7.h ****   #endif
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 4


 147:Drivers/CMSIS/Include/core_cm7.h **** 
 148:Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __CSMC__ )
 149:Drivers/CMSIS/Include/core_cm7.h ****   #if ( __CSMC__ & 0x400U)
 150:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 152:Drivers/CMSIS/Include/core_cm7.h ****     #else
 153:Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 155:Drivers/CMSIS/Include/core_cm7.h ****     #endif
 156:Drivers/CMSIS/Include/core_cm7.h ****   #else
 157:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 158:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 159:Drivers/CMSIS/Include/core_cm7.h **** 
 160:Drivers/CMSIS/Include/core_cm7.h **** #endif
 161:Drivers/CMSIS/Include/core_cm7.h **** 
 162:Drivers/CMSIS/Include/core_cm7.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:Drivers/CMSIS/Include/core_cm7.h **** 
 164:Drivers/CMSIS/Include/core_cm7.h **** 
 165:Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 166:Drivers/CMSIS/Include/core_cm7.h **** }
 167:Drivers/CMSIS/Include/core_cm7.h **** #endif
 168:Drivers/CMSIS/Include/core_cm7.h **** 
 169:Drivers/CMSIS/Include/core_cm7.h **** #endif /* __CORE_CM7_H_GENERIC */
 170:Drivers/CMSIS/Include/core_cm7.h **** 
 171:Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CMSIS_GENERIC
 172:Drivers/CMSIS/Include/core_cm7.h **** 
 173:Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CORE_CM7_H_DEPENDANT
 174:Drivers/CMSIS/Include/core_cm7.h **** #define __CORE_CM7_H_DEPENDANT
 175:Drivers/CMSIS/Include/core_cm7.h **** 
 176:Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 177:Drivers/CMSIS/Include/core_cm7.h ****  extern "C" {
 178:Drivers/CMSIS/Include/core_cm7.h **** #endif
 179:Drivers/CMSIS/Include/core_cm7.h **** 
 180:Drivers/CMSIS/Include/core_cm7.h **** /* check device defines and use defaults */
 181:Drivers/CMSIS/Include/core_cm7.h **** #if defined __CHECK_DEVICE_DEFINES
 182:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __CM7_REV
 183:Drivers/CMSIS/Include/core_cm7.h ****     #define __CM7_REV               0x0000U
 184:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__CM7_REV not defined in device header file; using default!"
 185:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 186:Drivers/CMSIS/Include/core_cm7.h **** 
 187:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __FPU_PRESENT
 188:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_PRESENT             0U
 189:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 191:Drivers/CMSIS/Include/core_cm7.h **** 
 192:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __MPU_PRESENT
 193:Drivers/CMSIS/Include/core_cm7.h ****     #define __MPU_PRESENT             0U
 194:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 196:Drivers/CMSIS/Include/core_cm7.h **** 
 197:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __ICACHE_PRESENT
 198:Drivers/CMSIS/Include/core_cm7.h ****     #define __ICACHE_PRESENT          0U
 199:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__ICACHE_PRESENT not defined in device header file; using default!"
 200:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 201:Drivers/CMSIS/Include/core_cm7.h **** 
 202:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __DCACHE_PRESENT
 203:Drivers/CMSIS/Include/core_cm7.h ****     #define __DCACHE_PRESENT          0U
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 5


 204:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__DCACHE_PRESENT not defined in device header file; using default!"
 205:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 206:Drivers/CMSIS/Include/core_cm7.h **** 
 207:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __DTCM_PRESENT
 208:Drivers/CMSIS/Include/core_cm7.h ****     #define __DTCM_PRESENT            0U
 209:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__DTCM_PRESENT        not defined in device header file; using default!"
 210:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 211:Drivers/CMSIS/Include/core_cm7.h **** 
 212:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __NVIC_PRIO_BITS
 213:Drivers/CMSIS/Include/core_cm7.h ****     #define __NVIC_PRIO_BITS          3U
 214:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 215:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 216:Drivers/CMSIS/Include/core_cm7.h **** 
 217:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __Vendor_SysTickConfig
 218:Drivers/CMSIS/Include/core_cm7.h ****     #define __Vendor_SysTickConfig    0U
 219:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 220:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 221:Drivers/CMSIS/Include/core_cm7.h **** #endif
 222:Drivers/CMSIS/Include/core_cm7.h **** 
 223:Drivers/CMSIS/Include/core_cm7.h **** /* IO definitions (access restrictions to peripheral registers) */
 224:Drivers/CMSIS/Include/core_cm7.h **** /**
 225:Drivers/CMSIS/Include/core_cm7.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 226:Drivers/CMSIS/Include/core_cm7.h **** 
 227:Drivers/CMSIS/Include/core_cm7.h ****     <strong>IO Type Qualifiers</strong> are used
 228:Drivers/CMSIS/Include/core_cm7.h ****     \li to specify the access to peripheral variables.
 229:Drivers/CMSIS/Include/core_cm7.h ****     \li for automatic generation of peripheral register debug information.
 230:Drivers/CMSIS/Include/core_cm7.h **** */
 231:Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 232:Drivers/CMSIS/Include/core_cm7.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 233:Drivers/CMSIS/Include/core_cm7.h **** #else
 234:Drivers/CMSIS/Include/core_cm7.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 235:Drivers/CMSIS/Include/core_cm7.h **** #endif
 236:Drivers/CMSIS/Include/core_cm7.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 237:Drivers/CMSIS/Include/core_cm7.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 238:Drivers/CMSIS/Include/core_cm7.h **** 
 239:Drivers/CMSIS/Include/core_cm7.h **** /* following defines should be used for structure members */
 240:Drivers/CMSIS/Include/core_cm7.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 241:Drivers/CMSIS/Include/core_cm7.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 242:Drivers/CMSIS/Include/core_cm7.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 243:Drivers/CMSIS/Include/core_cm7.h **** 
 244:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group Cortex_M7 */
 245:Drivers/CMSIS/Include/core_cm7.h **** 
 246:Drivers/CMSIS/Include/core_cm7.h **** 
 247:Drivers/CMSIS/Include/core_cm7.h **** 
 248:Drivers/CMSIS/Include/core_cm7.h **** /*******************************************************************************
 249:Drivers/CMSIS/Include/core_cm7.h ****  *                 Register Abstraction
 250:Drivers/CMSIS/Include/core_cm7.h ****   Core Register contain:
 251:Drivers/CMSIS/Include/core_cm7.h ****   - Core Register
 252:Drivers/CMSIS/Include/core_cm7.h ****   - Core NVIC Register
 253:Drivers/CMSIS/Include/core_cm7.h ****   - Core SCB Register
 254:Drivers/CMSIS/Include/core_cm7.h ****   - Core SysTick Register
 255:Drivers/CMSIS/Include/core_cm7.h ****   - Core Debug Register
 256:Drivers/CMSIS/Include/core_cm7.h ****   - Core MPU Register
 257:Drivers/CMSIS/Include/core_cm7.h ****   - Core FPU Register
 258:Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
 259:Drivers/CMSIS/Include/core_cm7.h **** /**
 260:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 6


 261:Drivers/CMSIS/Include/core_cm7.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 262:Drivers/CMSIS/Include/core_cm7.h **** */
 263:Drivers/CMSIS/Include/core_cm7.h **** 
 264:Drivers/CMSIS/Include/core_cm7.h **** /**
 265:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
 266:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 267:Drivers/CMSIS/Include/core_cm7.h ****   \brief      Core Register type definitions.
 268:Drivers/CMSIS/Include/core_cm7.h ****   @{
 269:Drivers/CMSIS/Include/core_cm7.h ****  */
 270:Drivers/CMSIS/Include/core_cm7.h **** 
 271:Drivers/CMSIS/Include/core_cm7.h **** /**
 272:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 273:Drivers/CMSIS/Include/core_cm7.h ****  */
 274:Drivers/CMSIS/Include/core_cm7.h **** typedef union
 275:Drivers/CMSIS/Include/core_cm7.h **** {
 276:Drivers/CMSIS/Include/core_cm7.h ****   struct
 277:Drivers/CMSIS/Include/core_cm7.h ****   {
 278:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 279:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 280:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 281:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 282:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 283:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 284:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 285:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 286:Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 287:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 288:Drivers/CMSIS/Include/core_cm7.h **** } APSR_Type;
 289:Drivers/CMSIS/Include/core_cm7.h **** 
 290:Drivers/CMSIS/Include/core_cm7.h **** /* APSR Register Definitions */
 291:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 292:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 293:Drivers/CMSIS/Include/core_cm7.h **** 
 294:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 295:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 296:Drivers/CMSIS/Include/core_cm7.h **** 
 297:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 298:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 299:Drivers/CMSIS/Include/core_cm7.h **** 
 300:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 301:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 302:Drivers/CMSIS/Include/core_cm7.h **** 
 303:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 304:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 305:Drivers/CMSIS/Include/core_cm7.h **** 
 306:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 307:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 308:Drivers/CMSIS/Include/core_cm7.h **** 
 309:Drivers/CMSIS/Include/core_cm7.h **** 
 310:Drivers/CMSIS/Include/core_cm7.h **** /**
 311:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 312:Drivers/CMSIS/Include/core_cm7.h ****  */
 313:Drivers/CMSIS/Include/core_cm7.h **** typedef union
 314:Drivers/CMSIS/Include/core_cm7.h **** {
 315:Drivers/CMSIS/Include/core_cm7.h ****   struct
 316:Drivers/CMSIS/Include/core_cm7.h ****   {
 317:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 7


 318:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 319:Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 320:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 321:Drivers/CMSIS/Include/core_cm7.h **** } IPSR_Type;
 322:Drivers/CMSIS/Include/core_cm7.h **** 
 323:Drivers/CMSIS/Include/core_cm7.h **** /* IPSR Register Definitions */
 324:Drivers/CMSIS/Include/core_cm7.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 325:Drivers/CMSIS/Include/core_cm7.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 326:Drivers/CMSIS/Include/core_cm7.h **** 
 327:Drivers/CMSIS/Include/core_cm7.h **** 
 328:Drivers/CMSIS/Include/core_cm7.h **** /**
 329:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 330:Drivers/CMSIS/Include/core_cm7.h ****  */
 331:Drivers/CMSIS/Include/core_cm7.h **** typedef union
 332:Drivers/CMSIS/Include/core_cm7.h **** {
 333:Drivers/CMSIS/Include/core_cm7.h ****   struct
 334:Drivers/CMSIS/Include/core_cm7.h ****   {
 335:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 336:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 337:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 338:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 339:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 340:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 341:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 342:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 343:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 344:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 345:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 346:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 347:Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 348:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 349:Drivers/CMSIS/Include/core_cm7.h **** } xPSR_Type;
 350:Drivers/CMSIS/Include/core_cm7.h **** 
 351:Drivers/CMSIS/Include/core_cm7.h **** /* xPSR Register Definitions */
 352:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 353:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 354:Drivers/CMSIS/Include/core_cm7.h **** 
 355:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 356:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 357:Drivers/CMSIS/Include/core_cm7.h **** 
 358:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 359:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 360:Drivers/CMSIS/Include/core_cm7.h **** 
 361:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 362:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 363:Drivers/CMSIS/Include/core_cm7.h **** 
 364:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 365:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 366:Drivers/CMSIS/Include/core_cm7.h **** 
 367:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 368:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 369:Drivers/CMSIS/Include/core_cm7.h **** 
 370:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 371:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 372:Drivers/CMSIS/Include/core_cm7.h **** 
 373:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 374:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 8


 375:Drivers/CMSIS/Include/core_cm7.h **** 
 376:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 377:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 378:Drivers/CMSIS/Include/core_cm7.h **** 
 379:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 380:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 381:Drivers/CMSIS/Include/core_cm7.h **** 
 382:Drivers/CMSIS/Include/core_cm7.h **** 
 383:Drivers/CMSIS/Include/core_cm7.h **** /**
 384:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Control Registers (CONTROL).
 385:Drivers/CMSIS/Include/core_cm7.h ****  */
 386:Drivers/CMSIS/Include/core_cm7.h **** typedef union
 387:Drivers/CMSIS/Include/core_cm7.h **** {
 388:Drivers/CMSIS/Include/core_cm7.h ****   struct
 389:Drivers/CMSIS/Include/core_cm7.h ****   {
 390:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 391:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 392:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 393:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 394:Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 395:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 396:Drivers/CMSIS/Include/core_cm7.h **** } CONTROL_Type;
 397:Drivers/CMSIS/Include/core_cm7.h **** 
 398:Drivers/CMSIS/Include/core_cm7.h **** /* CONTROL Register Definitions */
 399:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 400:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 401:Drivers/CMSIS/Include/core_cm7.h **** 
 402:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 403:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 404:Drivers/CMSIS/Include/core_cm7.h **** 
 405:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 406:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 407:Drivers/CMSIS/Include/core_cm7.h **** 
 408:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_CORE */
 409:Drivers/CMSIS/Include/core_cm7.h **** 
 410:Drivers/CMSIS/Include/core_cm7.h **** 
 411:Drivers/CMSIS/Include/core_cm7.h **** /**
 412:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
 413:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 414:Drivers/CMSIS/Include/core_cm7.h ****   \brief      Type definitions for the NVIC Registers
 415:Drivers/CMSIS/Include/core_cm7.h ****   @{
 416:Drivers/CMSIS/Include/core_cm7.h ****  */
 417:Drivers/CMSIS/Include/core_cm7.h **** 
 418:Drivers/CMSIS/Include/core_cm7.h **** /**
 419:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 420:Drivers/CMSIS/Include/core_cm7.h ****  */
 421:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 422:Drivers/CMSIS/Include/core_cm7.h **** {
 423:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 424:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[24U];
 425:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 426:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[24U];
 427:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 428:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[24U];
 429:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 430:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[24U];
 431:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 9


 432:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[56U];
 433:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 434:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[644U];
 435:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 436:Drivers/CMSIS/Include/core_cm7.h **** }  NVIC_Type;
 437:Drivers/CMSIS/Include/core_cm7.h **** 
 438:Drivers/CMSIS/Include/core_cm7.h **** /* Software Triggered Interrupt Register Definitions */
 439:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 440:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 441:Drivers/CMSIS/Include/core_cm7.h **** 
 442:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_NVIC */
 443:Drivers/CMSIS/Include/core_cm7.h **** 
 444:Drivers/CMSIS/Include/core_cm7.h **** 
 445:Drivers/CMSIS/Include/core_cm7.h **** /**
 446:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 447:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 448:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Control Block Registers
 449:Drivers/CMSIS/Include/core_cm7.h ****   @{
 450:Drivers/CMSIS/Include/core_cm7.h ****  */
 451:Drivers/CMSIS/Include/core_cm7.h **** 
 452:Drivers/CMSIS/Include/core_cm7.h **** /**
 453:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Control Block (SCB).
 454:Drivers/CMSIS/Include/core_cm7.h ****  */
 455:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 456:Drivers/CMSIS/Include/core_cm7.h **** {
 457:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 458:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 459:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 460:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 461:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 462:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 463:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint8_t  SHPR[12U];              /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 464:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 465:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 466:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 467:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 468:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 469:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 470:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 471:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_PFR[2U];             /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 472:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_DFR;                 /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 473:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_AFR;                 /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 474:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_MFR[4U];             /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 475:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_ISAR[5U];            /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 476:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
 477:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CLIDR;                  /*!< Offset: 0x078 (R/ )  Cache Level ID register */
 478:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CTR;                    /*!< Offset: 0x07C (R/ )  Cache Type register */
 479:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CCSIDR;                 /*!< Offset: 0x080 (R/ )  Cache Size ID Register */
 480:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CSSELR;                 /*!< Offset: 0x084 (R/W)  Cache Size Selection Register */
 481:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 482:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[93U];
 483:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0x200 ( /W)  Software Triggered Interrupt Reg
 484:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[15U];
 485:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x240 (R/ )  Media and VFP Feature Register 0
 486:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x244 (R/ )  Media and VFP Feature Register 1
 487:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x248 (R/ )  Media and VFP Feature Register 2
 488:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[1U];
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 10


 489:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t ICIALLU;                /*!< Offset: 0x250 ( /W)  I-Cache Invalidate All to PoU */
 490:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED6[1U];
 491:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t ICIMVAU;                /*!< Offset: 0x258 ( /W)  I-Cache Invalidate by MVA to PoU
 492:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCIMVAC;                /*!< Offset: 0x25C ( /W)  D-Cache Invalidate by MVA to PoC
 493:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCISW;                  /*!< Offset: 0x260 ( /W)  D-Cache Invalidate by Set-way */
 494:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCMVAU;                /*!< Offset: 0x264 ( /W)  D-Cache Clean by MVA to PoU */
 495:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCMVAC;                /*!< Offset: 0x268 ( /W)  D-Cache Clean by MVA to PoC */
 496:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCSW;                  /*!< Offset: 0x26C ( /W)  D-Cache Clean by Set-way */
 497:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCIMVAC;               /*!< Offset: 0x270 ( /W)  D-Cache Clean and Invalidate by 
 498:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCISW;                 /*!< Offset: 0x274 ( /W)  D-Cache Clean and Invalidate by 
 499:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED7[6U];
 500:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ITCMCR;                 /*!< Offset: 0x290 (R/W)  Instruction Tightly-Coupled Memo
 501:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DTCMCR;                 /*!< Offset: 0x294 (R/W)  Data Tightly-Coupled Memory Cont
 502:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AHBPCR;                 /*!< Offset: 0x298 (R/W)  AHBP Control Register */
 503:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CACR;                   /*!< Offset: 0x29C (R/W)  L1 Cache Control Register */
 504:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AHBSCR;                 /*!< Offset: 0x2A0 (R/W)  AHB Slave Control Register */
 505:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED8[1U];
 506:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ABFSR;                  /*!< Offset: 0x2A8 (R/W)  Auxiliary Bus Fault Status Regis
 507:Drivers/CMSIS/Include/core_cm7.h **** } SCB_Type;
 508:Drivers/CMSIS/Include/core_cm7.h **** 
 509:Drivers/CMSIS/Include/core_cm7.h **** /* SCB CPUID Register Definitions */
 510:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 511:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 512:Drivers/CMSIS/Include/core_cm7.h **** 
 513:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 514:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 515:Drivers/CMSIS/Include/core_cm7.h **** 
 516:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 517:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 518:Drivers/CMSIS/Include/core_cm7.h **** 
 519:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 520:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 521:Drivers/CMSIS/Include/core_cm7.h **** 
 522:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 523:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 524:Drivers/CMSIS/Include/core_cm7.h **** 
 525:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Interrupt Control State Register Definitions */
 526:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 527:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 528:Drivers/CMSIS/Include/core_cm7.h **** 
 529:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 530:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 531:Drivers/CMSIS/Include/core_cm7.h **** 
 532:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 533:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 534:Drivers/CMSIS/Include/core_cm7.h **** 
 535:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 536:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 537:Drivers/CMSIS/Include/core_cm7.h **** 
 538:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 539:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 540:Drivers/CMSIS/Include/core_cm7.h **** 
 541:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 542:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 543:Drivers/CMSIS/Include/core_cm7.h **** 
 544:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 545:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 11


 546:Drivers/CMSIS/Include/core_cm7.h **** 
 547:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 548:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 549:Drivers/CMSIS/Include/core_cm7.h **** 
 550:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 551:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 552:Drivers/CMSIS/Include/core_cm7.h **** 
 553:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 554:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 555:Drivers/CMSIS/Include/core_cm7.h **** 
 556:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Vector Table Offset Register Definitions */
 557:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 558:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 559:Drivers/CMSIS/Include/core_cm7.h **** 
 560:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 561:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 562:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 563:Drivers/CMSIS/Include/core_cm7.h **** 
 564:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 565:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 566:Drivers/CMSIS/Include/core_cm7.h **** 
 567:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 568:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 569:Drivers/CMSIS/Include/core_cm7.h **** 
 570:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 571:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 572:Drivers/CMSIS/Include/core_cm7.h **** 
 573:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 574:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 575:Drivers/CMSIS/Include/core_cm7.h **** 
 576:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 577:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 578:Drivers/CMSIS/Include/core_cm7.h **** 
 579:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 580:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 581:Drivers/CMSIS/Include/core_cm7.h **** 
 582:Drivers/CMSIS/Include/core_cm7.h **** /* SCB System Control Register Definitions */
 583:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 584:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 585:Drivers/CMSIS/Include/core_cm7.h **** 
 586:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 587:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 588:Drivers/CMSIS/Include/core_cm7.h **** 
 589:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 590:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 591:Drivers/CMSIS/Include/core_cm7.h **** 
 592:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Configuration Control Register Definitions */
 593:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BP_Pos                      18U                                           /*!< SCB 
 594:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BP_Msk                     (1UL << SCB_CCR_BP_Pos)                        /*!< SCB 
 595:Drivers/CMSIS/Include/core_cm7.h **** 
 596:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_IC_Pos                      17U                                           /*!< SCB 
 597:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_IC_Msk                     (1UL << SCB_CCR_IC_Pos)                        /*!< SCB 
 598:Drivers/CMSIS/Include/core_cm7.h **** 
 599:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DC_Pos                      16U                                           /*!< SCB 
 600:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DC_Msk                     (1UL << SCB_CCR_DC_Pos)                        /*!< SCB 
 601:Drivers/CMSIS/Include/core_cm7.h **** 
 602:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 12


 603:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 604:Drivers/CMSIS/Include/core_cm7.h **** 
 605:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 606:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 607:Drivers/CMSIS/Include/core_cm7.h **** 
 608:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 609:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 610:Drivers/CMSIS/Include/core_cm7.h **** 
 611:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 612:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 613:Drivers/CMSIS/Include/core_cm7.h **** 
 614:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 615:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 616:Drivers/CMSIS/Include/core_cm7.h **** 
 617:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 618:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 619:Drivers/CMSIS/Include/core_cm7.h **** 
 620:Drivers/CMSIS/Include/core_cm7.h **** /* SCB System Handler Control and State Register Definitions */
 621:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 622:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 623:Drivers/CMSIS/Include/core_cm7.h **** 
 624:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 625:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 626:Drivers/CMSIS/Include/core_cm7.h **** 
 627:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 628:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 629:Drivers/CMSIS/Include/core_cm7.h **** 
 630:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 631:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 632:Drivers/CMSIS/Include/core_cm7.h **** 
 633:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 634:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 635:Drivers/CMSIS/Include/core_cm7.h **** 
 636:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 637:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 638:Drivers/CMSIS/Include/core_cm7.h **** 
 639:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 640:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 641:Drivers/CMSIS/Include/core_cm7.h **** 
 642:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 643:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 644:Drivers/CMSIS/Include/core_cm7.h **** 
 645:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 646:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 647:Drivers/CMSIS/Include/core_cm7.h **** 
 648:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 649:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 650:Drivers/CMSIS/Include/core_cm7.h **** 
 651:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 652:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 653:Drivers/CMSIS/Include/core_cm7.h **** 
 654:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 655:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 656:Drivers/CMSIS/Include/core_cm7.h **** 
 657:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 658:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 659:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 13


 660:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 661:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 662:Drivers/CMSIS/Include/core_cm7.h **** 
 663:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Configurable Fault Status Register Definitions */
 664:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 665:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 666:Drivers/CMSIS/Include/core_cm7.h **** 
 667:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 668:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 669:Drivers/CMSIS/Include/core_cm7.h **** 
 670:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 671:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 672:Drivers/CMSIS/Include/core_cm7.h **** 
 673:Drivers/CMSIS/Include/core_cm7.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 674:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 675:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 676:Drivers/CMSIS/Include/core_cm7.h **** 
 677:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 678:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 679:Drivers/CMSIS/Include/core_cm7.h **** 
 680:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 681:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 682:Drivers/CMSIS/Include/core_cm7.h **** 
 683:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 684:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 685:Drivers/CMSIS/Include/core_cm7.h **** 
 686:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 687:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 688:Drivers/CMSIS/Include/core_cm7.h **** 
 689:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 690:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 691:Drivers/CMSIS/Include/core_cm7.h **** 
 692:Drivers/CMSIS/Include/core_cm7.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 693:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 694:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 695:Drivers/CMSIS/Include/core_cm7.h **** 
 696:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 697:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 698:Drivers/CMSIS/Include/core_cm7.h **** 
 699:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 700:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 701:Drivers/CMSIS/Include/core_cm7.h **** 
 702:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 703:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 704:Drivers/CMSIS/Include/core_cm7.h **** 
 705:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 706:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 707:Drivers/CMSIS/Include/core_cm7.h **** 
 708:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 709:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 710:Drivers/CMSIS/Include/core_cm7.h **** 
 711:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 712:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 713:Drivers/CMSIS/Include/core_cm7.h **** 
 714:Drivers/CMSIS/Include/core_cm7.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 715:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 716:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 14


 717:Drivers/CMSIS/Include/core_cm7.h **** 
 718:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 719:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 720:Drivers/CMSIS/Include/core_cm7.h **** 
 721:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 722:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 723:Drivers/CMSIS/Include/core_cm7.h **** 
 724:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 725:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 726:Drivers/CMSIS/Include/core_cm7.h **** 
 727:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 728:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 729:Drivers/CMSIS/Include/core_cm7.h **** 
 730:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 731:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 732:Drivers/CMSIS/Include/core_cm7.h **** 
 733:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Hard Fault Status Register Definitions */
 734:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 735:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 736:Drivers/CMSIS/Include/core_cm7.h **** 
 737:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 738:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 739:Drivers/CMSIS/Include/core_cm7.h **** 
 740:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 741:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 742:Drivers/CMSIS/Include/core_cm7.h **** 
 743:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Debug Fault Status Register Definitions */
 744:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 745:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 746:Drivers/CMSIS/Include/core_cm7.h **** 
 747:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 748:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 749:Drivers/CMSIS/Include/core_cm7.h **** 
 750:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 751:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 752:Drivers/CMSIS/Include/core_cm7.h **** 
 753:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 754:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 755:Drivers/CMSIS/Include/core_cm7.h **** 
 756:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 757:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 758:Drivers/CMSIS/Include/core_cm7.h **** 
 759:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Level ID Register Definitions */
 760:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOUU_Pos                 27U                                            /*!< SCB 
 761:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOUU_Msk                 (7UL << SCB_CLIDR_LOUU_Pos)                    /*!< SCB 
 762:Drivers/CMSIS/Include/core_cm7.h **** 
 763:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOC_Pos                  24U                                            /*!< SCB 
 764:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOC_Msk                  (7UL << SCB_CLIDR_LOC_Pos)                     /*!< SCB 
 765:Drivers/CMSIS/Include/core_cm7.h **** 
 766:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Type Register Definitions */
 767:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_FORMAT_Pos                 29U                                            /*!< SCB 
 768:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_FORMAT_Msk                 (7UL << SCB_CTR_FORMAT_Pos)                    /*!< SCB 
 769:Drivers/CMSIS/Include/core_cm7.h **** 
 770:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_CWG_Pos                    24U                                            /*!< SCB 
 771:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_CWG_Msk                    (0xFUL << SCB_CTR_CWG_Pos)                     /*!< SCB 
 772:Drivers/CMSIS/Include/core_cm7.h **** 
 773:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_ERG_Pos                    20U                                            /*!< SCB 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 15


 774:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_ERG_Msk                    (0xFUL << SCB_CTR_ERG_Pos)                     /*!< SCB 
 775:Drivers/CMSIS/Include/core_cm7.h **** 
 776:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_DMINLINE_Pos               16U                                            /*!< SCB 
 777:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_DMINLINE_Msk               (0xFUL << SCB_CTR_DMINLINE_Pos)                /*!< SCB 
 778:Drivers/CMSIS/Include/core_cm7.h **** 
 779:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_IMINLINE_Pos                0U                                            /*!< SCB 
 780:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_IMINLINE_Msk               (0xFUL /*<< SCB_CTR_IMINLINE_Pos*/)            /*!< SCB 
 781:Drivers/CMSIS/Include/core_cm7.h **** 
 782:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Size ID Register Definitions */
 783:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WT_Pos                  31U                                            /*!< SCB 
 784:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WT_Msk                  (1UL << SCB_CCSIDR_WT_Pos)                     /*!< SCB 
 785:Drivers/CMSIS/Include/core_cm7.h **** 
 786:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WB_Pos                  30U                                            /*!< SCB 
 787:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WB_Msk                  (1UL << SCB_CCSIDR_WB_Pos)                     /*!< SCB 
 788:Drivers/CMSIS/Include/core_cm7.h **** 
 789:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_RA_Pos                  29U                                            /*!< SCB 
 790:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_RA_Msk                  (1UL << SCB_CCSIDR_RA_Pos)                     /*!< SCB 
 791:Drivers/CMSIS/Include/core_cm7.h **** 
 792:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WA_Pos                  28U                                            /*!< SCB 
 793:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WA_Msk                  (1UL << SCB_CCSIDR_WA_Pos)                     /*!< SCB 
 794:Drivers/CMSIS/Include/core_cm7.h **** 
 795:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_NUMSETS_Pos             13U                                            /*!< SCB 
 796:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_NUMSETS_Msk             (0x7FFFUL << SCB_CCSIDR_NUMSETS_Pos)           /*!< SCB 
 797:Drivers/CMSIS/Include/core_cm7.h **** 
 798:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Pos        3U                                            /*!< SCB 
 799:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Msk       (0x3FFUL << SCB_CCSIDR_ASSOCIATIVITY_Pos)      /*!< SCB 
 800:Drivers/CMSIS/Include/core_cm7.h **** 
 801:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_LINESIZE_Pos             0U                                            /*!< SCB 
 802:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_LINESIZE_Msk            (7UL /*<< SCB_CCSIDR_LINESIZE_Pos*/)           /*!< SCB 
 803:Drivers/CMSIS/Include/core_cm7.h **** 
 804:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Size Selection Register Definitions */
 805:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_LEVEL_Pos                1U                                            /*!< SCB 
 806:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_LEVEL_Msk               (7UL << SCB_CSSELR_LEVEL_Pos)                  /*!< SCB 
 807:Drivers/CMSIS/Include/core_cm7.h **** 
 808:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_IND_Pos                  0U                                            /*!< SCB 
 809:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_IND_Msk                 (1UL /*<< SCB_CSSELR_IND_Pos*/)                /*!< SCB 
 810:Drivers/CMSIS/Include/core_cm7.h **** 
 811:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Software Triggered Interrupt Register Definitions */
 812:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_STIR_INTID_Pos                  0U                                            /*!< SCB 
 813:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_STIR_INTID_Msk                 (0x1FFUL /*<< SCB_STIR_INTID_Pos*/)            /*!< SCB 
 814:Drivers/CMSIS/Include/core_cm7.h **** 
 815:Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Invalidate by Set-way Register Definitions */
 816:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_WAY_Pos                  30U                                            /*!< SCB 
 817:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_WAY_Msk                  (3UL << SCB_DCISW_WAY_Pos)                     /*!< SCB 
 818:Drivers/CMSIS/Include/core_cm7.h **** 
 819:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_SET_Pos                   5U                                            /*!< SCB 
 820:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_SET_Msk                  (0x1FFUL << SCB_DCISW_SET_Pos)                 /*!< SCB 
 821:Drivers/CMSIS/Include/core_cm7.h **** 
 822:Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Clean by Set-way Register Definitions */
 823:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_WAY_Pos                  30U                                            /*!< SCB 
 824:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_WAY_Msk                  (3UL << SCB_DCCSW_WAY_Pos)                     /*!< SCB 
 825:Drivers/CMSIS/Include/core_cm7.h **** 
 826:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_SET_Pos                   5U                                            /*!< SCB 
 827:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_SET_Msk                  (0x1FFUL << SCB_DCCSW_SET_Pos)                 /*!< SCB 
 828:Drivers/CMSIS/Include/core_cm7.h **** 
 829:Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Clean and Invalidate by Set-way Register Definitions */
 830:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_WAY_Pos                 30U                                            /*!< SCB 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 16


 831:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_WAY_Msk                 (3UL << SCB_DCCISW_WAY_Pos)                    /*!< SCB 
 832:Drivers/CMSIS/Include/core_cm7.h **** 
 833:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_SET_Pos                  5U                                            /*!< SCB 
 834:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_SET_Msk                 (0x1FFUL << SCB_DCCISW_SET_Pos)                /*!< SCB 
 835:Drivers/CMSIS/Include/core_cm7.h **** 
 836:Drivers/CMSIS/Include/core_cm7.h **** /* Instruction Tightly-Coupled Memory Control Register Definitions */
 837:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_SZ_Pos                   3U                                            /*!< SCB 
 838:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_SZ_Msk                  (0xFUL << SCB_ITCMCR_SZ_Pos)                   /*!< SCB 
 839:Drivers/CMSIS/Include/core_cm7.h **** 
 840:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RETEN_Pos                2U                                            /*!< SCB 
 841:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RETEN_Msk               (1UL << SCB_ITCMCR_RETEN_Pos)                  /*!< SCB 
 842:Drivers/CMSIS/Include/core_cm7.h **** 
 843:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RMW_Pos                  1U                                            /*!< SCB 
 844:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RMW_Msk                 (1UL << SCB_ITCMCR_RMW_Pos)                    /*!< SCB 
 845:Drivers/CMSIS/Include/core_cm7.h **** 
 846:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_EN_Pos                   0U                                            /*!< SCB 
 847:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_EN_Msk                  (1UL /*<< SCB_ITCMCR_EN_Pos*/)                 /*!< SCB 
 848:Drivers/CMSIS/Include/core_cm7.h **** 
 849:Drivers/CMSIS/Include/core_cm7.h **** /* Data Tightly-Coupled Memory Control Register Definitions */
 850:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_SZ_Pos                   3U                                            /*!< SCB 
 851:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_SZ_Msk                  (0xFUL << SCB_DTCMCR_SZ_Pos)                   /*!< SCB 
 852:Drivers/CMSIS/Include/core_cm7.h **** 
 853:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RETEN_Pos                2U                                            /*!< SCB 
 854:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RETEN_Msk               (1UL << SCB_DTCMCR_RETEN_Pos)                   /*!< SCB
 855:Drivers/CMSIS/Include/core_cm7.h **** 
 856:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RMW_Pos                  1U                                            /*!< SCB 
 857:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RMW_Msk                 (1UL << SCB_DTCMCR_RMW_Pos)                    /*!< SCB 
 858:Drivers/CMSIS/Include/core_cm7.h **** 
 859:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_EN_Pos                   0U                                            /*!< SCB 
 860:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_EN_Msk                  (1UL /*<< SCB_DTCMCR_EN_Pos*/)                 /*!< SCB 
 861:Drivers/CMSIS/Include/core_cm7.h **** 
 862:Drivers/CMSIS/Include/core_cm7.h **** /* AHBP Control Register Definitions */
 863:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_SZ_Pos                   1U                                            /*!< SCB 
 864:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_SZ_Msk                  (7UL << SCB_AHBPCR_SZ_Pos)                     /*!< SCB 
 865:Drivers/CMSIS/Include/core_cm7.h **** 
 866:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_EN_Pos                   0U                                            /*!< SCB 
 867:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_EN_Msk                  (1UL /*<< SCB_AHBPCR_EN_Pos*/)                 /*!< SCB 
 868:Drivers/CMSIS/Include/core_cm7.h **** 
 869:Drivers/CMSIS/Include/core_cm7.h **** /* L1 Cache Control Register Definitions */
 870:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_FORCEWT_Pos                2U                                            /*!< SCB 
 871:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_FORCEWT_Msk               (1UL << SCB_CACR_FORCEWT_Pos)                  /*!< SCB 
 872:Drivers/CMSIS/Include/core_cm7.h **** 
 873:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_ECCEN_Pos                  1U                                            /*!< SCB 
 874:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_ECCEN_Msk                 (1UL << SCB_CACR_ECCEN_Pos)                    /*!< SCB 
 875:Drivers/CMSIS/Include/core_cm7.h **** 
 876:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_SIWT_Pos                   0U                                            /*!< SCB 
 877:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_SIWT_Msk                  (1UL /*<< SCB_CACR_SIWT_Pos*/)                 /*!< SCB 
 878:Drivers/CMSIS/Include/core_cm7.h **** 
 879:Drivers/CMSIS/Include/core_cm7.h **** /* AHBS Control Register Definitions */
 880:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_INITCOUNT_Pos           11U                                            /*!< SCB 
 881:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_INITCOUNT_Msk           (0x1FUL << SCB_AHBPCR_INITCOUNT_Pos)           /*!< SCB 
 882:Drivers/CMSIS/Include/core_cm7.h **** 
 883:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_TPRI_Pos                 2U                                            /*!< SCB 
 884:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_TPRI_Msk                (0x1FFUL << SCB_AHBPCR_TPRI_Pos)               /*!< SCB 
 885:Drivers/CMSIS/Include/core_cm7.h **** 
 886:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_CTL_Pos                  0U                                            /*!< SCB 
 887:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_CTL_Msk                 (3UL /*<< SCB_AHBPCR_CTL_Pos*/)                /*!< SCB 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 17


 888:Drivers/CMSIS/Include/core_cm7.h **** 
 889:Drivers/CMSIS/Include/core_cm7.h **** /* Auxiliary Bus Fault Status Register Definitions */
 890:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIMTYPE_Pos              8U                                            /*!< SCB 
 891:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIMTYPE_Msk             (3UL << SCB_ABFSR_AXIMTYPE_Pos)                /*!< SCB 
 892:Drivers/CMSIS/Include/core_cm7.h **** 
 893:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_EPPB_Pos                  4U                                            /*!< SCB 
 894:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_EPPB_Msk                 (1UL << SCB_ABFSR_EPPB_Pos)                    /*!< SCB 
 895:Drivers/CMSIS/Include/core_cm7.h **** 
 896:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIM_Pos                  3U                                            /*!< SCB 
 897:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIM_Msk                 (1UL << SCB_ABFSR_AXIM_Pos)                    /*!< SCB 
 898:Drivers/CMSIS/Include/core_cm7.h **** 
 899:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AHBP_Pos                  2U                                            /*!< SCB 
 900:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AHBP_Msk                 (1UL << SCB_ABFSR_AHBP_Pos)                    /*!< SCB 
 901:Drivers/CMSIS/Include/core_cm7.h **** 
 902:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_DTCM_Pos                  1U                                            /*!< SCB 
 903:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_DTCM_Msk                 (1UL << SCB_ABFSR_DTCM_Pos)                    /*!< SCB 
 904:Drivers/CMSIS/Include/core_cm7.h **** 
 905:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_ITCM_Pos                  0U                                            /*!< SCB 
 906:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_ITCM_Msk                 (1UL /*<< SCB_ABFSR_ITCM_Pos*/)                /*!< SCB 
 907:Drivers/CMSIS/Include/core_cm7.h **** 
 908:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SCB */
 909:Drivers/CMSIS/Include/core_cm7.h **** 
 910:Drivers/CMSIS/Include/core_cm7.h **** 
 911:Drivers/CMSIS/Include/core_cm7.h **** /**
 912:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 913:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 914:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 915:Drivers/CMSIS/Include/core_cm7.h ****   @{
 916:Drivers/CMSIS/Include/core_cm7.h ****  */
 917:Drivers/CMSIS/Include/core_cm7.h **** 
 918:Drivers/CMSIS/Include/core_cm7.h **** /**
 919:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 920:Drivers/CMSIS/Include/core_cm7.h ****  */
 921:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 922:Drivers/CMSIS/Include/core_cm7.h **** {
 923:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
 924:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 925:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 926:Drivers/CMSIS/Include/core_cm7.h **** } SCnSCB_Type;
 927:Drivers/CMSIS/Include/core_cm7.h **** 
 928:Drivers/CMSIS/Include/core_cm7.h **** /* Interrupt Controller Type Register Definitions */
 929:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 930:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 931:Drivers/CMSIS/Include/core_cm7.h **** 
 932:Drivers/CMSIS/Include/core_cm7.h **** /* Auxiliary Control Register Definitions */
 933:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISDYNADD_Pos         26U                                         /*!< ACTLR: 
 934:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISDYNADD_Msk         (1UL << SCnSCB_ACTLR_DISDYNADD_Pos)         /*!< ACTLR: 
 935:Drivers/CMSIS/Include/core_cm7.h **** 
 936:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISISSCH1_Pos         21U                                         /*!< ACTLR: 
 937:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISISSCH1_Msk         (0x1FUL << SCnSCB_ACTLR_DISISSCH1_Pos)      /*!< ACTLR: 
 938:Drivers/CMSIS/Include/core_cm7.h **** 
 939:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISDI_Pos             16U                                         /*!< ACTLR: 
 940:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISDI_Msk             (0x1FUL << SCnSCB_ACTLR_DISDI_Pos)          /*!< ACTLR: 
 941:Drivers/CMSIS/Include/core_cm7.h **** 
 942:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISCRITAXIRUR_Pos     15U                                         /*!< ACTLR: 
 943:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISCRITAXIRUR_Msk     (1UL << SCnSCB_ACTLR_DISCRITAXIRUR_Pos)     /*!< ACTLR: 
 944:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 18


 945:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISBTACALLOC_Pos      14U                                         /*!< ACTLR: 
 946:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISBTACALLOC_Msk      (1UL << SCnSCB_ACTLR_DISBTACALLOC_Pos)      /*!< ACTLR: 
 947:Drivers/CMSIS/Include/core_cm7.h **** 
 948:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISBTACREAD_Pos       13U                                         /*!< ACTLR: 
 949:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISBTACREAD_Msk       (1UL << SCnSCB_ACTLR_DISBTACREAD_Pos)       /*!< ACTLR: 
 950:Drivers/CMSIS/Include/core_cm7.h **** 
 951:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISITMATBFLUSH_Pos    12U                                         /*!< ACTLR: 
 952:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISITMATBFLUSH_Msk    (1UL << SCnSCB_ACTLR_DISITMATBFLUSH_Pos)    /*!< ACTLR: 
 953:Drivers/CMSIS/Include/core_cm7.h **** 
 954:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISRAMODE_Pos         11U                                         /*!< ACTLR: 
 955:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISRAMODE_Msk         (1UL << SCnSCB_ACTLR_DISRAMODE_Pos)         /*!< ACTLR: 
 956:Drivers/CMSIS/Include/core_cm7.h **** 
 957:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_FPEXCODIS_Pos         10U                                         /*!< ACTLR: 
 958:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_FPEXCODIS_Msk         (1UL << SCnSCB_ACTLR_FPEXCODIS_Pos)         /*!< ACTLR: 
 959:Drivers/CMSIS/Include/core_cm7.h **** 
 960:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 961:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 962:Drivers/CMSIS/Include/core_cm7.h **** 
 963:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 964:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 965:Drivers/CMSIS/Include/core_cm7.h **** 
 966:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SCnotSCB */
 967:Drivers/CMSIS/Include/core_cm7.h **** 
 968:Drivers/CMSIS/Include/core_cm7.h **** 
 969:Drivers/CMSIS/Include/core_cm7.h **** /**
 970:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 971:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 972:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Timer Registers.
 973:Drivers/CMSIS/Include/core_cm7.h ****   @{
 974:Drivers/CMSIS/Include/core_cm7.h ****  */
 975:Drivers/CMSIS/Include/core_cm7.h **** 
 976:Drivers/CMSIS/Include/core_cm7.h **** /**
 977:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Timer (SysTick).
 978:Drivers/CMSIS/Include/core_cm7.h ****  */
 979:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 980:Drivers/CMSIS/Include/core_cm7.h **** {
 981:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 982:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 983:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 984:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 985:Drivers/CMSIS/Include/core_cm7.h **** } SysTick_Type;
 986:Drivers/CMSIS/Include/core_cm7.h **** 
 987:Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Control / Status Register Definitions */
 988:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 989:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 990:Drivers/CMSIS/Include/core_cm7.h **** 
 991:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 992:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 993:Drivers/CMSIS/Include/core_cm7.h **** 
 994:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 995:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 996:Drivers/CMSIS/Include/core_cm7.h **** 
 997:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 998:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 999:Drivers/CMSIS/Include/core_cm7.h **** 
1000:Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Reload Register Definitions */
1001:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 19


1002:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
1003:Drivers/CMSIS/Include/core_cm7.h **** 
1004:Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Current Register Definitions */
1005:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
1006:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
1007:Drivers/CMSIS/Include/core_cm7.h **** 
1008:Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Calibration Register Definitions */
1009:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
1010:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
1011:Drivers/CMSIS/Include/core_cm7.h **** 
1012:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
1013:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
1014:Drivers/CMSIS/Include/core_cm7.h **** 
1015:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
1016:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
1017:Drivers/CMSIS/Include/core_cm7.h **** 
1018:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SysTick */
1019:Drivers/CMSIS/Include/core_cm7.h **** 
1020:Drivers/CMSIS/Include/core_cm7.h **** 
1021:Drivers/CMSIS/Include/core_cm7.h **** /**
1022:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1023:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
1024:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
1025:Drivers/CMSIS/Include/core_cm7.h ****   @{
1026:Drivers/CMSIS/Include/core_cm7.h ****  */
1027:Drivers/CMSIS/Include/core_cm7.h **** 
1028:Drivers/CMSIS/Include/core_cm7.h **** /**
1029:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
1030:Drivers/CMSIS/Include/core_cm7.h ****  */
1031:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1032:Drivers/CMSIS/Include/core_cm7.h **** {
1033:Drivers/CMSIS/Include/core_cm7.h ****   __OM  union
1034:Drivers/CMSIS/Include/core_cm7.h ****   {
1035:Drivers/CMSIS/Include/core_cm7.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
1036:Drivers/CMSIS/Include/core_cm7.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
1037:Drivers/CMSIS/Include/core_cm7.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
1038:Drivers/CMSIS/Include/core_cm7.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
1039:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[864U];
1040:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
1041:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[15U];
1042:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
1043:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[15U];
1044:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
1045:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[32U];
1046:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[43U];
1047:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
1048:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
1049:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[6U];
1050:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
1051:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
1052:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
1053:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
1054:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
1055:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
1056:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
1057:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
1058:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 20


1059:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
1060:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
1061:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
1062:Drivers/CMSIS/Include/core_cm7.h **** } ITM_Type;
1063:Drivers/CMSIS/Include/core_cm7.h **** 
1064:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Trace Privilege Register Definitions */
1065:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
1066:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
1067:Drivers/CMSIS/Include/core_cm7.h **** 
1068:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Trace Control Register Definitions */
1069:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
1070:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
1071:Drivers/CMSIS/Include/core_cm7.h **** 
1072:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
1073:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
1074:Drivers/CMSIS/Include/core_cm7.h **** 
1075:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
1076:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
1077:Drivers/CMSIS/Include/core_cm7.h **** 
1078:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
1079:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
1080:Drivers/CMSIS/Include/core_cm7.h **** 
1081:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
1082:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
1083:Drivers/CMSIS/Include/core_cm7.h **** 
1084:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
1085:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
1086:Drivers/CMSIS/Include/core_cm7.h **** 
1087:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
1088:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
1089:Drivers/CMSIS/Include/core_cm7.h **** 
1090:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
1091:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
1092:Drivers/CMSIS/Include/core_cm7.h **** 
1093:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
1094:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
1095:Drivers/CMSIS/Include/core_cm7.h **** 
1096:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Lock Status Register Definitions */
1097:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
1098:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
1099:Drivers/CMSIS/Include/core_cm7.h **** 
1100:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
1101:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
1102:Drivers/CMSIS/Include/core_cm7.h **** 
1103:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
1104:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
1105:Drivers/CMSIS/Include/core_cm7.h **** 
1106:Drivers/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_ITM */
1107:Drivers/CMSIS/Include/core_cm7.h **** 
1108:Drivers/CMSIS/Include/core_cm7.h **** 
1109:Drivers/CMSIS/Include/core_cm7.h **** /**
1110:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1111:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
1112:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
1113:Drivers/CMSIS/Include/core_cm7.h ****   @{
1114:Drivers/CMSIS/Include/core_cm7.h ****  */
1115:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 21


1116:Drivers/CMSIS/Include/core_cm7.h **** /**
1117:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
1118:Drivers/CMSIS/Include/core_cm7.h ****  */
1119:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1120:Drivers/CMSIS/Include/core_cm7.h **** {
1121:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
1122:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
1123:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
1124:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
1125:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
1126:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
1127:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
1128:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
1129:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
1130:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
1131:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
1132:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
1133:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
1134:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
1135:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
1136:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[1U];
1137:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
1138:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
1139:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
1140:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[1U];
1141:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
1142:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
1143:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
1144:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[981U];
1145:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 (  W)  Lock Access Register */
1146:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R  )  Lock Status Register */
1147:Drivers/CMSIS/Include/core_cm7.h **** } DWT_Type;
1148:Drivers/CMSIS/Include/core_cm7.h **** 
1149:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Control Register Definitions */
1150:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
1151:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
1152:Drivers/CMSIS/Include/core_cm7.h **** 
1153:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
1154:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
1155:Drivers/CMSIS/Include/core_cm7.h **** 
1156:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
1157:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
1158:Drivers/CMSIS/Include/core_cm7.h **** 
1159:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
1160:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
1161:Drivers/CMSIS/Include/core_cm7.h **** 
1162:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
1163:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
1164:Drivers/CMSIS/Include/core_cm7.h **** 
1165:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
1166:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
1167:Drivers/CMSIS/Include/core_cm7.h **** 
1168:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
1169:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
1170:Drivers/CMSIS/Include/core_cm7.h **** 
1171:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
1172:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 22


1173:Drivers/CMSIS/Include/core_cm7.h **** 
1174:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
1175:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
1176:Drivers/CMSIS/Include/core_cm7.h **** 
1177:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
1178:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
1179:Drivers/CMSIS/Include/core_cm7.h **** 
1180:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
1181:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
1182:Drivers/CMSIS/Include/core_cm7.h **** 
1183:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
1184:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
1185:Drivers/CMSIS/Include/core_cm7.h **** 
1186:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
1187:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
1188:Drivers/CMSIS/Include/core_cm7.h **** 
1189:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
1190:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
1191:Drivers/CMSIS/Include/core_cm7.h **** 
1192:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
1193:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
1194:Drivers/CMSIS/Include/core_cm7.h **** 
1195:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
1196:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
1197:Drivers/CMSIS/Include/core_cm7.h **** 
1198:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
1199:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
1200:Drivers/CMSIS/Include/core_cm7.h **** 
1201:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
1202:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
1203:Drivers/CMSIS/Include/core_cm7.h **** 
1204:Drivers/CMSIS/Include/core_cm7.h **** /* DWT CPI Count Register Definitions */
1205:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
1206:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
1207:Drivers/CMSIS/Include/core_cm7.h **** 
1208:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Exception Overhead Count Register Definitions */
1209:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
1210:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
1211:Drivers/CMSIS/Include/core_cm7.h **** 
1212:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Sleep Count Register Definitions */
1213:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
1214:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
1215:Drivers/CMSIS/Include/core_cm7.h **** 
1216:Drivers/CMSIS/Include/core_cm7.h **** /* DWT LSU Count Register Definitions */
1217:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
1218:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
1219:Drivers/CMSIS/Include/core_cm7.h **** 
1220:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Folded-instruction Count Register Definitions */
1221:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
1222:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1223:Drivers/CMSIS/Include/core_cm7.h **** 
1224:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Comparator Mask Register Definitions */
1225:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1226:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1227:Drivers/CMSIS/Include/core_cm7.h **** 
1228:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Comparator Function Register Definitions */
1229:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 23


1230:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1231:Drivers/CMSIS/Include/core_cm7.h **** 
1232:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1233:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1234:Drivers/CMSIS/Include/core_cm7.h **** 
1235:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1236:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1237:Drivers/CMSIS/Include/core_cm7.h **** 
1238:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1239:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1240:Drivers/CMSIS/Include/core_cm7.h **** 
1241:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1242:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1243:Drivers/CMSIS/Include/core_cm7.h **** 
1244:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1245:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1246:Drivers/CMSIS/Include/core_cm7.h **** 
1247:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1248:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1249:Drivers/CMSIS/Include/core_cm7.h **** 
1250:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1251:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1252:Drivers/CMSIS/Include/core_cm7.h **** 
1253:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1254:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1255:Drivers/CMSIS/Include/core_cm7.h **** 
1256:Drivers/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_DWT */
1257:Drivers/CMSIS/Include/core_cm7.h **** 
1258:Drivers/CMSIS/Include/core_cm7.h **** 
1259:Drivers/CMSIS/Include/core_cm7.h **** /**
1260:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1261:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1262:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1263:Drivers/CMSIS/Include/core_cm7.h ****   @{
1264:Drivers/CMSIS/Include/core_cm7.h ****  */
1265:Drivers/CMSIS/Include/core_cm7.h **** 
1266:Drivers/CMSIS/Include/core_cm7.h **** /**
1267:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1268:Drivers/CMSIS/Include/core_cm7.h ****  */
1269:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1270:Drivers/CMSIS/Include/core_cm7.h **** {
1271:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1272:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1273:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[2U];
1274:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1275:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[55U];
1276:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1277:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[131U];
1278:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1279:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1280:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1281:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[759U];
1282:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1283:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1284:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1285:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[1U];
1286:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 24


1287:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1288:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1289:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[39U];
1290:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1291:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1292:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED7[8U];
1293:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1294:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1295:Drivers/CMSIS/Include/core_cm7.h **** } TPI_Type;
1296:Drivers/CMSIS/Include/core_cm7.h **** 
1297:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1298:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1299:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1300:Drivers/CMSIS/Include/core_cm7.h **** 
1301:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Selected Pin Protocol Register Definitions */
1302:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1303:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1304:Drivers/CMSIS/Include/core_cm7.h **** 
1305:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Formatter and Flush Status Register Definitions */
1306:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1307:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1308:Drivers/CMSIS/Include/core_cm7.h **** 
1309:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1310:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1311:Drivers/CMSIS/Include/core_cm7.h **** 
1312:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1313:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1314:Drivers/CMSIS/Include/core_cm7.h **** 
1315:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1316:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1317:Drivers/CMSIS/Include/core_cm7.h **** 
1318:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Formatter and Flush Control Register Definitions */
1319:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1320:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1321:Drivers/CMSIS/Include/core_cm7.h **** 
1322:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1323:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1324:Drivers/CMSIS/Include/core_cm7.h **** 
1325:Drivers/CMSIS/Include/core_cm7.h **** /* TPI TRIGGER Register Definitions */
1326:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1327:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1328:Drivers/CMSIS/Include/core_cm7.h **** 
1329:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1330:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1331:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1332:Drivers/CMSIS/Include/core_cm7.h **** 
1333:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1334:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1335:Drivers/CMSIS/Include/core_cm7.h **** 
1336:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1337:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1338:Drivers/CMSIS/Include/core_cm7.h **** 
1339:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1340:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1341:Drivers/CMSIS/Include/core_cm7.h **** 
1342:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1343:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 25


1344:Drivers/CMSIS/Include/core_cm7.h **** 
1345:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1346:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1347:Drivers/CMSIS/Include/core_cm7.h **** 
1348:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1349:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1350:Drivers/CMSIS/Include/core_cm7.h **** 
1351:Drivers/CMSIS/Include/core_cm7.h **** /* TPI ITATBCTR2 Register Definitions */
1352:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1353:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1354:Drivers/CMSIS/Include/core_cm7.h **** 
1355:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1356:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1357:Drivers/CMSIS/Include/core_cm7.h **** 
1358:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1359:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1360:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1361:Drivers/CMSIS/Include/core_cm7.h **** 
1362:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1363:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1364:Drivers/CMSIS/Include/core_cm7.h **** 
1365:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1366:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1367:Drivers/CMSIS/Include/core_cm7.h **** 
1368:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1369:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1370:Drivers/CMSIS/Include/core_cm7.h **** 
1371:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1372:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1373:Drivers/CMSIS/Include/core_cm7.h **** 
1374:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1375:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1376:Drivers/CMSIS/Include/core_cm7.h **** 
1377:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1378:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1379:Drivers/CMSIS/Include/core_cm7.h **** 
1380:Drivers/CMSIS/Include/core_cm7.h **** /* TPI ITATBCTR0 Register Definitions */
1381:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1382:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1383:Drivers/CMSIS/Include/core_cm7.h **** 
1384:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1385:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1386:Drivers/CMSIS/Include/core_cm7.h **** 
1387:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration Mode Control Register Definitions */
1388:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1389:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1390:Drivers/CMSIS/Include/core_cm7.h **** 
1391:Drivers/CMSIS/Include/core_cm7.h **** /* TPI DEVID Register Definitions */
1392:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1393:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1394:Drivers/CMSIS/Include/core_cm7.h **** 
1395:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1396:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1397:Drivers/CMSIS/Include/core_cm7.h **** 
1398:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1399:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1400:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 26


1401:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1402:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1403:Drivers/CMSIS/Include/core_cm7.h **** 
1404:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1405:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1406:Drivers/CMSIS/Include/core_cm7.h **** 
1407:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1408:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1409:Drivers/CMSIS/Include/core_cm7.h **** 
1410:Drivers/CMSIS/Include/core_cm7.h **** /* TPI DEVTYPE Register Definitions */
1411:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1412:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1413:Drivers/CMSIS/Include/core_cm7.h **** 
1414:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1415:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1416:Drivers/CMSIS/Include/core_cm7.h **** 
1417:Drivers/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_TPI */
1418:Drivers/CMSIS/Include/core_cm7.h **** 
1419:Drivers/CMSIS/Include/core_cm7.h **** 
1420:Drivers/CMSIS/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1421:Drivers/CMSIS/Include/core_cm7.h **** /**
1422:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1423:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1424:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1425:Drivers/CMSIS/Include/core_cm7.h ****   @{
1426:Drivers/CMSIS/Include/core_cm7.h ****  */
1427:Drivers/CMSIS/Include/core_cm7.h **** 
1428:Drivers/CMSIS/Include/core_cm7.h **** /**
1429:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1430:Drivers/CMSIS/Include/core_cm7.h ****  */
1431:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1432:Drivers/CMSIS/Include/core_cm7.h **** {
1433:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1434:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1435:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1436:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1437:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1438:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1439:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1440:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1441:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1442:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1443:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1444:Drivers/CMSIS/Include/core_cm7.h **** } MPU_Type;
1445:Drivers/CMSIS/Include/core_cm7.h **** 
1446:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_RALIASES                  4U
1447:Drivers/CMSIS/Include/core_cm7.h **** 
1448:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Type Register Definitions */
1449:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1450:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1451:Drivers/CMSIS/Include/core_cm7.h **** 
1452:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1453:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1454:Drivers/CMSIS/Include/core_cm7.h **** 
1455:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1456:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1457:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 27


1458:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Control Register Definitions */
1459:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1460:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1461:Drivers/CMSIS/Include/core_cm7.h **** 
1462:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1463:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1464:Drivers/CMSIS/Include/core_cm7.h **** 
1465:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1466:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1467:Drivers/CMSIS/Include/core_cm7.h **** 
1468:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Number Register Definitions */
1469:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1470:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1471:Drivers/CMSIS/Include/core_cm7.h **** 
1472:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Base Address Register Definitions */
1473:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1474:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1475:Drivers/CMSIS/Include/core_cm7.h **** 
1476:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1477:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1478:Drivers/CMSIS/Include/core_cm7.h **** 
1479:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1480:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1481:Drivers/CMSIS/Include/core_cm7.h **** 
1482:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Attribute and Size Register Definitions */
1483:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1484:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1485:Drivers/CMSIS/Include/core_cm7.h **** 
1486:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1487:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1488:Drivers/CMSIS/Include/core_cm7.h **** 
1489:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1490:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1491:Drivers/CMSIS/Include/core_cm7.h **** 
1492:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1493:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1494:Drivers/CMSIS/Include/core_cm7.h **** 
1495:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1496:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1497:Drivers/CMSIS/Include/core_cm7.h **** 
1498:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1499:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1500:Drivers/CMSIS/Include/core_cm7.h **** 
1501:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1502:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1503:Drivers/CMSIS/Include/core_cm7.h **** 
1504:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1505:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1506:Drivers/CMSIS/Include/core_cm7.h **** 
1507:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1508:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1509:Drivers/CMSIS/Include/core_cm7.h **** 
1510:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1511:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1512:Drivers/CMSIS/Include/core_cm7.h **** 
1513:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_MPU */
1514:Drivers/CMSIS/Include/core_cm7.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 28


1515:Drivers/CMSIS/Include/core_cm7.h **** 
1516:Drivers/CMSIS/Include/core_cm7.h **** 
1517:Drivers/CMSIS/Include/core_cm7.h **** /**
1518:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1519:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1520:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1521:Drivers/CMSIS/Include/core_cm7.h ****   @{
1522:Drivers/CMSIS/Include/core_cm7.h ****  */
1523:Drivers/CMSIS/Include/core_cm7.h **** 
1524:Drivers/CMSIS/Include/core_cm7.h **** /**
1525:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1526:Drivers/CMSIS/Include/core_cm7.h ****  */
1527:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1528:Drivers/CMSIS/Include/core_cm7.h **** {
1529:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
1530:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1531:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1532:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1533:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1534:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1535:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1536:Drivers/CMSIS/Include/core_cm7.h **** } FPU_Type;
1537:Drivers/CMSIS/Include/core_cm7.h **** 
1538:Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Context Control Register Definitions */
1539:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1540:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1541:Drivers/CMSIS/Include/core_cm7.h **** 
1542:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1543:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1544:Drivers/CMSIS/Include/core_cm7.h **** 
1545:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1546:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1547:Drivers/CMSIS/Include/core_cm7.h **** 
1548:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1549:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1550:Drivers/CMSIS/Include/core_cm7.h **** 
1551:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1552:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1553:Drivers/CMSIS/Include/core_cm7.h **** 
1554:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1555:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1556:Drivers/CMSIS/Include/core_cm7.h **** 
1557:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1558:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1559:Drivers/CMSIS/Include/core_cm7.h **** 
1560:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1561:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1562:Drivers/CMSIS/Include/core_cm7.h **** 
1563:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1564:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1565:Drivers/CMSIS/Include/core_cm7.h **** 
1566:Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Context Address Register Definitions */
1567:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1568:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1569:Drivers/CMSIS/Include/core_cm7.h **** 
1570:Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Default Status Control Register Definitions */
1571:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 29


1572:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1573:Drivers/CMSIS/Include/core_cm7.h **** 
1574:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1575:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1576:Drivers/CMSIS/Include/core_cm7.h **** 
1577:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1578:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1579:Drivers/CMSIS/Include/core_cm7.h **** 
1580:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1581:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1582:Drivers/CMSIS/Include/core_cm7.h **** 
1583:Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 0 Definitions */
1584:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1585:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1586:Drivers/CMSIS/Include/core_cm7.h **** 
1587:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1588:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1589:Drivers/CMSIS/Include/core_cm7.h **** 
1590:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1591:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1592:Drivers/CMSIS/Include/core_cm7.h **** 
1593:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1594:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1595:Drivers/CMSIS/Include/core_cm7.h **** 
1596:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1597:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1598:Drivers/CMSIS/Include/core_cm7.h **** 
1599:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1600:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1601:Drivers/CMSIS/Include/core_cm7.h **** 
1602:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1603:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1604:Drivers/CMSIS/Include/core_cm7.h **** 
1605:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1606:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1607:Drivers/CMSIS/Include/core_cm7.h **** 
1608:Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 1 Definitions */
1609:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1610:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1611:Drivers/CMSIS/Include/core_cm7.h **** 
1612:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1613:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1614:Drivers/CMSIS/Include/core_cm7.h **** 
1615:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1616:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1617:Drivers/CMSIS/Include/core_cm7.h **** 
1618:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1619:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1620:Drivers/CMSIS/Include/core_cm7.h **** 
1621:Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 2 Definitions */
1622:Drivers/CMSIS/Include/core_cm7.h **** 
1623:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR2_VFP_Misc_Pos              4U                                            /*!< MVFR
1624:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR2_VFP_Misc_Msk             (0xFUL << FPU_MVFR2_VFP_Misc_Pos)              /*!< MVFR
1625:Drivers/CMSIS/Include/core_cm7.h **** 
1626:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_FPU */
1627:Drivers/CMSIS/Include/core_cm7.h **** 
1628:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 30


1629:Drivers/CMSIS/Include/core_cm7.h **** /**
1630:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1631:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1632:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Core Debug Registers
1633:Drivers/CMSIS/Include/core_cm7.h ****   @{
1634:Drivers/CMSIS/Include/core_cm7.h ****  */
1635:Drivers/CMSIS/Include/core_cm7.h **** 
1636:Drivers/CMSIS/Include/core_cm7.h **** /**
1637:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1638:Drivers/CMSIS/Include/core_cm7.h ****  */
1639:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1640:Drivers/CMSIS/Include/core_cm7.h **** {
1641:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1642:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1643:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1644:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1645:Drivers/CMSIS/Include/core_cm7.h **** } CoreDebug_Type;
1646:Drivers/CMSIS/Include/core_cm7.h **** 
1647:Drivers/CMSIS/Include/core_cm7.h **** /* Debug Halting Control and Status Register Definitions */
1648:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1649:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1650:Drivers/CMSIS/Include/core_cm7.h **** 
1651:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1652:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1653:Drivers/CMSIS/Include/core_cm7.h **** 
1654:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1655:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1656:Drivers/CMSIS/Include/core_cm7.h **** 
1657:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1658:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1659:Drivers/CMSIS/Include/core_cm7.h **** 
1660:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1661:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1662:Drivers/CMSIS/Include/core_cm7.h **** 
1663:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1664:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1665:Drivers/CMSIS/Include/core_cm7.h **** 
1666:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1667:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1668:Drivers/CMSIS/Include/core_cm7.h **** 
1669:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1670:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1671:Drivers/CMSIS/Include/core_cm7.h **** 
1672:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1673:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1674:Drivers/CMSIS/Include/core_cm7.h **** 
1675:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1676:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1677:Drivers/CMSIS/Include/core_cm7.h **** 
1678:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1679:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1680:Drivers/CMSIS/Include/core_cm7.h **** 
1681:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1682:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1683:Drivers/CMSIS/Include/core_cm7.h **** 
1684:Drivers/CMSIS/Include/core_cm7.h **** /* Debug Core Register Selector Register Definitions */
1685:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 31


1686:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1687:Drivers/CMSIS/Include/core_cm7.h **** 
1688:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1689:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1690:Drivers/CMSIS/Include/core_cm7.h **** 
1691:Drivers/CMSIS/Include/core_cm7.h **** /* Debug Exception and Monitor Control Register Definitions */
1692:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1693:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1694:Drivers/CMSIS/Include/core_cm7.h **** 
1695:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1696:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1697:Drivers/CMSIS/Include/core_cm7.h **** 
1698:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1699:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1700:Drivers/CMSIS/Include/core_cm7.h **** 
1701:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1702:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1703:Drivers/CMSIS/Include/core_cm7.h **** 
1704:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1705:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1706:Drivers/CMSIS/Include/core_cm7.h **** 
1707:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1708:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1709:Drivers/CMSIS/Include/core_cm7.h **** 
1710:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1711:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1712:Drivers/CMSIS/Include/core_cm7.h **** 
1713:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1714:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1715:Drivers/CMSIS/Include/core_cm7.h **** 
1716:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1717:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1718:Drivers/CMSIS/Include/core_cm7.h **** 
1719:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1720:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1721:Drivers/CMSIS/Include/core_cm7.h **** 
1722:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1723:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1724:Drivers/CMSIS/Include/core_cm7.h **** 
1725:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1726:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1727:Drivers/CMSIS/Include/core_cm7.h **** 
1728:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1729:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1730:Drivers/CMSIS/Include/core_cm7.h **** 
1731:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_CoreDebug */
1732:Drivers/CMSIS/Include/core_cm7.h **** 
1733:Drivers/CMSIS/Include/core_cm7.h **** 
1734:Drivers/CMSIS/Include/core_cm7.h **** /**
1735:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
1736:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1737:Drivers/CMSIS/Include/core_cm7.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1738:Drivers/CMSIS/Include/core_cm7.h ****   @{
1739:Drivers/CMSIS/Include/core_cm7.h ****  */
1740:Drivers/CMSIS/Include/core_cm7.h **** 
1741:Drivers/CMSIS/Include/core_cm7.h **** /**
1742:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 32


1743:Drivers/CMSIS/Include/core_cm7.h ****   \param[in] field  Name of the register bit field.
1744:Drivers/CMSIS/Include/core_cm7.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1745:Drivers/CMSIS/Include/core_cm7.h ****   \return           Masked and shifted value.
1746:Drivers/CMSIS/Include/core_cm7.h **** */
1747:Drivers/CMSIS/Include/core_cm7.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1748:Drivers/CMSIS/Include/core_cm7.h **** 
1749:Drivers/CMSIS/Include/core_cm7.h **** /**
1750:Drivers/CMSIS/Include/core_cm7.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1751:Drivers/CMSIS/Include/core_cm7.h ****   \param[in] field  Name of the register bit field.
1752:Drivers/CMSIS/Include/core_cm7.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1753:Drivers/CMSIS/Include/core_cm7.h ****   \return           Masked and shifted bit field value.
1754:Drivers/CMSIS/Include/core_cm7.h **** */
1755:Drivers/CMSIS/Include/core_cm7.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1756:Drivers/CMSIS/Include/core_cm7.h **** 
1757:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_core_bitfield */
1758:Drivers/CMSIS/Include/core_cm7.h **** 
1759:Drivers/CMSIS/Include/core_cm7.h **** 
1760:Drivers/CMSIS/Include/core_cm7.h **** /**
1761:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
1762:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_core_base     Core Definitions
1763:Drivers/CMSIS/Include/core_cm7.h ****   \brief      Definitions for base addresses, unions, and structures.
1764:Drivers/CMSIS/Include/core_cm7.h ****   @{
1765:Drivers/CMSIS/Include/core_cm7.h ****  */
1766:Drivers/CMSIS/Include/core_cm7.h **** 
1767:Drivers/CMSIS/Include/core_cm7.h **** /* Memory mapping of Core Hardware */
1768:Drivers/CMSIS/Include/core_cm7.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1769:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1770:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1771:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1772:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1773:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1774:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1775:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1776:Drivers/CMSIS/Include/core_cm7.h **** 
1777:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1778:Drivers/CMSIS/Include/core_cm7.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1779:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1780:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1781:Drivers/CMSIS/Include/core_cm7.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1782:Drivers/CMSIS/Include/core_cm7.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1783:Drivers/CMSIS/Include/core_cm7.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1784:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1785:Drivers/CMSIS/Include/core_cm7.h **** 
1786:Drivers/CMSIS/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1787:Drivers/CMSIS/Include/core_cm7.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1788:Drivers/CMSIS/Include/core_cm7.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1789:Drivers/CMSIS/Include/core_cm7.h **** #endif
1790:Drivers/CMSIS/Include/core_cm7.h **** 
1791:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1792:Drivers/CMSIS/Include/core_cm7.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1793:Drivers/CMSIS/Include/core_cm7.h **** 
1794:Drivers/CMSIS/Include/core_cm7.h **** /*@} */
1795:Drivers/CMSIS/Include/core_cm7.h **** 
1796:Drivers/CMSIS/Include/core_cm7.h **** 
1797:Drivers/CMSIS/Include/core_cm7.h **** 
1798:Drivers/CMSIS/Include/core_cm7.h **** /*******************************************************************************
1799:Drivers/CMSIS/Include/core_cm7.h ****  *                Hardware Abstraction Layer
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 33


1800:Drivers/CMSIS/Include/core_cm7.h ****   Core Function Interface contains:
1801:Drivers/CMSIS/Include/core_cm7.h ****   - Core NVIC Functions
1802:Drivers/CMSIS/Include/core_cm7.h ****   - Core SysTick Functions
1803:Drivers/CMSIS/Include/core_cm7.h ****   - Core Debug Functions
1804:Drivers/CMSIS/Include/core_cm7.h ****   - Core Register Access Functions
1805:Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
1806:Drivers/CMSIS/Include/core_cm7.h **** /**
1807:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1808:Drivers/CMSIS/Include/core_cm7.h **** */
1809:Drivers/CMSIS/Include/core_cm7.h **** 
1810:Drivers/CMSIS/Include/core_cm7.h **** 
1811:Drivers/CMSIS/Include/core_cm7.h **** 
1812:Drivers/CMSIS/Include/core_cm7.h **** /* ##########################   NVIC functions  #################################### */
1813:Drivers/CMSIS/Include/core_cm7.h **** /**
1814:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
1815:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1816:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1817:Drivers/CMSIS/Include/core_cm7.h ****   @{
1818:Drivers/CMSIS/Include/core_cm7.h ****  */
1819:Drivers/CMSIS/Include/core_cm7.h **** 
1820:Drivers/CMSIS/Include/core_cm7.h **** #ifdef CMSIS_NVIC_VIRTUAL
1821:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1822:Drivers/CMSIS/Include/core_cm7.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1823:Drivers/CMSIS/Include/core_cm7.h ****   #endif
1824:Drivers/CMSIS/Include/core_cm7.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1825:Drivers/CMSIS/Include/core_cm7.h **** #else
1826:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1827:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1828:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1829:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1830:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1831:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1832:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1833:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1834:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetActive              __NVIC_GetActive
1835:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1836:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1837:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1838:Drivers/CMSIS/Include/core_cm7.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1839:Drivers/CMSIS/Include/core_cm7.h **** 
1840:Drivers/CMSIS/Include/core_cm7.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1841:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1842:Drivers/CMSIS/Include/core_cm7.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1843:Drivers/CMSIS/Include/core_cm7.h ****   #endif
1844:Drivers/CMSIS/Include/core_cm7.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1845:Drivers/CMSIS/Include/core_cm7.h **** #else
1846:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SetVector              __NVIC_SetVector
1847:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetVector              __NVIC_GetVector
1848:Drivers/CMSIS/Include/core_cm7.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1849:Drivers/CMSIS/Include/core_cm7.h **** 
1850:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_USER_IRQ_OFFSET          16
1851:Drivers/CMSIS/Include/core_cm7.h **** 
1852:Drivers/CMSIS/Include/core_cm7.h **** 
1853:Drivers/CMSIS/Include/core_cm7.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1854:Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1855:Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1856:Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 34


1857:Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1858:Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1859:Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1860:Drivers/CMSIS/Include/core_cm7.h **** 
1861:Drivers/CMSIS/Include/core_cm7.h **** 
1862:Drivers/CMSIS/Include/core_cm7.h **** /**
1863:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Priority Grouping
1864:Drivers/CMSIS/Include/core_cm7.h ****   \details Sets the priority grouping field using the required unlock sequence.
1865:Drivers/CMSIS/Include/core_cm7.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1866:Drivers/CMSIS/Include/core_cm7.h ****            Only values from 0..7 are used.
1867:Drivers/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
1868:Drivers/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1869:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      PriorityGroup  Priority grouping field.
1870:Drivers/CMSIS/Include/core_cm7.h ****  */
1871:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1872:Drivers/CMSIS/Include/core_cm7.h **** {
  27              		.loc 1 1872 1
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 16
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 85B0     		sub	sp, sp, #20
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 24
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
1873:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t reg_value;
1874:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
  43              		.loc 1 1874 12
  44 0008 7B68     		ldr	r3, [r7, #4]
  45 000a 03F00703 		and	r3, r3, #7
  46 000e FB60     		str	r3, [r7, #12]
1875:Drivers/CMSIS/Include/core_cm7.h **** 
1876:Drivers/CMSIS/Include/core_cm7.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
  47              		.loc 1 1876 20
  48 0010 0B4B     		ldr	r3, .L2
  49              		.loc 1 1876 14
  50 0012 DB68     		ldr	r3, [r3, #12]
  51 0014 BB60     		str	r3, [r7, #8]
1877:Drivers/CMSIS/Include/core_cm7.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
  52              		.loc 1 1877 13
  53 0016 BA68     		ldr	r2, [r7, #8]
  54 0018 4FF6FF03 		movw	r3, #63743
  55 001c 1340     		ands	r3, r3, r2
  56 001e BB60     		str	r3, [r7, #8]
1878:Drivers/CMSIS/Include/core_cm7.h ****   reg_value  =  (reg_value                                   |
1879:Drivers/CMSIS/Include/core_cm7.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1880:Drivers/CMSIS/Include/core_cm7.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
  57              		.loc 1 1880 35
  58 0020 FB68     		ldr	r3, [r7, #12]
  59 0022 1A02     		lsls	r2, r3, #8
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 35


1879:Drivers/CMSIS/Include/core_cm7.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
  60              		.loc 1 1879 62
  61 0024 BB68     		ldr	r3, [r7, #8]
  62 0026 1A43     		orrs	r2, r2, r3
1878:Drivers/CMSIS/Include/core_cm7.h ****   reg_value  =  (reg_value                                   |
  63              		.loc 1 1878 14
  64 0028 064B     		ldr	r3, .L2+4
  65 002a 1343     		orrs	r3, r3, r2
  66 002c BB60     		str	r3, [r7, #8]
1881:Drivers/CMSIS/Include/core_cm7.h ****   SCB->AIRCR =  reg_value;
  67              		.loc 1 1881 6
  68 002e 044A     		ldr	r2, .L2
  69              		.loc 1 1881 14
  70 0030 BB68     		ldr	r3, [r7, #8]
  71 0032 D360     		str	r3, [r2, #12]
1882:Drivers/CMSIS/Include/core_cm7.h **** }
  72              		.loc 1 1882 1
  73 0034 00BF     		nop
  74 0036 1437     		adds	r7, r7, #20
  75              	.LCFI3:
  76              		.cfi_def_cfa_offset 4
  77 0038 BD46     		mov	sp, r7
  78              	.LCFI4:
  79              		.cfi_def_cfa_register 13
  80              		@ sp needed
  81 003a 5DF8047B 		ldr	r7, [sp], #4
  82              	.LCFI5:
  83              		.cfi_restore 7
  84              		.cfi_def_cfa_offset 0
  85 003e 7047     		bx	lr
  86              	.L3:
  87              		.align	2
  88              	.L2:
  89 0040 00ED00E0 		.word	-536810240
  90 0044 0000FA05 		.word	100270080
  91              		.cfi_endproc
  92              	.LFE104:
  94              		.section	.text.__NVIC_GetPriorityGrouping,"ax",%progbits
  95              		.align	1
  96              		.syntax unified
  97              		.thumb
  98              		.thumb_func
 100              	__NVIC_GetPriorityGrouping:
 101              	.LFB105:
1883:Drivers/CMSIS/Include/core_cm7.h **** 
1884:Drivers/CMSIS/Include/core_cm7.h **** 
1885:Drivers/CMSIS/Include/core_cm7.h **** /**
1886:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Priority Grouping
1887:Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1888:Drivers/CMSIS/Include/core_cm7.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1889:Drivers/CMSIS/Include/core_cm7.h ****  */
1890:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1891:Drivers/CMSIS/Include/core_cm7.h **** {
 102              		.loc 1 1891 1
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 36


 106              		@ link register save eliminated.
 107 0000 80B4     		push	{r7}
 108              	.LCFI6:
 109              		.cfi_def_cfa_offset 4
 110              		.cfi_offset 7, -4
 111 0002 00AF     		add	r7, sp, #0
 112              	.LCFI7:
 113              		.cfi_def_cfa_register 7
1892:Drivers/CMSIS/Include/core_cm7.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 114              		.loc 1 1892 26
 115 0004 044B     		ldr	r3, .L6
 116 0006 DB68     		ldr	r3, [r3, #12]
 117              		.loc 1 1892 11
 118 0008 1B0A     		lsrs	r3, r3, #8
 119 000a 03F00703 		and	r3, r3, #7
1893:Drivers/CMSIS/Include/core_cm7.h **** }
 120              		.loc 1 1893 1
 121 000e 1846     		mov	r0, r3
 122 0010 BD46     		mov	sp, r7
 123              	.LCFI8:
 124              		.cfi_def_cfa_register 13
 125              		@ sp needed
 126 0012 5DF8047B 		ldr	r7, [sp], #4
 127              	.LCFI9:
 128              		.cfi_restore 7
 129              		.cfi_def_cfa_offset 0
 130 0016 7047     		bx	lr
 131              	.L7:
 132              		.align	2
 133              	.L6:
 134 0018 00ED00E0 		.word	-536810240
 135              		.cfi_endproc
 136              	.LFE105:
 138              		.section	.text.__NVIC_EnableIRQ,"ax",%progbits
 139              		.align	1
 140              		.syntax unified
 141              		.thumb
 142              		.thumb_func
 144              	__NVIC_EnableIRQ:
 145              	.LFB106:
1894:Drivers/CMSIS/Include/core_cm7.h **** 
1895:Drivers/CMSIS/Include/core_cm7.h **** 
1896:Drivers/CMSIS/Include/core_cm7.h **** /**
1897:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Enable Interrupt
1898:Drivers/CMSIS/Include/core_cm7.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1899:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1900:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1901:Drivers/CMSIS/Include/core_cm7.h ****  */
1902:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1903:Drivers/CMSIS/Include/core_cm7.h **** {
 146              		.loc 1 1903 1
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 8
 149              		@ frame_needed = 1, uses_anonymous_args = 0
 150              		@ link register save eliminated.
 151 0000 80B4     		push	{r7}
 152              	.LCFI10:
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 37


 153              		.cfi_def_cfa_offset 4
 154              		.cfi_offset 7, -4
 155 0002 83B0     		sub	sp, sp, #12
 156              	.LCFI11:
 157              		.cfi_def_cfa_offset 16
 158 0004 00AF     		add	r7, sp, #0
 159              	.LCFI12:
 160              		.cfi_def_cfa_register 7
 161 0006 0346     		mov	r3, r0
 162 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1904:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
 163              		.loc 1 1904 6
 164 000a B7F90630 		ldrsh	r3, [r7, #6]
 165 000e 002B     		cmp	r3, #0
 166 0010 0BDB     		blt	.L10
1905:Drivers/CMSIS/Include/core_cm7.h ****   {
1906:Drivers/CMSIS/Include/core_cm7.h ****     __COMPILER_BARRIER();
 167              		.loc 1 1906 5
1907:Drivers/CMSIS/Include/core_cm7.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 168              		.loc 1 1907 81
 169 0012 FB88     		ldrh	r3, [r7, #6]
 170 0014 03F01F02 		and	r2, r3, #31
 171              		.loc 1 1907 9
 172 0018 0749     		ldr	r1, .L11
 173              		.loc 1 1907 18
 174 001a B7F90630 		ldrsh	r3, [r7, #6]
 175              		.loc 1 1907 34
 176 001e 5B09     		lsrs	r3, r3, #5
 177              		.loc 1 1907 45
 178 0020 0120     		movs	r0, #1
 179 0022 00FA02F2 		lsl	r2, r0, r2
 180              		.loc 1 1907 43
 181 0026 41F82320 		str	r2, [r1, r3, lsl #2]
1908:Drivers/CMSIS/Include/core_cm7.h ****     __COMPILER_BARRIER();
 182              		.loc 1 1908 5
 183              	.L10:
1909:Drivers/CMSIS/Include/core_cm7.h ****   }
1910:Drivers/CMSIS/Include/core_cm7.h **** }
 184              		.loc 1 1910 1
 185 002a 00BF     		nop
 186 002c 0C37     		adds	r7, r7, #12
 187              	.LCFI13:
 188              		.cfi_def_cfa_offset 4
 189 002e BD46     		mov	sp, r7
 190              	.LCFI14:
 191              		.cfi_def_cfa_register 13
 192              		@ sp needed
 193 0030 5DF8047B 		ldr	r7, [sp], #4
 194              	.LCFI15:
 195              		.cfi_restore 7
 196              		.cfi_def_cfa_offset 0
 197 0034 7047     		bx	lr
 198              	.L12:
 199 0036 00BF     		.align	2
 200              	.L11:
 201 0038 00E100E0 		.word	-536813312
 202              		.cfi_endproc
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 38


 203              	.LFE106:
 205              		.section	.text.__NVIC_DisableIRQ,"ax",%progbits
 206              		.align	1
 207              		.syntax unified
 208              		.thumb
 209              		.thumb_func
 211              	__NVIC_DisableIRQ:
 212              	.LFB108:
1911:Drivers/CMSIS/Include/core_cm7.h **** 
1912:Drivers/CMSIS/Include/core_cm7.h **** 
1913:Drivers/CMSIS/Include/core_cm7.h **** /**
1914:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Interrupt Enable status
1915:Drivers/CMSIS/Include/core_cm7.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1916:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1917:Drivers/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt is not enabled.
1918:Drivers/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt is enabled.
1919:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1920:Drivers/CMSIS/Include/core_cm7.h ****  */
1921:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1922:Drivers/CMSIS/Include/core_cm7.h **** {
1923:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1924:Drivers/CMSIS/Include/core_cm7.h ****   {
1925:Drivers/CMSIS/Include/core_cm7.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1926:Drivers/CMSIS/Include/core_cm7.h ****   }
1927:Drivers/CMSIS/Include/core_cm7.h ****   else
1928:Drivers/CMSIS/Include/core_cm7.h ****   {
1929:Drivers/CMSIS/Include/core_cm7.h ****     return(0U);
1930:Drivers/CMSIS/Include/core_cm7.h ****   }
1931:Drivers/CMSIS/Include/core_cm7.h **** }
1932:Drivers/CMSIS/Include/core_cm7.h **** 
1933:Drivers/CMSIS/Include/core_cm7.h **** 
1934:Drivers/CMSIS/Include/core_cm7.h **** /**
1935:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Disable Interrupt
1936:Drivers/CMSIS/Include/core_cm7.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1937:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1938:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1939:Drivers/CMSIS/Include/core_cm7.h ****  */
1940:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1941:Drivers/CMSIS/Include/core_cm7.h **** {
 213              		.loc 1 1941 1
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 8
 216              		@ frame_needed = 1, uses_anonymous_args = 0
 217              		@ link register save eliminated.
 218 0000 80B4     		push	{r7}
 219              	.LCFI16:
 220              		.cfi_def_cfa_offset 4
 221              		.cfi_offset 7, -4
 222 0002 83B0     		sub	sp, sp, #12
 223              	.LCFI17:
 224              		.cfi_def_cfa_offset 16
 225 0004 00AF     		add	r7, sp, #0
 226              	.LCFI18:
 227              		.cfi_def_cfa_register 7
 228 0006 0346     		mov	r3, r0
 229 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1942:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 39


 230              		.loc 1 1942 6
 231 000a B7F90630 		ldrsh	r3, [r7, #6]
 232 000e 002B     		cmp	r3, #0
 233 0010 12DB     		blt	.L15
1943:Drivers/CMSIS/Include/core_cm7.h ****   {
1944:Drivers/CMSIS/Include/core_cm7.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 234              		.loc 1 1944 81
 235 0012 FB88     		ldrh	r3, [r7, #6]
 236 0014 03F01F02 		and	r2, r3, #31
 237              		.loc 1 1944 9
 238 0018 0A49     		ldr	r1, .L16
 239              		.loc 1 1944 18
 240 001a B7F90630 		ldrsh	r3, [r7, #6]
 241              		.loc 1 1944 34
 242 001e 5B09     		lsrs	r3, r3, #5
 243              		.loc 1 1944 45
 244 0020 0120     		movs	r0, #1
 245 0022 00FA02F2 		lsl	r2, r0, r2
 246              		.loc 1 1944 43
 247 0026 2033     		adds	r3, r3, #32
 248 0028 41F82320 		str	r2, [r1, r3, lsl #2]
 249              	.LBB16:
 250              	.LBB17:
 251              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 40


  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 41


  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 42


 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 43


 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 214:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 220:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 260:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 44


 262:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 302:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 45


 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 321:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 346:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 360:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 364:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 46


 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 402:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 419:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 423:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 47


 433:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 437:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 441:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 449:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 452:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 474:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 48


 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 512:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 519:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 530:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 545:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 546:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 49


 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 553:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 576:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 578:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 587:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 588:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 589:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 597:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 50


 604:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 617:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 618:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 640:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 642:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 51


 661:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 667:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 686:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 706:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 52


 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 753:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 754:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 758:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 774:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 53


 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 779:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 782:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 784:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 788:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 802:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 815:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 819:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 821:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 54


 832:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 833:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 843:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 847:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 848:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 854:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 875:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 884:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 885:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 886:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 55


 889:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 903:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 905:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 913:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 917:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 933:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 935:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 56


 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 252              		.loc 2 946 3
 253              		.syntax unified
 254              	@ 946 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 255 002c BFF34F8F 		dsb 0xF
 256              	@ 0 "" 2
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 257              		.loc 2 947 1
 258              		.thumb
 259              		.syntax unified
 260 0030 00BF     		nop
 261              	.LBE17:
 262              	.LBE16:
 263              	.LBB18:
 264              	.LBB19:
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 265              		.loc 2 935 3
 266              		.syntax unified
 267              	@ 935 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 268 0032 BFF36F8F 		isb 0xF
 269              	@ 0 "" 2
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 270              		.loc 2 936 1
 271              		.thumb
 272              		.syntax unified
 273 0036 00BF     		nop
 274              	.L15:
 275              	.LBE19:
 276              	.LBE18:
1945:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
1946:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
1947:Drivers/CMSIS/Include/core_cm7.h ****   }
1948:Drivers/CMSIS/Include/core_cm7.h **** }
 277              		.loc 1 1948 1
 278 0038 00BF     		nop
 279 003a 0C37     		adds	r7, r7, #12
 280              	.LCFI19:
 281              		.cfi_def_cfa_offset 4
 282 003c BD46     		mov	sp, r7
 283              	.LCFI20:
 284              		.cfi_def_cfa_register 13
 285              		@ sp needed
 286 003e 5DF8047B 		ldr	r7, [sp], #4
 287              	.LCFI21:
 288              		.cfi_restore 7
 289              		.cfi_def_cfa_offset 0
 290 0042 7047     		bx	lr
 291              	.L17:
 292              		.align	2
 293              	.L16:
 294 0044 00E100E0 		.word	-536813312
 295              		.cfi_endproc
 296              	.LFE108:
 298              		.section	.text.__NVIC_GetPendingIRQ,"ax",%progbits
 299              		.align	1
 300              		.syntax unified
 301              		.thumb
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 57


 302              		.thumb_func
 304              	__NVIC_GetPendingIRQ:
 305              	.LFB109:
1949:Drivers/CMSIS/Include/core_cm7.h **** 
1950:Drivers/CMSIS/Include/core_cm7.h **** 
1951:Drivers/CMSIS/Include/core_cm7.h **** /**
1952:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Pending Interrupt
1953:Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1954:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1955:Drivers/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt status is not pending.
1956:Drivers/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt status is pending.
1957:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1958:Drivers/CMSIS/Include/core_cm7.h ****  */
1959:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1960:Drivers/CMSIS/Include/core_cm7.h **** {
 306              		.loc 1 1960 1
 307              		.cfi_startproc
 308              		@ args = 0, pretend = 0, frame = 8
 309              		@ frame_needed = 1, uses_anonymous_args = 0
 310              		@ link register save eliminated.
 311 0000 80B4     		push	{r7}
 312              	.LCFI22:
 313              		.cfi_def_cfa_offset 4
 314              		.cfi_offset 7, -4
 315 0002 83B0     		sub	sp, sp, #12
 316              	.LCFI23:
 317              		.cfi_def_cfa_offset 16
 318 0004 00AF     		add	r7, sp, #0
 319              	.LCFI24:
 320              		.cfi_def_cfa_register 7
 321 0006 0346     		mov	r3, r0
 322 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1961:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
 323              		.loc 1 1961 6
 324 000a B7F90630 		ldrsh	r3, [r7, #6]
 325 000e 002B     		cmp	r3, #0
 326 0010 0EDB     		blt	.L19
1962:Drivers/CMSIS/Include/core_cm7.h ****   {
1963:Drivers/CMSIS/Include/core_cm7.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
 327              		.loc 1 1963 29
 328 0012 0B4A     		ldr	r2, .L21
 329              		.loc 1 1963 38
 330 0014 B7F90630 		ldrsh	r3, [r7, #6]
 331              		.loc 1 1963 54
 332 0018 5B09     		lsrs	r3, r3, #5
 333              		.loc 1 1963 35
 334 001a 4033     		adds	r3, r3, #64
 335 001c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 336              		.loc 1 1963 91
 337 0020 FB88     		ldrh	r3, [r7, #6]
 338 0022 03F01F03 		and	r3, r3, #31
 339              		.loc 1 1963 103
 340 0026 22FA03F3 		lsr	r3, r2, r3
 341              		.loc 1 1963 12
 342 002a 03F00103 		and	r3, r3, #1
 343 002e 00E0     		b	.L20
 344              	.L19:
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 58


1964:Drivers/CMSIS/Include/core_cm7.h ****   }
1965:Drivers/CMSIS/Include/core_cm7.h ****   else
1966:Drivers/CMSIS/Include/core_cm7.h ****   {
1967:Drivers/CMSIS/Include/core_cm7.h ****     return(0U);
 345              		.loc 1 1967 11
 346 0030 0023     		movs	r3, #0
 347              	.L20:
1968:Drivers/CMSIS/Include/core_cm7.h ****   }
1969:Drivers/CMSIS/Include/core_cm7.h **** }
 348              		.loc 1 1969 1
 349 0032 1846     		mov	r0, r3
 350 0034 0C37     		adds	r7, r7, #12
 351              	.LCFI25:
 352              		.cfi_def_cfa_offset 4
 353 0036 BD46     		mov	sp, r7
 354              	.LCFI26:
 355              		.cfi_def_cfa_register 13
 356              		@ sp needed
 357 0038 5DF8047B 		ldr	r7, [sp], #4
 358              	.LCFI27:
 359              		.cfi_restore 7
 360              		.cfi_def_cfa_offset 0
 361 003c 7047     		bx	lr
 362              	.L22:
 363 003e 00BF     		.align	2
 364              	.L21:
 365 0040 00E100E0 		.word	-536813312
 366              		.cfi_endproc
 367              	.LFE109:
 369              		.section	.text.__NVIC_SetPendingIRQ,"ax",%progbits
 370              		.align	1
 371              		.syntax unified
 372              		.thumb
 373              		.thumb_func
 375              	__NVIC_SetPendingIRQ:
 376              	.LFB110:
1970:Drivers/CMSIS/Include/core_cm7.h **** 
1971:Drivers/CMSIS/Include/core_cm7.h **** 
1972:Drivers/CMSIS/Include/core_cm7.h **** /**
1973:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Pending Interrupt
1974:Drivers/CMSIS/Include/core_cm7.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1975:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1976:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1977:Drivers/CMSIS/Include/core_cm7.h ****  */
1978:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1979:Drivers/CMSIS/Include/core_cm7.h **** {
 377              		.loc 1 1979 1
 378              		.cfi_startproc
 379              		@ args = 0, pretend = 0, frame = 8
 380              		@ frame_needed = 1, uses_anonymous_args = 0
 381              		@ link register save eliminated.
 382 0000 80B4     		push	{r7}
 383              	.LCFI28:
 384              		.cfi_def_cfa_offset 4
 385              		.cfi_offset 7, -4
 386 0002 83B0     		sub	sp, sp, #12
 387              	.LCFI29:
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 59


 388              		.cfi_def_cfa_offset 16
 389 0004 00AF     		add	r7, sp, #0
 390              	.LCFI30:
 391              		.cfi_def_cfa_register 7
 392 0006 0346     		mov	r3, r0
 393 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1980:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
 394              		.loc 1 1980 6
 395 000a B7F90630 		ldrsh	r3, [r7, #6]
 396 000e 002B     		cmp	r3, #0
 397 0010 0CDB     		blt	.L25
1981:Drivers/CMSIS/Include/core_cm7.h ****   {
1982:Drivers/CMSIS/Include/core_cm7.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 398              		.loc 1 1982 81
 399 0012 FB88     		ldrh	r3, [r7, #6]
 400 0014 03F01F02 		and	r2, r3, #31
 401              		.loc 1 1982 9
 402 0018 0749     		ldr	r1, .L26
 403              		.loc 1 1982 18
 404 001a B7F90630 		ldrsh	r3, [r7, #6]
 405              		.loc 1 1982 34
 406 001e 5B09     		lsrs	r3, r3, #5
 407              		.loc 1 1982 45
 408 0020 0120     		movs	r0, #1
 409 0022 00FA02F2 		lsl	r2, r0, r2
 410              		.loc 1 1982 43
 411 0026 4033     		adds	r3, r3, #64
 412 0028 41F82320 		str	r2, [r1, r3, lsl #2]
 413              	.L25:
1983:Drivers/CMSIS/Include/core_cm7.h ****   }
1984:Drivers/CMSIS/Include/core_cm7.h **** }
 414              		.loc 1 1984 1
 415 002c 00BF     		nop
 416 002e 0C37     		adds	r7, r7, #12
 417              	.LCFI31:
 418              		.cfi_def_cfa_offset 4
 419 0030 BD46     		mov	sp, r7
 420              	.LCFI32:
 421              		.cfi_def_cfa_register 13
 422              		@ sp needed
 423 0032 5DF8047B 		ldr	r7, [sp], #4
 424              	.LCFI33:
 425              		.cfi_restore 7
 426              		.cfi_def_cfa_offset 0
 427 0036 7047     		bx	lr
 428              	.L27:
 429              		.align	2
 430              	.L26:
 431 0038 00E100E0 		.word	-536813312
 432              		.cfi_endproc
 433              	.LFE110:
 435              		.section	.text.__NVIC_ClearPendingIRQ,"ax",%progbits
 436              		.align	1
 437              		.syntax unified
 438              		.thumb
 439              		.thumb_func
 441              	__NVIC_ClearPendingIRQ:
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 60


 442              	.LFB111:
1985:Drivers/CMSIS/Include/core_cm7.h **** 
1986:Drivers/CMSIS/Include/core_cm7.h **** 
1987:Drivers/CMSIS/Include/core_cm7.h **** /**
1988:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Clear Pending Interrupt
1989:Drivers/CMSIS/Include/core_cm7.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1990:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1991:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1992:Drivers/CMSIS/Include/core_cm7.h ****  */
1993:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1994:Drivers/CMSIS/Include/core_cm7.h **** {
 443              		.loc 1 1994 1
 444              		.cfi_startproc
 445              		@ args = 0, pretend = 0, frame = 8
 446              		@ frame_needed = 1, uses_anonymous_args = 0
 447              		@ link register save eliminated.
 448 0000 80B4     		push	{r7}
 449              	.LCFI34:
 450              		.cfi_def_cfa_offset 4
 451              		.cfi_offset 7, -4
 452 0002 83B0     		sub	sp, sp, #12
 453              	.LCFI35:
 454              		.cfi_def_cfa_offset 16
 455 0004 00AF     		add	r7, sp, #0
 456              	.LCFI36:
 457              		.cfi_def_cfa_register 7
 458 0006 0346     		mov	r3, r0
 459 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1995:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
 460              		.loc 1 1995 6
 461 000a B7F90630 		ldrsh	r3, [r7, #6]
 462 000e 002B     		cmp	r3, #0
 463 0010 0CDB     		blt	.L30
1996:Drivers/CMSIS/Include/core_cm7.h ****   {
1997:Drivers/CMSIS/Include/core_cm7.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 464              		.loc 1 1997 81
 465 0012 FB88     		ldrh	r3, [r7, #6]
 466 0014 03F01F02 		and	r2, r3, #31
 467              		.loc 1 1997 9
 468 0018 0749     		ldr	r1, .L31
 469              		.loc 1 1997 18
 470 001a B7F90630 		ldrsh	r3, [r7, #6]
 471              		.loc 1 1997 34
 472 001e 5B09     		lsrs	r3, r3, #5
 473              		.loc 1 1997 45
 474 0020 0120     		movs	r0, #1
 475 0022 00FA02F2 		lsl	r2, r0, r2
 476              		.loc 1 1997 43
 477 0026 6033     		adds	r3, r3, #96
 478 0028 41F82320 		str	r2, [r1, r3, lsl #2]
 479              	.L30:
1998:Drivers/CMSIS/Include/core_cm7.h ****   }
1999:Drivers/CMSIS/Include/core_cm7.h **** }
 480              		.loc 1 1999 1
 481 002c 00BF     		nop
 482 002e 0C37     		adds	r7, r7, #12
 483              	.LCFI37:
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 61


 484              		.cfi_def_cfa_offset 4
 485 0030 BD46     		mov	sp, r7
 486              	.LCFI38:
 487              		.cfi_def_cfa_register 13
 488              		@ sp needed
 489 0032 5DF8047B 		ldr	r7, [sp], #4
 490              	.LCFI39:
 491              		.cfi_restore 7
 492              		.cfi_def_cfa_offset 0
 493 0036 7047     		bx	lr
 494              	.L32:
 495              		.align	2
 496              	.L31:
 497 0038 00E100E0 		.word	-536813312
 498              		.cfi_endproc
 499              	.LFE111:
 501              		.section	.text.__NVIC_GetActive,"ax",%progbits
 502              		.align	1
 503              		.syntax unified
 504              		.thumb
 505              		.thumb_func
 507              	__NVIC_GetActive:
 508              	.LFB112:
2000:Drivers/CMSIS/Include/core_cm7.h **** 
2001:Drivers/CMSIS/Include/core_cm7.h **** 
2002:Drivers/CMSIS/Include/core_cm7.h **** /**
2003:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Active Interrupt
2004:Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
2005:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
2006:Drivers/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt status is not active.
2007:Drivers/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt status is active.
2008:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
2009:Drivers/CMSIS/Include/core_cm7.h ****  */
2010:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
2011:Drivers/CMSIS/Include/core_cm7.h **** {
 509              		.loc 1 2011 1
 510              		.cfi_startproc
 511              		@ args = 0, pretend = 0, frame = 8
 512              		@ frame_needed = 1, uses_anonymous_args = 0
 513              		@ link register save eliminated.
 514 0000 80B4     		push	{r7}
 515              	.LCFI40:
 516              		.cfi_def_cfa_offset 4
 517              		.cfi_offset 7, -4
 518 0002 83B0     		sub	sp, sp, #12
 519              	.LCFI41:
 520              		.cfi_def_cfa_offset 16
 521 0004 00AF     		add	r7, sp, #0
 522              	.LCFI42:
 523              		.cfi_def_cfa_register 7
 524 0006 0346     		mov	r3, r0
 525 0008 FB80     		strh	r3, [r7, #6]	@ movhi
2012:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
 526              		.loc 1 2012 6
 527 000a B7F90630 		ldrsh	r3, [r7, #6]
 528 000e 002B     		cmp	r3, #0
 529 0010 0EDB     		blt	.L34
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 62


2013:Drivers/CMSIS/Include/core_cm7.h ****   {
2014:Drivers/CMSIS/Include/core_cm7.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
 530              		.loc 1 2014 29
 531 0012 0B4A     		ldr	r2, .L36
 532              		.loc 1 2014 38
 533 0014 B7F90630 		ldrsh	r3, [r7, #6]
 534              		.loc 1 2014 54
 535 0018 5B09     		lsrs	r3, r3, #5
 536              		.loc 1 2014 35
 537 001a 8033     		adds	r3, r3, #128
 538 001c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 539              		.loc 1 2014 91
 540 0020 FB88     		ldrh	r3, [r7, #6]
 541 0022 03F01F03 		and	r3, r3, #31
 542              		.loc 1 2014 103
 543 0026 22FA03F3 		lsr	r3, r2, r3
 544              		.loc 1 2014 12
 545 002a 03F00103 		and	r3, r3, #1
 546 002e 00E0     		b	.L35
 547              	.L34:
2015:Drivers/CMSIS/Include/core_cm7.h ****   }
2016:Drivers/CMSIS/Include/core_cm7.h ****   else
2017:Drivers/CMSIS/Include/core_cm7.h ****   {
2018:Drivers/CMSIS/Include/core_cm7.h ****     return(0U);
 548              		.loc 1 2018 11
 549 0030 0023     		movs	r3, #0
 550              	.L35:
2019:Drivers/CMSIS/Include/core_cm7.h ****   }
2020:Drivers/CMSIS/Include/core_cm7.h **** }
 551              		.loc 1 2020 1
 552 0032 1846     		mov	r0, r3
 553 0034 0C37     		adds	r7, r7, #12
 554              	.LCFI43:
 555              		.cfi_def_cfa_offset 4
 556 0036 BD46     		mov	sp, r7
 557              	.LCFI44:
 558              		.cfi_def_cfa_register 13
 559              		@ sp needed
 560 0038 5DF8047B 		ldr	r7, [sp], #4
 561              	.LCFI45:
 562              		.cfi_restore 7
 563              		.cfi_def_cfa_offset 0
 564 003c 7047     		bx	lr
 565              	.L37:
 566 003e 00BF     		.align	2
 567              	.L36:
 568 0040 00E100E0 		.word	-536813312
 569              		.cfi_endproc
 570              	.LFE112:
 572              		.section	.text.__NVIC_SetPriority,"ax",%progbits
 573              		.align	1
 574              		.syntax unified
 575              		.thumb
 576              		.thumb_func
 578              	__NVIC_SetPriority:
 579              	.LFB113:
2021:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 63


2022:Drivers/CMSIS/Include/core_cm7.h **** 
2023:Drivers/CMSIS/Include/core_cm7.h **** /**
2024:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Interrupt Priority
2025:Drivers/CMSIS/Include/core_cm7.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
2026:Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2027:Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2028:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Interrupt number.
2029:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]  priority  Priority to set.
2030:Drivers/CMSIS/Include/core_cm7.h ****   \note    The priority cannot be set for every processor exception.
2031:Drivers/CMSIS/Include/core_cm7.h ****  */
2032:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
2033:Drivers/CMSIS/Include/core_cm7.h **** {
 580              		.loc 1 2033 1
 581              		.cfi_startproc
 582              		@ args = 0, pretend = 0, frame = 8
 583              		@ frame_needed = 1, uses_anonymous_args = 0
 584              		@ link register save eliminated.
 585 0000 80B4     		push	{r7}
 586              	.LCFI46:
 587              		.cfi_def_cfa_offset 4
 588              		.cfi_offset 7, -4
 589 0002 83B0     		sub	sp, sp, #12
 590              	.LCFI47:
 591              		.cfi_def_cfa_offset 16
 592 0004 00AF     		add	r7, sp, #0
 593              	.LCFI48:
 594              		.cfi_def_cfa_register 7
 595 0006 0346     		mov	r3, r0
 596 0008 3960     		str	r1, [r7]
 597 000a FB80     		strh	r3, [r7, #6]	@ movhi
2034:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
 598              		.loc 1 2034 6
 599 000c B7F90630 		ldrsh	r3, [r7, #6]
 600 0010 002B     		cmp	r3, #0
 601 0012 0ADB     		blt	.L39
2035:Drivers/CMSIS/Include/core_cm7.h ****   {
2036:Drivers/CMSIS/Include/core_cm7.h ****     NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (
 602              		.loc 1 2036 49
 603 0014 3B68     		ldr	r3, [r7]
 604 0016 DAB2     		uxtb	r2, r3
 605              		.loc 1 2036 9
 606 0018 0C49     		ldr	r1, .L42
 607              		.loc 1 2036 15
 608 001a B7F90630 		ldrsh	r3, [r7, #6]
 609              		.loc 1 2036 49
 610 001e 1201     		lsls	r2, r2, #4
 611 0020 D2B2     		uxtb	r2, r2
 612              		.loc 1 2036 47
 613 0022 0B44     		add	r3, r3, r1
 614 0024 83F80023 		strb	r2, [r3, #768]
2037:Drivers/CMSIS/Include/core_cm7.h ****   }
2038:Drivers/CMSIS/Include/core_cm7.h ****   else
2039:Drivers/CMSIS/Include/core_cm7.h ****   {
2040:Drivers/CMSIS/Include/core_cm7.h ****     SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (
2041:Drivers/CMSIS/Include/core_cm7.h ****   }
2042:Drivers/CMSIS/Include/core_cm7.h **** }
 615              		.loc 1 2042 1
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 64


 616 0028 0AE0     		b	.L41
 617              	.L39:
2040:Drivers/CMSIS/Include/core_cm7.h ****   }
 618              		.loc 1 2040 49
 619 002a 3B68     		ldr	r3, [r7]
 620 002c DAB2     		uxtb	r2, r3
2040:Drivers/CMSIS/Include/core_cm7.h ****   }
 621              		.loc 1 2040 8
 622 002e 0849     		ldr	r1, .L42+4
2040:Drivers/CMSIS/Include/core_cm7.h ****   }
 623              		.loc 1 2040 33
 624 0030 FB88     		ldrh	r3, [r7, #6]
 625 0032 03F00F03 		and	r3, r3, #15
2040:Drivers/CMSIS/Include/core_cm7.h ****   }
 626              		.loc 1 2040 41
 627 0036 043B     		subs	r3, r3, #4
2040:Drivers/CMSIS/Include/core_cm7.h ****   }
 628              		.loc 1 2040 49
 629 0038 1201     		lsls	r2, r2, #4
 630 003a D2B2     		uxtb	r2, r2
2040:Drivers/CMSIS/Include/core_cm7.h ****   }
 631              		.loc 1 2040 47
 632 003c 0B44     		add	r3, r3, r1
 633 003e 1A76     		strb	r2, [r3, #24]
 634              	.L41:
 635              		.loc 1 2042 1
 636 0040 00BF     		nop
 637 0042 0C37     		adds	r7, r7, #12
 638              	.LCFI49:
 639              		.cfi_def_cfa_offset 4
 640 0044 BD46     		mov	sp, r7
 641              	.LCFI50:
 642              		.cfi_def_cfa_register 13
 643              		@ sp needed
 644 0046 5DF8047B 		ldr	r7, [sp], #4
 645              	.LCFI51:
 646              		.cfi_restore 7
 647              		.cfi_def_cfa_offset 0
 648 004a 7047     		bx	lr
 649              	.L43:
 650              		.align	2
 651              	.L42:
 652 004c 00E100E0 		.word	-536813312
 653 0050 00ED00E0 		.word	-536810240
 654              		.cfi_endproc
 655              	.LFE113:
 657              		.section	.text.__NVIC_GetPriority,"ax",%progbits
 658              		.align	1
 659              		.syntax unified
 660              		.thumb
 661              		.thumb_func
 663              	__NVIC_GetPriority:
 664              	.LFB114:
2043:Drivers/CMSIS/Include/core_cm7.h **** 
2044:Drivers/CMSIS/Include/core_cm7.h **** 
2045:Drivers/CMSIS/Include/core_cm7.h **** /**
2046:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Interrupt Priority
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 65


2047:Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
2048:Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2049:Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2050:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   IRQn  Interrupt number.
2051:Drivers/CMSIS/Include/core_cm7.h ****   \return             Interrupt Priority.
2052:Drivers/CMSIS/Include/core_cm7.h ****                       Value is aligned automatically to the implemented priority bits of the microc
2053:Drivers/CMSIS/Include/core_cm7.h ****  */
2054:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
2055:Drivers/CMSIS/Include/core_cm7.h **** {
 665              		.loc 1 2055 1
 666              		.cfi_startproc
 667              		@ args = 0, pretend = 0, frame = 8
 668              		@ frame_needed = 1, uses_anonymous_args = 0
 669              		@ link register save eliminated.
 670 0000 80B4     		push	{r7}
 671              	.LCFI52:
 672              		.cfi_def_cfa_offset 4
 673              		.cfi_offset 7, -4
 674 0002 83B0     		sub	sp, sp, #12
 675              	.LCFI53:
 676              		.cfi_def_cfa_offset 16
 677 0004 00AF     		add	r7, sp, #0
 678              	.LCFI54:
 679              		.cfi_def_cfa_register 7
 680 0006 0346     		mov	r3, r0
 681 0008 FB80     		strh	r3, [r7, #6]	@ movhi
2056:Drivers/CMSIS/Include/core_cm7.h **** 
2057:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
 682              		.loc 1 2057 6
 683 000a B7F90630 		ldrsh	r3, [r7, #6]
 684 000e 002B     		cmp	r3, #0
 685 0010 09DB     		blt	.L45
2058:Drivers/CMSIS/Include/core_cm7.h ****   {
2059:Drivers/CMSIS/Include/core_cm7.h ****     return(((uint32_t)NVIC->IP[((uint32_t)IRQn)]                >> (8U - __NVIC_PRIO_BITS)));
 686              		.loc 1 2059 27
 687 0012 0D4A     		ldr	r2, .L47
 688              		.loc 1 2059 33
 689 0014 B7F90630 		ldrsh	r3, [r7, #6]
 690              		.loc 1 2059 31
 691 0018 1344     		add	r3, r3, r2
 692 001a 93F80033 		ldrb	r3, [r3, #768]
 693 001e DBB2     		uxtb	r3, r3
 694              		.loc 1 2059 65
 695 0020 1B09     		lsrs	r3, r3, #4
 696 0022 DBB2     		uxtb	r3, r3
 697 0024 09E0     		b	.L46
 698              	.L45:
2060:Drivers/CMSIS/Include/core_cm7.h ****   }
2061:Drivers/CMSIS/Include/core_cm7.h ****   else
2062:Drivers/CMSIS/Include/core_cm7.h ****   {
2063:Drivers/CMSIS/Include/core_cm7.h ****     return(((uint32_t)SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
 699              		.loc 1 2063 26
 700 0026 094A     		ldr	r2, .L47+4
 701              		.loc 1 2063 51
 702 0028 FB88     		ldrh	r3, [r7, #6]
 703 002a 03F00F03 		and	r3, r3, #15
 704              		.loc 1 2063 59
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 66


 705 002e 043B     		subs	r3, r3, #4
 706              		.loc 1 2063 32
 707 0030 1344     		add	r3, r3, r2
 708 0032 1B7E     		ldrb	r3, [r3, #24]
 709 0034 DBB2     		uxtb	r3, r3
 710              		.loc 1 2063 65
 711 0036 1B09     		lsrs	r3, r3, #4
 712 0038 DBB2     		uxtb	r3, r3
 713              	.L46:
2064:Drivers/CMSIS/Include/core_cm7.h ****   }
2065:Drivers/CMSIS/Include/core_cm7.h **** }
 714              		.loc 1 2065 1
 715 003a 1846     		mov	r0, r3
 716 003c 0C37     		adds	r7, r7, #12
 717              	.LCFI55:
 718              		.cfi_def_cfa_offset 4
 719 003e BD46     		mov	sp, r7
 720              	.LCFI56:
 721              		.cfi_def_cfa_register 13
 722              		@ sp needed
 723 0040 5DF8047B 		ldr	r7, [sp], #4
 724              	.LCFI57:
 725              		.cfi_restore 7
 726              		.cfi_def_cfa_offset 0
 727 0044 7047     		bx	lr
 728              	.L48:
 729 0046 00BF     		.align	2
 730              	.L47:
 731 0048 00E100E0 		.word	-536813312
 732 004c 00ED00E0 		.word	-536810240
 733              		.cfi_endproc
 734              	.LFE114:
 736              		.section	.text.NVIC_EncodePriority,"ax",%progbits
 737              		.align	1
 738              		.syntax unified
 739              		.thumb
 740              		.thumb_func
 742              	NVIC_EncodePriority:
 743              	.LFB115:
2066:Drivers/CMSIS/Include/core_cm7.h **** 
2067:Drivers/CMSIS/Include/core_cm7.h **** 
2068:Drivers/CMSIS/Include/core_cm7.h **** /**
2069:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Encode Priority
2070:Drivers/CMSIS/Include/core_cm7.h ****   \details Encodes the priority for an interrupt with the given priority group,
2071:Drivers/CMSIS/Include/core_cm7.h ****            preemptive priority value, and subpriority value.
2072:Drivers/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
2073:Drivers/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
2074:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]     PriorityGroup  Used priority group.
2075:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
2076:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
2077:Drivers/CMSIS/Include/core_cm7.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
2078:Drivers/CMSIS/Include/core_cm7.h ****  */
2079:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
2080:Drivers/CMSIS/Include/core_cm7.h **** {
 744              		.loc 1 2080 1
 745              		.cfi_startproc
 746              		@ args = 0, pretend = 0, frame = 32
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 67


 747              		@ frame_needed = 1, uses_anonymous_args = 0
 748              		@ link register save eliminated.
 749 0000 80B4     		push	{r7}
 750              	.LCFI58:
 751              		.cfi_def_cfa_offset 4
 752              		.cfi_offset 7, -4
 753 0002 89B0     		sub	sp, sp, #36
 754              	.LCFI59:
 755              		.cfi_def_cfa_offset 40
 756 0004 00AF     		add	r7, sp, #0
 757              	.LCFI60:
 758              		.cfi_def_cfa_register 7
 759 0006 F860     		str	r0, [r7, #12]
 760 0008 B960     		str	r1, [r7, #8]
 761 000a 7A60     		str	r2, [r7, #4]
2081:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
 762              		.loc 1 2081 12
 763 000c FB68     		ldr	r3, [r7, #12]
 764 000e 03F00703 		and	r3, r3, #7
 765 0012 FB61     		str	r3, [r7, #28]
2082:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PreemptPriorityBits;
2083:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t SubPriorityBits;
2084:Drivers/CMSIS/Include/core_cm7.h **** 
2085:Drivers/CMSIS/Include/core_cm7.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
 766              		.loc 1 2085 31
 767 0014 FB69     		ldr	r3, [r7, #28]
 768 0016 C3F10703 		rsb	r3, r3, #7
 769              		.loc 1 2085 23
 770 001a 042B     		cmp	r3, #4
 771 001c 28BF     		it	cs
 772 001e 0423     		movcs	r3, #4
 773 0020 BB61     		str	r3, [r7, #24]
2086:Drivers/CMSIS/Include/core_cm7.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 774              		.loc 1 2086 44
 775 0022 FB69     		ldr	r3, [r7, #28]
 776 0024 0433     		adds	r3, r3, #4
 777              		.loc 1 2086 109
 778 0026 062B     		cmp	r3, #6
 779 0028 02D9     		bls	.L50
 780              		.loc 1 2086 109 is_stmt 0 discriminator 1
 781 002a FB69     		ldr	r3, [r7, #28]
 782 002c 033B     		subs	r3, r3, #3
 783 002e 00E0     		b	.L51
 784              	.L50:
 785              		.loc 1 2086 109 discriminator 2
 786 0030 0023     		movs	r3, #0
 787              	.L51:
 788              		.loc 1 2086 23 is_stmt 1 discriminator 4
 789 0032 7B61     		str	r3, [r7, #20]
2087:Drivers/CMSIS/Include/core_cm7.h **** 
2088:Drivers/CMSIS/Include/core_cm7.h ****   return (
2089:Drivers/CMSIS/Include/core_cm7.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 790              		.loc 1 2089 30 discriminator 4
 791 0034 4FF0FF32 		mov	r2, #-1
 792 0038 BB69     		ldr	r3, [r7, #24]
 793 003a 02FA03F3 		lsl	r3, r2, r3
 794 003e DA43     		mvns	r2, r3
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 68


 795 0040 BB68     		ldr	r3, [r7, #8]
 796 0042 1A40     		ands	r2, r2, r3
 797              		.loc 1 2089 82 discriminator 4
 798 0044 7B69     		ldr	r3, [r7, #20]
 799 0046 9A40     		lsls	r2, r2, r3
2090:Drivers/CMSIS/Include/core_cm7.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800              		.loc 1 2090 30 discriminator 4
 801 0048 4FF0FF31 		mov	r1, #-1
 802 004c 7B69     		ldr	r3, [r7, #20]
 803 004e 01FA03F3 		lsl	r3, r1, r3
 804 0052 D943     		mvns	r1, r3
 805 0054 7B68     		ldr	r3, [r7, #4]
 806 0056 0B40     		ands	r3, r3, r1
2089:Drivers/CMSIS/Include/core_cm7.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 807              		.loc 1 2089 102 discriminator 4
 808 0058 1343     		orrs	r3, r3, r2
2091:Drivers/CMSIS/Include/core_cm7.h ****          );
2092:Drivers/CMSIS/Include/core_cm7.h **** }
 809              		.loc 1 2092 1 discriminator 4
 810 005a 1846     		mov	r0, r3
 811 005c 2437     		adds	r7, r7, #36
 812              	.LCFI61:
 813              		.cfi_def_cfa_offset 4
 814 005e BD46     		mov	sp, r7
 815              	.LCFI62:
 816              		.cfi_def_cfa_register 13
 817              		@ sp needed
 818 0060 5DF8047B 		ldr	r7, [sp], #4
 819              	.LCFI63:
 820              		.cfi_restore 7
 821              		.cfi_def_cfa_offset 0
 822 0064 7047     		bx	lr
 823              		.cfi_endproc
 824              	.LFE115:
 826              		.section	.text.NVIC_DecodePriority,"ax",%progbits
 827              		.align	1
 828              		.syntax unified
 829              		.thumb
 830              		.thumb_func
 832              	NVIC_DecodePriority:
 833              	.LFB116:
2093:Drivers/CMSIS/Include/core_cm7.h **** 
2094:Drivers/CMSIS/Include/core_cm7.h **** 
2095:Drivers/CMSIS/Include/core_cm7.h **** /**
2096:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Decode Priority
2097:Drivers/CMSIS/Include/core_cm7.h ****   \details Decodes an interrupt priority value with a given priority group to
2098:Drivers/CMSIS/Include/core_cm7.h ****            preemptive priority value and subpriority value.
2099:Drivers/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
2100:Drivers/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
2101:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
2102:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]     PriorityGroup  Used priority group.
2103:Drivers/CMSIS/Include/core_cm7.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
2104:Drivers/CMSIS/Include/core_cm7.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
2105:Drivers/CMSIS/Include/core_cm7.h ****  */
2106:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
2107:Drivers/CMSIS/Include/core_cm7.h **** {
 834              		.loc 1 2107 1
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 69


 835              		.cfi_startproc
 836              		@ args = 0, pretend = 0, frame = 32
 837              		@ frame_needed = 1, uses_anonymous_args = 0
 838              		@ link register save eliminated.
 839 0000 80B4     		push	{r7}
 840              	.LCFI64:
 841              		.cfi_def_cfa_offset 4
 842              		.cfi_offset 7, -4
 843 0002 89B0     		sub	sp, sp, #36
 844              	.LCFI65:
 845              		.cfi_def_cfa_offset 40
 846 0004 00AF     		add	r7, sp, #0
 847              	.LCFI66:
 848              		.cfi_def_cfa_register 7
 849 0006 F860     		str	r0, [r7, #12]
 850 0008 B960     		str	r1, [r7, #8]
 851 000a 7A60     		str	r2, [r7, #4]
 852 000c 3B60     		str	r3, [r7]
2108:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
 853              		.loc 1 2108 12
 854 000e BB68     		ldr	r3, [r7, #8]
 855 0010 03F00703 		and	r3, r3, #7
 856 0014 FB61     		str	r3, [r7, #28]
2109:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PreemptPriorityBits;
2110:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t SubPriorityBits;
2111:Drivers/CMSIS/Include/core_cm7.h **** 
2112:Drivers/CMSIS/Include/core_cm7.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
 857              		.loc 1 2112 31
 858 0016 FB69     		ldr	r3, [r7, #28]
 859 0018 C3F10703 		rsb	r3, r3, #7
 860              		.loc 1 2112 23
 861 001c 042B     		cmp	r3, #4
 862 001e 28BF     		it	cs
 863 0020 0423     		movcs	r3, #4
 864 0022 BB61     		str	r3, [r7, #24]
2113:Drivers/CMSIS/Include/core_cm7.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 865              		.loc 1 2113 44
 866 0024 FB69     		ldr	r3, [r7, #28]
 867 0026 0433     		adds	r3, r3, #4
 868              		.loc 1 2113 109
 869 0028 062B     		cmp	r3, #6
 870 002a 02D9     		bls	.L54
 871              		.loc 1 2113 109 is_stmt 0 discriminator 1
 872 002c FB69     		ldr	r3, [r7, #28]
 873 002e 033B     		subs	r3, r3, #3
 874 0030 00E0     		b	.L55
 875              	.L54:
 876              		.loc 1 2113 109 discriminator 2
 877 0032 0023     		movs	r3, #0
 878              	.L55:
 879              		.loc 1 2113 23 is_stmt 1 discriminator 4
 880 0034 7B61     		str	r3, [r7, #20]
2114:Drivers/CMSIS/Include/core_cm7.h **** 
2115:Drivers/CMSIS/Include/core_cm7.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
 881              		.loc 1 2115 33 discriminator 4
 882 0036 FA68     		ldr	r2, [r7, #12]
 883 0038 7B69     		ldr	r3, [r7, #20]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 70


 884 003a DA40     		lsrs	r2, r2, r3
 885              		.loc 1 2115 53 discriminator 4
 886 003c 4FF0FF31 		mov	r1, #-1
 887 0040 BB69     		ldr	r3, [r7, #24]
 888 0042 01FA03F3 		lsl	r3, r1, r3
 889 0046 DB43     		mvns	r3, r3
 890 0048 1A40     		ands	r2, r2, r3
 891              		.loc 1 2115 21 discriminator 4
 892 004a 7B68     		ldr	r3, [r7, #4]
 893 004c 1A60     		str	r2, [r3]
2116:Drivers/CMSIS/Include/core_cm7.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 894              		.loc 1 2116 53 discriminator 4
 895 004e 4FF0FF32 		mov	r2, #-1
 896 0052 7B69     		ldr	r3, [r7, #20]
 897 0054 02FA03F3 		lsl	r3, r2, r3
 898 0058 DA43     		mvns	r2, r3
 899 005a FB68     		ldr	r3, [r7, #12]
 900 005c 1A40     		ands	r2, r2, r3
 901              		.loc 1 2116 21 discriminator 4
 902 005e 3B68     		ldr	r3, [r7]
 903 0060 1A60     		str	r2, [r3]
2117:Drivers/CMSIS/Include/core_cm7.h **** }
 904              		.loc 1 2117 1 discriminator 4
 905 0062 00BF     		nop
 906 0064 2437     		adds	r7, r7, #36
 907              	.LCFI67:
 908              		.cfi_def_cfa_offset 4
 909 0066 BD46     		mov	sp, r7
 910              	.LCFI68:
 911              		.cfi_def_cfa_register 13
 912              		@ sp needed
 913 0068 5DF8047B 		ldr	r7, [sp], #4
 914              	.LCFI69:
 915              		.cfi_restore 7
 916              		.cfi_def_cfa_offset 0
 917 006c 7047     		bx	lr
 918              		.cfi_endproc
 919              	.LFE116:
 921              		.section	.text.__NVIC_SystemReset,"ax",%progbits
 922              		.align	1
 923              		.syntax unified
 924              		.thumb
 925              		.thumb_func
 927              	__NVIC_SystemReset:
 928              	.LFB119:
2118:Drivers/CMSIS/Include/core_cm7.h **** 
2119:Drivers/CMSIS/Include/core_cm7.h **** 
2120:Drivers/CMSIS/Include/core_cm7.h **** /**
2121:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Interrupt Vector
2122:Drivers/CMSIS/Include/core_cm7.h ****   \details Sets an interrupt vector in SRAM based interrupt vector table.
2123:Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2124:Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2125:Drivers/CMSIS/Include/core_cm7.h ****            VTOR must been relocated to SRAM before.
2126:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   IRQn      Interrupt number
2127:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   vector    Address of interrupt handler function
2128:Drivers/CMSIS/Include/core_cm7.h ****  */
2129:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 71


2130:Drivers/CMSIS/Include/core_cm7.h **** {
2131:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t vectors = (uint32_t )SCB->VTOR;
2132:Drivers/CMSIS/Include/core_cm7.h ****   (* (int *) (vectors + ((int32_t)IRQn + NVIC_USER_IRQ_OFFSET) * 4)) = vector;
2133:Drivers/CMSIS/Include/core_cm7.h ****   __DSB();
2134:Drivers/CMSIS/Include/core_cm7.h **** }
2135:Drivers/CMSIS/Include/core_cm7.h **** 
2136:Drivers/CMSIS/Include/core_cm7.h **** 
2137:Drivers/CMSIS/Include/core_cm7.h **** /**
2138:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Interrupt Vector
2139:Drivers/CMSIS/Include/core_cm7.h ****   \details Reads an interrupt vector from interrupt vector table.
2140:Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2141:Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2142:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   IRQn      Interrupt number.
2143:Drivers/CMSIS/Include/core_cm7.h ****   \return                 Address of interrupt handler function
2144:Drivers/CMSIS/Include/core_cm7.h ****  */
2145:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
2146:Drivers/CMSIS/Include/core_cm7.h **** {
2147:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t vectors = (uint32_t )SCB->VTOR;
2148:Drivers/CMSIS/Include/core_cm7.h ****   return (uint32_t)(* (int *) (vectors + ((int32_t)IRQn + NVIC_USER_IRQ_OFFSET) * 4));
2149:Drivers/CMSIS/Include/core_cm7.h **** }
2150:Drivers/CMSIS/Include/core_cm7.h **** 
2151:Drivers/CMSIS/Include/core_cm7.h **** 
2152:Drivers/CMSIS/Include/core_cm7.h **** /**
2153:Drivers/CMSIS/Include/core_cm7.h ****   \brief   System Reset
2154:Drivers/CMSIS/Include/core_cm7.h ****   \details Initiates a system reset request to reset the MCU.
2155:Drivers/CMSIS/Include/core_cm7.h ****  */
2156:Drivers/CMSIS/Include/core_cm7.h **** __NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
2157:Drivers/CMSIS/Include/core_cm7.h **** {
 929              		.loc 1 2157 1
 930              		.cfi_startproc
 931              		@ args = 0, pretend = 0, frame = 0
 932              		@ frame_needed = 1, uses_anonymous_args = 0
 933              		@ link register save eliminated.
 934 0000 80B4     		push	{r7}
 935              	.LCFI70:
 936              		.cfi_def_cfa_offset 4
 937              		.cfi_offset 7, -4
 938 0002 00AF     		add	r7, sp, #0
 939              	.LCFI71:
 940              		.cfi_def_cfa_register 7
 941              	.LBB20:
 942              	.LBB21:
 946:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 943              		.loc 2 946 3
 944              		.syntax unified
 945              	@ 946 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 946 0004 BFF34F8F 		dsb 0xF
 947              	@ 0 "" 2
 948              		.loc 2 947 1
 949              		.thumb
 950              		.syntax unified
 951 0008 00BF     		nop
 952              	.LBE21:
 953              	.LBE20:
2158:Drivers/CMSIS/Include/core_cm7.h ****   __DSB();                                                          /* Ensure all outstanding memor
2159:Drivers/CMSIS/Include/core_cm7.h ****                                                                        buffered write are completed
2160:Drivers/CMSIS/Include/core_cm7.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 72


2161:Drivers/CMSIS/Include/core_cm7.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 954              		.loc 1 2161 32
 955 000a 064B     		ldr	r3, .L58
 956 000c DB68     		ldr	r3, [r3, #12]
 957              		.loc 1 2161 40
 958 000e 03F4E062 		and	r2, r3, #1792
2160:Drivers/CMSIS/Include/core_cm7.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 959              		.loc 1 2160 6
 960 0012 0449     		ldr	r1, .L58
2160:Drivers/CMSIS/Include/core_cm7.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 961              		.loc 1 2160 17
 962 0014 044B     		ldr	r3, .L58+4
 963 0016 1343     		orrs	r3, r3, r2
2160:Drivers/CMSIS/Include/core_cm7.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 964              		.loc 1 2160 15
 965 0018 CB60     		str	r3, [r1, #12]
 966              	.LBB22:
 967              	.LBB23:
 946:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 968              		.loc 2 946 3
 969              		.syntax unified
 970              	@ 946 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 971 001a BFF34F8F 		dsb 0xF
 972              	@ 0 "" 2
 973              		.loc 2 947 1
 974              		.thumb
 975              		.syntax unified
 976 001e 00BF     		nop
 977              	.L57:
 978              	.LBE23:
 979              	.LBE22:
2162:Drivers/CMSIS/Include/core_cm7.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
2163:Drivers/CMSIS/Include/core_cm7.h ****   __DSB();                                                          /* Ensure completion of memory 
2164:Drivers/CMSIS/Include/core_cm7.h **** 
2165:Drivers/CMSIS/Include/core_cm7.h ****   for(;;)                                                           /* wait until reset */
2166:Drivers/CMSIS/Include/core_cm7.h ****   {
2167:Drivers/CMSIS/Include/core_cm7.h ****     __NOP();
 980              		.loc 1 2167 5 discriminator 1
 981              		.syntax unified
 982              	@ 2167 "Drivers/CMSIS/Include/core_cm7.h" 1
 983 0020 00BF     		nop
 984              	@ 0 "" 2
 985              		.thumb
 986              		.syntax unified
 987 0022 FDE7     		b	.L57
 988              	.L59:
 989              		.align	2
 990              	.L58:
 991 0024 00ED00E0 		.word	-536810240
 992 0028 0400FA05 		.word	100270084
 993              		.cfi_endproc
 994              	.LFE119:
 996              		.section	.text.SysTick_Config,"ax",%progbits
 997              		.align	1
 998              		.syntax unified
 999              		.thumb
 1000              		.thumb_func
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 73


 1002              	SysTick_Config:
 1003              	.LFB140:
2168:Drivers/CMSIS/Include/core_cm7.h ****   }
2169:Drivers/CMSIS/Include/core_cm7.h **** }
2170:Drivers/CMSIS/Include/core_cm7.h **** 
2171:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of CMSIS_Core_NVICFunctions */
2172:Drivers/CMSIS/Include/core_cm7.h **** 
2173:Drivers/CMSIS/Include/core_cm7.h **** 
2174:Drivers/CMSIS/Include/core_cm7.h **** /* ##########################  MPU functions  #################################### */
2175:Drivers/CMSIS/Include/core_cm7.h **** 
2176:Drivers/CMSIS/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
2177:Drivers/CMSIS/Include/core_cm7.h **** 
2178:Drivers/CMSIS/Include/core_cm7.h **** #include "mpu_armv7.h"
2179:Drivers/CMSIS/Include/core_cm7.h **** 
2180:Drivers/CMSIS/Include/core_cm7.h **** #endif
2181:Drivers/CMSIS/Include/core_cm7.h **** 
2182:Drivers/CMSIS/Include/core_cm7.h **** 
2183:Drivers/CMSIS/Include/core_cm7.h **** /* ##########################  FPU functions  #################################### */
2184:Drivers/CMSIS/Include/core_cm7.h **** /**
2185:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2186:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_FpuFunctions FPU Functions
2187:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Function that provides FPU type.
2188:Drivers/CMSIS/Include/core_cm7.h ****   @{
2189:Drivers/CMSIS/Include/core_cm7.h ****  */
2190:Drivers/CMSIS/Include/core_cm7.h **** 
2191:Drivers/CMSIS/Include/core_cm7.h **** /**
2192:Drivers/CMSIS/Include/core_cm7.h ****   \brief   get FPU type
2193:Drivers/CMSIS/Include/core_cm7.h ****   \details returns the FPU type
2194:Drivers/CMSIS/Include/core_cm7.h ****   \returns
2195:Drivers/CMSIS/Include/core_cm7.h ****    - \b  0: No FPU
2196:Drivers/CMSIS/Include/core_cm7.h ****    - \b  1: Single precision FPU
2197:Drivers/CMSIS/Include/core_cm7.h ****    - \b  2: Double + Single precision FPU
2198:Drivers/CMSIS/Include/core_cm7.h ****  */
2199:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t SCB_GetFPUType(void)
2200:Drivers/CMSIS/Include/core_cm7.h **** {
2201:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t mvfr0;
2202:Drivers/CMSIS/Include/core_cm7.h **** 
2203:Drivers/CMSIS/Include/core_cm7.h ****   mvfr0 = SCB->MVFR0;
2204:Drivers/CMSIS/Include/core_cm7.h ****   if      ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x220U)
2205:Drivers/CMSIS/Include/core_cm7.h ****   {
2206:Drivers/CMSIS/Include/core_cm7.h ****     return 2U;           /* Double + Single precision FPU */
2207:Drivers/CMSIS/Include/core_cm7.h ****   }
2208:Drivers/CMSIS/Include/core_cm7.h ****   else if ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x020U)
2209:Drivers/CMSIS/Include/core_cm7.h ****   {
2210:Drivers/CMSIS/Include/core_cm7.h ****     return 1U;           /* Single precision FPU */
2211:Drivers/CMSIS/Include/core_cm7.h ****   }
2212:Drivers/CMSIS/Include/core_cm7.h ****   else
2213:Drivers/CMSIS/Include/core_cm7.h ****   {
2214:Drivers/CMSIS/Include/core_cm7.h ****     return 0U;           /* No FPU */
2215:Drivers/CMSIS/Include/core_cm7.h ****   }
2216:Drivers/CMSIS/Include/core_cm7.h **** }
2217:Drivers/CMSIS/Include/core_cm7.h **** 
2218:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of CMSIS_Core_FpuFunctions */
2219:Drivers/CMSIS/Include/core_cm7.h **** 
2220:Drivers/CMSIS/Include/core_cm7.h **** 
2221:Drivers/CMSIS/Include/core_cm7.h **** 
2222:Drivers/CMSIS/Include/core_cm7.h **** /* ##########################  Cache functions  #################################### */
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 74


2223:Drivers/CMSIS/Include/core_cm7.h **** /**
2224:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2225:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_CacheFunctions Cache Functions
2226:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Functions that configure Instruction and Data cache.
2227:Drivers/CMSIS/Include/core_cm7.h ****   @{
2228:Drivers/CMSIS/Include/core_cm7.h ****  */
2229:Drivers/CMSIS/Include/core_cm7.h **** 
2230:Drivers/CMSIS/Include/core_cm7.h **** /* Cache Size ID Register Macros */
2231:Drivers/CMSIS/Include/core_cm7.h **** #define CCSIDR_WAYS(x)         (((x) & SCB_CCSIDR_ASSOCIATIVITY_Msk) >> SCB_CCSIDR_ASSOCIATIVITY_Po
2232:Drivers/CMSIS/Include/core_cm7.h **** #define CCSIDR_SETS(x)         (((x) & SCB_CCSIDR_NUMSETS_Msk      ) >> SCB_CCSIDR_NUMSETS_Pos     
2233:Drivers/CMSIS/Include/core_cm7.h **** 
2234:Drivers/CMSIS/Include/core_cm7.h **** #define __SCB_DCACHE_LINE_SIZE  32U /*!< Cortex-M7 cache line size is fixed to 32 bytes (8 words). 
2235:Drivers/CMSIS/Include/core_cm7.h **** #define __SCB_ICACHE_LINE_SIZE  32U /*!< Cortex-M7 cache line size is fixed to 32 bytes (8 words). 
2236:Drivers/CMSIS/Include/core_cm7.h **** 
2237:Drivers/CMSIS/Include/core_cm7.h **** /**
2238:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Enable I-Cache
2239:Drivers/CMSIS/Include/core_cm7.h ****   \details Turns on I-Cache
2240:Drivers/CMSIS/Include/core_cm7.h ****   */
2241:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_EnableICache (void)
2242:Drivers/CMSIS/Include/core_cm7.h **** {
2243:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2244:Drivers/CMSIS/Include/core_cm7.h ****     if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
2245:Drivers/CMSIS/Include/core_cm7.h **** 
2246:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2247:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2248:Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
2249:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2250:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2251:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
2252:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2253:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2254:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2255:Drivers/CMSIS/Include/core_cm7.h **** }
2256:Drivers/CMSIS/Include/core_cm7.h **** 
2257:Drivers/CMSIS/Include/core_cm7.h **** 
2258:Drivers/CMSIS/Include/core_cm7.h **** /**
2259:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Disable I-Cache
2260:Drivers/CMSIS/Include/core_cm7.h ****   \details Turns off I-Cache
2261:Drivers/CMSIS/Include/core_cm7.h ****   */
2262:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_DisableICache (void)
2263:Drivers/CMSIS/Include/core_cm7.h **** {
2264:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2265:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2266:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2267:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_IC_Msk;  /* disable I-Cache */
2268:Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
2269:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2270:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2271:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2272:Drivers/CMSIS/Include/core_cm7.h **** }
2273:Drivers/CMSIS/Include/core_cm7.h **** 
2274:Drivers/CMSIS/Include/core_cm7.h **** 
2275:Drivers/CMSIS/Include/core_cm7.h **** /**
2276:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Invalidate I-Cache
2277:Drivers/CMSIS/Include/core_cm7.h ****   \details Invalidates I-Cache
2278:Drivers/CMSIS/Include/core_cm7.h ****   */
2279:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_InvalidateICache (void)
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 75


2280:Drivers/CMSIS/Include/core_cm7.h **** {
2281:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2282:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2283:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2284:Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;
2285:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2286:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2287:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2288:Drivers/CMSIS/Include/core_cm7.h **** }
2289:Drivers/CMSIS/Include/core_cm7.h **** 
2290:Drivers/CMSIS/Include/core_cm7.h **** 
2291:Drivers/CMSIS/Include/core_cm7.h **** /**
2292:Drivers/CMSIS/Include/core_cm7.h ****   \brief   I-Cache Invalidate by address
2293:Drivers/CMSIS/Include/core_cm7.h ****   \details Invalidates I-Cache for the given address.
2294:Drivers/CMSIS/Include/core_cm7.h ****            I-Cache is invalidated starting from a 32 byte aligned address in 32 byte granularity.
2295:Drivers/CMSIS/Include/core_cm7.h ****            I-Cache memory blocks which are part of given address + given size are invalidated.
2296:Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   addr    address
2297:Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   isize   size of memory block (in number of bytes)
2298:Drivers/CMSIS/Include/core_cm7.h **** */
2299:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_InvalidateICache_by_Addr (void *addr, int32_t isize)
2300:Drivers/CMSIS/Include/core_cm7.h **** {
2301:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2302:Drivers/CMSIS/Include/core_cm7.h ****     if ( isize > 0 ) {
2303:Drivers/CMSIS/Include/core_cm7.h ****        int32_t op_size = isize + (((uint32_t)addr) & (__SCB_ICACHE_LINE_SIZE - 1U));
2304:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_ICACHE_LINE_SIZE - 1U) */;
2305:Drivers/CMSIS/Include/core_cm7.h **** 
2306:Drivers/CMSIS/Include/core_cm7.h ****       __DSB();
2307:Drivers/CMSIS/Include/core_cm7.h **** 
2308:Drivers/CMSIS/Include/core_cm7.h ****       do {
2309:Drivers/CMSIS/Include/core_cm7.h ****         SCB->ICIMVAU = op_addr;             /* register accepts only 32byte aligned values, only bi
2310:Drivers/CMSIS/Include/core_cm7.h ****         op_addr += __SCB_ICACHE_LINE_SIZE;
2311:Drivers/CMSIS/Include/core_cm7.h ****         op_size -= __SCB_ICACHE_LINE_SIZE;
2312:Drivers/CMSIS/Include/core_cm7.h ****       } while ( op_size > 0 );
2313:Drivers/CMSIS/Include/core_cm7.h **** 
2314:Drivers/CMSIS/Include/core_cm7.h ****       __DSB();
2315:Drivers/CMSIS/Include/core_cm7.h ****       __ISB();
2316:Drivers/CMSIS/Include/core_cm7.h ****     }
2317:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2318:Drivers/CMSIS/Include/core_cm7.h **** }
2319:Drivers/CMSIS/Include/core_cm7.h **** 
2320:Drivers/CMSIS/Include/core_cm7.h **** 
2321:Drivers/CMSIS/Include/core_cm7.h **** /**
2322:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Enable D-Cache
2323:Drivers/CMSIS/Include/core_cm7.h ****   \details Turns on D-Cache
2324:Drivers/CMSIS/Include/core_cm7.h ****   */
2325:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_EnableDCache (void)
2326:Drivers/CMSIS/Include/core_cm7.h **** {
2327:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2328:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2329:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2330:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2331:Drivers/CMSIS/Include/core_cm7.h **** 
2332:Drivers/CMSIS/Include/core_cm7.h ****     if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
2333:Drivers/CMSIS/Include/core_cm7.h **** 
2334:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
2335:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2336:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 76


2337:Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2338:Drivers/CMSIS/Include/core_cm7.h **** 
2339:Drivers/CMSIS/Include/core_cm7.h ****                                             /* invalidate D-Cache */
2340:Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2341:Drivers/CMSIS/Include/core_cm7.h ****     do {
2342:Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2343:Drivers/CMSIS/Include/core_cm7.h ****       do {
2344:Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
2345:Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
2346:Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2347:Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2348:Drivers/CMSIS/Include/core_cm7.h ****         #endif
2349:Drivers/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2350:Drivers/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
2351:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2352:Drivers/CMSIS/Include/core_cm7.h **** 
2353:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
2354:Drivers/CMSIS/Include/core_cm7.h **** 
2355:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2356:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2357:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2358:Drivers/CMSIS/Include/core_cm7.h **** }
2359:Drivers/CMSIS/Include/core_cm7.h **** 
2360:Drivers/CMSIS/Include/core_cm7.h **** 
2361:Drivers/CMSIS/Include/core_cm7.h **** /**
2362:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Disable D-Cache
2363:Drivers/CMSIS/Include/core_cm7.h ****   \details Turns off D-Cache
2364:Drivers/CMSIS/Include/core_cm7.h ****   */
2365:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_DisableDCache (void)
2366:Drivers/CMSIS/Include/core_cm7.h **** {
2367:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2368:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2369:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2370:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2371:Drivers/CMSIS/Include/core_cm7.h **** 
2372:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
2373:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2374:Drivers/CMSIS/Include/core_cm7.h **** 
2375:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_DC_Msk;  /* disable D-Cache */
2376:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2377:Drivers/CMSIS/Include/core_cm7.h **** 
2378:Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2379:Drivers/CMSIS/Include/core_cm7.h **** 
2380:Drivers/CMSIS/Include/core_cm7.h ****                                             /* clean & invalidate D-Cache */
2381:Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2382:Drivers/CMSIS/Include/core_cm7.h ****     do {
2383:Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2384:Drivers/CMSIS/Include/core_cm7.h ****       do {
2385:Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
2386:Drivers/CMSIS/Include/core_cm7.h ****                        ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
2387:Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2388:Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2389:Drivers/CMSIS/Include/core_cm7.h ****         #endif
2390:Drivers/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2391:Drivers/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
2392:Drivers/CMSIS/Include/core_cm7.h **** 
2393:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 77


2394:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2395:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2396:Drivers/CMSIS/Include/core_cm7.h **** }
2397:Drivers/CMSIS/Include/core_cm7.h **** 
2398:Drivers/CMSIS/Include/core_cm7.h **** 
2399:Drivers/CMSIS/Include/core_cm7.h **** /**
2400:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Invalidate D-Cache
2401:Drivers/CMSIS/Include/core_cm7.h ****   \details Invalidates D-Cache
2402:Drivers/CMSIS/Include/core_cm7.h ****   */
2403:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_InvalidateDCache (void)
2404:Drivers/CMSIS/Include/core_cm7.h **** {
2405:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2406:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2407:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2408:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2409:Drivers/CMSIS/Include/core_cm7.h **** 
2410:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
2411:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2412:Drivers/CMSIS/Include/core_cm7.h **** 
2413:Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2414:Drivers/CMSIS/Include/core_cm7.h **** 
2415:Drivers/CMSIS/Include/core_cm7.h ****                                             /* invalidate D-Cache */
2416:Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2417:Drivers/CMSIS/Include/core_cm7.h ****     do {
2418:Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2419:Drivers/CMSIS/Include/core_cm7.h ****       do {
2420:Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
2421:Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
2422:Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2423:Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2424:Drivers/CMSIS/Include/core_cm7.h ****         #endif
2425:Drivers/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2426:Drivers/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
2427:Drivers/CMSIS/Include/core_cm7.h **** 
2428:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2429:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2430:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2431:Drivers/CMSIS/Include/core_cm7.h **** }
2432:Drivers/CMSIS/Include/core_cm7.h **** 
2433:Drivers/CMSIS/Include/core_cm7.h **** 
2434:Drivers/CMSIS/Include/core_cm7.h **** /**
2435:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Clean D-Cache
2436:Drivers/CMSIS/Include/core_cm7.h ****   \details Cleans D-Cache
2437:Drivers/CMSIS/Include/core_cm7.h ****   */
2438:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_CleanDCache (void)
2439:Drivers/CMSIS/Include/core_cm7.h **** {
2440:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2441:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2442:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2443:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2444:Drivers/CMSIS/Include/core_cm7.h **** 
2445:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
2446:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2447:Drivers/CMSIS/Include/core_cm7.h **** 
2448:Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2449:Drivers/CMSIS/Include/core_cm7.h **** 
2450:Drivers/CMSIS/Include/core_cm7.h ****                                             /* clean D-Cache */
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 78


2451:Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2452:Drivers/CMSIS/Include/core_cm7.h ****     do {
2453:Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2454:Drivers/CMSIS/Include/core_cm7.h ****       do {
2455:Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCCSW = (((sets << SCB_DCCSW_SET_Pos) & SCB_DCCSW_SET_Msk) |
2456:Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCCSW_WAY_Pos) & SCB_DCCSW_WAY_Msk)  );
2457:Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2458:Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2459:Drivers/CMSIS/Include/core_cm7.h ****         #endif
2460:Drivers/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2461:Drivers/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
2462:Drivers/CMSIS/Include/core_cm7.h **** 
2463:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2464:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2465:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2466:Drivers/CMSIS/Include/core_cm7.h **** }
2467:Drivers/CMSIS/Include/core_cm7.h **** 
2468:Drivers/CMSIS/Include/core_cm7.h **** 
2469:Drivers/CMSIS/Include/core_cm7.h **** /**
2470:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Clean & Invalidate D-Cache
2471:Drivers/CMSIS/Include/core_cm7.h ****   \details Cleans and Invalidates D-Cache
2472:Drivers/CMSIS/Include/core_cm7.h ****   */
2473:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_CleanInvalidateDCache (void)
2474:Drivers/CMSIS/Include/core_cm7.h **** {
2475:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2476:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2477:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2478:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2479:Drivers/CMSIS/Include/core_cm7.h **** 
2480:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
2481:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2482:Drivers/CMSIS/Include/core_cm7.h **** 
2483:Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2484:Drivers/CMSIS/Include/core_cm7.h **** 
2485:Drivers/CMSIS/Include/core_cm7.h ****                                             /* clean & invalidate D-Cache */
2486:Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2487:Drivers/CMSIS/Include/core_cm7.h ****     do {
2488:Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2489:Drivers/CMSIS/Include/core_cm7.h ****       do {
2490:Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
2491:Drivers/CMSIS/Include/core_cm7.h ****                        ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
2492:Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2493:Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2494:Drivers/CMSIS/Include/core_cm7.h ****         #endif
2495:Drivers/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2496:Drivers/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
2497:Drivers/CMSIS/Include/core_cm7.h **** 
2498:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2499:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2500:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2501:Drivers/CMSIS/Include/core_cm7.h **** }
2502:Drivers/CMSIS/Include/core_cm7.h **** 
2503:Drivers/CMSIS/Include/core_cm7.h **** 
2504:Drivers/CMSIS/Include/core_cm7.h **** /**
2505:Drivers/CMSIS/Include/core_cm7.h ****   \brief   D-Cache Invalidate by address
2506:Drivers/CMSIS/Include/core_cm7.h ****   \details Invalidates D-Cache for the given address.
2507:Drivers/CMSIS/Include/core_cm7.h ****            D-Cache is invalidated starting from a 32 byte aligned address in 32 byte granularity.
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 79


2508:Drivers/CMSIS/Include/core_cm7.h ****            D-Cache memory blocks which are part of given address + given size are invalidated.
2509:Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   addr    address
2510:Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   dsize   size of memory block (in number of bytes)
2511:Drivers/CMSIS/Include/core_cm7.h **** */
2512:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_InvalidateDCache_by_Addr (void *addr, int32_t dsize)
2513:Drivers/CMSIS/Include/core_cm7.h **** {
2514:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2515:Drivers/CMSIS/Include/core_cm7.h ****     if ( dsize > 0 ) { 
2516:Drivers/CMSIS/Include/core_cm7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
2517:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
2518:Drivers/CMSIS/Include/core_cm7.h ****     
2519:Drivers/CMSIS/Include/core_cm7.h ****       __DSB();
2520:Drivers/CMSIS/Include/core_cm7.h **** 
2521:Drivers/CMSIS/Include/core_cm7.h ****       do {
2522:Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCIMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
2523:Drivers/CMSIS/Include/core_cm7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
2524:Drivers/CMSIS/Include/core_cm7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
2525:Drivers/CMSIS/Include/core_cm7.h ****       } while ( op_size > 0 );
2526:Drivers/CMSIS/Include/core_cm7.h **** 
2527:Drivers/CMSIS/Include/core_cm7.h ****       __DSB();
2528:Drivers/CMSIS/Include/core_cm7.h ****       __ISB();
2529:Drivers/CMSIS/Include/core_cm7.h ****     }
2530:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2531:Drivers/CMSIS/Include/core_cm7.h **** }
2532:Drivers/CMSIS/Include/core_cm7.h **** 
2533:Drivers/CMSIS/Include/core_cm7.h **** 
2534:Drivers/CMSIS/Include/core_cm7.h **** /**
2535:Drivers/CMSIS/Include/core_cm7.h ****   \brief   D-Cache Clean by address
2536:Drivers/CMSIS/Include/core_cm7.h ****   \details Cleans D-Cache for the given address
2537:Drivers/CMSIS/Include/core_cm7.h ****            D-Cache is cleaned starting from a 32 byte aligned address in 32 byte granularity.
2538:Drivers/CMSIS/Include/core_cm7.h ****            D-Cache memory blocks which are part of given address + given size are cleaned.
2539:Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   addr    address
2540:Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   dsize   size of memory block (in number of bytes)
2541:Drivers/CMSIS/Include/core_cm7.h **** */
2542:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_CleanDCache_by_Addr (uint32_t *addr, int32_t dsize)
2543:Drivers/CMSIS/Include/core_cm7.h **** {
2544:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2545:Drivers/CMSIS/Include/core_cm7.h ****     if ( dsize > 0 ) { 
2546:Drivers/CMSIS/Include/core_cm7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
2547:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
2548:Drivers/CMSIS/Include/core_cm7.h ****     
2549:Drivers/CMSIS/Include/core_cm7.h ****       __DSB();
2550:Drivers/CMSIS/Include/core_cm7.h **** 
2551:Drivers/CMSIS/Include/core_cm7.h ****       do {
2552:Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCCMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
2553:Drivers/CMSIS/Include/core_cm7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
2554:Drivers/CMSIS/Include/core_cm7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
2555:Drivers/CMSIS/Include/core_cm7.h ****       } while ( op_size > 0 );
2556:Drivers/CMSIS/Include/core_cm7.h **** 
2557:Drivers/CMSIS/Include/core_cm7.h ****       __DSB();
2558:Drivers/CMSIS/Include/core_cm7.h ****       __ISB();
2559:Drivers/CMSIS/Include/core_cm7.h ****     }
2560:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2561:Drivers/CMSIS/Include/core_cm7.h **** }
2562:Drivers/CMSIS/Include/core_cm7.h **** 
2563:Drivers/CMSIS/Include/core_cm7.h **** 
2564:Drivers/CMSIS/Include/core_cm7.h **** /**
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 80


2565:Drivers/CMSIS/Include/core_cm7.h ****   \brief   D-Cache Clean and Invalidate by address
2566:Drivers/CMSIS/Include/core_cm7.h ****   \details Cleans and invalidates D_Cache for the given address
2567:Drivers/CMSIS/Include/core_cm7.h ****            D-Cache is cleaned and invalidated starting from a 32 byte aligned address in 32 byte gr
2568:Drivers/CMSIS/Include/core_cm7.h ****            D-Cache memory blocks which are part of given address + given size are cleaned and inval
2569:Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   addr    address (aligned to 32-byte boundary)
2570:Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   dsize   size of memory block (in number of bytes)
2571:Drivers/CMSIS/Include/core_cm7.h **** */
2572:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_CleanInvalidateDCache_by_Addr (uint32_t *addr, int32_t dsize)
2573:Drivers/CMSIS/Include/core_cm7.h **** {
2574:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2575:Drivers/CMSIS/Include/core_cm7.h ****     if ( dsize > 0 ) { 
2576:Drivers/CMSIS/Include/core_cm7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
2577:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
2578:Drivers/CMSIS/Include/core_cm7.h ****     
2579:Drivers/CMSIS/Include/core_cm7.h ****       __DSB();
2580:Drivers/CMSIS/Include/core_cm7.h **** 
2581:Drivers/CMSIS/Include/core_cm7.h ****       do {
2582:Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCCIMVAC = op_addr;            /* register accepts only 32byte aligned values, only bi
2583:Drivers/CMSIS/Include/core_cm7.h ****         op_addr +=          __SCB_DCACHE_LINE_SIZE;
2584:Drivers/CMSIS/Include/core_cm7.h ****         op_size -=          __SCB_DCACHE_LINE_SIZE;
2585:Drivers/CMSIS/Include/core_cm7.h ****       } while ( op_size > 0 );
2586:Drivers/CMSIS/Include/core_cm7.h **** 
2587:Drivers/CMSIS/Include/core_cm7.h ****       __DSB();
2588:Drivers/CMSIS/Include/core_cm7.h ****       __ISB();
2589:Drivers/CMSIS/Include/core_cm7.h ****     }
2590:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2591:Drivers/CMSIS/Include/core_cm7.h **** }
2592:Drivers/CMSIS/Include/core_cm7.h **** 
2593:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of CMSIS_Core_CacheFunctions */
2594:Drivers/CMSIS/Include/core_cm7.h **** 
2595:Drivers/CMSIS/Include/core_cm7.h **** 
2596:Drivers/CMSIS/Include/core_cm7.h **** 
2597:Drivers/CMSIS/Include/core_cm7.h **** /* ##################################    SysTick function  ########################################
2598:Drivers/CMSIS/Include/core_cm7.h **** /**
2599:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2600:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
2601:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Functions that configure the System.
2602:Drivers/CMSIS/Include/core_cm7.h ****   @{
2603:Drivers/CMSIS/Include/core_cm7.h ****  */
2604:Drivers/CMSIS/Include/core_cm7.h **** 
2605:Drivers/CMSIS/Include/core_cm7.h **** #if defined (__Vendor_SysTickConfig) && (__Vendor_SysTickConfig == 0U)
2606:Drivers/CMSIS/Include/core_cm7.h **** 
2607:Drivers/CMSIS/Include/core_cm7.h **** /**
2608:Drivers/CMSIS/Include/core_cm7.h ****   \brief   System Tick Configuration
2609:Drivers/CMSIS/Include/core_cm7.h ****   \details Initializes the System Timer and its interrupt, and starts the System Tick Timer.
2610:Drivers/CMSIS/Include/core_cm7.h ****            Counter is in free running mode to generate periodic interrupts.
2611:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]  ticks  Number of ticks between two interrupts.
2612:Drivers/CMSIS/Include/core_cm7.h ****   \return          0  Function succeeded.
2613:Drivers/CMSIS/Include/core_cm7.h ****   \return          1  Function failed.
2614:Drivers/CMSIS/Include/core_cm7.h ****   \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
2615:Drivers/CMSIS/Include/core_cm7.h ****            function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.
2616:Drivers/CMSIS/Include/core_cm7.h ****            must contain a vendor-specific implementation of this function.
2617:Drivers/CMSIS/Include/core_cm7.h ****  */
2618:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
2619:Drivers/CMSIS/Include/core_cm7.h **** {
 1004              		.loc 1 2619 1
 1005              		.cfi_startproc
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 81


 1006              		@ args = 0, pretend = 0, frame = 8
 1007              		@ frame_needed = 1, uses_anonymous_args = 0
 1008 0000 80B5     		push	{r7, lr}
 1009              	.LCFI72:
 1010              		.cfi_def_cfa_offset 8
 1011              		.cfi_offset 7, -8
 1012              		.cfi_offset 14, -4
 1013 0002 82B0     		sub	sp, sp, #8
 1014              	.LCFI73:
 1015              		.cfi_def_cfa_offset 16
 1016 0004 00AF     		add	r7, sp, #0
 1017              	.LCFI74:
 1018              		.cfi_def_cfa_register 7
 1019 0006 7860     		str	r0, [r7, #4]
2620:Drivers/CMSIS/Include/core_cm7.h ****   if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 1020              		.loc 1 2620 14
 1021 0008 7B68     		ldr	r3, [r7, #4]
 1022 000a 013B     		subs	r3, r3, #1
 1023              		.loc 1 2620 6
 1024 000c B3F1807F 		cmp	r3, #16777216
 1025 0010 01D3     		bcc	.L61
2621:Drivers/CMSIS/Include/core_cm7.h ****   {
2622:Drivers/CMSIS/Include/core_cm7.h ****     return (1UL);                                                   /* Reload value impossible */
 1026              		.loc 1 2622 12
 1027 0012 0123     		movs	r3, #1
 1028 0014 0FE0     		b	.L62
 1029              	.L61:
2623:Drivers/CMSIS/Include/core_cm7.h ****   }
2624:Drivers/CMSIS/Include/core_cm7.h **** 
2625:Drivers/CMSIS/Include/core_cm7.h ****   SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 1030              		.loc 1 2625 10
 1031 0016 0A4A     		ldr	r2, .L63
 1032              		.loc 1 2625 20
 1033 0018 7B68     		ldr	r3, [r7, #4]
 1034 001a 013B     		subs	r3, r3, #1
 1035              		.loc 1 2625 18
 1036 001c 5360     		str	r3, [r2, #4]
2626:Drivers/CMSIS/Include/core_cm7.h ****   NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Int
 1037              		.loc 1 2626 3
 1038 001e 0F21     		movs	r1, #15
 1039 0020 4FF0FF30 		mov	r0, #-1
 1040 0024 FFF7FEFF 		bl	__NVIC_SetPriority
2627:Drivers/CMSIS/Include/core_cm7.h ****   SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Val
 1041              		.loc 1 2627 10
 1042 0028 054B     		ldr	r3, .L63
 1043              		.loc 1 2627 18
 1044 002a 0022     		movs	r2, #0
 1045 002c 9A60     		str	r2, [r3, #8]
2628:Drivers/CMSIS/Include/core_cm7.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 1046              		.loc 1 2628 10
 1047 002e 044B     		ldr	r3, .L63
 1048              		.loc 1 2628 18
 1049 0030 0722     		movs	r2, #7
 1050 0032 1A60     		str	r2, [r3]
2629:Drivers/CMSIS/Include/core_cm7.h ****                    SysTick_CTRL_TICKINT_Msk   |
2630:Drivers/CMSIS/Include/core_cm7.h ****                    SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTi
2631:Drivers/CMSIS/Include/core_cm7.h ****   return (0UL);                                                     /* Function successful */
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 82


 1051              		.loc 1 2631 10
 1052 0034 0023     		movs	r3, #0
 1053              	.L62:
2632:Drivers/CMSIS/Include/core_cm7.h **** }
 1054              		.loc 1 2632 1
 1055 0036 1846     		mov	r0, r3
 1056 0038 0837     		adds	r7, r7, #8
 1057              	.LCFI75:
 1058              		.cfi_def_cfa_offset 8
 1059 003a BD46     		mov	sp, r7
 1060              	.LCFI76:
 1061              		.cfi_def_cfa_register 13
 1062              		@ sp needed
 1063 003c 80BD     		pop	{r7, pc}
 1064              	.L64:
 1065 003e 00BF     		.align	2
 1066              	.L63:
 1067 0040 10E000E0 		.word	-536813552
 1068              		.cfi_endproc
 1069              	.LFE140:
 1071              		.section	.text.HAL_NVIC_SetPriorityGrouping,"ax",%progbits
 1072              		.align	1
 1073              		.global	HAL_NVIC_SetPriorityGrouping
 1074              		.syntax unified
 1075              		.thumb
 1076              		.thumb_func
 1078              	HAL_NVIC_SetPriorityGrouping:
 1079              	.LFB333:
 1080              		.file 3 "Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c"
   1:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
   2:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   ******************************************************************************
   3:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @file    stm32h7xx_hal_cortex.c
   4:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @author  MCD Application Team
   5:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief   CORTEX HAL module driver.
   6:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *          functionalities of the CORTEX:
   8:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *           + Peripheral Control functions
  10:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *
  11:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   @verbatim
  12:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   ==============================================================================
  13:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                         ##### How to use this driver #####
  14:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   ==============================================================================
  15:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  16:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     [..]
  17:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     *** How to configure Interrupts using CORTEX HAL driver ***
  18:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     ===========================================================
  19:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     [..]
  20:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     This section provides functions allowing to configure the NVIC interrupts (IRQ).
  21:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     The Cortex-M exceptions are managed by CMSIS functions.
  22:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  23:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     (#) Configure the NVIC Priority Grouping using HAL_NVIC_SetPriorityGrouping()
  24:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****         function according to the following table.
  25:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     (#) Configure the priority of the selected IRQ Channels using HAL_NVIC_SetPriority().
  26:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     (#) Enable the selected IRQ Channels using HAL_NVIC_EnableIRQ().
  27:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     (#) please refer to programming manual for details in how to configure priority.
  28:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 83


  29:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****      -@- When the NVIC_PRIORITYGROUP_0 is selected, IRQ preemption is no more possible.
  30:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****          The pending IRQ priority will be managed only by the sub priority.
  31:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  32:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****      -@- IRQ priority order (sorted by highest to lowest priority):
  33:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****         (+@) Lowest preemption priority
  34:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****         (+@) Lowest sub priority
  35:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****         (+@) Lowest hardware priority (IRQ number)
  36:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  37:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     [..]
  38:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     *** How to configure Systick using CORTEX HAL driver ***
  39:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     ========================================================
  40:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     [..]
  41:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     Setup SysTick Timer for time base.
  42:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  43:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****    (+) The HAL_SYSTICK_Config() function calls the SysTick_Config() function which
  44:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****        is a CMSIS function that:
  45:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****         (++) Configures the SysTick Reload register with value passed as function parameter.
  46:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****         (++) Configures the SysTick IRQ priority to the lowest value (0x0F).
  47:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****         (++) Resets the SysTick Counter register.
  48:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****         (++) Configures the SysTick Counter clock source to be Core Clock Source (HCLK).
  49:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****         (++) Enables the SysTick Interrupt.
  50:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****         (++) Starts the SysTick Counter.
  51:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  52:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****    (+) You can change the SysTick Clock source to be HCLK_Div8 by calling the macro
  53:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****        HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK_DIV8) just after the
  54:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****        HAL_SYSTICK_Config() function call. The HAL_SYSTICK_CLKSourceConfig() macro is defined
  55:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****        inside the stm32h7xx_hal_cortex.h file.
  56:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  57:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****    (+) You can change the SysTick IRQ priority by calling the
  58:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****        HAL_NVIC_SetPriority(SysTick_IRQn,...) function just after the HAL_SYSTICK_Config() function
  59:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****        call. The HAL_NVIC_SetPriority() call the NVIC_SetPriority() function which is a CMSIS funct
  60:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  61:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****    (+) To adjust the SysTick time base, use the following formula:
  62:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  63:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****        Reload Value = SysTick Counter Clock (Hz) x  Desired Time base (s)
  64:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****        (++) Reload Value is the parameter to be passed for HAL_SYSTICK_Config() function
  65:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****        (++) Reload Value should not exceed 0xFFFFFF
  66:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  67:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   @endverbatim
  68:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   ******************************************************************************
  69:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @attention
  70:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *
  71:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * Copyright (c) 2017 STMicroelectronics.
  72:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * All rights reserved.
  73:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *
  74:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * This software is licensed under terms that can be found in the LICENSE file in
  75:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * the root directory of this software component.
  76:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  77:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *
  78:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   ******************************************************************************
  79:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
  80:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  81:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /* Includes ------------------------------------------------------------------*/
  82:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** #include "stm32h7xx_hal.h"
  83:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  84:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /** @addtogroup STM32H7xx_HAL_Driver
  85:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @{
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 84


  86:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
  87:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  88:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /** @defgroup CORTEX CORTEX
  89:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief CORTEX HAL module driver
  90:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @{
  91:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
  92:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  93:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** #ifdef HAL_CORTEX_MODULE_ENABLED
  94:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
  95:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /* Private types -------------------------------------------------------------*/
  96:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /* Private variables ---------------------------------------------------------*/
  97:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /* Private constants ---------------------------------------------------------*/
  98:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /* Private macros ------------------------------------------------------------*/
  99:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /* Private functions ---------------------------------------------------------*/
 100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /* Exported functions --------------------------------------------------------*/
 101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /** @defgroup CORTEX_Exported_Functions CORTEX Exported Functions
 103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @{
 104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /** @defgroup CORTEX_Exported_Functions_Group1 Initialization and de-initialization functions
 108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****  *  @brief    Initialization and Configuration functions
 109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****  *
 110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** @verbatim
 111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   ==============================================================================
 112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****               ##### Initialization and de-initialization functions #####
 113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   ==============================================================================
 114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     [..]
 115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****       This section provides the CORTEX HAL driver functions allowing to configure Interrupts
 116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****       Systick functionalities
 117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** @endverbatim
 119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @{
 120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Sets the priority grouping field (preemption priority and subpriority)
 125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         using the required unlock sequence.
 126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  PriorityGroup The priority grouping bits length.
 127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_0: 0 bits for preemption priority
 129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                                    4 bits for subpriority
 130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_1: 1 bits for preemption priority
 131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                                    3 bits for subpriority
 132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_2: 2 bits for preemption priority
 133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                                    2 bits for subpriority
 134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_3: 3 bits for preemption priority
 135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                                    1 bits for subpriority
 136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_4: 4 bits for preemption priority
 137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                                    0 bits for subpriority
 138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible.
 139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         The pending IRQ priority will be managed only by the subpriority.
 140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 85


 143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1081              		.loc 3 143 1
 1082              		.cfi_startproc
 1083              		@ args = 0, pretend = 0, frame = 8
 1084              		@ frame_needed = 1, uses_anonymous_args = 0
 1085 0000 80B5     		push	{r7, lr}
 1086              	.LCFI77:
 1087              		.cfi_def_cfa_offset 8
 1088              		.cfi_offset 7, -8
 1089              		.cfi_offset 14, -4
 1090 0002 82B0     		sub	sp, sp, #8
 1091              	.LCFI78:
 1092              		.cfi_def_cfa_offset 16
 1093 0004 00AF     		add	r7, sp, #0
 1094              	.LCFI79:
 1095              		.cfi_def_cfa_register 7
 1096 0006 7860     		str	r0, [r7, #4]
 144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Check the parameters */
 145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
 148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   NVIC_SetPriorityGrouping(PriorityGroup);
 1097              		.loc 3 148 3
 1098 0008 7868     		ldr	r0, [r7, #4]
 1099 000a FFF7FEFF 		bl	__NVIC_SetPriorityGrouping
 149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1100              		.loc 3 149 1
 1101 000e 00BF     		nop
 1102 0010 0837     		adds	r7, r7, #8
 1103              	.LCFI80:
 1104              		.cfi_def_cfa_offset 8
 1105 0012 BD46     		mov	sp, r7
 1106              	.LCFI81:
 1107              		.cfi_def_cfa_register 13
 1108              		@ sp needed
 1109 0014 80BD     		pop	{r7, pc}
 1110              		.cfi_endproc
 1111              	.LFE333:
 1113              		.section	.text.HAL_NVIC_SetPriority,"ax",%progbits
 1114              		.align	1
 1115              		.global	HAL_NVIC_SetPriority
 1116              		.syntax unified
 1117              		.thumb
 1118              		.thumb_func
 1120              	HAL_NVIC_SetPriority:
 1121              	.LFB334:
 150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Sets the priority of an interrupt.
 153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  PreemptPriority The preemption priority for the IRQn channel.
 157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be a value between 0 and 15
 158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         A lower priority value indicates a higher priority
 159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  SubPriority the subpriority level for the IRQ channel.
 160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be a value between 0 and 15
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 86


 161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         A lower priority value indicates a higher priority.
 162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
 165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1122              		.loc 3 165 1
 1123              		.cfi_startproc
 1124              		@ args = 0, pretend = 0, frame = 24
 1125              		@ frame_needed = 1, uses_anonymous_args = 0
 1126 0000 80B5     		push	{r7, lr}
 1127              	.LCFI82:
 1128              		.cfi_def_cfa_offset 8
 1129              		.cfi_offset 7, -8
 1130              		.cfi_offset 14, -4
 1131 0002 86B0     		sub	sp, sp, #24
 1132              	.LCFI83:
 1133              		.cfi_def_cfa_offset 32
 1134 0004 00AF     		add	r7, sp, #0
 1135              	.LCFI84:
 1136              		.cfi_def_cfa_register 7
 1137 0006 0346     		mov	r3, r0
 1138 0008 B960     		str	r1, [r7, #8]
 1139 000a 7A60     		str	r2, [r7, #4]
 1140 000c FB81     		strh	r3, [r7, #14]	@ movhi
 166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   uint32_t prioritygroup;
 167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Check the parameters */
 169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
 170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
 171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   prioritygroup = NVIC_GetPriorityGrouping();
 1141              		.loc 3 172 19
 1142 000e FFF7FEFF 		bl	__NVIC_GetPriorityGrouping
 1143 0012 7861     		str	r0, [r7, #20]
 173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 1144              		.loc 3 174 3
 1145 0014 7A68     		ldr	r2, [r7, #4]
 1146 0016 B968     		ldr	r1, [r7, #8]
 1147 0018 7869     		ldr	r0, [r7, #20]
 1148 001a FFF7FEFF 		bl	NVIC_EncodePriority
 1149 001e 0246     		mov	r2, r0
 1150 0020 B7F90E30 		ldrsh	r3, [r7, #14]
 1151 0024 1146     		mov	r1, r2
 1152 0026 1846     		mov	r0, r3
 1153 0028 FFF7FEFF 		bl	__NVIC_SetPriority
 175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1154              		.loc 3 175 1
 1155 002c 00BF     		nop
 1156 002e 1837     		adds	r7, r7, #24
 1157              	.LCFI85:
 1158              		.cfi_def_cfa_offset 8
 1159 0030 BD46     		mov	sp, r7
 1160              	.LCFI86:
 1161              		.cfi_def_cfa_register 13
 1162              		@ sp needed
 1163 0032 80BD     		pop	{r7, pc}
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 87


 1164              		.cfi_endproc
 1165              	.LFE334:
 1167              		.section	.text.HAL_NVIC_EnableIRQ,"ax",%progbits
 1168              		.align	1
 1169              		.global	HAL_NVIC_EnableIRQ
 1170              		.syntax unified
 1171              		.thumb
 1172              		.thumb_func
 1174              	HAL_NVIC_EnableIRQ:
 1175              	.LFB335:
 176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Enables a device specific interrupt in the NVIC interrupt controller.
 179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @note   To configure interrupts priority correctly, the NVIC_PriorityGroupConfig()
 180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         function should be called before.
 181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
 187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1176              		.loc 3 187 1
 1177              		.cfi_startproc
 1178              		@ args = 0, pretend = 0, frame = 8
 1179              		@ frame_needed = 1, uses_anonymous_args = 0
 1180 0000 80B5     		push	{r7, lr}
 1181              	.LCFI87:
 1182              		.cfi_def_cfa_offset 8
 1183              		.cfi_offset 7, -8
 1184              		.cfi_offset 14, -4
 1185 0002 82B0     		sub	sp, sp, #8
 1186              	.LCFI88:
 1187              		.cfi_def_cfa_offset 16
 1188 0004 00AF     		add	r7, sp, #0
 1189              	.LCFI89:
 1190              		.cfi_def_cfa_register 7
 1191 0006 0346     		mov	r3, r0
 1192 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Check the parameters */
 189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Enable interrupt */
 192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   NVIC_EnableIRQ(IRQn);
 1193              		.loc 3 192 3
 1194 000a B7F90630 		ldrsh	r3, [r7, #6]
 1195 000e 1846     		mov	r0, r3
 1196 0010 FFF7FEFF 		bl	__NVIC_EnableIRQ
 193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1197              		.loc 3 193 1
 1198 0014 00BF     		nop
 1199 0016 0837     		adds	r7, r7, #8
 1200              	.LCFI90:
 1201              		.cfi_def_cfa_offset 8
 1202 0018 BD46     		mov	sp, r7
 1203              	.LCFI91:
 1204              		.cfi_def_cfa_register 13
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 88


 1205              		@ sp needed
 1206 001a 80BD     		pop	{r7, pc}
 1207              		.cfi_endproc
 1208              	.LFE335:
 1210              		.section	.text.HAL_NVIC_DisableIRQ,"ax",%progbits
 1211              		.align	1
 1212              		.global	HAL_NVIC_DisableIRQ
 1213              		.syntax unified
 1214              		.thumb
 1215              		.thumb_func
 1217              	HAL_NVIC_DisableIRQ:
 1218              	.LFB336:
 194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Disables a device specific interrupt in the NVIC interrupt controller.
 197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_NVIC_DisableIRQ(IRQn_Type IRQn)
 203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1219              		.loc 3 203 1
 1220              		.cfi_startproc
 1221              		@ args = 0, pretend = 0, frame = 8
 1222              		@ frame_needed = 1, uses_anonymous_args = 0
 1223 0000 80B5     		push	{r7, lr}
 1224              	.LCFI92:
 1225              		.cfi_def_cfa_offset 8
 1226              		.cfi_offset 7, -8
 1227              		.cfi_offset 14, -4
 1228 0002 82B0     		sub	sp, sp, #8
 1229              	.LCFI93:
 1230              		.cfi_def_cfa_offset 16
 1231 0004 00AF     		add	r7, sp, #0
 1232              	.LCFI94:
 1233              		.cfi_def_cfa_register 7
 1234 0006 0346     		mov	r3, r0
 1235 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Check the parameters */
 205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Disable interrupt */
 208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   NVIC_DisableIRQ(IRQn);
 1236              		.loc 3 208 3
 1237 000a B7F90630 		ldrsh	r3, [r7, #6]
 1238 000e 1846     		mov	r0, r3
 1239 0010 FFF7FEFF 		bl	__NVIC_DisableIRQ
 209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1240              		.loc 3 209 1
 1241 0014 00BF     		nop
 1242 0016 0837     		adds	r7, r7, #8
 1243              	.LCFI95:
 1244              		.cfi_def_cfa_offset 8
 1245 0018 BD46     		mov	sp, r7
 1246              	.LCFI96:
 1247              		.cfi_def_cfa_register 13
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 89


 1248              		@ sp needed
 1249 001a 80BD     		pop	{r7, pc}
 1250              		.cfi_endproc
 1251              	.LFE336:
 1253              		.section	.text.HAL_NVIC_SystemReset,"ax",%progbits
 1254              		.align	1
 1255              		.global	HAL_NVIC_SystemReset
 1256              		.syntax unified
 1257              		.thumb
 1258              		.thumb_func
 1260              	HAL_NVIC_SystemReset:
 1261              	.LFB337:
 210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Initiates a system reset request to reset the MCU.
 213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_NVIC_SystemReset(void)
 216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1262              		.loc 3 216 1
 1263              		.cfi_startproc
 1264              		@ args = 0, pretend = 0, frame = 0
 1265              		@ frame_needed = 1, uses_anonymous_args = 0
 1266 0000 80B5     		push	{r7, lr}
 1267              	.LCFI97:
 1268              		.cfi_def_cfa_offset 8
 1269              		.cfi_offset 7, -8
 1270              		.cfi_offset 14, -4
 1271 0002 00AF     		add	r7, sp, #0
 1272              	.LCFI98:
 1273              		.cfi_def_cfa_register 7
 217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* System Reset */
 218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   NVIC_SystemReset();
 1274              		.loc 3 218 3
 1275 0004 FFF7FEFF 		bl	__NVIC_SystemReset
 1276              		.cfi_endproc
 1277              	.LFE337:
 1279              		.section	.text.HAL_SYSTICK_Config,"ax",%progbits
 1280              		.align	1
 1281              		.global	HAL_SYSTICK_Config
 1282              		.syntax unified
 1283              		.thumb
 1284              		.thumb_func
 1286              	HAL_SYSTICK_Config:
 1287              	.LFB338:
 219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Initializes the System Timer and its interrupt, and starts the System Tick Timer.
 223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         Counter is in free running mode to generate periodic interrupts.
 224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
 225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval status   - 0  Function succeeded.
 226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                  - 1  Function failed.
 227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
 229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1288              		.loc 3 229 1
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 90


 1289              		.cfi_startproc
 1290              		@ args = 0, pretend = 0, frame = 8
 1291              		@ frame_needed = 1, uses_anonymous_args = 0
 1292 0000 80B5     		push	{r7, lr}
 1293              	.LCFI99:
 1294              		.cfi_def_cfa_offset 8
 1295              		.cfi_offset 7, -8
 1296              		.cfi_offset 14, -4
 1297 0002 82B0     		sub	sp, sp, #8
 1298              	.LCFI100:
 1299              		.cfi_def_cfa_offset 16
 1300 0004 00AF     		add	r7, sp, #0
 1301              	.LCFI101:
 1302              		.cfi_def_cfa_register 7
 1303 0006 7860     		str	r0, [r7, #4]
 230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****    return SysTick_Config(TicksNumb);
 1304              		.loc 3 230 11
 1305 0008 7868     		ldr	r0, [r7, #4]
 1306 000a FFF7FEFF 		bl	SysTick_Config
 1307 000e 0346     		mov	r3, r0
 231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1308              		.loc 3 231 1
 1309 0010 1846     		mov	r0, r3
 1310 0012 0837     		adds	r7, r7, #8
 1311              	.LCFI102:
 1312              		.cfi_def_cfa_offset 8
 1313 0014 BD46     		mov	sp, r7
 1314              	.LCFI103:
 1315              		.cfi_def_cfa_register 13
 1316              		@ sp needed
 1317 0016 80BD     		pop	{r7, pc}
 1318              		.cfi_endproc
 1319              	.LFE338:
 1321              		.section	.text.HAL_MPU_Disable,"ax",%progbits
 1322              		.align	1
 1323              		.global	HAL_MPU_Disable
 1324              		.syntax unified
 1325              		.thumb
 1326              		.thumb_func
 1328              	HAL_MPU_Disable:
 1329              	.LFB339:
 232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @}
 234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /** @defgroup CORTEX_Exported_Functions_Group2 Peripheral Control functions
 237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****  *  @brief   Cortex control functions
 238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****  *
 239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** @verbatim
 240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   ==============================================================================
 241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                       ##### Peripheral Control functions #####
 242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   ==============================================================================
 243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     [..]
 244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****       This subsection provides a set of functions allowing to control the CORTEX
 245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****       (NVIC, SYSTICK, MPU) functionalities.
 246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 91


 248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** @endverbatim
 249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @{
 250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** #if (__MPU_PRESENT == 1)
 252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Disables the MPU
 254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_MPU_Disable(void)
 257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1330              		.loc 3 257 1
 1331              		.cfi_startproc
 1332              		@ args = 0, pretend = 0, frame = 0
 1333              		@ frame_needed = 1, uses_anonymous_args = 0
 1334              		@ link register save eliminated.
 1335 0000 80B4     		push	{r7}
 1336              	.LCFI104:
 1337              		.cfi_def_cfa_offset 4
 1338              		.cfi_offset 7, -4
 1339 0002 00AF     		add	r7, sp, #0
 1340              	.LCFI105:
 1341              		.cfi_def_cfa_register 7
 1342              	.LBB24:
 1343              	.LBB25:
 948:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 1344              		.loc 2 957 3
 1345              		.syntax unified
 1346              	@ 957 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1347 0004 BFF35F8F 		dmb 0xF
 1348              	@ 0 "" 2
 958:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1349              		.loc 2 958 1
 1350              		.thumb
 1351              		.syntax unified
 1352 0008 00BF     		nop
 1353              	.LBE25:
 1354              	.LBE24:
 258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Make sure outstanding transfers are done */
 259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   __DMB();
 260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Disable fault exceptions */
 262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
 1355              		.loc 3 262 14
 1356 000a 074B     		ldr	r3, .L73
 1357 000c 5B6A     		ldr	r3, [r3, #36]
 1358 000e 064A     		ldr	r2, .L73
 1359 0010 23F48033 		bic	r3, r3, #65536
 1360 0014 5362     		str	r3, [r2, #36]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 92


 263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Disable the MPU and clear the control register*/
 265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   MPU->CTRL = 0;
 1361              		.loc 3 265 6
 1362 0016 054B     		ldr	r3, .L73+4
 1363              		.loc 3 265 13
 1364 0018 0022     		movs	r2, #0
 1365 001a 5A60     		str	r2, [r3, #4]
 266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1366              		.loc 3 266 1
 1367 001c 00BF     		nop
 1368 001e BD46     		mov	sp, r7
 1369              	.LCFI106:
 1370              		.cfi_def_cfa_register 13
 1371              		@ sp needed
 1372 0020 5DF8047B 		ldr	r7, [sp], #4
 1373              	.LCFI107:
 1374              		.cfi_restore 7
 1375              		.cfi_def_cfa_offset 0
 1376 0024 7047     		bx	lr
 1377              	.L74:
 1378 0026 00BF     		.align	2
 1379              	.L73:
 1380 0028 00ED00E0 		.word	-536810240
 1381 002c 90ED00E0 		.word	-536810096
 1382              		.cfi_endproc
 1383              	.LFE339:
 1385              		.section	.text.HAL_MPU_Enable,"ax",%progbits
 1386              		.align	1
 1387              		.global	HAL_MPU_Enable
 1388              		.syntax unified
 1389              		.thumb
 1390              		.thumb_func
 1392              	HAL_MPU_Enable:
 1393              	.LFB340:
 267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Enables the MPU
 270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  MPU_Control Specifies the control mode of the MPU during hard fault,
 271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         NMI, FAULTMASK and privileged access to the default memory
 272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *            @arg MPU_HFNMI_PRIVDEF_NONE
 274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *            @arg MPU_HARDFAULT_NMI
 275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *            @arg MPU_PRIVILEGED_DEFAULT
 276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *            @arg MPU_HFNMI_PRIVDEF
 277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_MPU_Enable(uint32_t MPU_Control)
 280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1394              		.loc 3 280 1
 1395              		.cfi_startproc
 1396              		@ args = 0, pretend = 0, frame = 8
 1397              		@ frame_needed = 1, uses_anonymous_args = 0
 1398              		@ link register save eliminated.
 1399 0000 80B4     		push	{r7}
 1400              	.LCFI108:
 1401              		.cfi_def_cfa_offset 4
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 93


 1402              		.cfi_offset 7, -4
 1403 0002 83B0     		sub	sp, sp, #12
 1404              	.LCFI109:
 1405              		.cfi_def_cfa_offset 16
 1406 0004 00AF     		add	r7, sp, #0
 1407              	.LCFI110:
 1408              		.cfi_def_cfa_register 7
 1409 0006 7860     		str	r0, [r7, #4]
 281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Enable the MPU */
 282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
 1410              		.loc 3 282 6
 1411 0008 0B4A     		ldr	r2, .L76
 1412              		.loc 3 282 27
 1413 000a 7B68     		ldr	r3, [r7, #4]
 1414 000c 43F00103 		orr	r3, r3, #1
 1415              		.loc 3 282 13
 1416 0010 5360     		str	r3, [r2, #4]
 283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Enable fault exceptions */
 285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
 1417              		.loc 3 285 14
 1418 0012 0A4B     		ldr	r3, .L76+4
 1419 0014 5B6A     		ldr	r3, [r3, #36]
 1420 0016 094A     		ldr	r2, .L76+4
 1421 0018 43F48033 		orr	r3, r3, #65536
 1422 001c 5362     		str	r3, [r2, #36]
 1423              	.LBB26:
 1424              	.LBB27:
 946:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1425              		.loc 2 946 3
 1426              		.syntax unified
 1427              	@ 946 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1428 001e BFF34F8F 		dsb 0xF
 1429              	@ 0 "" 2
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 1430              		.loc 2 947 1
 1431              		.thumb
 1432              		.syntax unified
 1433 0022 00BF     		nop
 1434              	.LBE27:
 1435              	.LBE26:
 1436              	.LBB28:
 1437              	.LBB29:
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1438              		.loc 2 935 3
 1439              		.syntax unified
 1440              	@ 935 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1441 0024 BFF36F8F 		isb 0xF
 1442              	@ 0 "" 2
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 1443              		.loc 2 936 1
 1444              		.thumb
 1445              		.syntax unified
 1446 0028 00BF     		nop
 1447              	.LBE29:
 1448              	.LBE28:
 286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 94


 287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Ensure MPU setting take effects */
 288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   __DSB();
 289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   __ISB();
 290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1449              		.loc 3 290 1
 1450 002a 00BF     		nop
 1451 002c 0C37     		adds	r7, r7, #12
 1452              	.LCFI111:
 1453              		.cfi_def_cfa_offset 4
 1454 002e BD46     		mov	sp, r7
 1455              	.LCFI112:
 1456              		.cfi_def_cfa_register 13
 1457              		@ sp needed
 1458 0030 5DF8047B 		ldr	r7, [sp], #4
 1459              	.LCFI113:
 1460              		.cfi_restore 7
 1461              		.cfi_def_cfa_offset 0
 1462 0034 7047     		bx	lr
 1463              	.L77:
 1464 0036 00BF     		.align	2
 1465              	.L76:
 1466 0038 90ED00E0 		.word	-536810096
 1467 003c 00ED00E0 		.word	-536810240
 1468              		.cfi_endproc
 1469              	.LFE340:
 1471              		.section	.text.HAL_MPU_ConfigRegion,"ax",%progbits
 1472              		.align	1
 1473              		.global	HAL_MPU_ConfigRegion
 1474              		.syntax unified
 1475              		.thumb
 1476              		.thumb_func
 1478              	HAL_MPU_ConfigRegion:
 1479              	.LFB341:
 291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Initializes and configures the Region and the memory to be protected.
 293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  MPU_Init Pointer to a MPU_Region_InitTypeDef structure that contains
 294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                  the initialization and configuration information.
 295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_MPU_ConfigRegion(MPU_Region_InitTypeDef *MPU_Init)
 298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1480              		.loc 3 298 1
 1481              		.cfi_startproc
 1482              		@ args = 0, pretend = 0, frame = 8
 1483              		@ frame_needed = 1, uses_anonymous_args = 0
 1484              		@ link register save eliminated.
 1485 0000 80B4     		push	{r7}
 1486              	.LCFI114:
 1487              		.cfi_def_cfa_offset 4
 1488              		.cfi_offset 7, -4
 1489 0002 83B0     		sub	sp, sp, #12
 1490              	.LCFI115:
 1491              		.cfi_def_cfa_offset 16
 1492 0004 00AF     		add	r7, sp, #0
 1493              	.LCFI116:
 1494              		.cfi_def_cfa_register 7
 1495 0006 7860     		str	r0, [r7, #4]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 95


 299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Check the parameters */
 300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
 301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));
 302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Set the Region number */
 304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   MPU->RNR = MPU_Init->Number;
 1496              		.loc 3 304 22
 1497 0008 7B68     		ldr	r3, [r7, #4]
 1498 000a 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 1499              		.loc 3 304 6
 1500 000c 1D4B     		ldr	r3, .L82
 1501              		.loc 3 304 12
 1502 000e 9A60     		str	r2, [r3, #8]
 305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   if ((MPU_Init->Enable) != 0UL)
 1503              		.loc 3 306 16
 1504 0010 7B68     		ldr	r3, [r7, #4]
 1505 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1506              		.loc 3 306 6
 1507 0014 002B     		cmp	r3, #0
 1508 0016 29D0     		beq	.L79
 307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   {
 308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     /* Check the parameters */
 309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     assert_param(IS_MPU_INSTRUCTION_ACCESS(MPU_Init->DisableExec));
 310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     assert_param(IS_MPU_REGION_PERMISSION_ATTRIBUTE(MPU_Init->AccessPermission));
 311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     assert_param(IS_MPU_TEX_LEVEL(MPU_Init->TypeExtField));
 312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_SHAREABLE(MPU_Init->IsShareable));
 313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
 314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
 315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
 316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));
 317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     MPU->RBAR = MPU_Init->BaseAddress;
 1509              		.loc 3 318 8
 1510 0018 1A4A     		ldr	r2, .L82
 1511              		.loc 3 318 25
 1512 001a 7B68     		ldr	r3, [r7, #4]
 1513 001c 5B68     		ldr	r3, [r3, #4]
 1514              		.loc 3 318 15
 1515 001e D360     		str	r3, [r2, #12]
 319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 1516              		.loc 3 319 36
 1517 0020 7B68     		ldr	r3, [r7, #4]
 1518 0022 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1519              		.loc 3 319 62
 1520 0024 1A07     		lsls	r2, r3, #28
 320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 1521              		.loc 3 320 36
 1522 0026 7B68     		ldr	r3, [r7, #4]
 1523 0028 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 1524              		.loc 3 320 62
 1525 002a 1B06     		lsls	r3, r3, #24
 319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 1526              		.loc 3 319 84
 1527 002c 1A43     		orrs	r2, r2, r3
 321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
 1528              		.loc 3 321 36
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 96


 1529 002e 7B68     		ldr	r3, [r7, #4]
 1530 0030 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 1531              		.loc 3 321 62
 1532 0032 DB04     		lsls	r3, r3, #19
 320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 1533              		.loc 3 320 84
 1534 0034 1A43     		orrs	r2, r2, r3
 322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
 1535              		.loc 3 322 36
 1536 0036 7B68     		ldr	r3, [r7, #4]
 1537 0038 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 1538              		.loc 3 322 62
 1539 003a 9B04     		lsls	r3, r3, #18
 321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
 1540              		.loc 3 321 84
 1541 003c 1A43     		orrs	r2, r2, r3
 323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
 1542              		.loc 3 323 36
 1543 003e 7B68     		ldr	r3, [r7, #4]
 1544 0040 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 1545              		.loc 3 323 62
 1546 0042 5B04     		lsls	r3, r3, #17
 322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
 1547              		.loc 3 322 84
 1548 0044 1A43     		orrs	r2, r2, r3
 324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
 1549              		.loc 3 324 36
 1550 0046 7B68     		ldr	r3, [r7, #4]
 1551 0048 DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
 1552              		.loc 3 324 62
 1553 004a 1B04     		lsls	r3, r3, #16
 323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
 1554              		.loc 3 323 84
 1555 004c 1A43     		orrs	r2, r2, r3
 325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
 1556              		.loc 3 325 36
 1557 004e 7B68     		ldr	r3, [r7, #4]
 1558 0050 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 1559              		.loc 3 325 62
 1560 0052 1B02     		lsls	r3, r3, #8
 324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
 1561              		.loc 3 324 84
 1562 0054 1A43     		orrs	r2, r2, r3
 326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 1563              		.loc 3 326 36
 1564 0056 7B68     		ldr	r3, [r7, #4]
 1565 0058 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 1566              		.loc 3 326 62
 1567 005a 5B00     		lsls	r3, r3, #1
 325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
 1568              		.loc 3 325 84
 1569 005c 1343     		orrs	r3, r3, r2
 327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Enable                  << MPU_RASR_ENABLE_Pos);
 1570              		.loc 3 327 36
 1571 005e 7A68     		ldr	r2, [r7, #4]
 1572 0060 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1573              		.loc 3 327 62
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 97


 1574 0062 1146     		mov	r1, r2
 319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 1575              		.loc 3 319 8
 1576 0064 074A     		ldr	r2, .L82
 326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 1577              		.loc 3 326 84
 1578 0066 0B43     		orrs	r3, r3, r1
 319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 1579              		.loc 3 319 15
 1580 0068 1361     		str	r3, [r2, #16]
 328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   }
 329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   else
 330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   {
 331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     MPU->RBAR = 0x00;
 332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     MPU->RASR = 0x00;
 333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   }
 334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1581              		.loc 3 334 1
 1582 006a 05E0     		b	.L81
 1583              	.L79:
 331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     MPU->RASR = 0x00;
 1584              		.loc 3 331 8
 1585 006c 054B     		ldr	r3, .L82
 331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     MPU->RASR = 0x00;
 1586              		.loc 3 331 15
 1587 006e 0022     		movs	r2, #0
 1588 0070 DA60     		str	r2, [r3, #12]
 332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   }
 1589              		.loc 3 332 8
 1590 0072 044B     		ldr	r3, .L82
 332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   }
 1591              		.loc 3 332 15
 1592 0074 0022     		movs	r2, #0
 1593 0076 1A61     		str	r2, [r3, #16]
 1594              	.L81:
 1595              		.loc 3 334 1
 1596 0078 00BF     		nop
 1597 007a 0C37     		adds	r7, r7, #12
 1598              	.LCFI117:
 1599              		.cfi_def_cfa_offset 4
 1600 007c BD46     		mov	sp, r7
 1601              	.LCFI118:
 1602              		.cfi_def_cfa_register 13
 1603              		@ sp needed
 1604 007e 5DF8047B 		ldr	r7, [sp], #4
 1605              	.LCFI119:
 1606              		.cfi_restore 7
 1607              		.cfi_def_cfa_offset 0
 1608 0082 7047     		bx	lr
 1609              	.L83:
 1610              		.align	2
 1611              	.L82:
 1612 0084 90ED00E0 		.word	-536810096
 1613              		.cfi_endproc
 1614              	.LFE341:
 1616              		.section	.text.HAL_NVIC_GetPriorityGrouping,"ax",%progbits
 1617              		.align	1
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 98


 1618              		.global	HAL_NVIC_GetPriorityGrouping
 1619              		.syntax unified
 1620              		.thumb
 1621              		.thumb_func
 1623              	HAL_NVIC_GetPriorityGrouping:
 1624              	.LFB342:
 335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** #endif /* __MPU_PRESENT */
 336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Gets the priority grouping field from the NVIC Interrupt Controller.
 339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field)
 340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** uint32_t HAL_NVIC_GetPriorityGrouping(void)
 342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1625              		.loc 3 342 1
 1626              		.cfi_startproc
 1627              		@ args = 0, pretend = 0, frame = 0
 1628              		@ frame_needed = 1, uses_anonymous_args = 0
 1629 0000 80B5     		push	{r7, lr}
 1630              	.LCFI120:
 1631              		.cfi_def_cfa_offset 8
 1632              		.cfi_offset 7, -8
 1633              		.cfi_offset 14, -4
 1634 0002 00AF     		add	r7, sp, #0
 1635              	.LCFI121:
 1636              		.cfi_def_cfa_register 7
 343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Get the PRIGROUP[10:8] field value */
 344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   return NVIC_GetPriorityGrouping();
 1637              		.loc 3 344 10
 1638 0004 FFF7FEFF 		bl	__NVIC_GetPriorityGrouping
 1639 0008 0346     		mov	r3, r0
 345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1640              		.loc 3 345 1
 1641 000a 1846     		mov	r0, r3
 1642 000c 80BD     		pop	{r7, pc}
 1643              		.cfi_endproc
 1644              	.LFE342:
 1646              		.section	.text.HAL_NVIC_GetPriority,"ax",%progbits
 1647              		.align	1
 1648              		.global	HAL_NVIC_GetPriority
 1649              		.syntax unified
 1650              		.thumb
 1651              		.thumb_func
 1653              	HAL_NVIC_GetPriority:
 1654              	.LFB343:
 346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Gets the priority of an interrupt.
 349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param   PriorityGroup the priority grouping bits length.
 353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_0: 0 bits for preemption priority
 355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                                      4 bits for subpriority
 356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_1: 1 bits for preemption priority
 357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                                      3 bits for subpriority
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 99


 358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_2: 2 bits for preemption priority
 359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                                      2 bits for subpriority
 360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_3: 3 bits for preemption priority
 361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                                      1 bits for subpriority
 362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_4: 4 bits for preemption priority
 363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                                      0 bits for subpriority
 364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  pPreemptPriority Pointer on the Preemptive priority value (starting from 0).
 365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  pSubPriority Pointer on the Subpriority value (starting from 0).
 366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_NVIC_GetPriority(IRQn_Type IRQn, uint32_t PriorityGroup, uint32_t *pPreemptPriority, uint3
 369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1655              		.loc 3 369 1
 1656              		.cfi_startproc
 1657              		@ args = 0, pretend = 0, frame = 16
 1658              		@ frame_needed = 1, uses_anonymous_args = 0
 1659 0000 80B5     		push	{r7, lr}
 1660              	.LCFI122:
 1661              		.cfi_def_cfa_offset 8
 1662              		.cfi_offset 7, -8
 1663              		.cfi_offset 14, -4
 1664 0002 84B0     		sub	sp, sp, #16
 1665              	.LCFI123:
 1666              		.cfi_def_cfa_offset 24
 1667 0004 00AF     		add	r7, sp, #0
 1668              	.LCFI124:
 1669              		.cfi_def_cfa_register 7
 1670 0006 B960     		str	r1, [r7, #8]
 1671 0008 7A60     		str	r2, [r7, #4]
 1672 000a 3B60     		str	r3, [r7]
 1673 000c 0346     		mov	r3, r0	@ movhi
 1674 000e FB81     		strh	r3, [r7, #14]	@ movhi
 370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Check the parameters */
 371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****  /* Get priority for Cortex-M system or device specific interrupts */
 373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   NVIC_DecodePriority(NVIC_GetPriority(IRQn), PriorityGroup, pPreemptPriority, pSubPriority);
 1675              		.loc 3 373 3
 1676 0010 B7F90E30 		ldrsh	r3, [r7, #14]
 1677 0014 1846     		mov	r0, r3
 1678 0016 FFF7FEFF 		bl	__NVIC_GetPriority
 1679 001a 3B68     		ldr	r3, [r7]
 1680 001c 7A68     		ldr	r2, [r7, #4]
 1681 001e B968     		ldr	r1, [r7, #8]
 1682 0020 FFF7FEFF 		bl	NVIC_DecodePriority
 374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1683              		.loc 3 374 1
 1684 0024 00BF     		nop
 1685 0026 1037     		adds	r7, r7, #16
 1686              	.LCFI125:
 1687              		.cfi_def_cfa_offset 8
 1688 0028 BD46     		mov	sp, r7
 1689              	.LCFI126:
 1690              		.cfi_def_cfa_register 13
 1691              		@ sp needed
 1692 002a 80BD     		pop	{r7, pc}
 1693              		.cfi_endproc
 1694              	.LFE343:
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 100


 1696              		.section	.text.HAL_NVIC_SetPendingIRQ,"ax",%progbits
 1697              		.align	1
 1698              		.global	HAL_NVIC_SetPendingIRQ
 1699              		.syntax unified
 1700              		.thumb
 1701              		.thumb_func
 1703              	HAL_NVIC_SetPendingIRQ:
 1704              	.LFB344:
 375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Sets Pending bit of an external interrupt.
 378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  IRQn External interrupt number
 379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_NVIC_SetPendingIRQ(IRQn_Type IRQn)
 384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1705              		.loc 3 384 1
 1706              		.cfi_startproc
 1707              		@ args = 0, pretend = 0, frame = 8
 1708              		@ frame_needed = 1, uses_anonymous_args = 0
 1709 0000 80B5     		push	{r7, lr}
 1710              	.LCFI127:
 1711              		.cfi_def_cfa_offset 8
 1712              		.cfi_offset 7, -8
 1713              		.cfi_offset 14, -4
 1714 0002 82B0     		sub	sp, sp, #8
 1715              	.LCFI128:
 1716              		.cfi_def_cfa_offset 16
 1717 0004 00AF     		add	r7, sp, #0
 1718              	.LCFI129:
 1719              		.cfi_def_cfa_register 7
 1720 0006 0346     		mov	r3, r0
 1721 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Check the parameters */
 386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Set interrupt pending */
 389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   NVIC_SetPendingIRQ(IRQn);
 1722              		.loc 3 389 3
 1723 000a B7F90630 		ldrsh	r3, [r7, #6]
 1724 000e 1846     		mov	r0, r3
 1725 0010 FFF7FEFF 		bl	__NVIC_SetPendingIRQ
 390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1726              		.loc 3 390 1
 1727 0014 00BF     		nop
 1728 0016 0837     		adds	r7, r7, #8
 1729              	.LCFI130:
 1730              		.cfi_def_cfa_offset 8
 1731 0018 BD46     		mov	sp, r7
 1732              	.LCFI131:
 1733              		.cfi_def_cfa_register 13
 1734              		@ sp needed
 1735 001a 80BD     		pop	{r7, pc}
 1736              		.cfi_endproc
 1737              	.LFE344:
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 101


 1739              		.section	.text.HAL_NVIC_GetPendingIRQ,"ax",%progbits
 1740              		.align	1
 1741              		.global	HAL_NVIC_GetPendingIRQ
 1742              		.syntax unified
 1743              		.thumb
 1744              		.thumb_func
 1746              	HAL_NVIC_GetPendingIRQ:
 1747              	.LFB345:
 391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Gets Pending Interrupt (reads the pending register in the NVIC
 394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         and returns the pending bit for the specified interrupt).
 395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *          This parameter can be an enumerator of IRQn_Type enumeration
 397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval status  - 0  Interrupt status is not pending.
 399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                 - 1  Interrupt status is pending.
 400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** uint32_t HAL_NVIC_GetPendingIRQ(IRQn_Type IRQn)
 402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1748              		.loc 3 402 1
 1749              		.cfi_startproc
 1750              		@ args = 0, pretend = 0, frame = 8
 1751              		@ frame_needed = 1, uses_anonymous_args = 0
 1752 0000 80B5     		push	{r7, lr}
 1753              	.LCFI132:
 1754              		.cfi_def_cfa_offset 8
 1755              		.cfi_offset 7, -8
 1756              		.cfi_offset 14, -4
 1757 0002 82B0     		sub	sp, sp, #8
 1758              	.LCFI133:
 1759              		.cfi_def_cfa_offset 16
 1760 0004 00AF     		add	r7, sp, #0
 1761              	.LCFI134:
 1762              		.cfi_def_cfa_register 7
 1763 0006 0346     		mov	r3, r0
 1764 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Check the parameters */
 404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Return 1 if pending else 0 */
 407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   return NVIC_GetPendingIRQ(IRQn);
 1765              		.loc 3 407 10
 1766 000a B7F90630 		ldrsh	r3, [r7, #6]
 1767 000e 1846     		mov	r0, r3
 1768 0010 FFF7FEFF 		bl	__NVIC_GetPendingIRQ
 1769 0014 0346     		mov	r3, r0
 408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1770              		.loc 3 408 1
 1771 0016 1846     		mov	r0, r3
 1772 0018 0837     		adds	r7, r7, #8
 1773              	.LCFI135:
 1774              		.cfi_def_cfa_offset 8
 1775 001a BD46     		mov	sp, r7
 1776              	.LCFI136:
 1777              		.cfi_def_cfa_register 13
 1778              		@ sp needed
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 102


 1779 001c 80BD     		pop	{r7, pc}
 1780              		.cfi_endproc
 1781              	.LFE345:
 1783              		.section	.text.HAL_NVIC_ClearPendingIRQ,"ax",%progbits
 1784              		.align	1
 1785              		.global	HAL_NVIC_ClearPendingIRQ
 1786              		.syntax unified
 1787              		.thumb
 1788              		.thumb_func
 1790              	HAL_NVIC_ClearPendingIRQ:
 1791              	.LFB346:
 409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Clears the pending bit of an external interrupt.
 412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1792              		.loc 3 418 1
 1793              		.cfi_startproc
 1794              		@ args = 0, pretend = 0, frame = 8
 1795              		@ frame_needed = 1, uses_anonymous_args = 0
 1796 0000 80B5     		push	{r7, lr}
 1797              	.LCFI137:
 1798              		.cfi_def_cfa_offset 8
 1799              		.cfi_offset 7, -8
 1800              		.cfi_offset 14, -4
 1801 0002 82B0     		sub	sp, sp, #8
 1802              	.LCFI138:
 1803              		.cfi_def_cfa_offset 16
 1804 0004 00AF     		add	r7, sp, #0
 1805              	.LCFI139:
 1806              		.cfi_def_cfa_register 7
 1807 0006 0346     		mov	r3, r0
 1808 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Check the parameters */
 420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Clear pending interrupt */
 423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   NVIC_ClearPendingIRQ(IRQn);
 1809              		.loc 3 423 3
 1810 000a B7F90630 		ldrsh	r3, [r7, #6]
 1811 000e 1846     		mov	r0, r3
 1812 0010 FFF7FEFF 		bl	__NVIC_ClearPendingIRQ
 424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1813              		.loc 3 424 1
 1814 0014 00BF     		nop
 1815 0016 0837     		adds	r7, r7, #8
 1816              	.LCFI140:
 1817              		.cfi_def_cfa_offset 8
 1818 0018 BD46     		mov	sp, r7
 1819              	.LCFI141:
 1820              		.cfi_def_cfa_register 13
 1821              		@ sp needed
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 103


 1822 001a 80BD     		pop	{r7, pc}
 1823              		.cfi_endproc
 1824              	.LFE346:
 1826              		.section	.text.HAL_NVIC_GetActive,"ax",%progbits
 1827              		.align	1
 1828              		.global	HAL_NVIC_GetActive
 1829              		.syntax unified
 1830              		.thumb
 1831              		.thumb_func
 1833              	HAL_NVIC_GetActive:
 1834              	.LFB347:
 425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief Gets active interrupt ( reads the active register in NVIC and returns the active bit).
 428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param IRQn External interrupt number
 429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval status  - 0  Interrupt status is not pending.
 432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *                 - 1  Interrupt status is pending.
 433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** uint32_t HAL_NVIC_GetActive(IRQn_Type IRQn)
 435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1835              		.loc 3 435 1
 1836              		.cfi_startproc
 1837              		@ args = 0, pretend = 0, frame = 8
 1838              		@ frame_needed = 1, uses_anonymous_args = 0
 1839 0000 80B5     		push	{r7, lr}
 1840              	.LCFI142:
 1841              		.cfi_def_cfa_offset 8
 1842              		.cfi_offset 7, -8
 1843              		.cfi_offset 14, -4
 1844 0002 82B0     		sub	sp, sp, #8
 1845              	.LCFI143:
 1846              		.cfi_def_cfa_offset 16
 1847 0004 00AF     		add	r7, sp, #0
 1848              	.LCFI144:
 1849              		.cfi_def_cfa_register 7
 1850 0006 0346     		mov	r3, r0
 1851 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Check the parameters */
 437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Return 1 if active else 0 */
 440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   return NVIC_GetActive(IRQn);
 1852              		.loc 3 440 10
 1853 000a B7F90630 		ldrsh	r3, [r7, #6]
 1854 000e 1846     		mov	r0, r3
 1855 0010 FFF7FEFF 		bl	__NVIC_GetActive
 1856 0014 0346     		mov	r3, r0
 441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1857              		.loc 3 441 1
 1858 0016 1846     		mov	r0, r3
 1859 0018 0837     		adds	r7, r7, #8
 1860              	.LCFI145:
 1861              		.cfi_def_cfa_offset 8
 1862 001a BD46     		mov	sp, r7
 1863              	.LCFI146:
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 104


 1864              		.cfi_def_cfa_register 13
 1865              		@ sp needed
 1866 001c 80BD     		pop	{r7, pc}
 1867              		.cfi_endproc
 1868              	.LFE347:
 1870              		.section	.text.HAL_SYSTICK_CLKSourceConfig,"ax",%progbits
 1871              		.align	1
 1872              		.global	HAL_SYSTICK_CLKSourceConfig
 1873              		.syntax unified
 1874              		.thumb
 1875              		.thumb_func
 1877              	HAL_SYSTICK_CLKSourceConfig:
 1878              	.LFB348:
 442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Configures the SysTick clock source.
 445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @param  CLKSource specifies the SysTick clock source.
 446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *             @arg SYSTICK_CLKSOURCE_HCLK_DIV8: AHB clock divided by 8 selected as SysTick clock 
 448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   *             @arg SYSTICK_CLKSOURCE_HCLK: AHB clock selected as SysTick clock source.
 449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_SYSTICK_CLKSourceConfig(uint32_t CLKSource)
 452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1879              		.loc 3 452 1
 1880              		.cfi_startproc
 1881              		@ args = 0, pretend = 0, frame = 8
 1882              		@ frame_needed = 1, uses_anonymous_args = 0
 1883              		@ link register save eliminated.
 1884 0000 80B4     		push	{r7}
 1885              	.LCFI147:
 1886              		.cfi_def_cfa_offset 4
 1887              		.cfi_offset 7, -4
 1888 0002 83B0     		sub	sp, sp, #12
 1889              	.LCFI148:
 1890              		.cfi_def_cfa_offset 16
 1891 0004 00AF     		add	r7, sp, #0
 1892              	.LCFI149:
 1893              		.cfi_def_cfa_register 7
 1894 0006 7860     		str	r0, [r7, #4]
 453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* Check the parameters */
 454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   assert_param(IS_SYSTICK_CLK_SOURCE(CLKSource));
 455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   if (CLKSource == SYSTICK_CLKSOURCE_HCLK)
 1895              		.loc 3 455 6
 1896 0008 7B68     		ldr	r3, [r7, #4]
 1897 000a 042B     		cmp	r3, #4
 1898 000c 06D1     		bne	.L94
 456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   {
 457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     SysTick->CTRL |= SYSTICK_CLKSOURCE_HCLK;
 1899              		.loc 3 457 19
 1900 000e 094B     		ldr	r3, .L97
 1901 0010 1B68     		ldr	r3, [r3]
 1902 0012 084A     		ldr	r2, .L97
 1903 0014 43F00403 		orr	r3, r3, #4
 1904 0018 1360     		str	r3, [r2]
 458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   }
 459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   else
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 105


 460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   {
 461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     SysTick->CTRL &= ~SYSTICK_CLKSOURCE_HCLK;
 462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   }
 463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1905              		.loc 3 463 1
 1906 001a 05E0     		b	.L96
 1907              	.L94:
 461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   }
 1908              		.loc 3 461 19
 1909 001c 054B     		ldr	r3, .L97
 1910 001e 1B68     		ldr	r3, [r3]
 1911 0020 044A     		ldr	r2, .L97
 1912 0022 23F00403 		bic	r3, r3, #4
 1913 0026 1360     		str	r3, [r2]
 1914              	.L96:
 1915              		.loc 3 463 1
 1916 0028 00BF     		nop
 1917 002a 0C37     		adds	r7, r7, #12
 1918              	.LCFI150:
 1919              		.cfi_def_cfa_offset 4
 1920 002c BD46     		mov	sp, r7
 1921              	.LCFI151:
 1922              		.cfi_def_cfa_register 13
 1923              		@ sp needed
 1924 002e 5DF8047B 		ldr	r7, [sp], #4
 1925              	.LCFI152:
 1926              		.cfi_restore 7
 1927              		.cfi_def_cfa_offset 0
 1928 0032 7047     		bx	lr
 1929              	.L98:
 1930              		.align	2
 1931              	.L97:
 1932 0034 10E000E0 		.word	-536813552
 1933              		.cfi_endproc
 1934              	.LFE348:
 1936              		.section	.text.HAL_SYSTICK_IRQHandler,"ax",%progbits
 1937              		.align	1
 1938              		.global	HAL_SYSTICK_IRQHandler
 1939              		.syntax unified
 1940              		.thumb
 1941              		.thumb_func
 1943              	HAL_SYSTICK_IRQHandler:
 1944              	.LFB349:
 464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  This function handles SYSTICK interrupt request.
 467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** void HAL_SYSTICK_IRQHandler(void)
 470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1945              		.loc 3 470 1
 1946              		.cfi_startproc
 1947              		@ args = 0, pretend = 0, frame = 0
 1948              		@ frame_needed = 1, uses_anonymous_args = 0
 1949 0000 80B5     		push	{r7, lr}
 1950              	.LCFI153:
 1951              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 106


 1952              		.cfi_offset 7, -8
 1953              		.cfi_offset 14, -4
 1954 0002 00AF     		add	r7, sp, #0
 1955              	.LCFI154:
 1956              		.cfi_def_cfa_register 7
 471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   HAL_SYSTICK_Callback();
 1957              		.loc 3 471 3
 1958 0004 FFF7FEFF 		bl	HAL_SYSTICK_Callback
 472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1959              		.loc 3 472 1
 1960 0008 00BF     		nop
 1961 000a 80BD     		pop	{r7, pc}
 1962              		.cfi_endproc
 1963              	.LFE349:
 1965              		.section	.text.HAL_SYSTICK_Callback,"ax",%progbits
 1966              		.align	1
 1967              		.weak	HAL_SYSTICK_Callback
 1968              		.syntax unified
 1969              		.thumb
 1970              		.thumb_func
 1972              	HAL_SYSTICK_Callback:
 1973              	.LFB350:
 473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  SYSTICK callback.
 476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval None
 477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** __weak void HAL_SYSTICK_Callback(void)
 479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 1974              		.loc 3 479 1
 1975              		.cfi_startproc
 1976              		@ args = 0, pretend = 0, frame = 0
 1977              		@ frame_needed = 1, uses_anonymous_args = 0
 1978              		@ link register save eliminated.
 1979 0000 80B4     		push	{r7}
 1980              	.LCFI155:
 1981              		.cfi_def_cfa_offset 4
 1982              		.cfi_offset 7, -4
 1983 0002 00AF     		add	r7, sp, #0
 1984              	.LCFI156:
 1985              		.cfi_def_cfa_register 7
 480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****             the HAL_SYSTICK_Callback could be implemented in the user file
 482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****    */
 483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 1986              		.loc 3 483 1
 1987 0004 00BF     		nop
 1988 0006 BD46     		mov	sp, r7
 1989              	.LCFI157:
 1990              		.cfi_def_cfa_register 13
 1991              		@ sp needed
 1992 0008 5DF8047B 		ldr	r7, [sp], #4
 1993              	.LCFI158:
 1994              		.cfi_restore 7
 1995              		.cfi_def_cfa_offset 0
 1996 000c 7047     		bx	lr
 1997              		.cfi_endproc
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 107


 1998              	.LFE350:
 2000              		.section	.text.HAL_GetCurrentCPUID,"ax",%progbits
 2001              		.align	1
 2002              		.global	HAL_GetCurrentCPUID
 2003              		.syntax unified
 2004              		.thumb
 2005              		.thumb_func
 2007              	HAL_GetCurrentCPUID:
 2008              	.LFB351:
 484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** #if defined(DUAL_CORE)
 486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @brief  Returns the current CPU ID.
 489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   * @retval CPU identifier
 490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   */
 491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** uint32_t HAL_GetCurrentCPUID(void)
 492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   if (((SCB->CPUID & 0x000000F0U) >> 4 )== 0x7U)
 494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   {
 495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     return  CM7_CPUID;
 496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   }
 497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   else
 498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   {
 499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****     return CM4_CPUID;
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   }
 501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** #else
 504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** 
 505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** /**
 506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** * @brief  Returns the current CPU ID.
 507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** * @retval CPU identifier
 508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** */
 509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** uint32_t HAL_GetCurrentCPUID(void)
 510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** {
 2009              		.loc 3 510 1
 2010              		.cfi_startproc
 2011              		@ args = 0, pretend = 0, frame = 0
 2012              		@ frame_needed = 1, uses_anonymous_args = 0
 2013              		@ link register save eliminated.
 2014 0000 80B4     		push	{r7}
 2015              	.LCFI159:
 2016              		.cfi_def_cfa_offset 4
 2017              		.cfi_offset 7, -4
 2018 0002 00AF     		add	r7, sp, #0
 2019              	.LCFI160:
 2020              		.cfi_def_cfa_register 7
 511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c ****   return  CM7_CPUID;
 2021              		.loc 3 511 11
 2022 0004 0323     		movs	r3, #3
 512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c **** }
 2023              		.loc 3 512 1
 2024 0006 1846     		mov	r0, r3
 2025 0008 BD46     		mov	sp, r7
 2026              	.LCFI161:
 2027              		.cfi_def_cfa_register 13
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 108


 2028              		@ sp needed
 2029 000a 5DF8047B 		ldr	r7, [sp], #4
 2030              	.LCFI162:
 2031              		.cfi_restore 7
 2032              		.cfi_def_cfa_offset 0
 2033 000e 7047     		bx	lr
 2034              		.cfi_endproc
 2035              	.LFE351:
 2037              		.text
 2038              	.Letext0:
 2039              		.file 4 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 2040              		.file 5 "/Users/seojisu/Library/Arm-GCC-xPack/arm-none-eabi/include/machine/_default_types.h"
 2041              		.file 6 "/Users/seojisu/Library/Arm-GCC-xPack/arm-none-eabi/include/sys/_stdint.h"
 2042              		.file 7 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_cortex.h"
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 109


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_hal_cortex.c
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:19     .text.__NVIC_SetPriorityGrouping:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:24     .text.__NVIC_SetPriorityGrouping:0000000000000000 __NVIC_SetPriorityGrouping
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:89     .text.__NVIC_SetPriorityGrouping:0000000000000040 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:95     .text.__NVIC_GetPriorityGrouping:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:100    .text.__NVIC_GetPriorityGrouping:0000000000000000 __NVIC_GetPriorityGrouping
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:134    .text.__NVIC_GetPriorityGrouping:0000000000000018 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:139    .text.__NVIC_EnableIRQ:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:144    .text.__NVIC_EnableIRQ:0000000000000000 __NVIC_EnableIRQ
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:201    .text.__NVIC_EnableIRQ:0000000000000038 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:206    .text.__NVIC_DisableIRQ:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:211    .text.__NVIC_DisableIRQ:0000000000000000 __NVIC_DisableIRQ
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:294    .text.__NVIC_DisableIRQ:0000000000000044 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:299    .text.__NVIC_GetPendingIRQ:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:304    .text.__NVIC_GetPendingIRQ:0000000000000000 __NVIC_GetPendingIRQ
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:365    .text.__NVIC_GetPendingIRQ:0000000000000040 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:370    .text.__NVIC_SetPendingIRQ:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:375    .text.__NVIC_SetPendingIRQ:0000000000000000 __NVIC_SetPendingIRQ
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:431    .text.__NVIC_SetPendingIRQ:0000000000000038 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:436    .text.__NVIC_ClearPendingIRQ:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:441    .text.__NVIC_ClearPendingIRQ:0000000000000000 __NVIC_ClearPendingIRQ
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:497    .text.__NVIC_ClearPendingIRQ:0000000000000038 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:502    .text.__NVIC_GetActive:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:507    .text.__NVIC_GetActive:0000000000000000 __NVIC_GetActive
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:568    .text.__NVIC_GetActive:0000000000000040 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:573    .text.__NVIC_SetPriority:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:578    .text.__NVIC_SetPriority:0000000000000000 __NVIC_SetPriority
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:652    .text.__NVIC_SetPriority:000000000000004c $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:658    .text.__NVIC_GetPriority:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:663    .text.__NVIC_GetPriority:0000000000000000 __NVIC_GetPriority
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:731    .text.__NVIC_GetPriority:0000000000000048 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:737    .text.NVIC_EncodePriority:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:742    .text.NVIC_EncodePriority:0000000000000000 NVIC_EncodePriority
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:827    .text.NVIC_DecodePriority:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:832    .text.NVIC_DecodePriority:0000000000000000 NVIC_DecodePriority
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:922    .text.__NVIC_SystemReset:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:927    .text.__NVIC_SystemReset:0000000000000000 __NVIC_SystemReset
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:991    .text.__NVIC_SystemReset:0000000000000024 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:997    .text.SysTick_Config:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:1002   .text.SysTick_Config:0000000000000000 SysTick_Config
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:1067   .text.SysTick_Config:0000000000000040 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:1072   .text.HAL_NVIC_SetPriorityGrouping:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:1078   .text.HAL_NVIC_SetPriorityGrouping:0000000000000000 HAL_NVIC_SetPriorityGrouping
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:1114   .text.HAL_NVIC_SetPriority:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:1120   .text.HAL_NVIC_SetPriority:0000000000000000 HAL_NVIC_SetPriority
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:1168   .text.HAL_NVIC_EnableIRQ:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:1174   .text.HAL_NVIC_EnableIRQ:0000000000000000 HAL_NVIC_EnableIRQ
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:1211   .text.HAL_NVIC_DisableIRQ:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:1217   .text.HAL_NVIC_DisableIRQ:0000000000000000 HAL_NVIC_DisableIRQ
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:1254   .text.HAL_NVIC_SystemReset:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:1260   .text.HAL_NVIC_SystemReset:0000000000000000 HAL_NVIC_SystemReset
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:1280   .text.HAL_SYSTICK_Config:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:1286   .text.HAL_SYSTICK_Config:0000000000000000 HAL_SYSTICK_Config
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:1322   .text.HAL_MPU_Disable:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:1328   .text.HAL_MPU_Disable:0000000000000000 HAL_MPU_Disable
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:1380   .text.HAL_MPU_Disable:0000000000000028 $d
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s 			page 110


/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:1386   .text.HAL_MPU_Enable:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:1392   .text.HAL_MPU_Enable:0000000000000000 HAL_MPU_Enable
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:1466   .text.HAL_MPU_Enable:0000000000000038 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:1472   .text.HAL_MPU_ConfigRegion:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:1478   .text.HAL_MPU_ConfigRegion:0000000000000000 HAL_MPU_ConfigRegion
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:1612   .text.HAL_MPU_ConfigRegion:0000000000000084 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:1617   .text.HAL_NVIC_GetPriorityGrouping:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:1623   .text.HAL_NVIC_GetPriorityGrouping:0000000000000000 HAL_NVIC_GetPriorityGrouping
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:1647   .text.HAL_NVIC_GetPriority:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:1653   .text.HAL_NVIC_GetPriority:0000000000000000 HAL_NVIC_GetPriority
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:1697   .text.HAL_NVIC_SetPendingIRQ:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:1703   .text.HAL_NVIC_SetPendingIRQ:0000000000000000 HAL_NVIC_SetPendingIRQ
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:1740   .text.HAL_NVIC_GetPendingIRQ:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:1746   .text.HAL_NVIC_GetPendingIRQ:0000000000000000 HAL_NVIC_GetPendingIRQ
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:1784   .text.HAL_NVIC_ClearPendingIRQ:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:1790   .text.HAL_NVIC_ClearPendingIRQ:0000000000000000 HAL_NVIC_ClearPendingIRQ
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:1827   .text.HAL_NVIC_GetActive:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:1833   .text.HAL_NVIC_GetActive:0000000000000000 HAL_NVIC_GetActive
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:1871   .text.HAL_SYSTICK_CLKSourceConfig:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:1877   .text.HAL_SYSTICK_CLKSourceConfig:0000000000000000 HAL_SYSTICK_CLKSourceConfig
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:1932   .text.HAL_SYSTICK_CLKSourceConfig:0000000000000034 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:1937   .text.HAL_SYSTICK_IRQHandler:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:1943   .text.HAL_SYSTICK_IRQHandler:0000000000000000 HAL_SYSTICK_IRQHandler
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:1972   .text.HAL_SYSTICK_Callback:0000000000000000 HAL_SYSTICK_Callback
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:1966   .text.HAL_SYSTICK_Callback:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:2001   .text.HAL_GetCurrentCPUID:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccU98Jgh.s:2007   .text.HAL_GetCurrentCPUID:0000000000000000 HAL_GetCurrentCPUID

NO UNDEFINED SYMBOLS
