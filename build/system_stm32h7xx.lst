ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccpb5gCm.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"system_stm32h7xx.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	SystemCoreClock
  19              		.section	.data.SystemCoreClock,"aw"
  20              		.align	2
  23              	SystemCoreClock:
  24 0000 0090D003 		.word	64000000
  25              		.global	SystemD2Clock
  26              		.section	.data.SystemD2Clock,"aw"
  27              		.align	2
  30              	SystemD2Clock:
  31 0000 0090D003 		.word	64000000
  32              		.global	D1CorePrescTable
  33              		.section	.rodata.D1CorePrescTable,"a"
  34              		.align	2
  37              	D1CorePrescTable:
  38 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004\001\002\003\004\006"
  38      01020304 
  38      01020304 
  38      06
  39 000d 070809   		.ascii	"\007\010\011"
  40              		.section	.text.SystemInit,"ax",%progbits
  41              		.align	1
  42              		.global	SystemInit
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  47              	SystemInit:
  48              	.LFB333:
  49              		.file 1 "Core/Src/system_stm32h7xx.c"
   1:Core/Src/system_stm32h7xx.c **** /**
   2:Core/Src/system_stm32h7xx.c ****   ******************************************************************************
   3:Core/Src/system_stm32h7xx.c ****   * @file    system_stm32h7xx.c
   4:Core/Src/system_stm32h7xx.c ****   * @author  MCD Application Team
   5:Core/Src/system_stm32h7xx.c ****   * @brief   CMSIS Cortex-Mx Device Peripheral Access Layer System Source File.
   6:Core/Src/system_stm32h7xx.c ****   *
   7:Core/Src/system_stm32h7xx.c ****   *   This file provides two functions and one global variable to be called from
   8:Core/Src/system_stm32h7xx.c ****   *   user application:
   9:Core/Src/system_stm32h7xx.c ****   *      - SystemInit(): This function is called at startup just after reset and
  10:Core/Src/system_stm32h7xx.c ****   *                      before branch to main program. This call is made inside
  11:Core/Src/system_stm32h7xx.c ****   *                      the "startup_stm32h7xx.s" file.
  12:Core/Src/system_stm32h7xx.c ****   *
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccpb5gCm.s 			page 2


  13:Core/Src/system_stm32h7xx.c ****   *      - SystemCoreClock variable: Contains the core clock, it can be used
  14:Core/Src/system_stm32h7xx.c ****   *                                  by the user application to setup the SysTick
  15:Core/Src/system_stm32h7xx.c ****   *                                  timer or configure other parameters.
  16:Core/Src/system_stm32h7xx.c ****   *
  17:Core/Src/system_stm32h7xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:Core/Src/system_stm32h7xx.c ****   *                                 be called whenever the core clock is changed
  19:Core/Src/system_stm32h7xx.c ****   *                                 during program execution.
  20:Core/Src/system_stm32h7xx.c ****   *
  21:Core/Src/system_stm32h7xx.c ****   *
  22:Core/Src/system_stm32h7xx.c ****   ******************************************************************************
  23:Core/Src/system_stm32h7xx.c ****   * @attention
  24:Core/Src/system_stm32h7xx.c ****   *
  25:Core/Src/system_stm32h7xx.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  26:Core/Src/system_stm32h7xx.c ****   * All rights reserved.</center></h2>
  27:Core/Src/system_stm32h7xx.c ****   *
  28:Core/Src/system_stm32h7xx.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  29:Core/Src/system_stm32h7xx.c ****   * the "License"; You may not use this file except in compliance with the
  30:Core/Src/system_stm32h7xx.c ****   * License. You may obtain a copy of the License at:
  31:Core/Src/system_stm32h7xx.c ****   *                        opensource.org/licenses/BSD-3-Clause
  32:Core/Src/system_stm32h7xx.c ****   *
  33:Core/Src/system_stm32h7xx.c ****   ******************************************************************************
  34:Core/Src/system_stm32h7xx.c ****   */
  35:Core/Src/system_stm32h7xx.c **** 
  36:Core/Src/system_stm32h7xx.c **** /** @addtogroup CMSIS
  37:Core/Src/system_stm32h7xx.c ****   * @{
  38:Core/Src/system_stm32h7xx.c ****   */
  39:Core/Src/system_stm32h7xx.c **** 
  40:Core/Src/system_stm32h7xx.c **** /** @addtogroup stm32h7xx_system
  41:Core/Src/system_stm32h7xx.c ****   * @{
  42:Core/Src/system_stm32h7xx.c ****   */
  43:Core/Src/system_stm32h7xx.c **** 
  44:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Includes
  45:Core/Src/system_stm32h7xx.c ****   * @{
  46:Core/Src/system_stm32h7xx.c ****   */
  47:Core/Src/system_stm32h7xx.c **** 
  48:Core/Src/system_stm32h7xx.c **** #include "stm32h7xx.h"
  49:Core/Src/system_stm32h7xx.c **** #include <math.h>
  50:Core/Src/system_stm32h7xx.c **** #if !defined  (HSE_VALUE)
  51:Core/Src/system_stm32h7xx.c **** #define HSE_VALUE    ((uint32_t)25000000) /*!< Value of the External oscillator in Hz */
  52:Core/Src/system_stm32h7xx.c **** #endif /* HSE_VALUE */
  53:Core/Src/system_stm32h7xx.c **** 
  54:Core/Src/system_stm32h7xx.c **** #if !defined  (CSI_VALUE)
  55:Core/Src/system_stm32h7xx.c ****   #define CSI_VALUE    ((uint32_t)4000000) /*!< Value of the Internal oscillator in Hz*/
  56:Core/Src/system_stm32h7xx.c **** #endif /* CSI_VALUE */
  57:Core/Src/system_stm32h7xx.c **** 
  58:Core/Src/system_stm32h7xx.c **** #if !defined  (HSI_VALUE)
  59:Core/Src/system_stm32h7xx.c ****   #define HSI_VALUE    ((uint32_t)64000000) /*!< Value of the Internal oscillator in Hz*/
  60:Core/Src/system_stm32h7xx.c **** #endif /* HSI_VALUE */
  61:Core/Src/system_stm32h7xx.c **** 
  62:Core/Src/system_stm32h7xx.c **** 
  63:Core/Src/system_stm32h7xx.c **** /**
  64:Core/Src/system_stm32h7xx.c ****   * @}
  65:Core/Src/system_stm32h7xx.c ****   */
  66:Core/Src/system_stm32h7xx.c **** 
  67:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_TypesDefinitions
  68:Core/Src/system_stm32h7xx.c ****   * @{
  69:Core/Src/system_stm32h7xx.c ****   */
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccpb5gCm.s 			page 3


  70:Core/Src/system_stm32h7xx.c **** 
  71:Core/Src/system_stm32h7xx.c **** /**
  72:Core/Src/system_stm32h7xx.c ****   * @}
  73:Core/Src/system_stm32h7xx.c ****   */
  74:Core/Src/system_stm32h7xx.c **** 
  75:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Defines
  76:Core/Src/system_stm32h7xx.c ****   * @{
  77:Core/Src/system_stm32h7xx.c ****   */
  78:Core/Src/system_stm32h7xx.c **** 
  79:Core/Src/system_stm32h7xx.c **** /************************* Miscellaneous Configuration ************************/
  80:Core/Src/system_stm32h7xx.c **** /*!< Uncomment the following line if you need to use initialized data in D2 domain SRAM (AHB SRAM) 
  81:Core/Src/system_stm32h7xx.c **** /* #define DATA_IN_D2_SRAM */
  82:Core/Src/system_stm32h7xx.c **** 
  83:Core/Src/system_stm32h7xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
  84:Core/Src/system_stm32h7xx.c ****      Internal SRAM. */
  85:Core/Src/system_stm32h7xx.c **** /* #define VECT_TAB_SRAM */
  86:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_OFFSET  0x00000000UL /*!< Vector Table base offset field.
  87:Core/Src/system_stm32h7xx.c ****                                       This value must be a multiple of 0x200. */
  88:Core/Src/system_stm32h7xx.c **** /******************************************************************************/
  89:Core/Src/system_stm32h7xx.c **** 
  90:Core/Src/system_stm32h7xx.c **** /**
  91:Core/Src/system_stm32h7xx.c ****   * @}
  92:Core/Src/system_stm32h7xx.c ****   */
  93:Core/Src/system_stm32h7xx.c **** 
  94:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Macros
  95:Core/Src/system_stm32h7xx.c ****   * @{
  96:Core/Src/system_stm32h7xx.c ****   */
  97:Core/Src/system_stm32h7xx.c **** 
  98:Core/Src/system_stm32h7xx.c **** /**
  99:Core/Src/system_stm32h7xx.c ****   * @}
 100:Core/Src/system_stm32h7xx.c ****   */
 101:Core/Src/system_stm32h7xx.c **** 
 102:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Variables
 103:Core/Src/system_stm32h7xx.c ****   * @{
 104:Core/Src/system_stm32h7xx.c ****   */
 105:Core/Src/system_stm32h7xx.c ****   /* This variable is updated in three ways:
 106:Core/Src/system_stm32h7xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 107:Core/Src/system_stm32h7xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 108:Core/Src/system_stm32h7xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 109:Core/Src/system_stm32h7xx.c ****          Note: If you use this function to configure the system clock; then there
 110:Core/Src/system_stm32h7xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 111:Core/Src/system_stm32h7xx.c ****                variable is updated automatically.
 112:Core/Src/system_stm32h7xx.c ****   */
 113:Core/Src/system_stm32h7xx.c ****   uint32_t SystemCoreClock = 64000000;
 114:Core/Src/system_stm32h7xx.c ****   uint32_t SystemD2Clock = 64000000;
 115:Core/Src/system_stm32h7xx.c ****   const  uint8_t D1CorePrescTable[16] = {0, 0, 0, 0, 1, 2, 3, 4, 1, 2, 3, 4, 6, 7, 8, 9};
 116:Core/Src/system_stm32h7xx.c **** 
 117:Core/Src/system_stm32h7xx.c **** /**
 118:Core/Src/system_stm32h7xx.c ****   * @}
 119:Core/Src/system_stm32h7xx.c ****   */
 120:Core/Src/system_stm32h7xx.c **** 
 121:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_FunctionPrototypes
 122:Core/Src/system_stm32h7xx.c ****   * @{
 123:Core/Src/system_stm32h7xx.c ****   */
 124:Core/Src/system_stm32h7xx.c **** 
 125:Core/Src/system_stm32h7xx.c **** /**
 126:Core/Src/system_stm32h7xx.c ****   * @}
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccpb5gCm.s 			page 4


 127:Core/Src/system_stm32h7xx.c ****   */
 128:Core/Src/system_stm32h7xx.c **** 
 129:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Functions
 130:Core/Src/system_stm32h7xx.c ****   * @{
 131:Core/Src/system_stm32h7xx.c ****   */
 132:Core/Src/system_stm32h7xx.c **** 
 133:Core/Src/system_stm32h7xx.c **** /**
 134:Core/Src/system_stm32h7xx.c ****   * @brief  Setup the microcontroller system
 135:Core/Src/system_stm32h7xx.c ****   *         Initialize the FPU setting and  vector table location
 136:Core/Src/system_stm32h7xx.c ****   *         configuration.
 137:Core/Src/system_stm32h7xx.c ****   * @param  None
 138:Core/Src/system_stm32h7xx.c ****   * @retval None
 139:Core/Src/system_stm32h7xx.c ****   */
 140:Core/Src/system_stm32h7xx.c **** void SystemInit (void)
 141:Core/Src/system_stm32h7xx.c **** {
  50              		.loc 1 141 1
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 1, uses_anonymous_args = 0
  54              		@ link register save eliminated.
  55 0000 80B4     		push	{r7}
  56              	.LCFI0:
  57              		.cfi_def_cfa_offset 4
  58              		.cfi_offset 7, -4
  59 0002 00AF     		add	r7, sp, #0
  60              	.LCFI1:
  61              		.cfi_def_cfa_register 7
 142:Core/Src/system_stm32h7xx.c **** #if defined (DATA_IN_D2_SRAM)
 143:Core/Src/system_stm32h7xx.c ****  __IO uint32_t tmpreg;
 144:Core/Src/system_stm32h7xx.c **** #endif /* DATA_IN_D2_SRAM */
 145:Core/Src/system_stm32h7xx.c **** 
 146:Core/Src/system_stm32h7xx.c ****   /* FPU settings ------------------------------------------------------------*/
 147:Core/Src/system_stm32h7xx.c ****   #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 148:Core/Src/system_stm32h7xx.c ****     SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
  62              		.loc 1 148 16
  63 0004 394B     		ldr	r3, .L5
  64 0006 D3F88830 		ldr	r3, [r3, #136]
  65 000a 384A     		ldr	r2, .L5
  66 000c 43F47003 		orr	r3, r3, #15728640
  67 0010 C2F88830 		str	r3, [r2, #136]
 149:Core/Src/system_stm32h7xx.c ****   #endif
 150:Core/Src/system_stm32h7xx.c ****   /* Reset the RCC clock configuration to the default reset state ------------*/
 151:Core/Src/system_stm32h7xx.c **** 
 152:Core/Src/system_stm32h7xx.c ****    /* Increasing the CPU frequency */
 153:Core/Src/system_stm32h7xx.c ****   if(FLASH_LATENCY_DEFAULT  > (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
  68              		.loc 1 153 32
  69 0014 364B     		ldr	r3, .L5+4
  70 0016 1B68     		ldr	r3, [r3]
  71 0018 03F00F03 		and	r3, r3, #15
  72              		.loc 1 153 5
  73 001c 062B     		cmp	r3, #6
  74 001e 07D8     		bhi	.L2
 154:Core/Src/system_stm32h7xx.c ****   {
 155:Core/Src/system_stm32h7xx.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 156:Core/Src/system_stm32h7xx.c **** 	MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
  75              		.loc 1 156 2
  76 0020 334B     		ldr	r3, .L5+4
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccpb5gCm.s 			page 5


  77 0022 1B68     		ldr	r3, [r3]
  78 0024 23F00F03 		bic	r3, r3, #15
  79 0028 314A     		ldr	r2, .L5+4
  80 002a 43F00703 		orr	r3, r3, #7
  81 002e 1360     		str	r3, [r2]
  82              	.L2:
 157:Core/Src/system_stm32h7xx.c ****   }
 158:Core/Src/system_stm32h7xx.c **** 
 159:Core/Src/system_stm32h7xx.c ****   /* Set HSION bit */
 160:Core/Src/system_stm32h7xx.c ****   RCC->CR |= RCC_CR_HSION;
  83              		.loc 1 160 11
  84 0030 304B     		ldr	r3, .L5+8
  85 0032 1B68     		ldr	r3, [r3]
  86 0034 2F4A     		ldr	r2, .L5+8
  87 0036 43F00103 		orr	r3, r3, #1
  88 003a 1360     		str	r3, [r2]
 161:Core/Src/system_stm32h7xx.c **** 
 162:Core/Src/system_stm32h7xx.c ****   /* Reset CFGR register */
 163:Core/Src/system_stm32h7xx.c ****   RCC->CFGR = 0x00000000;
  89              		.loc 1 163 6
  90 003c 2D4B     		ldr	r3, .L5+8
  91              		.loc 1 163 13
  92 003e 0022     		movs	r2, #0
  93 0040 1A61     		str	r2, [r3, #16]
 164:Core/Src/system_stm32h7xx.c **** 
 165:Core/Src/system_stm32h7xx.c ****   /* Reset HSEON, HSECSSON, CSION, HSI48ON, CSIKERON, PLL1ON, PLL2ON and PLL3ON bits */
 166:Core/Src/system_stm32h7xx.c ****   RCC->CR &= 0xEAF6ED7FU;
  94              		.loc 1 166 11
  95 0042 2C4B     		ldr	r3, .L5+8
  96 0044 1A68     		ldr	r2, [r3]
  97 0046 2B49     		ldr	r1, .L5+8
  98 0048 2B4B     		ldr	r3, .L5+12
  99 004a 1340     		ands	r3, r3, r2
 100 004c 0B60     		str	r3, [r1]
 167:Core/Src/system_stm32h7xx.c ****   
 168:Core/Src/system_stm32h7xx.c ****    /* Decreasing the number of wait states because of lower CPU frequency */
 169:Core/Src/system_stm32h7xx.c ****   if(FLASH_LATENCY_DEFAULT  < (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
 101              		.loc 1 169 32
 102 004e 284B     		ldr	r3, .L5+4
 103 0050 1B68     		ldr	r3, [r3]
 104              		.loc 1 169 29
 105 0052 03F00803 		and	r3, r3, #8
 106              		.loc 1 169 5
 107 0056 002B     		cmp	r3, #0
 108 0058 07D0     		beq	.L3
 170:Core/Src/system_stm32h7xx.c ****   {
 171:Core/Src/system_stm32h7xx.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 172:Core/Src/system_stm32h7xx.c **** 	MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
 109              		.loc 1 172 2
 110 005a 254B     		ldr	r3, .L5+4
 111 005c 1B68     		ldr	r3, [r3]
 112 005e 23F00F03 		bic	r3, r3, #15
 113 0062 234A     		ldr	r2, .L5+4
 114 0064 43F00703 		orr	r3, r3, #7
 115 0068 1360     		str	r3, [r2]
 116              	.L3:
 173:Core/Src/system_stm32h7xx.c ****   }
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccpb5gCm.s 			page 6


 174:Core/Src/system_stm32h7xx.c **** 
 175:Core/Src/system_stm32h7xx.c **** #if defined(D3_SRAM_BASE)
 176:Core/Src/system_stm32h7xx.c ****   /* Reset D1CFGR register */
 177:Core/Src/system_stm32h7xx.c ****   RCC->D1CFGR = 0x00000000;
 117              		.loc 1 177 6
 118 006a 224B     		ldr	r3, .L5+8
 119              		.loc 1 177 15
 120 006c 0022     		movs	r2, #0
 121 006e 9A61     		str	r2, [r3, #24]
 178:Core/Src/system_stm32h7xx.c **** 
 179:Core/Src/system_stm32h7xx.c ****   /* Reset D2CFGR register */
 180:Core/Src/system_stm32h7xx.c ****   RCC->D2CFGR = 0x00000000;
 122              		.loc 1 180 6
 123 0070 204B     		ldr	r3, .L5+8
 124              		.loc 1 180 15
 125 0072 0022     		movs	r2, #0
 126 0074 DA61     		str	r2, [r3, #28]
 181:Core/Src/system_stm32h7xx.c **** 
 182:Core/Src/system_stm32h7xx.c ****   /* Reset D3CFGR register */
 183:Core/Src/system_stm32h7xx.c ****   RCC->D3CFGR = 0x00000000;
 127              		.loc 1 183 6
 128 0076 1F4B     		ldr	r3, .L5+8
 129              		.loc 1 183 15
 130 0078 0022     		movs	r2, #0
 131 007a 1A62     		str	r2, [r3, #32]
 184:Core/Src/system_stm32h7xx.c **** #else
 185:Core/Src/system_stm32h7xx.c ****   /* Reset CDCFGR1 register */
 186:Core/Src/system_stm32h7xx.c ****   RCC->CDCFGR1 = 0x00000000;
 187:Core/Src/system_stm32h7xx.c **** 
 188:Core/Src/system_stm32h7xx.c ****   /* Reset CDCFGR2 register */
 189:Core/Src/system_stm32h7xx.c ****   RCC->CDCFGR2 = 0x00000000;
 190:Core/Src/system_stm32h7xx.c **** 
 191:Core/Src/system_stm32h7xx.c ****   /* Reset SRDCFGR register */
 192:Core/Src/system_stm32h7xx.c ****   RCC->SRDCFGR = 0x00000000;
 193:Core/Src/system_stm32h7xx.c **** #endif
 194:Core/Src/system_stm32h7xx.c ****   /* Reset PLLCKSELR register */
 195:Core/Src/system_stm32h7xx.c ****   RCC->PLLCKSELR = 0x02020200;
 132              		.loc 1 195 6
 133 007c 1D4B     		ldr	r3, .L5+8
 134              		.loc 1 195 18
 135 007e 1F4A     		ldr	r2, .L5+16
 136 0080 9A62     		str	r2, [r3, #40]
 196:Core/Src/system_stm32h7xx.c **** 
 197:Core/Src/system_stm32h7xx.c ****   /* Reset PLLCFGR register */
 198:Core/Src/system_stm32h7xx.c ****   RCC->PLLCFGR = 0x01FF0000;
 137              		.loc 1 198 6
 138 0082 1C4B     		ldr	r3, .L5+8
 139              		.loc 1 198 16
 140 0084 1E4A     		ldr	r2, .L5+20
 141 0086 DA62     		str	r2, [r3, #44]
 199:Core/Src/system_stm32h7xx.c ****   /* Reset PLL1DIVR register */
 200:Core/Src/system_stm32h7xx.c ****   RCC->PLL1DIVR = 0x01010280;
 142              		.loc 1 200 6
 143 0088 1A4B     		ldr	r3, .L5+8
 144              		.loc 1 200 17
 145 008a 1E4A     		ldr	r2, .L5+24
 146 008c 1A63     		str	r2, [r3, #48]
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccpb5gCm.s 			page 7


 201:Core/Src/system_stm32h7xx.c ****   /* Reset PLL1FRACR register */
 202:Core/Src/system_stm32h7xx.c ****   RCC->PLL1FRACR = 0x00000000;
 147              		.loc 1 202 6
 148 008e 194B     		ldr	r3, .L5+8
 149              		.loc 1 202 18
 150 0090 0022     		movs	r2, #0
 151 0092 5A63     		str	r2, [r3, #52]
 203:Core/Src/system_stm32h7xx.c **** 
 204:Core/Src/system_stm32h7xx.c ****   /* Reset PLL2DIVR register */
 205:Core/Src/system_stm32h7xx.c ****   RCC->PLL2DIVR = 0x01010280;
 152              		.loc 1 205 6
 153 0094 174B     		ldr	r3, .L5+8
 154              		.loc 1 205 17
 155 0096 1B4A     		ldr	r2, .L5+24
 156 0098 9A63     		str	r2, [r3, #56]
 206:Core/Src/system_stm32h7xx.c **** 
 207:Core/Src/system_stm32h7xx.c ****   /* Reset PLL2FRACR register */
 208:Core/Src/system_stm32h7xx.c **** 
 209:Core/Src/system_stm32h7xx.c ****   RCC->PLL2FRACR = 0x00000000;
 157              		.loc 1 209 6
 158 009a 164B     		ldr	r3, .L5+8
 159              		.loc 1 209 18
 160 009c 0022     		movs	r2, #0
 161 009e DA63     		str	r2, [r3, #60]
 210:Core/Src/system_stm32h7xx.c ****   /* Reset PLL3DIVR register */
 211:Core/Src/system_stm32h7xx.c ****   RCC->PLL3DIVR = 0x01010280;
 162              		.loc 1 211 6
 163 00a0 144B     		ldr	r3, .L5+8
 164              		.loc 1 211 17
 165 00a2 184A     		ldr	r2, .L5+24
 166 00a4 1A64     		str	r2, [r3, #64]
 212:Core/Src/system_stm32h7xx.c **** 
 213:Core/Src/system_stm32h7xx.c ****   /* Reset PLL3FRACR register */
 214:Core/Src/system_stm32h7xx.c ****   RCC->PLL3FRACR = 0x00000000;
 167              		.loc 1 214 6
 168 00a6 134B     		ldr	r3, .L5+8
 169              		.loc 1 214 18
 170 00a8 0022     		movs	r2, #0
 171 00aa 5A64     		str	r2, [r3, #68]
 215:Core/Src/system_stm32h7xx.c **** 
 216:Core/Src/system_stm32h7xx.c ****   /* Reset HSEBYP bit */
 217:Core/Src/system_stm32h7xx.c ****   RCC->CR &= 0xFFFBFFFFU;
 172              		.loc 1 217 11
 173 00ac 114B     		ldr	r3, .L5+8
 174 00ae 1B68     		ldr	r3, [r3]
 175 00b0 104A     		ldr	r2, .L5+8
 176 00b2 23F48023 		bic	r3, r3, #262144
 177 00b6 1360     		str	r3, [r2]
 218:Core/Src/system_stm32h7xx.c **** 
 219:Core/Src/system_stm32h7xx.c ****   /* Disable all interrupts */
 220:Core/Src/system_stm32h7xx.c ****   RCC->CIER = 0x00000000;
 178              		.loc 1 220 6
 179 00b8 0E4B     		ldr	r3, .L5+8
 180              		.loc 1 220 13
 181 00ba 0022     		movs	r2, #0
 182 00bc 1A66     		str	r2, [r3, #96]
 221:Core/Src/system_stm32h7xx.c **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccpb5gCm.s 			page 8


 222:Core/Src/system_stm32h7xx.c **** #if (STM32H7_DEV_ID == 0x450UL)
 223:Core/Src/system_stm32h7xx.c ****   /* dual core CM7 or single core line */
 224:Core/Src/system_stm32h7xx.c ****   if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
 183              		.loc 1 224 13
 184 00be 124B     		ldr	r3, .L5+28
 185 00c0 1A68     		ldr	r2, [r3]
 186              		.loc 1 224 22
 187 00c2 124B     		ldr	r3, .L5+32
 188 00c4 1340     		ands	r3, r3, r2
 189              		.loc 1 224 5
 190 00c6 B3F1005F 		cmp	r3, #536870912
 191 00ca 02D2     		bcs	.L4
 225:Core/Src/system_stm32h7xx.c ****   {
 226:Core/Src/system_stm32h7xx.c ****     /* if stm32h7 revY*/
 227:Core/Src/system_stm32h7xx.c ****     /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
 228:Core/Src/system_stm32h7xx.c ****     *((__IO uint32_t*)0x51008108) = 0x000000001U;
 192              		.loc 1 228 5
 193 00cc 104B     		ldr	r3, .L5+36
 194              		.loc 1 228 35
 195 00ce 0122     		movs	r2, #1
 196 00d0 1A60     		str	r2, [r3]
 197              	.L4:
 229:Core/Src/system_stm32h7xx.c ****   }
 230:Core/Src/system_stm32h7xx.c **** #endif
 231:Core/Src/system_stm32h7xx.c **** 
 232:Core/Src/system_stm32h7xx.c **** #if defined (DATA_IN_D2_SRAM)
 233:Core/Src/system_stm32h7xx.c ****   /* in case of initialized data in D2 SRAM (AHB SRAM) , enable the D2 SRAM clock (AHB SRAM clock) 
 234:Core/Src/system_stm32h7xx.c **** #if defined(RCC_AHB2ENR_D2SRAM3EN)
 235:Core/Src/system_stm32h7xx.c ****   RCC->AHB2ENR |= (RCC_AHB2ENR_D2SRAM1EN | RCC_AHB2ENR_D2SRAM2EN | RCC_AHB2ENR_D2SRAM3EN);
 236:Core/Src/system_stm32h7xx.c **** #elif defined(RCC_AHB2ENR_D2SRAM2EN)
 237:Core/Src/system_stm32h7xx.c ****   RCC->AHB2ENR |= (RCC_AHB2ENR_D2SRAM1EN | RCC_AHB2ENR_D2SRAM2EN);
 238:Core/Src/system_stm32h7xx.c **** #else
 239:Core/Src/system_stm32h7xx.c ****   RCC->AHB2ENR |= (RCC_AHB2ENR_AHBSRAM1EN | RCC_AHB2ENR_AHBSRAM2EN);
 240:Core/Src/system_stm32h7xx.c **** #endif /* RCC_AHB2ENR_D2SRAM3EN */
 241:Core/Src/system_stm32h7xx.c **** 
 242:Core/Src/system_stm32h7xx.c ****   tmpreg = RCC->AHB2ENR;
 243:Core/Src/system_stm32h7xx.c ****   (void) tmpreg;
 244:Core/Src/system_stm32h7xx.c **** #endif /* DATA_IN_D2_SRAM */
 245:Core/Src/system_stm32h7xx.c **** 
 246:Core/Src/system_stm32h7xx.c **** #if defined(DUAL_CORE) && defined(CORE_CM4)
 247:Core/Src/system_stm32h7xx.c ****   /* Configure the Vector Table location add offset address for cortex-M4 ------------------*/
 248:Core/Src/system_stm32h7xx.c **** #ifdef VECT_TAB_SRAM
 249:Core/Src/system_stm32h7xx.c ****   SCB->VTOR = D2_AXISRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
 250:Core/Src/system_stm32h7xx.c **** #else
 251:Core/Src/system_stm32h7xx.c ****   SCB->VTOR = FLASH_BANK2_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 252:Core/Src/system_stm32h7xx.c **** #endif /* VECT_TAB_SRAM */
 253:Core/Src/system_stm32h7xx.c **** 
 254:Core/Src/system_stm32h7xx.c **** #else
 255:Core/Src/system_stm32h7xx.c **** 
 256:Core/Src/system_stm32h7xx.c ****   /*
 257:Core/Src/system_stm32h7xx.c ****    * Disable the FMC bank1 (enabled after reset).
 258:Core/Src/system_stm32h7xx.c ****    * This, prevents CPU speculation access on this bank which blocks the use of FMC during
 259:Core/Src/system_stm32h7xx.c ****    * 24us. During this time the others FMC master (such as LTDC) cannot use it!
 260:Core/Src/system_stm32h7xx.c ****    */
 261:Core/Src/system_stm32h7xx.c ****   FMC_Bank1_R->BTCR[0] = 0x000030D2;
 198              		.loc 1 261 14
 199 00d2 104B     		ldr	r3, .L5+40
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccpb5gCm.s 			page 9


 200              		.loc 1 261 24
 201 00d4 43F2D202 		movw	r2, #12498
 202 00d8 1A60     		str	r2, [r3]
 262:Core/Src/system_stm32h7xx.c **** 
 263:Core/Src/system_stm32h7xx.c ****   /* Configure the Vector Table location add offset address for cortex-M7 ------------------*/
 264:Core/Src/system_stm32h7xx.c **** #ifdef VECT_TAB_SRAM
 265:Core/Src/system_stm32h7xx.c ****   SCB->VTOR = D1_AXISRAM_BASE  | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal AXI-RAM */
 266:Core/Src/system_stm32h7xx.c **** #else
 267:Core/Src/system_stm32h7xx.c ****   SCB->VTOR = FLASH_BANK1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 203              		.loc 1 267 6
 204 00da 044B     		ldr	r3, .L5
 205              		.loc 1 267 13
 206 00dc 4FF00062 		mov	r2, #134217728
 207 00e0 9A60     		str	r2, [r3, #8]
 268:Core/Src/system_stm32h7xx.c **** #endif
 269:Core/Src/system_stm32h7xx.c **** 
 270:Core/Src/system_stm32h7xx.c **** #endif /*DUAL_CORE && CORE_CM4*/
 271:Core/Src/system_stm32h7xx.c **** 
 272:Core/Src/system_stm32h7xx.c **** }
 208              		.loc 1 272 1
 209 00e2 00BF     		nop
 210 00e4 BD46     		mov	sp, r7
 211              	.LCFI2:
 212              		.cfi_def_cfa_register 13
 213              		@ sp needed
 214 00e6 5DF8047B 		ldr	r7, [sp], #4
 215              	.LCFI3:
 216              		.cfi_restore 7
 217              		.cfi_def_cfa_offset 0
 218 00ea 7047     		bx	lr
 219              	.L6:
 220              		.align	2
 221              	.L5:
 222 00ec 00ED00E0 		.word	-536810240
 223 00f0 00200052 		.word	1375739904
 224 00f4 00440258 		.word	1476543488
 225 00f8 7FEDF6EA 		.word	-352916097
 226 00fc 00020202 		.word	33686016
 227 0100 0000FF01 		.word	33488896
 228 0104 80020101 		.word	16843392
 229 0108 0010005C 		.word	1543507968
 230 010c 0000FFFF 		.word	-65536
 231 0110 08810051 		.word	1358987528
 232 0114 00400052 		.word	1375748096
 233              		.cfi_endproc
 234              	.LFE333:
 236              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
 237              		.align	1
 238              		.global	SystemCoreClockUpdate
 239              		.syntax unified
 240              		.thumb
 241              		.thumb_func
 243              	SystemCoreClockUpdate:
 244              	.LFB334:
 273:Core/Src/system_stm32h7xx.c **** 
 274:Core/Src/system_stm32h7xx.c **** /**
 275:Core/Src/system_stm32h7xx.c ****    * @brief  Update SystemCoreClock variable according to Clock Register Values.
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccpb5gCm.s 			page 10


 276:Core/Src/system_stm32h7xx.c ****   *         The SystemCoreClock variable contains the core clock , it can
 277:Core/Src/system_stm32h7xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 278:Core/Src/system_stm32h7xx.c ****   *         other parameters.
 279:Core/Src/system_stm32h7xx.c ****   *
 280:Core/Src/system_stm32h7xx.c ****   * @note   Each time the core clock changes, this function must be called
 281:Core/Src/system_stm32h7xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 282:Core/Src/system_stm32h7xx.c ****   *         based on this variable will be incorrect.
 283:Core/Src/system_stm32h7xx.c ****   *
 284:Core/Src/system_stm32h7xx.c ****   * @note   - The system frequency computed by this function is not the real
 285:Core/Src/system_stm32h7xx.c ****   *           frequency in the chip. It is calculated based on the predefined
 286:Core/Src/system_stm32h7xx.c ****   *           constant and the selected clock source:
 287:Core/Src/system_stm32h7xx.c ****   *
 288:Core/Src/system_stm32h7xx.c ****   *           - If SYSCLK source is CSI, SystemCoreClock will contain the CSI_VALUE(*)
 289:Core/Src/system_stm32h7xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(**)
 290:Core/Src/system_stm32h7xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(***)
 291:Core/Src/system_stm32h7xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the CSI_VALUE(*),
 292:Core/Src/system_stm32h7xx.c ****   *             HSI_VALUE(**) or HSE_VALUE(***) multiplied/divided by the PLL factors.
 293:Core/Src/system_stm32h7xx.c ****   *
 294:Core/Src/system_stm32h7xx.c ****   *         (*) CSI_VALUE is a constant defined in stm32h7xx_hal.h file (default value
 295:Core/Src/system_stm32h7xx.c ****   *             4 MHz) but the real value may vary depending on the variations
 296:Core/Src/system_stm32h7xx.c ****   *             in voltage and temperature.
 297:Core/Src/system_stm32h7xx.c ****   *         (**) HSI_VALUE is a constant defined in stm32h7xx_hal.h file (default value
 298:Core/Src/system_stm32h7xx.c ****   *             64 MHz) but the real value may vary depending on the variations
 299:Core/Src/system_stm32h7xx.c ****   *             in voltage and temperature.
 300:Core/Src/system_stm32h7xx.c ****   *
 301:Core/Src/system_stm32h7xx.c ****   *         (***)HSE_VALUE is a constant defined in stm32h7xx_hal.h file (default value
 302:Core/Src/system_stm32h7xx.c ****   *              25 MHz), user has to ensure that HSE_VALUE is same as the real
 303:Core/Src/system_stm32h7xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 304:Core/Src/system_stm32h7xx.c ****   *              have wrong result.
 305:Core/Src/system_stm32h7xx.c ****   *
 306:Core/Src/system_stm32h7xx.c ****   *         - The result of this function could be not correct when using fractional
 307:Core/Src/system_stm32h7xx.c ****   *           value for HSE crystal.
 308:Core/Src/system_stm32h7xx.c ****   * @param  None
 309:Core/Src/system_stm32h7xx.c ****   * @retval None
 310:Core/Src/system_stm32h7xx.c ****   */
 311:Core/Src/system_stm32h7xx.c **** void SystemCoreClockUpdate (void)
 312:Core/Src/system_stm32h7xx.c **** {
 245              		.loc 1 312 1
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 40
 248              		@ frame_needed = 1, uses_anonymous_args = 0
 249              		@ link register save eliminated.
 250 0000 80B4     		push	{r7}
 251              	.LCFI4:
 252              		.cfi_def_cfa_offset 4
 253              		.cfi_offset 7, -4
 254 0002 8BB0     		sub	sp, sp, #44
 255              	.LCFI5:
 256              		.cfi_def_cfa_offset 48
 257 0004 00AF     		add	r7, sp, #0
 258              	.LCFI6:
 259              		.cfi_def_cfa_register 7
 313:Core/Src/system_stm32h7xx.c ****   uint32_t pllp, pllsource, pllm, pllfracen, hsivalue, tmp;
 314:Core/Src/system_stm32h7xx.c ****   uint32_t common_system_clock;
 315:Core/Src/system_stm32h7xx.c ****   float_t fracn1, pllvco;
 316:Core/Src/system_stm32h7xx.c **** 
 317:Core/Src/system_stm32h7xx.c **** 
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccpb5gCm.s 			page 11


 318:Core/Src/system_stm32h7xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 319:Core/Src/system_stm32h7xx.c **** 
 320:Core/Src/system_stm32h7xx.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
 260              		.loc 1 320 14
 261 0006 B14B     		ldr	r3, .L22
 262 0008 1B69     		ldr	r3, [r3, #16]
 263              		.loc 1 320 21
 264 000a 03F03803 		and	r3, r3, #56
 265              		.loc 1 320 3
 266 000e 182B     		cmp	r3, #24
 267 0010 00F22E81 		bhi	.L8
 268 0014 01A2     		adr	r2, .L10
 269 0016 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 270 001a 00BF     		.p2align 2
 271              	.L10:
 272 001c 81000000 		.word	.L13+1
 273 0020 71020000 		.word	.L8+1
 274 0024 71020000 		.word	.L8+1
 275 0028 71020000 		.word	.L8+1
 276 002c 71020000 		.word	.L8+1
 277 0030 71020000 		.word	.L8+1
 278 0034 71020000 		.word	.L8+1
 279 0038 71020000 		.word	.L8+1
 280 003c 95000000 		.word	.L12+1
 281 0040 71020000 		.word	.L8+1
 282 0044 71020000 		.word	.L8+1
 283 0048 71020000 		.word	.L8+1
 284 004c 71020000 		.word	.L8+1
 285 0050 71020000 		.word	.L8+1
 286 0054 71020000 		.word	.L8+1
 287 0058 71020000 		.word	.L8+1
 288 005c 9B000000 		.word	.L11+1
 289 0060 71020000 		.word	.L8+1
 290 0064 71020000 		.word	.L8+1
 291 0068 71020000 		.word	.L8+1
 292 006c 71020000 		.word	.L8+1
 293 0070 71020000 		.word	.L8+1
 294 0074 71020000 		.word	.L8+1
 295 0078 71020000 		.word	.L8+1
 296 007c A1000000 		.word	.L9+1
 297              		.p2align 1
 298              	.L13:
 321:Core/Src/system_stm32h7xx.c ****   {
 322:Core/Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
 323:Core/Src/system_stm32h7xx.c ****     common_system_clock = (uint32_t) (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3));
 299              		.loc 1 323 57
 300 0080 924B     		ldr	r3, .L22
 301 0082 1B68     		ldr	r3, [r3]
 302              		.loc 1 323 78
 303 0084 DB08     		lsrs	r3, r3, #3
 304 0086 03F00303 		and	r3, r3, #3
 305              		.loc 1 323 25
 306 008a 914A     		ldr	r2, .L22+4
 307 008c 22FA03F3 		lsr	r3, r2, r3
 308 0090 7B62     		str	r3, [r7, #36]
 324:Core/Src/system_stm32h7xx.c ****     break;
 309              		.loc 1 324 5
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccpb5gCm.s 			page 12


 310 0092 F7E0     		b	.L14
 311              	.L12:
 325:Core/Src/system_stm32h7xx.c **** 
 326:Core/Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_CSI:  /* CSI used as system clock  source */
 327:Core/Src/system_stm32h7xx.c ****     common_system_clock = CSI_VALUE;
 312              		.loc 1 327 25
 313 0094 8F4B     		ldr	r3, .L22+8
 314 0096 7B62     		str	r3, [r7, #36]
 328:Core/Src/system_stm32h7xx.c ****     break;
 315              		.loc 1 328 5
 316 0098 F4E0     		b	.L14
 317              	.L11:
 329:Core/Src/system_stm32h7xx.c **** 
 330:Core/Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
 331:Core/Src/system_stm32h7xx.c ****     common_system_clock = HSE_VALUE;
 318              		.loc 1 331 25
 319 009a 8F4B     		ldr	r3, .L22+12
 320 009c 7B62     		str	r3, [r7, #36]
 332:Core/Src/system_stm32h7xx.c ****     break;
 321              		.loc 1 332 5
 322 009e F1E0     		b	.L14
 323              	.L9:
 333:Core/Src/system_stm32h7xx.c **** 
 334:Core/Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */
 335:Core/Src/system_stm32h7xx.c **** 
 336:Core/Src/system_stm32h7xx.c ****     /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
 337:Core/Src/system_stm32h7xx.c ****     SYSCLK = PLL_VCO / PLLR
 338:Core/Src/system_stm32h7xx.c ****     */
 339:Core/Src/system_stm32h7xx.c ****     pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 324              		.loc 1 339 21
 325 00a0 8A4B     		ldr	r3, .L22
 326 00a2 9B6A     		ldr	r3, [r3, #40]
 327              		.loc 1 339 15
 328 00a4 03F00303 		and	r3, r3, #3
 329 00a8 FB61     		str	r3, [r7, #28]
 340:Core/Src/system_stm32h7xx.c ****     pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
 330              		.loc 1 340 17
 331 00aa 884B     		ldr	r3, .L22
 332 00ac 9B6A     		ldr	r3, [r3, #40]
 333              		.loc 1 340 51
 334 00ae 1B09     		lsrs	r3, r3, #4
 335              		.loc 1 340 10
 336 00b0 03F03F03 		and	r3, r3, #63
 337 00b4 BB61     		str	r3, [r7, #24]
 341:Core/Src/system_stm32h7xx.c ****     pllfracen = ((RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
 338              		.loc 1 341 22
 339 00b6 854B     		ldr	r3, .L22
 340 00b8 DB6A     		ldr	r3, [r3, #44]
 341              		.loc 1 341 15
 342 00ba 03F00103 		and	r3, r3, #1
 343 00be 7B61     		str	r3, [r7, #20]
 342:Core/Src/system_stm32h7xx.c ****     fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 344              		.loc 1 342 50
 345 00c0 824B     		ldr	r3, .L22
 346 00c2 5B6B     		ldr	r3, [r3, #52]
 347              		.loc 1 342 85
 348 00c4 DB08     		lsrs	r3, r3, #3
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccpb5gCm.s 			page 13


 349 00c6 C3F30C03 		ubfx	r3, r3, #0, #13
 350              		.loc 1 342 23
 351 00ca 7A69     		ldr	r2, [r7, #20]
 352 00cc 02FB03F3 		mul	r3, r2, r3
 353              		.loc 1 342 12
 354 00d0 07EE903A 		vmov	s15, r3	@ int
 355 00d4 F8EE677A 		vcvt.f32.u32	s15, s15
 356 00d8 C7ED047A 		vstr.32	s15, [r7, #16]
 343:Core/Src/system_stm32h7xx.c **** 
 344:Core/Src/system_stm32h7xx.c ****     if (pllm != 0U)
 357              		.loc 1 344 8
 358 00dc BB69     		ldr	r3, [r7, #24]
 359 00de 002B     		cmp	r3, #0
 360 00e0 00F0C380 		beq	.L15
 361 00e4 FB69     		ldr	r3, [r7, #28]
 362 00e6 022B     		cmp	r3, #2
 363 00e8 59D0     		beq	.L16
 364 00ea FB69     		ldr	r3, [r7, #28]
 365 00ec 022B     		cmp	r3, #2
 366 00ee 78D8     		bhi	.L17
 367 00f0 FB69     		ldr	r3, [r7, #28]
 368 00f2 002B     		cmp	r3, #0
 369 00f4 03D0     		beq	.L18
 370 00f6 FB69     		ldr	r3, [r7, #28]
 371 00f8 012B     		cmp	r3, #1
 372 00fa 2ED0     		beq	.L19
 373 00fc 71E0     		b	.L17
 374              	.L18:
 345:Core/Src/system_stm32h7xx.c ****     {
 346:Core/Src/system_stm32h7xx.c ****       switch (pllsource)
 347:Core/Src/system_stm32h7xx.c ****       {
 348:Core/Src/system_stm32h7xx.c ****         case RCC_PLLCKSELR_PLLSRC_HSI:  /* HSI used as PLL clock source */
 349:Core/Src/system_stm32h7xx.c **** 
 350:Core/Src/system_stm32h7xx.c ****         hsivalue = (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3)) ;
 375              		.loc 1 350 39
 376 00fe 734B     		ldr	r3, .L22
 377 0100 1B68     		ldr	r3, [r3]
 378              		.loc 1 350 60
 379 0102 DB08     		lsrs	r3, r3, #3
 380 0104 03F00303 		and	r3, r3, #3
 381              		.loc 1 350 18
 382 0108 714A     		ldr	r2, .L22+4
 383 010a 22FA03F3 		lsr	r3, r2, r3
 384 010e FB60     		str	r3, [r7, #12]
 351:Core/Src/system_stm32h7xx.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 385              		.loc 1 351 20
 386 0110 FB68     		ldr	r3, [r7, #12]
 387 0112 07EE903A 		vmov	s15, r3	@ int
 388 0116 F8EE676A 		vcvt.f32.u32	s13, s15
 389              		.loc 1 351 40
 390 011a BB69     		ldr	r3, [r7, #24]
 391 011c 07EE903A 		vmov	s15, r3	@ int
 392 0120 F8EE677A 		vcvt.f32.u32	s15, s15
 393              		.loc 1 351 38
 394 0124 86EEA77A 		vdiv.f32	s14, s13, s15
 395              		.loc 1 351 81
 396 0128 684B     		ldr	r3, .L22
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccpb5gCm.s 			page 14


 397 012a 1B6B     		ldr	r3, [r3, #48]
 398              		.loc 1 351 67
 399 012c C3F30803 		ubfx	r3, r3, #0, #9
 400              		.loc 1 351 58
 401 0130 07EE903A 		vmov	s15, r3	@ int
 402 0134 F8EE676A 		vcvt.f32.u32	s13, s15
 403              		.loc 1 351 120
 404 0138 97ED046A 		vldr.32	s12, [r7, #16]
 405 013c DFED675A 		vldr.32	s11, .L22+16
 406 0140 C6EE257A 		vdiv.f32	s15, s12, s11
 407              		.loc 1 351 111
 408 0144 76EEA77A 		vadd.f32	s15, s13, s15
 409              		.loc 1 351 138
 410 0148 F7EE006A 		vmov.f32	s13, #1.0e+0
 411 014c 77EEA67A 		vadd.f32	s15, s15, s13
 412              		.loc 1 351 16
 413 0150 67EE277A 		vmul.f32	s15, s14, s15
 414 0154 C7ED087A 		vstr.32	s15, [r7, #32]
 352:Core/Src/system_stm32h7xx.c **** 
 353:Core/Src/system_stm32h7xx.c ****         break;
 415              		.loc 1 353 9
 416 0158 71E0     		b	.L20
 417              	.L19:
 354:Core/Src/system_stm32h7xx.c **** 
 355:Core/Src/system_stm32h7xx.c ****         case RCC_PLLCKSELR_PLLSRC_CSI:  /* CSI used as PLL clock source */
 356:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_
 418              		.loc 1 356 42
 419 015a BB69     		ldr	r3, [r7, #24]
 420 015c 07EE903A 		vmov	s15, r3	@ int
 421 0160 F8EE677A 		vcvt.f32.u32	s15, s15
 422              		.loc 1 356 40
 423 0164 DFED5E6A 		vldr.32	s13, .L22+20
 424 0168 86EEA77A 		vdiv.f32	s14, s13, s15
 425              		.loc 1 356 83
 426 016c 574B     		ldr	r3, .L22
 427 016e 1B6B     		ldr	r3, [r3, #48]
 428              		.loc 1 356 69
 429 0170 C3F30803 		ubfx	r3, r3, #0, #9
 430              		.loc 1 356 60
 431 0174 07EE903A 		vmov	s15, r3	@ int
 432 0178 F8EE676A 		vcvt.f32.u32	s13, s15
 433              		.loc 1 356 122
 434 017c 97ED046A 		vldr.32	s12, [r7, #16]
 435 0180 DFED565A 		vldr.32	s11, .L22+16
 436 0184 C6EE257A 		vdiv.f32	s15, s12, s11
 437              		.loc 1 356 113
 438 0188 76EEA77A 		vadd.f32	s15, s13, s15
 439              		.loc 1 356 140
 440 018c F7EE006A 		vmov.f32	s13, #1.0e+0
 441 0190 77EEA67A 		vadd.f32	s15, s15, s13
 442              		.loc 1 356 18
 443 0194 67EE277A 		vmul.f32	s15, s14, s15
 444 0198 C7ED087A 		vstr.32	s15, [r7, #32]
 357:Core/Src/system_stm32h7xx.c ****         break;
 445              		.loc 1 357 9
 446 019c 4FE0     		b	.L20
 447              	.L16:
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccpb5gCm.s 			page 15


 358:Core/Src/system_stm32h7xx.c **** 
 359:Core/Src/system_stm32h7xx.c ****         case RCC_PLLCKSELR_PLLSRC_HSE:  /* HSE used as PLL clock source */
 360:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_
 448              		.loc 1 360 42
 449 019e BB69     		ldr	r3, [r7, #24]
 450 01a0 07EE903A 		vmov	s15, r3	@ int
 451 01a4 F8EE677A 		vcvt.f32.u32	s15, s15
 452              		.loc 1 360 40
 453 01a8 DFED4E6A 		vldr.32	s13, .L22+24
 454 01ac 86EEA77A 		vdiv.f32	s14, s13, s15
 455              		.loc 1 360 83
 456 01b0 464B     		ldr	r3, .L22
 457 01b2 1B6B     		ldr	r3, [r3, #48]
 458              		.loc 1 360 69
 459 01b4 C3F30803 		ubfx	r3, r3, #0, #9
 460              		.loc 1 360 60
 461 01b8 07EE903A 		vmov	s15, r3	@ int
 462 01bc F8EE676A 		vcvt.f32.u32	s13, s15
 463              		.loc 1 360 122
 464 01c0 97ED046A 		vldr.32	s12, [r7, #16]
 465 01c4 DFED455A 		vldr.32	s11, .L22+16
 466 01c8 C6EE257A 		vdiv.f32	s15, s12, s11
 467              		.loc 1 360 113
 468 01cc 76EEA77A 		vadd.f32	s15, s13, s15
 469              		.loc 1 360 140
 470 01d0 F7EE006A 		vmov.f32	s13, #1.0e+0
 471 01d4 77EEA67A 		vadd.f32	s15, s15, s13
 472              		.loc 1 360 18
 473 01d8 67EE277A 		vmul.f32	s15, s14, s15
 474 01dc C7ED087A 		vstr.32	s15, [r7, #32]
 361:Core/Src/system_stm32h7xx.c ****         break;
 475              		.loc 1 361 9
 476 01e0 2DE0     		b	.L20
 477              	.L17:
 362:Core/Src/system_stm32h7xx.c **** 
 363:Core/Src/system_stm32h7xx.c ****       default:
 364:Core/Src/system_stm32h7xx.c ****           hsivalue = (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3)) ;
 478              		.loc 1 364 41
 479 01e2 3A4B     		ldr	r3, .L22
 480 01e4 1B68     		ldr	r3, [r3]
 481              		.loc 1 364 62
 482 01e6 DB08     		lsrs	r3, r3, #3
 483 01e8 03F00303 		and	r3, r3, #3
 484              		.loc 1 364 20
 485 01ec 384A     		ldr	r2, .L22+4
 486 01ee 22FA03F3 		lsr	r3, r2, r3
 487 01f2 FB60     		str	r3, [r7, #12]
 365:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 488              		.loc 1 365 21
 489 01f4 FB68     		ldr	r3, [r7, #12]
 490 01f6 07EE903A 		vmov	s15, r3	@ int
 491 01fa F8EE676A 		vcvt.f32.u32	s13, s15
 492              		.loc 1 365 41
 493 01fe BB69     		ldr	r3, [r7, #24]
 494 0200 07EE903A 		vmov	s15, r3	@ int
 495 0204 F8EE677A 		vcvt.f32.u32	s15, s15
 496              		.loc 1 365 39
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccpb5gCm.s 			page 16


 497 0208 86EEA77A 		vdiv.f32	s14, s13, s15
 498              		.loc 1 365 82
 499 020c 2F4B     		ldr	r3, .L22
 500 020e 1B6B     		ldr	r3, [r3, #48]
 501              		.loc 1 365 68
 502 0210 C3F30803 		ubfx	r3, r3, #0, #9
 503              		.loc 1 365 59
 504 0214 07EE903A 		vmov	s15, r3	@ int
 505 0218 F8EE676A 		vcvt.f32.u32	s13, s15
 506              		.loc 1 365 121
 507 021c 97ED046A 		vldr.32	s12, [r7, #16]
 508 0220 DFED2E5A 		vldr.32	s11, .L22+16
 509 0224 C6EE257A 		vdiv.f32	s15, s12, s11
 510              		.loc 1 365 112
 511 0228 76EEA77A 		vadd.f32	s15, s13, s15
 512              		.loc 1 365 139
 513 022c F7EE006A 		vmov.f32	s13, #1.0e+0
 514 0230 77EEA67A 		vadd.f32	s15, s15, s13
 515              		.loc 1 365 18
 516 0234 67EE277A 		vmul.f32	s15, s14, s15
 517 0238 C7ED087A 		vstr.32	s15, [r7, #32]
 366:Core/Src/system_stm32h7xx.c ****         break;
 518              		.loc 1 366 9
 519 023c 00BF     		nop
 520              	.L20:
 367:Core/Src/system_stm32h7xx.c ****       }
 368:Core/Src/system_stm32h7xx.c ****       pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >>9) + 1U ) ;
 521              		.loc 1 368 20
 522 023e 234B     		ldr	r3, .L22
 523 0240 1B6B     		ldr	r3, [r3, #48]
 524              		.loc 1 368 50
 525 0242 5B0A     		lsrs	r3, r3, #9
 526 0244 03F07F03 		and	r3, r3, #127
 527              		.loc 1 368 12
 528 0248 0133     		adds	r3, r3, #1
 529 024a BB60     		str	r3, [r7, #8]
 369:Core/Src/system_stm32h7xx.c ****       common_system_clock =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 530              		.loc 1 369 57
 531 024c BB68     		ldr	r3, [r7, #8]
 532 024e 07EE903A 		vmov	s15, r3	@ int
 533 0252 B8EE677A 		vcvt.f32.u32	s14, s15
 534              		.loc 1 369 40
 535 0256 D7ED086A 		vldr.32	s13, [r7, #32]
 536 025a C6EE877A 		vdiv.f32	s15, s13, s14
 537              		.loc 1 369 27
 538 025e FCEEE77A 		vcvt.u32.f32	s15, s15
 539 0262 17EE903A 		vmov	r3, s15	@ int
 540 0266 7B62     		str	r3, [r7, #36]
 370:Core/Src/system_stm32h7xx.c ****     }
 371:Core/Src/system_stm32h7xx.c ****     else
 372:Core/Src/system_stm32h7xx.c ****     {
 373:Core/Src/system_stm32h7xx.c ****       common_system_clock = 0U;
 374:Core/Src/system_stm32h7xx.c ****     }
 375:Core/Src/system_stm32h7xx.c ****     break;
 541              		.loc 1 375 5
 542 0268 0CE0     		b	.L14
 543              	.L15:
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccpb5gCm.s 			page 17


 373:Core/Src/system_stm32h7xx.c ****     }
 544              		.loc 1 373 27
 545 026a 0023     		movs	r3, #0
 546 026c 7B62     		str	r3, [r7, #36]
 547              		.loc 1 375 5
 548 026e 09E0     		b	.L14
 549              	.L8:
 376:Core/Src/system_stm32h7xx.c **** 
 377:Core/Src/system_stm32h7xx.c ****   default:
 378:Core/Src/system_stm32h7xx.c ****     common_system_clock = (uint32_t) (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3));
 550              		.loc 1 378 57
 551 0270 164B     		ldr	r3, .L22
 552 0272 1B68     		ldr	r3, [r3]
 553              		.loc 1 378 78
 554 0274 DB08     		lsrs	r3, r3, #3
 555 0276 03F00303 		and	r3, r3, #3
 556              		.loc 1 378 25
 557 027a 154A     		ldr	r2, .L22+4
 558 027c 22FA03F3 		lsr	r3, r2, r3
 559 0280 7B62     		str	r3, [r7, #36]
 379:Core/Src/system_stm32h7xx.c ****     break;
 560              		.loc 1 379 5
 561 0282 00BF     		nop
 562              	.L14:
 380:Core/Src/system_stm32h7xx.c ****   }
 381:Core/Src/system_stm32h7xx.c **** 
 382:Core/Src/system_stm32h7xx.c ****   /* Compute SystemClock frequency --------------------------------------------------*/
 383:Core/Src/system_stm32h7xx.c **** #if defined (RCC_D1CFGR_D1CPRE)
 384:Core/Src/system_stm32h7xx.c ****   tmp = D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos];
 563              		.loc 1 384 30
 564 0284 114B     		ldr	r3, .L22
 565 0286 9B69     		ldr	r3, [r3, #24]
 566              		.loc 1 384 59
 567 0288 1B0A     		lsrs	r3, r3, #8
 568 028a 03F00F03 		and	r3, r3, #15
 569              		.loc 1 384 25
 570 028e 164A     		ldr	r2, .L22+28
 571 0290 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 572              		.loc 1 384 7
 573 0292 7B60     		str	r3, [r7, #4]
 385:Core/Src/system_stm32h7xx.c **** 
 386:Core/Src/system_stm32h7xx.c ****   /* common_system_clock frequency : CM7 CPU frequency  */
 387:Core/Src/system_stm32h7xx.c ****   common_system_clock >>= tmp;
 574              		.loc 1 387 23
 575 0294 7A6A     		ldr	r2, [r7, #36]
 576 0296 7B68     		ldr	r3, [r7, #4]
 577 0298 22FA03F3 		lsr	r3, r2, r3
 578 029c 7B62     		str	r3, [r7, #36]
 388:Core/Src/system_stm32h7xx.c **** 
 389:Core/Src/system_stm32h7xx.c ****   /* SystemD2Clock frequency : CM4 CPU, AXI and AHBs Clock frequency  */
 390:Core/Src/system_stm32h7xx.c ****   SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_
 579              		.loc 1 390 66
 580 029e 0B4B     		ldr	r3, .L22
 581 02a0 9B69     		ldr	r3, [r3, #24]
 582              		.loc 1 390 93
 583 02a2 03F00F03 		and	r3, r3, #15
 584              		.loc 1 390 61
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccpb5gCm.s 			page 18


 585 02a6 104A     		ldr	r2, .L22+28
 586 02a8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 587              		.loc 1 390 118
 588 02aa 03F01F03 		and	r3, r3, #31
 589              		.loc 1 390 40
 590 02ae 7A6A     		ldr	r2, [r7, #36]
 591 02b0 22FA03F3 		lsr	r3, r2, r3
 592              		.loc 1 390 17
 593 02b4 0D4A     		ldr	r2, .L22+32
 594 02b6 1360     		str	r3, [r2]
 391:Core/Src/system_stm32h7xx.c **** 
 392:Core/Src/system_stm32h7xx.c **** #else
 393:Core/Src/system_stm32h7xx.c ****   tmp = D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos];
 394:Core/Src/system_stm32h7xx.c **** 
 395:Core/Src/system_stm32h7xx.c ****   /* common_system_clock frequency : CM7 CPU frequency  */
 396:Core/Src/system_stm32h7xx.c ****   common_system_clock >>= tmp;
 397:Core/Src/system_stm32h7xx.c **** 
 398:Core/Src/system_stm32h7xx.c ****   /* SystemD2Clock frequency : AXI and AHBs Clock frequency  */
 399:Core/Src/system_stm32h7xx.c ****   SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_HPRE)>> RC
 400:Core/Src/system_stm32h7xx.c **** 
 401:Core/Src/system_stm32h7xx.c **** #endif
 402:Core/Src/system_stm32h7xx.c **** 
 403:Core/Src/system_stm32h7xx.c **** #if defined(DUAL_CORE) && defined(CORE_CM4)
 404:Core/Src/system_stm32h7xx.c ****   SystemCoreClock = SystemD2Clock;
 405:Core/Src/system_stm32h7xx.c **** #else
 406:Core/Src/system_stm32h7xx.c ****   SystemCoreClock = common_system_clock;
 595              		.loc 1 406 19
 596 02b8 0D4A     		ldr	r2, .L22+36
 597 02ba 7B6A     		ldr	r3, [r7, #36]
 598 02bc 1360     		str	r3, [r2]
 407:Core/Src/system_stm32h7xx.c **** #endif /* DUAL_CORE && CORE_CM4 */
 408:Core/Src/system_stm32h7xx.c **** }
 599              		.loc 1 408 1
 600 02be 00BF     		nop
 601 02c0 2C37     		adds	r7, r7, #44
 602              	.LCFI7:
 603              		.cfi_def_cfa_offset 4
 604 02c2 BD46     		mov	sp, r7
 605              	.LCFI8:
 606              		.cfi_def_cfa_register 13
 607              		@ sp needed
 608 02c4 5DF8047B 		ldr	r7, [sp], #4
 609              	.LCFI9:
 610              		.cfi_restore 7
 611              		.cfi_def_cfa_offset 0
 612 02c8 7047     		bx	lr
 613              	.L23:
 614 02ca 00BF     		.align	2
 615              	.L22:
 616 02cc 00440258 		.word	1476543488
 617 02d0 0090D003 		.word	64000000
 618 02d4 00093D00 		.word	4000000
 619 02d8 40787D01 		.word	25000000
 620 02dc 00000046 		.word	1174405120
 621 02e0 0024744A 		.word	1249125376
 622 02e4 20BCBE4B 		.word	1270791200
 623 02e8 00000000 		.word	D1CorePrescTable
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccpb5gCm.s 			page 19


 624 02ec 00000000 		.word	SystemD2Clock
 625 02f0 00000000 		.word	SystemCoreClock
 626              		.cfi_endproc
 627              	.LFE334:
 629              		.text
 630              	.Letext0:
 631              		.file 2 "/Users/seojisu/Library/Arm-GCC-xPack/arm-none-eabi/include/machine/_default_types.h"
 632              		.file 3 "/Users/seojisu/Library/Arm-GCC-xPack/arm-none-eabi/include/sys/_stdint.h"
 633              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 634              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 635              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 636              		.file 7 "/Users/seojisu/Library/Arm-GCC-xPack/arm-none-eabi/include/math.h"
ARM GAS  /var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccpb5gCm.s 			page 20


DEFINED SYMBOLS
                            *ABS*:0000000000000000 system_stm32h7xx.c
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccpb5gCm.s:23     .data.SystemCoreClock:0000000000000000 SystemCoreClock
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccpb5gCm.s:20     .data.SystemCoreClock:0000000000000000 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccpb5gCm.s:30     .data.SystemD2Clock:0000000000000000 SystemD2Clock
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccpb5gCm.s:27     .data.SystemD2Clock:0000000000000000 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccpb5gCm.s:37     .rodata.D1CorePrescTable:0000000000000000 D1CorePrescTable
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccpb5gCm.s:34     .rodata.D1CorePrescTable:0000000000000000 $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccpb5gCm.s:41     .text.SystemInit:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccpb5gCm.s:47     .text.SystemInit:0000000000000000 SystemInit
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccpb5gCm.s:222    .text.SystemInit:00000000000000ec $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccpb5gCm.s:237    .text.SystemCoreClockUpdate:0000000000000000 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccpb5gCm.s:243    .text.SystemCoreClockUpdate:0000000000000000 SystemCoreClockUpdate
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccpb5gCm.s:272    .text.SystemCoreClockUpdate:000000000000001c $d
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccpb5gCm.s:297    .text.SystemCoreClockUpdate:0000000000000080 $t
/var/folders/d0/cymppscj10lcmm48h781wrc80000gn/T//ccpb5gCm.s:616    .text.SystemCoreClockUpdate:00000000000002cc $d

NO UNDEFINED SYMBOLS
